{"version":3,"file":"grid-plate.umd.js","sources":["grid-plate.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n// need to make this an object so that HAX can listen for it correctly\nclass GridPlateLayoutOptions {\n  constructor() {\n    this.layouts = {\n      \"1\": {\n        columnLayout: \"1: full width\",\n        xs: [\"100%\"],\n        sm: [\"100%\"],\n        md: [\"100%\"],\n        lg: [\"100%\"],\n        xl: [\"100%\"]\n      },\n      \"1-1\": {\n        columnLayout: \"2: equal width\",\n        xs: [\"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\"],\n        md: [\"50%\", \"50%\"],\n        lg: [\"50%\", \"50%\"],\n        xl: [\"50%\", \"50%\"]\n      },\n      \"2-1\": {\n        columnLayout: \"2: wide & narrow\",\n        xs: [\"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\"],\n        md: [\"66.6666667%\", \"33.3333337%\"],\n        lg: [\"66.6666667%\", \"33.3333337%\"],\n        xl: [\"66.6666667%\", \"33.3333337%\"]\n      },\n      \"1-2\": {\n        columnLayout: \"2: narrow & wide\",\n        xs: [\"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\"],\n        md: [\"33.3333333%\", \"66.6666667%\"],\n        lg: [\"33.3333333%\", \"66.6666667%\"],\n        xl: [\"33.3333333%\", \"66.6666667%\"]\n      },\n      \"3-1\": {\n        columnLayout: \"2: wider & narrower\",\n        xs: [\"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\"],\n        md: [\"75%\", \"25%\"],\n        lg: [\"75%\", \"25%\"],\n        xl: [\"75%\", \"25%\"]\n      },\n      \"1-3\": {\n        columnLayout: \"2: narrower & wider\",\n        xs: [\"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\"],\n        md: [\"25%\", \"75%\"],\n        lg: [\"25%\", \"75%\"],\n        xl: [\"25%\", \"75%\"]\n      },\n      \"1-1-1\": {\n        columnLayout: \"3: equal width\",\n        xs: [\"100%\", \"100%\", \"100%\"],\n        sm: [\"100%\", \"100%\", \"100%\"],\n        md: [\"33.3333333%\", \"33.3333333%\", \"33.3333333%\"],\n        lg: [\"33.3333333%\", \"33.3333333%\", \"33.3333333%\"],\n        xl: [\"33.3333333%\", \"33.3333333%\", \"33.3333333%\"]\n      },\n      \"2-1-1\": {\n        columnLayout: \"3: wide, narrow, and narrow\",\n        xs: [\"100%\", \"100%\", \"100%\"],\n        sm: [\"100%\", \"50%\", \"50%\"],\n        md: [\"50%\", \"25%\", \"25%\"],\n        lg: [\"50%\", \"25%\", \"25%\"],\n        xl: [\"50%\", \"25%\", \"25%\"]\n      },\n      \"1-2-1\": {\n        columnLayout: \"3: narrow, wide, and narrow\",\n        xs: [\"100%\", \"100%\", \"100%\"],\n        sm: [\"100%\", \"100%\", \"100%\"],\n        md: [\"25%\", \"50%\", \"25%\"],\n        lg: [\"25%\", \"50%\", \"25%\"],\n        xl: [\"25%\", \"50%\", \"25%\"]\n      },\n      \"1-1-2\": {\n        columnLayout: \"3: narrow, narrow, and wide\",\n        xs: [\"100%\", \"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\", \"100%\"],\n        md: [\"25%\", \"25%\", \"50%\"],\n        lg: [\"25%\", \"25%\", \"50%\"],\n        xl: [\"25%\", \"25%\", \"50%\"]\n      },\n      \"1-1-1-1\": {\n        columnLayout: \"4: equal width\",\n        xs: [\"100%\", \"100%\", \"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\", \"50%\", \"50%\"],\n        md: [\"25%\", \"25%\", \"25%\", \"25%\"],\n        lg: [\"25%\", \"25%\", \"25%\", \"25%\"],\n        xl: [\"25%\", \"25%\", \"25%\", \"25%\"]\n      },\n      \"1-1-1-1-1\": {\n        columnLayout: \"5: equal width\",\n        xs: [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\", \"50%\", \"50%\", \"50%\"],\n        md: [\"20%\", \"20%\", \"20%\", \"20%\", \"20%\"],\n        lg: [\"20%\", \"20%\", \"20%\", \"20%\", \"20%\"],\n        xl: [\"20%\", \"20%\", \"20%\", \"20%\", \"20%\"]\n      },\n      \"1-1-1-1-1-1\": {\n        columnLayout: \"6: equal width\",\n        xs: [\"100%\", \"100%\", \"100%\", \"100%\", \"100%\", \"100%\"],\n        sm: [\"50%\", \"50%\", \"50%\", \"50%\", \"50%\", \"50%\"],\n        md: [\n          \"33.3333333%\",\n          \"33.3333333%\",\n          \"33.3333333%\",\n          \"33.3333333%\",\n          \"33.3333333%\",\n          \"33.3333333%\"\n        ],\n        lg: [\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\"\n        ],\n        xl: [\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\",\n          \"16.6666667%\"\n        ]\n      }\n    };\n    this.options = {};\n    let layoutFlip = Object.keys(this.layouts);\n    //loop through all the supplied layouts to get the HAX layout options & descriptions\n    for (let i = 0; i < layoutFlip.length; i++) {\n      this.options[layoutFlip[i]] = this.layouts[layoutFlip[i]].columnLayout;\n    }\n  }\n}\n/**\n * `grid-plate`\n * `A grid plate based on a layout that manipulates it.`\n * @demo demo/index.html\n */\nclass GridPlate extends LitElement {\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          --grid-plate-row-margin: 0px;\n          --grid-plate-row-padding: 0px;\n          --grid-plate-item-margin: 15px;\n          --grid-plate-editable-border-color: #bbbbbb;\n          --grid-plate-active-border-color: #000000;\n          --grid-plate-col-transition: all 0.2s ease-in-out;\n        }\n        :host .row {\n          width: 100%;\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: space-between;\n          align-items: stretch;\n          margin: var(--grid-plate-row-margin);\n          padding: var(--grid-plate-row-padding);\n        }\n        :host .column {\n          width: 100%;\n          flex: 0 0 auto;\n          transition: var(--grid-plate-col-transition);\n        }\n        :host([edit-mode]) .column {\n          min-height: 150px;\n        }\n        :host([edit-mode]) .column {\n          outline: 1px dotted var(--grid-plate-editable-border-color);\n        }\n        :host .column[style=\"min-height: unset\"] {\n          display: none;\n        }\n        :host([edit-mode]) .column[style=\"min-height: unset\"]:not(:empty) {\n          display: block;\n          outline: 1px solid red;\n          width: 20%;\n          margin-top: var(--grid-plate-item-margin);\n        }\n        :host([edit-mode])\n          .column[style=\"min-height: unset\"]:not(:empty):before {\n          content: \"Layout hides this column (\" attr(id) \")\";\n          color: red;\n          margin: var(--grid-plate-item-margin);\n          padding: 15px 0;\n          min-height: 150px;\n        }\n        :host .column ::slotted(*) {\n          margin: var(--grid-plate-item-margin);\n          padding: var(--grid-plate-item-margin);\n          transition: var(--grid-plate-col-transition);\n        }\n        :host([edit-mode]) .column ::slotted(img) {\n          display: block;\n          width: calc(100% - 32px - var(--grid-plate-item-margin));\n        }\n        :host([edit-mode]) .column ::slotted(.mover) {\n          outline: 2px dashed var(--grid-plate-editable-border-color);\n          outline-offset: 4px;\n        }\n        :host([edit-mode]) .column.mover {\n          outline: 2px dashed var(--grid-plate-editable-border-color);\n          outline-offset: 0px;\n        }\n        :host([edit-mode]) .column ::slotted(.active-item) {\n          outline: 2px dashed var(--grid-plate-active-border-color);\n          background-color: var(--simple-colors-default-theme-yellow-1);\n          outline-offset: 4px;\n        }\n        :host([edit-mode]) .column ::slotted(*:focus),\n        :host([edit-mode]) .column ::slotted(*:hover),\n        :host([edit-mode]) .column ::slotted(*:active) {\n          cursor: move;\n          background-color: var(--simple-colors-default-theme-yellow-3);\n        }\n        :host([edit-mode]) .column ::slotted(.mover) {\n          background-color: var(--simple-colors-default-theme-orange-1);\n          padding: 16px;\n        }\n        :host([edit-mode]) .column ::slotted([data-draggable].mover:hover) {\n          background-color: var(--simple-colors-default-theme-yellow-2);\n        }\n        :host([edit-mode]) .column.mover {\n          content: \"Double click to create a paragraph here\";\n          background-color: var(--simple-colors-default-theme-orange-1);\n        }\n        :host([edit-mode]) .column.mover:hover {\n          background-color: var(--simple-colors-default-theme-yellow-1);\n        }\n        :host([edit-mode]) .column ::slotted(.hovered) {\n          background-color: var(\n            --simple-colors-default-theme-orange-3\n          ) !important;\n          outline: dashed 4px var(--grid-plate-active-border-color);\n        }\n        :host([edit-mode]) .column.hovered {\n          background-color: var(\n            --simple-colors-default-theme-orange-3\n          ) !important;\n        }\n        paper-icon-button {\n          display: none;\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          outline: none;\n          width: 20px;\n          height: 20px;\n          color: black;\n          background-color: #eeeeee;\n          border-radius: 50%;\n          box-sizing: content-box !important;\n          z-index: 1;\n          min-width: unset;\n        }\n\n        paper-icon-button[disabled] {\n          color: #aaa;\n          background-color: #ddd;\n        }\n        paper-icon-button[disabled]:focus,\n        paper-icon-button[disabled]:hover {\n          cursor: not-allowed;\n        }\n        paper-icon-button.active {\n          display: block;\n        }\n\n        .button-holding-pen {\n          position: relative;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    this.droppable = false;\n    this.ignoreHax = false;\n    this.breakpointSm = 900;\n    this.breakpointMd = 1200;\n    this.breakpointLg = 1500;\n    this.breakpointXl = 1800;\n    this.columns = 6;\n    this.disableResponsive = false;\n    this.editMode = false;\n    this.layout = \"1-1\";\n    this.layouts = new GridPlateLayoutOptions().layouts;\n    this.responsiveSize = \"xs\";\n    import(\"@polymer/paper-icon-button/paper-icon-button.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    this.addEventListener(\"focusin\", this._focusIn.bind(this));\n    // listen for HAX if it's around\n    window.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    // listen for HAX insert events if it exists\n    window.addEventListener(\n      \"hax-insert-content\",\n      this.haxInsertContent.bind(this)\n    );\n    window.addEventListener(\"load\", this.resize.bind(this));\n    window.ResponsiveUtility.requestAvailability();\n  }\n  render() {\n    return html`\n      <div class=\"button-holding-pen\">\n        <paper-icon-button\n          icon=\"icons:arrow-upward\"\n          title=\"move item up\"\n          id=\"up\"\n          @click=\"${this.moveActiveElement}\"\n        >\n        </paper-icon-button>\n        <paper-icon-button\n          icon=\"icons:arrow-forward\"\n          title=\"move item right\"\n          id=\"right\"\n          @click=\"${this.moveActiveElement}\"\n        >\n        </paper-icon-button>\n        <paper-icon-button\n          icon=\"icons:arrow-downward\"\n          title=\"move item down\"\n          id=\"down\"\n          @click=\"${this.moveActiveElement}\"\n        >\n        </paper-icon-button>\n        <paper-icon-button\n          icon=\"icons:arrow-back\"\n          title=\"move item left\"\n          id=\"left\"\n          @click=\"${this.moveActiveElement}\"\n        >\n        </paper-icon-button>\n      </div>\n      <div class=\"row\">\n        <div\n          class=\"column\"\n          id=\"col1\"\n          .style=\"${this._getColumnWidth(0, this.columnWidths)}\"\n        >\n          <slot name=\"col-1\"></slot>\n        </div>\n        <div\n          class=\"column\"\n          id=\"col2\"\n          .style=\"${this._getColumnWidth(1, this.columnWidths)}\"\n        >\n          <slot name=\"col-2\"></slot>\n        </div>\n        <div\n          class=\"column\"\n          id=\"col3\"\n          .style=\"${this._getColumnWidth(2, this.columnWidths)}\"\n        >\n          <slot name=\"col-3\"></slot>\n        </div>\n        <div\n          class=\"column\"\n          id=\"col4\"\n          .style=\"${this._getColumnWidth(3, this.columnWidths)}\"\n        >\n          <slot name=\"col-4\"></slot>\n        </div>\n        <div\n          class=\"column\"\n          id=\"col5\"\n          .style=\"${this._getColumnWidth(4, this.columnWidths)}\"\n        >\n          <slot name=\"col-5\"></slot>\n        </div>\n        <div\n          class=\"column\"\n          id=\"col6\"\n          .style=\"${this._getColumnWidth(5, this.columnWidths)}\"\n        >\n          <slot name=\"col-6\"></slot>\n        </div>\n      </div>\n      <iron-a11y-keys\n        .target=\"${this.activeItem}\"\n        keys=\"enter\"\n        @keys-pressed=\"${this.setActiveElement}\"\n      ></iron-a11y-keys>\n      <iron-a11y-keys\n        .target=\"${this.activeItem}\"\n        keys=\"esc\"\n        @keys-pressed=\"${this.cancelActive}\"\n      ></iron-a11y-keys>\n    `;\n  }\n  static get tag() {\n    return \"grid-plate\";\n  }\n  /**\n   * life cycle\n   */\n  firstUpdated(changedProperties) {\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail: {\n          element: this,\n          attribute: \"responsive-size\",\n          relativeToParent: false,\n          sm: this.breakpointSm,\n          md: this.breakpointMd,\n          lg: this.breakpointLg,\n          xl: this.breakpointXl\n        }\n      })\n    );\n    for (var j = 1; j <= this.columns; j++) {\n      if (this.shadowRoot.querySelector(\"#col\" + j) !== undefined) {\n        let col = this.shadowRoot.querySelector(\"#col\" + j);\n        col.addEventListener(\"drop\", this.dropEvent.bind(this));\n        col.addEventListener(\"dblclick\", this.dblclick.bind(this));\n        col.addEventListener(\"dragstart\", this.dragStart.bind(this));\n        col.addEventListener(\"dragenter\", this.dragEnter.bind(this));\n        col.addEventListener(\"dragleave\", this.dragLeave.bind(this));\n        col.addEventListener(\"dragend\", this.dragEnd.bind(this));\n        col.addEventListener(\"dragover\", function(e) {\n          e.preventDefault();\n        });\n        col.setAttribute(\"data-draggable\", true);\n      }\n    }\n    this.columnWidths = this._getColumnWidths(\n      this.responsiveSize,\n      this.layout,\n      this.layouts,\n      this.disableResponsive\n    );\n  }\n  /**\n   * life cycle\n   */\n  disconnectedCallback() {\n    // listen for HAX if it's around\n    window.removeEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    // listen for HAX insert events if it exists\n    window.removeEventListener(\n      \"hax-insert-content\",\n      this.haxInsertContent.bind(this)\n    );\n    window.removeEventListener(\"load\", this.resize.bind(this));\n    super.disconnectedCallback();\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"layout\",\n            title: \"Column Layout\",\n            description:\n              \"Style to present these items (may change for small screens)\",\n            inputMethod: \"select\",\n            options: new GridPlateLayoutOptions().options\n          }\n        ],\n        advanced: [\n          {\n            property: \"breakpointSm\",\n            title: \"Small Breakpoint\",\n            description:\n              \"Anything less than this number (in pixels) will render with the smallest version of this layout\",\n            inputMethod: \"textfield\",\n            validationType: \"number\"\n          },\n          {\n            property: \"breakpointMd\",\n            title: \"Medium Breakpoint\",\n            description:\n              \"Anything less than this number (in pixels) will render with the small version of this layout\",\n            inputMethod: \"textfield\",\n            validationType: \"number\"\n          },\n          {\n            property: \"breakpointLg\",\n            title: \"Large Breakpoint\",\n            description:\n              \"Anything less than this number (in pixels) will render with the medium version of this layout.\",\n            inputMethod: \"textfield\",\n            validationType: \"number\"\n          },\n          {\n            property: \"breakpointXl\",\n            title: \"Extra-Large Breakpoint\",\n            description:\n              \"Anything less than this number (in pixels) will render with the large version of this layout. Anything greater than or equal to this number will display with the maximum number of columns for this layout.\",\n            inputMethod: \"textfield\",\n            validationType: \"number\"\n          }\n        ]\n      },\n      saveOptions: {\n        unsetAttributes: [\n          \"active-item\",\n          \"edit-mode\",\n          \"layouts\",\n          \"columns\",\n          \"options\"\n        ]\n      }\n    };\n  }\n  static get properties() {\n    return {\n      droppable: {\n        type: Boolean,\n        reflect: true\n      },\n      ignoreHax: {\n        type: Boolean\n      },\n      /**\n       * Custom small breakpoint for the layouts; only updated on attached\n       */\n      breakpointSm: {\n        type: Number\n      },\n      /**\n       * Custom medium breakpoint for the layouts; only updated on attached\n       */\n      breakpointMd: {\n        type: Number\n      },\n      /**\n       * Custom large breakpoint for the layouts; only updated on attached\n       */\n      breakpointLg: {\n        type: Number\n      },\n      /**\n       * Custom extra-large breakpoint for the layouts; only updated on attached\n       */\n      breakpointXl: {\n        type: Number\n      },\n      /**\n       * number of columns at this layout / responsive size\n       */\n      columns: {\n        type: Number,\n        reflect: true\n      },\n      /**\n       * disables responsive layouts for HAX preview\n       */\n      disableResponsive: {\n        type: Boolean\n      },\n      /**\n       * If the grid plate is in a state where its items\n       * can be modified as far as order or column placement.\n       */\n      editMode: {\n        reflect: true,\n        type: Boolean,\n        attribute: \"edit-mode\"\n      },\n      /**\n       * an object with a layout's column sizes\n       * at the current responsive width\n       */\n      layout: {\n        type: String,\n        reflect: true\n      },\n      /**\n       * Predefined layouts of column sizes and various responsive widths. \n       * For example:```\n  {\n    \"1-1-1-1\": {                         //the name of the layout\n      \"xs\": [\"100%\",\"100%\",\"100%\",\"100%] //the responsive width of each column when the grid is extra small\n      \"sm\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is small\n      \"md\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is medium\n      \"lg\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is large\n      \"xl\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is extra large\n    },\n    {...}\n  }```\n      */\n      layouts: {\n        type: Object\n      },\n      /**\n       * Responsive size as `xs`, `sm`, `md`, `lg`, or `xl`\n       */\n      responsiveSize: {\n        type: String,\n        reflect: true,\n        attribute: \"responsive-size\"\n      },\n      /**\n       * Track active item\n       */\n      activeItem: {\n        type: Object\n      },\n      /**\n       * name of selected layout\n       */\n      columnWidths: {\n        type: String\n      }\n    };\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      // if any of these changed, update col widths\n      if (\n        [\"responsiveSize\", \"layout\", \"layouts\", \"disableResponsive\"].includes(\n          propName\n        )\n      ) {\n        this.columnWidths = this._getColumnWidths(\n          this.responsiveSize,\n          this.layout,\n          this.layouts,\n          this.disableResponsive\n        );\n      }\n      switch (propName) {\n        // observer\n        case \"droppable\":\n          this._droppableChanged(this[propName], oldValue);\n          break;\n        // observer\n        case \"editMode\":\n          this._editModeChanged(this[propName], oldValue);\n          this.resize();\n          break;\n        // observer\n        case \"activeItem\":\n          this._activeItemChanged(this[propName], oldValue);\n          break;\n        // observer, ensure we are sized correctly after widths change\n        case \"columnWidths\":\n          this.resize();\n          break;\n        case \"disableResponsive\":\n          // fire an event that this is a core piece of the system\n          this.dispatchEvent(\n            new CustomEvent(\"disable-responsive-changed\", {\n              detail: this[propName]\n            })\n          );\n          break;\n      }\n    });\n  }\n  resize() {\n    setTimeout(() => {\n      window.dispatchEvent(new Event(\"resize\"));\n    }, 10);\n  }\n  /**\n   * Implements preProcessHaxInsertContent to clean up output on save\n   */\n  preProcessHaxInsertContent(detail) {\n    // ensure this is wiped to avoid issues in building\n    delete detail.properties.activeItem;\n    return detail;\n  }\n\n  _droppableChanged(newValue) {\n    if (newValue) {\n      this.editMode = true;\n    }\n  }\n  /**\n   * Cancel active element\n   */\n  cancelActive(e) {\n    this.activeItem = null;\n  }\n  /**\n   * Determines if the item can move a set number of slots.\n   *\n   * @param {object} the item\n   * @param {number} -1 for left or +1 for right\n   * @returns {boolean} if the item can move a set number of slots\n   */\n  canMoveSlot(item, before) {\n    let dir = before ? -1 : 1,\n      max = this.shadowRoot.querySelectorAll(\".column\").length,\n      col = item.getAttribute(\"slot\").split(\"-\"),\n      dest = parseInt(col[1]) + dir;\n    return dest >= 1 && dest <= max;\n  }\n  /**\n   * Moves an item a set number of slots.\n   *\n   * @param {object} the item\n   * @param {number} -1 for left or +1 for right\n   */\n  moveSlot(item, before) {\n    let dir = before ? -1 : 1,\n      col = item.getAttribute(\"slot\").split(\"-\"),\n      dest = parseInt(col[1]) + dir;\n    item.setAttribute(\"slot\", \"col-\" + dest);\n  }\n\n  /**\n   * Determines if the item can move a set number of slots.\n   *\n   * @param {object} the item\n   * @param {boolean} move item before previous? (false for move item after next)\n   * @returns {boolean} if the item can move a set number of slots\n   */\n  canMoveOrder(item, before) {\n    let nodes = this.shadowRoot\n      .querySelector('slot[name=\"' + item.getAttribute(\"slot\") + '\"')\n      .assignedNodes({ flatten: true });\n    let target = null,\n      position = 0;\n    for (var i in nodes) {\n      if (item === nodes[i]) {\n        position = i;\n      }\n    }\n    if (before && parseInt(position) - 1 >= 0) {\n      target = nodes[parseInt(position) - 1];\n    } else if (!before && parseInt(position) + 1 <= nodes.length - 1) {\n      target = nodes[parseInt(position) + 1];\n    }\n    return target !== null && typeof target !== typeof undefined;\n  }\n  /**\n   * Moves an item's order within a slot.\n   *\n   * @param {object} the item\n   * @param {boolean} move item before previous? (false for move item after next)\n   */\n  moveOrder(item, before = true) {\n    let nodes = this.shadowRoot\n      .querySelector('slot[name=\"' + item.getAttribute(\"slot\") + '\"')\n      .assignedNodes({ flatten: true });\n    let target = null,\n      position = 0;\n    for (var i in nodes) {\n      if (item === nodes[i]) {\n        position = i;\n      }\n    }\n    if (before) {\n      target = nodes[parseInt(position) - 1];\n      this.insertBefore(this.activeItem, target);\n    } else {\n      target = nodes[parseInt(position) + 1];\n      this.insertBefore(target, this.activeItem);\n    }\n  }\n\n  /**\n   * Move the active element based on which button got pressed.\n   */\n  moveActiveElement(e) {\n    var local = e.target;\n    // see if this was an up down left or right movement\n    switch (local.id) {\n      case \"up\":\n        this.moveOrder(this.activeItem, true);\n        break;\n      case \"down\":\n        this.moveOrder(this.activeItem, false);\n        break;\n      case \"left\":\n        this.moveSlot(this.activeItem, true);\n        break;\n      case \"right\":\n        this.moveSlot(this.activeItem, false);\n        break;\n    }\n    // ensure arrows are correctly positioned after the move\n    setTimeout(() => {\n      if (this.activeItem && typeof this.activeItem.focus === \"function\") {\n        this.positionArrows(this.activeItem);\n        this.activeItem.focus();\n      }\n    }, 100);\n  }\n\n  /**\n   * Notice changes to what's active and ensure UX associated w/ it is visble\n   */\n  _activeItemChanged(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // position arrows\n      newValue.classList.add(\"active-item\");\n      this.positionArrows(newValue);\n    } else if (newValue == null) {\n      this.positionArrows(newValue);\n    }\n    // if we had a previous value then remove the active item class\n    if (typeof oldValue !== typeof undefined && oldValue != null) {\n      oldValue.classList.remove(\"active-item\");\n      oldValue.blur();\n    }\n  }\n\n  /**\n   * Set the target element to active\n   */\n  setActiveElement(e) {\n    // support HAX text operations should take priority\n    if (\n      window.HaxStore &&\n      window.HaxStore.instance &&\n      window.HaxStore.instance.isTextElement(this.activeItem)\n    ) {\n      return true;\n    }\n    this.shadowRoot.querySelector(\"#right\").focus();\n  }\n  /**\n   * gets the column widths based on selected layout and current responsive width\n   *\n   * @param {string} a string that describes the current responsive width\n   * @param {string} the name of selected layout\n   * @param {object} predefined layouts of column sizes and various responsive widths\n   * @param {boolean} disable responsive sizing?\n   * @returns {object} an object with a layout's column sizes at the current responsive width\n   */\n  _getColumnWidths(\n    responsiveSize = \"sm\",\n    layout = \"1-1\",\n    layouts,\n    disableResponsive\n  ) {\n    if (layouts) {\n      let newl = layouts[layout],\n        //how old layout names map to the new ones\n        oldLayouts = {\n          \"12\": \"1\",\n          \"8/4\": \"2-1\",\n          \"6/6\": \"1-1\",\n          \"4/8\": \"1-2\",\n          \"4/4/4\": \"1-1-1\",\n          \"3/3/3/3\": \"1-1-1-1\"\n        },\n        size = disableResponsive !== false ? \"xl\" : responsiveSize;\n      let oldl = oldLayouts[layout];\n      if (newl !== undefined && newl[size] !== undefined) {\n        //return the layout\n        return layouts[layout][size];\n      } else if (\n        layouts[oldl] !== undefined &&\n        layouts[oldl][size] !== undefined\n      ) {\n        //return new layout that maps to old one\n        return layouts[oldl][size];\n      } else if (typeof layouts[\"1-1\"] !== typeof undefined) {\n        //return 2-column layout\n        return layouts[\"1-1\"][size];\n      }\n    }\n  }\n\n  /**\n   * gets a given column's current width based on layout and current responsive width\n   *\n   * @param {number} the index of the column\n   * @param {object} an object with a layout's column sizes at the current responsive width\n   * @returns {string} a given column's current width based on layout and current responsive width\n   */\n  _getColumnWidth(column, columnWidths) {\n    return columnWidths !== undefined && columnWidths[column] !== undefined\n      ? \"width:\" + columnWidths[column]\n      : \"min-height: unset\";\n  }\n  /**\n   * gets a given column's current width based on layout and current responsive width\n   *\n   * @param {string} the name of selected layout\n   * @returns {number} the number of columns in this layout\n   */\n  _getColumns(columnWidths) {\n    return columnWidths.length;\n  }\n  /**\n   * Focus / tab / click event normalization\n   */\n  _focusIn(e) {\n    if (this.editMode) {\n      var local = e.target;\n      // only activate if we touch something that's in the slot of the grid plate\n      if (local.parentNode === this) {\n        this.activeItem = local;\n      }\n    }\n  }\n  /**\n   * Position the arrows to change directions around something\n   */\n  positionArrows(item) {\n    if (item == null) {\n      this.shadowRoot.querySelector(\"#up\").classList.remove(\"active\");\n      this.shadowRoot.querySelector(\"#down\").classList.remove(\"active\");\n      this.shadowRoot.querySelector(\"#left\").classList.remove(\"active\");\n      this.shadowRoot.querySelector(\"#right\").classList.remove(\"active\");\n    } else {\n      this.shadowRoot.querySelector(\"#up\").classList.add(\"active\");\n      this.shadowRoot.querySelector(\"#down\").classList.add(\"active\");\n      this.shadowRoot.querySelector(\"#left\").classList.add(\"active\");\n      this.shadowRoot.querySelector(\"#right\").classList.add(\"active\");\n\n      // ensure we disable invalid options contextually\n      // test for an element above us\n      this.shadowRoot.querySelector(\"#up\").disabled = !this.canMoveOrder(\n        item,\n        true\n      );\n      // test for an element below us\n      this.shadowRoot.querySelector(\"#down\").disabled = !this.canMoveOrder(\n        item,\n        false\n      );\n      // test for a column to the left of us\n      this.shadowRoot.querySelector(\"#left\").disabled = !this.canMoveSlot(\n        item,\n        true\n      );\n      // test for a column to the right of us\n      this.shadowRoot.querySelector(\"#right\").disabled = !this.canMoveSlot(\n        item,\n        false\n      );\n\n      // get coordinates of the page and active element\n      let bodyRect = this.getBoundingClientRect();\n      let elemRect = item.getBoundingClientRect();\n      let topOffset = elemRect.top - bodyRect.top;\n      let leftOffset = elemRect.left - bodyRect.left;\n\n      // set the arrows to position correctly at all 4 sides\n      this.shadowRoot.querySelector(\"#up\").style.top = topOffset - 20 + \"px\";\n      this.shadowRoot.querySelector(\"#down\").style.top =\n        topOffset + elemRect.height + \"px\";\n      this.shadowRoot.querySelector(\"#left\").style.top =\n        topOffset + elemRect.height / 2 + \"px\";\n      this.shadowRoot.querySelector(\"#right\").style.top =\n        topOffset + elemRect.height / 2 + \"px\";\n\n      this.shadowRoot.querySelector(\"#up\").style.left =\n        leftOffset + elemRect.width / 2 - 10 + \"px\";\n      this.shadowRoot.querySelector(\"#down\").style.left =\n        leftOffset + elemRect.width / 2 - 10 + \"px\";\n      this.shadowRoot.querySelector(\"#left\").style.left =\n        leftOffset - 20 + \"px\";\n      this.shadowRoot.querySelector(\"#right\").style.left =\n        leftOffset + elemRect.width + \"px\";\n    }\n  }\n  /**\n   * Notice edit state has changed\n   */\n  _editModeChanged(newValue, oldValue) {\n    // flipping from false to true\n    let children = dom(this).getEffectiveChildNodes();\n    if (typeof children === \"object\") {\n      if (newValue && !oldValue) {\n        // walk the children and apply the draggable state needed\n        for (var i in children) {\n          if (typeof children[i].tagName !== typeof undefined) {\n            children[i].addEventListener(\"drop\", this.dropEvent.bind(this));\n            children[i].addEventListener(\n              \"dragenter\",\n              this.dragEnter.bind(this)\n            );\n            children[i].addEventListener(\n              \"dragleave\",\n              this.dragLeave.bind(this)\n            );\n            children[i].addEventListener(\n              \"dragstart\",\n              this.dragStart.bind(this)\n            );\n            children[i].addEventListener(\"dragend\", this.dragEnd.bind(this));\n            children[i].addEventListener(\"dragover\", function(e) {\n              e.preventDefault();\n            });\n            children[i].setAttribute(\"draggable\", true);\n            children[i].setAttribute(\"data-draggable\", true);\n            // ensure they can be focused\n            children[i].setAttribute(\"tabindex\", 0);\n          }\n        }\n      }\n      // flipping from true to false\n      else if (!newValue && oldValue) {\n        // unset active to clean up state\n        this.activeItem = null;\n        // walk the children and remove the draggable state needed\n        for (var i in children) {\n          if (typeof children[i].tagName !== typeof undefined) {\n            children[i].removeEventListener(\"drop\", this.dropEvent.bind(this));\n            children[i].removeEventListener(\n              \"dragstart\",\n              this.dragStart.bind(this)\n            );\n            children[i].removeEventListener(\n              \"dragenter\",\n              this.dragEnter.bind(this)\n            );\n            children[i].removeEventListener(\n              \"dragleave\",\n              this.dragLeave.bind(this)\n            );\n            children[i].removeEventListener(\"dragend\", this.dragEnd.bind(this));\n            children[i].removeEventListener(\"dragover\", function(e) {\n              e.preventDefault();\n            });\n            children[i].removeAttribute(\"draggable\");\n            children[i].removeAttribute(\"data-draggable\");\n            children[i].removeAttribute(\"tabindex\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Enter an element, meaning we've over it while dragging\n   */\n  dragEnter(e) {\n    if (this.editMode) {\n      e.preventDefault();\n      e.target.classList.add(\"hovered\");\n    }\n  }\n  /**\n   * Leaving an element while dragging.\n   */\n  dragLeave(e) {\n    if (this.editMode) {\n      e.target.classList.remove(\"hovered\");\n    }\n  }\n  /**\n   * On double check, fire an event for HAX to insert a paragraph.\n   * If they aren't using HAX then it won't do anything\n   */\n  dblclick(e) {\n    if (this.editMode && e.target.id) {\n      let detail = {};\n      detail.properties = {\n        slot: e.target.id.replace(\"col\", \"col-\")\n      };\n      this.dispatchEvent(\n        new CustomEvent(\"grid-plate-add-item\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: detail\n        })\n      );\n    }\n  }\n  /**\n   * Drop an item onto another\n   */\n  dropEvent(e) {\n    if (this.editMode) {\n      var local = e.target;\n      // if we have a slot on what we dropped into then we need to mirror that item\n      // and place ourselves below it in the DOM\n      if (\n        typeof this.activeItem !== typeof undefined &&\n        this.activeItem !== null &&\n        typeof local !== typeof undefined &&\n        local.getAttribute(\"slot\") != null &&\n        this.activeItem !== local\n      ) {\n        this.activeItem.setAttribute(\"slot\", local.getAttribute(\"slot\"));\n        this.insertBefore(this.activeItem, local);\n        // ensure that if we caught this event we process it\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      // special case for dropping on an empty column or between items\n      // which could involve a miss on the column\n      else if (local.tagName === \"DIV\" && local.classList.contains(\"column\")) {\n        var col = local.id.replace(\"col\", \"\");\n        this.activeItem.setAttribute(\"slot\", \"col-\" + col);\n        this.appendChild(this.activeItem);\n        // ensure that if we caught this event we process it\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      let children = this.children;\n      // walk the children and apply the draggable state needed\n      for (var i in children) {\n        if (typeof children[i].classList !== typeof undefined) {\n          children[i].classList.remove(\"mover\");\n        }\n      }\n      for (var j = 1; j <= this.columns; j++) {\n        if (this.shadowRoot.querySelector(\"#col\" + j) !== undefined) {\n          this.shadowRoot.querySelector(\"#col\" + j).classList.remove(\"mover\");\n        }\n      }\n      // position arrows / set focus in case the DOM got updated above\n      setTimeout(() => {\n        if (this.activeItem && typeof this.activeItem.focus === \"function\") {\n          this.positionArrows(this.activeItem);\n          this.activeItem.focus();\n        }\n      }, 100);\n    }\n  }\n\n  /**\n   * Start a drag event, this is an element being dragged\n   */\n  dragStart(e) {\n    if (this.editMode) {\n      let children = this.children;\n      // walk the children and apply the draggable state needed\n      for (var i in children) {\n        if (typeof children[i].classList !== typeof undefined) {\n          children[i].classList.add(\"mover\");\n        }\n      }\n      for (var j = 1; j <= this.columns; j++) {\n        if (this.shadowRoot.querySelector(\"#col\" + j) !== undefined) {\n          this.shadowRoot.querySelector(\"#col\" + j).classList.add(\"mover\");\n        }\n      }\n    }\n  }\n\n  /**\n   * When we end dragging ensure we remove the mover class.\n   */\n  dragEnd(e) {\n    if (this.editMode) {\n      let children = this.children;\n      // walk the children and apply the draggable state needed\n      for (var i in children) {\n        if (typeof children[i].classList !== typeof undefined) {\n          children[i].classList.remove(\"mover\", \"hovered\");\n        }\n      }\n      for (var j = 1; j <= this.columns; j++) {\n        if (this.shadowRoot.querySelector(\"#col\" + j) !== undefined) {\n          this.shadowRoot\n            .querySelector(\"#col\" + j)\n            .classList.remove(\"mover\", \"hovered\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Insert event noticed by HAX\n   */\n  haxInsertContent(e) {\n    // see if WE are the thing that's active when insert was fired\n    if (this === window.HaxStore.instance.activeContainerNode) {\n      // trick events into rebinding since this event is only possible\n      // when we are in an edit state\n      this.editMode = false;\n      // delay and then set it back, re-applying all events\n      setTimeout(() => {\n        this.editMode = true;\n        if (this.activeItem && typeof this.activeItem.focus === \"function\") {\n          this.positionArrows(this.activeItem);\n          this.activeItem.focus();\n        }\n      }, 100);\n    }\n  }\n\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this[e.detail.property] = null;\n      }\n      if (e.detail.property === \"editMode\" && this.ignoreHax) {\n        // do nothing, we were told to ignore hax\n      } else {\n        this[e.detail.property] = e.detail.value;\n      }\n    }\n  }\n}\nwindow.customElements.define(GridPlate.tag, GridPlate);\nexport { GridPlate };\n"],"names":["GridPlateLayoutOptions","layouts","columnLayout","xs","sm","md","lg","xl","options","layoutFlip","Object","keys","this","i","length","GridPlate","droppable","ignoreHax","breakpointSm","breakpointMd","breakpointLg","breakpointXl","columns","disableResponsive","editMode","layout","responsiveSize","addEventListener","_this","_focusIn","bind","window","_haxStorePropertyUpdated","haxInsertContent","resize","ResponsiveUtility","requestAvailability","LitElement","css","html","moveActiveElement","_getColumnWidth","columnWidths","activeItem","setActiveElement","cancelActive","changedProperties","dispatchEvent","CustomEvent","detail","element","attribute","relativeToParent","j","undefined","shadowRoot","querySelector","col","dropEvent","dblclick","dragStart","dragEnter","dragLeave","dragEnd","e","preventDefault","setAttribute","_getColumnWidths","removeEventListener","forEach","oldValue","propName","includes","_this2","_droppableChanged","_editModeChanged","_activeItemChanged","setTimeout","Event","properties","newValue","item","before","dir","max","querySelectorAll","getAttribute","split","dest","parseInt","nodes","assignedNodes","flatten","target","position","_typeof","insertBefore","id","moveOrder","moveSlot","_this3","focus","positionArrows","classList","add","remove","blur","HaxStore","instance","isTextElement","newl","size","oldl","column","local","parentNode","disabled","canMoveOrder","canMoveSlot","bodyRect","getBoundingClientRect","elemRect","topOffset","top","leftOffset","left","style","height","width","children","dom","getEffectiveChildNodes","tagName","removeAttribute","slot","replace","bubbles","cancelable","composed","stopPropagation","contains","appendChild","_this4","activeContainerNode","_this5","value","property","canScale","canPosition","canEditSource","settings","quick","configure","title","description","inputMethod","advanced","validationType","saveOptions","unsetAttributes","type","Boolean","reflect","Number","String","customElements","define","tag"],"mappings":"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"}