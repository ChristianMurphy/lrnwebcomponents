{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "grid-plate.js",
      "properties": [
        {
          "name": "columns",
          "type": "number | null | undefined",
          "description": "number of columns at this layout / responsive size",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "columnWidths",
          "type": "string | null | undefined",
          "description": "name of selected layout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableResponsive",
          "type": "boolean | null | undefined",
          "description": "disables responsive layouts for HAX preview",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "If the grid plate is in a state where its items\ncan be modified as far as order or column placement.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "layout",
          "type": "string | null | undefined",
          "description": "an object with a layout's column sizes\nat the current responsive width",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"1-1\""
        },
        {
          "name": "layouts",
          "type": "Object | null | undefined",
          "description": "Predefined layouts of column sizes and various responsive widths.\nFor example:```\n{\n  \"1-1-1-1\": {                         //the name of the layout\n    \"xs\": [\"100%\",\"100%\",\"100%\",\"100%] //the responsive width of each column when the grid is extra small\n    \"sm\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is small\n    \"md\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is medium\n    \"lg\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is large\n    \"xl\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is extra large\n  },\n  {...}\n}\n\n              \"1\": \"1: full width\",\n              \"1-1\": \"2: equal width\",\n              \"2-1\": \"2: wide and narrow\",\n              \"1-2\": \"2: narrow and wide\",\n              \"3-1\": \"2: wider and narrower\",\n              \"1-3\": \"2: narrower and wider\",\n              \"1-1-1\": \"3: equal width\",\n              \"2-1-1\": \"3: wide, narrow, and narrow\",\n              \"1-2-1\": \"3: narrow, wide, and narrow\",\n              \"1-1-2\": \"3: narrow,  narrow, and wide\",\n              \"1-1-1-1\": \"4: equal width\",",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 421,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"1\":{\"columnLayout\":\"1: full width\",\"xs\":[\"100%\"],\"sm\":[\"100%\"],\"md\":[\"100%\"],\"lg\":[\"100%\"],\"xl\":[\"100%\"]},\"1-1\":{\"columnLayout\":\"2: equal width\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"50%\",\"50%\"],\"lg\":[\"50%\",\"50%\"],\"xl\":[\"50%\",\"50%\"]},\"2-1\":{\"columnLayout\":\"2: wide & narrow\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"66.6666667%\",\"33.3333337%\"],\"lg\":[\"66.6666667%\",\"33.3333337%\"],\"xl\":[\"66.6666667%\",\"33.3333337%\"]},\"1-2\":{\"columnLayout\":\"2: narrow & wide\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"33.3333333%\",\"66.6666667%\"],\"lg\":[\"33.3333333%\",\"66.6666667%\"],\"xl\":[\"33.3333333%\",\"66.6666667%\"]},\"3-1\":{\"columnLayout\":\"2: wider & narrower\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"75%\",\"25%\"],\"lg\":[\"75%\",\"25%\"],\"xl\":[\"75%\",\"25%\"]},\"1-3\":{\"columnLayout\":\"2: narrower & wider\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"25%\",\"75%\"],\"lg\":[\"25%\",\"75%\"],\"xl\":[\"25%\",\"75%\"]},\"1-1-1\":{\"columnLayout\":\"3: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"100%\",\"100%\"],\"md\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"lg\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"xl\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"]},\"2-1-1\":{\"columnLayout\":\"3: wide, narrow, and narrow\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"50%\",\"50%\"],\"md\":[\"50%\",\"25%\",\"25%\"],\"lg\":[\"50%\",\"25%\",\"25%\"],\"xl\":[\"50%\",\"25%\",\"25%\"]},\"1-2-1\":{\"columnLayout\":\"3: narrow, wide, and narrow\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"100%\",\"100%\"],\"md\":[\"25%\",\"50%\",\"25%\"],\"lg\":[\"25%\",\"50%\",\"25%\"],\"xl\":[\"25%\",\"50%\",\"25%\"]},\"1-1-2\":{\"columnLayout\":\"3: narrow, narrow, and wide\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"100%\"],\"md\":[\"25%\",\"25%\",\"50%\"],\"lg\":[\"25%\",\"25%\",\"50%\"],\"xl\":[\"25%\",\"25%\",\"50%\"]},\"1-1-1-1\":{\"columnLayout\":\"4: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"25%\",\"25%\",\"25%\",\"25%\"],\"lg\":[\"25%\",\"25%\",\"25%\",\"25%\"],\"xl\":[\"25%\",\"25%\",\"25%\",\"25%\"]},\"1-1-1-1-1\":{\"columnLayout\":\"5: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"],\"lg\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"],\"xl\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"]},\"1-1-1-1-1-1\":{\"columnLayout\":\"6: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"lg\":[\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\"],\"xl\":[\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\"]}}"
        },
        {
          "name": "responsiveSize",
          "type": "string | null | undefined",
          "description": "Responsive size as `xs`, `sm`, `md`, `lg`, or `xl`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"xs\""
        },
        {
          "name": "__activeItem",
          "type": "Object | null | undefined",
          "description": "Track active item",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 436,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeItemChanged\"",
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "cancelActive",
          "description": "Cancel active element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "canMoveSlot",
          "description": "Determines if the item can move a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "if the item can move a set number of slots"
          }
        },
        {
          "name": "moveSlot",
          "description": "Moves an item a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 2
            },
            "end": {
              "line": 474,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "canMoveOrder",
          "description": "Determines if the item can move a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "if the item can move a set number of slots"
          }
        },
        {
          "name": "moveOrder",
          "description": "Moves an item's order within a slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 2
            },
            "end": {
              "line": 512,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "moveActiveElement",
          "description": "Move the active element based on which button got pressed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 517,
              "column": 2
            },
            "end": {
              "line": 540,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeItemChanged",
          "description": "Notice changes to what's active and ensure UX associated w/ it is visble",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 545,
              "column": 2
            },
            "end": {
              "line": 558,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setActiveElement",
          "description": "Set the target element to active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 563,
              "column": 2
            },
            "end": {
              "line": 570,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getColumnWidths",
          "description": "gets the column widths based on selected layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 2
            },
            "end": {
              "line": 612,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "responsiveSize",
              "defaultValue": "\"sm\""
            },
            {
              "name": "layout",
              "defaultValue": "\"1-1\""
            },
            {
              "name": "layouts"
            },
            {
              "name": "disableResponsive"
            }
          ],
          "return": {
            "type": "object",
            "desc": "an object with a layout's column sizes at the current responsive width"
          }
        },
        {
          "name": "_getColumnWidth",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 2
            },
            "end": {
              "line": 625,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "columnWidths"
            }
          ],
          "return": {
            "type": "string",
            "desc": "a given column's current width based on layout and current responsive width"
          }
        },
        {
          "name": "_getColumns",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 2
            },
            "end": {
              "line": 634,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnWidths"
            }
          ],
          "return": {
            "type": "number",
            "desc": "the number of columns in this layout"
          }
        },
        {
          "name": "_focusIn",
          "description": "Focus / tab / click event normalization",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 638,
              "column": 2
            },
            "end": {
              "line": 647,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_focusOut",
          "description": "Focus / tab / click event normalization",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 651,
              "column": 2
            },
            "end": {
              "line": 665,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "positionArrows",
          "description": "Position the arrows to change directions around something",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 669,
              "column": 2
            },
            "end": {
              "line": 708,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editModeChanged",
          "description": "Notice edit state has changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 713,
              "column": 2
            },
            "end": {
              "line": 804,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dropEvent",
          "description": "Drop an item onto another",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 2
            },
            "end": {
              "line": 853,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dragStart",
          "description": "Start a drag event, this is an element being dragged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 858,
              "column": 2
            },
            "end": {
              "line": 871,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dragEnd",
          "description": "When we end dragging ensure we remove the mover class.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 876,
              "column": 2
            },
            "end": {
              "line": 889,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 893,
              "column": 2
            },
            "end": {
              "line": 948,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxInsertContent",
          "description": "Insert event noticed by HAX",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 953,
              "column": 2
            },
            "end": {
              "line": 968,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 973,
              "column": 2
            },
            "end": {
              "line": 984,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 24
        },
        "end": {
          "line": 985,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "GridPlate",
      "attributes": [
        {
          "name": "columns",
          "description": "number of columns at this layout / responsive size",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "column-widths",
          "description": "name of selected layout",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-responsive",
          "description": "disables responsive layouts for HAX preview",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edit-mode",
          "description": "If the grid plate is in a state where its items\ncan be modified as far as order or column placement.",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "layout",
          "description": "an object with a layout's column sizes\nat the current responsive width",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "layouts",
          "description": "Predefined layouts of column sizes and various responsive widths.\nFor example:```\n{\n  \"1-1-1-1\": {                         //the name of the layout\n    \"xs\": [\"100%\",\"100%\",\"100%\",\"100%] //the responsive width of each column when the grid is extra small\n    \"sm\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is small\n    \"md\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is medium\n    \"lg\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is large\n    \"xl\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is extra large\n  },\n  {...}\n}\n\n              \"1\": \"1: full width\",\n              \"1-1\": \"2: equal width\",\n              \"2-1\": \"2: wide and narrow\",\n              \"1-2\": \"2: narrow and wide\",\n              \"3-1\": \"2: wider and narrower\",\n              \"1-3\": \"2: narrower and wider\",\n              \"1-1-1\": \"3: equal width\",\n              \"2-1-1\": \"3: wide, narrow, and narrow\",\n              \"1-2-1\": \"3: narrow, wide, and narrow\",\n              \"1-1-2\": \"3: narrow,  narrow, and wide\",\n              \"1-1-1-1\": \"4: equal width\",",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 421,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "responsive-size",
          "description": "Responsive size as `xs`, `sm`, `md`, `lg`, or `xl`",
          "sourceRange": {
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "disable-responsive-changed",
          "description": "Fired when the `disableResponsive` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "grid-plate"
    }
  ]
}
