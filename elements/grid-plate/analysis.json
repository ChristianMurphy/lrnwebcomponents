{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "grid-plate.js",
      "properties": [
        {
          "name": "breakpointSm",
          "type": "number | null | undefined",
          "description": "Custom small breakpoint for the layouts; only updated on attached",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "900"
        },
        {
          "name": "breakpointMd",
          "type": "number | null | undefined",
          "description": "Custom medium breakpoint for the layouts; only updated on attached",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1200"
        },
        {
          "name": "breakpointLg",
          "type": "number | null | undefined",
          "description": "Custom large breakpoint for the layouts; only updated on attached",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 243,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1500"
        },
        {
          "name": "breakpointXl",
          "type": "number | null | undefined",
          "description": "Custom extra-large breakpoint for the layouts; only updated on attached",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1800"
        },
        {
          "name": "columns",
          "type": "number | null | undefined",
          "description": "number of columns at this layout / responsive size",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "columnWidths",
          "type": "string | null | undefined",
          "description": "name of selected layout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableResponsive",
          "type": "boolean | null | undefined",
          "description": "disables responsive layouts for HAX preview",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "If the grid plate is in a state where its items\ncan be modified as far as order or column placement.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "layout",
          "type": "string | null | undefined",
          "description": "an object with a layout's column sizes\nat the current responsive width",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"1-1\""
        },
        {
          "name": "layouts",
          "type": "Object | null | undefined",
          "description": "Predefined layouts of column sizes and various responsive widths.\nFor example:```\n{\n  \"1-1-1-1\": {                         //the name of the layout\n    \"xs\": [\"100%\",\"100%\",\"100%\",\"100%] //the responsive width of each column when the grid is extra small\n    \"sm\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is small\n    \"md\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is medium\n    \"lg\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is large\n    \"xl\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is extra large\n  },\n  {...}\n}```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"1\":{\"columnLayout\":\"1: full width\",\"xs\":[\"100%\"],\"sm\":[\"100%\"],\"md\":[\"100%\"],\"lg\":[\"100%\"],\"xl\":[\"100%\"]},\"1-1\":{\"columnLayout\":\"2: equal width\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"50%\",\"50%\"],\"lg\":[\"50%\",\"50%\"],\"xl\":[\"50%\",\"50%\"]},\"2-1\":{\"columnLayout\":\"2: wide & narrow\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"66.6666667%\",\"33.3333337%\"],\"lg\":[\"66.6666667%\",\"33.3333337%\"],\"xl\":[\"66.6666667%\",\"33.3333337%\"]},\"1-2\":{\"columnLayout\":\"2: narrow & wide\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"33.3333333%\",\"66.6666667%\"],\"lg\":[\"33.3333333%\",\"66.6666667%\"],\"xl\":[\"33.3333333%\",\"66.6666667%\"]},\"3-1\":{\"columnLayout\":\"2: wider & narrower\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"75%\",\"25%\"],\"lg\":[\"75%\",\"25%\"],\"xl\":[\"75%\",\"25%\"]},\"1-3\":{\"columnLayout\":\"2: narrower & wider\",\"xs\":[\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\"],\"md\":[\"25%\",\"75%\"],\"lg\":[\"25%\",\"75%\"],\"xl\":[\"25%\",\"75%\"]},\"1-1-1\":{\"columnLayout\":\"3: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"100%\",\"100%\"],\"md\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"lg\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"xl\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"]},\"2-1-1\":{\"columnLayout\":\"3: wide, narrow, and narrow\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"50%\",\"50%\"],\"md\":[\"50%\",\"25%\",\"25%\"],\"lg\":[\"50%\",\"25%\",\"25%\"],\"xl\":[\"50%\",\"25%\",\"25%\"]},\"1-2-1\":{\"columnLayout\":\"3: narrow, wide, and narrow\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"100%\",\"100%\",\"100%\"],\"md\":[\"25%\",\"50%\",\"25%\"],\"lg\":[\"25%\",\"50%\",\"25%\"],\"xl\":[\"25%\",\"50%\",\"25%\"]},\"1-1-2\":{\"columnLayout\":\"3: narrow, narrow, and wide\",\"xs\":[\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"100%\"],\"md\":[\"25%\",\"25%\",\"50%\"],\"lg\":[\"25%\",\"25%\",\"50%\"],\"xl\":[\"25%\",\"25%\",\"50%\"]},\"1-1-1-1\":{\"columnLayout\":\"4: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"25%\",\"25%\",\"25%\",\"25%\"],\"lg\":[\"25%\",\"25%\",\"25%\",\"25%\"],\"xl\":[\"25%\",\"25%\",\"25%\",\"25%\"]},\"1-1-1-1-1\":{\"columnLayout\":\"5: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"],\"lg\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"],\"xl\":[\"20%\",\"20%\",\"20%\",\"20%\",\"20%\"]},\"1-1-1-1-1-1\":{\"columnLayout\":\"6: equal width\",\"xs\":[\"100%\",\"100%\",\"100%\",\"100%\",\"100%\",\"100%\"],\"sm\":[\"50%\",\"50%\",\"50%\",\"50%\",\"50%\",\"50%\"],\"md\":[\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\",\"33.3333333%\"],\"lg\":[\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\"],\"xl\":[\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\",\"16.6666667%\"]}}"
        },
        {
          "name": "responsiveSize",
          "type": "string | null | undefined",
          "description": "Responsive size as `xs`, `sm`, `md`, `lg`, or `xl`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"xs\""
        },
        {
          "name": "__activeItem",
          "type": "Object | null | undefined",
          "description": "Track active item",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 4
            },
            "end": {
              "line": 452,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeItemChanged\"",
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "cancelActive",
          "description": "Cancel active element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 2
            },
            "end": {
              "line": 460,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "canMoveSlot",
          "description": "Determines if the item can move a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 469,
              "column": 2
            },
            "end": {
              "line": 475,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "if the item can move a set number of slots"
          }
        },
        {
          "name": "moveSlot",
          "description": "Moves an item a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 490,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "canMoveOrder",
          "description": "Determines if the item can move a set number of slots.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 499,
              "column": 2
            },
            "end": {
              "line": 505,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "if the item can move a set number of slots"
          }
        },
        {
          "name": "moveOrder",
          "description": "Moves an item's order within a slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 2
            },
            "end": {
              "line": 528,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "before",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "moveActiveElement",
          "description": "Move the active element based on which button got pressed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 2
            },
            "end": {
              "line": 556,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_activeItemChanged",
          "description": "Notice changes to what's active and ensure UX associated w/ it is visble",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 2
            },
            "end": {
              "line": 574,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setActiveElement",
          "description": "Set the target element to active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 2
            },
            "end": {
              "line": 586,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getColumnWidths",
          "description": "gets the column widths based on selected layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 596,
              "column": 2
            },
            "end": {
              "line": 628,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "responsiveSize",
              "defaultValue": "\"sm\""
            },
            {
              "name": "layout",
              "defaultValue": "\"1-1\""
            },
            {
              "name": "layouts"
            },
            {
              "name": "disableResponsive"
            }
          ],
          "return": {
            "type": "object",
            "desc": "an object with a layout's column sizes at the current responsive width"
          }
        },
        {
          "name": "_getColumnWidth",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 637,
              "column": 2
            },
            "end": {
              "line": 641,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "columnWidths"
            }
          ],
          "return": {
            "type": "string",
            "desc": "a given column's current width based on layout and current responsive width"
          }
        },
        {
          "name": "_getColumns",
          "description": "gets a given column's current width based on layout and current responsive width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 648,
              "column": 2
            },
            "end": {
              "line": 650,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnWidths"
            }
          ],
          "return": {
            "type": "number",
            "desc": "the number of columns in this layout"
          }
        },
        {
          "name": "_focusIn",
          "description": "Focus / tab / click event normalization",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 654,
              "column": 2
            },
            "end": {
              "line": 663,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_focusOut",
          "description": "Focus / tab / click event normalization",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 667,
              "column": 2
            },
            "end": {
              "line": 681,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "positionArrows",
          "description": "Position the arrows to change directions around something",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 685,
              "column": 2
            },
            "end": {
              "line": 724,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editModeChanged",
          "description": "Notice edit state has changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 729,
              "column": 2
            },
            "end": {
              "line": 820,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dropEvent",
          "description": "Drop an item onto another",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 825,
              "column": 2
            },
            "end": {
              "line": 869,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dragStart",
          "description": "Start a drag event, this is an element being dragged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 874,
              "column": 2
            },
            "end": {
              "line": 887,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "dragEnd",
          "description": "When we end dragging ensure we remove the mover class.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 892,
              "column": 2
            },
            "end": {
              "line": 905,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 909,
              "column": 2
            },
            "end": {
              "line": 1001,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxInsertContent",
          "description": "Insert event noticed by HAX",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1006,
              "column": 2
            },
            "end": {
              "line": 1021,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1026,
              "column": 2
            },
            "end": {
              "line": 1037,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 24
        },
        "end": {
          "line": 1038,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "GridPlate",
      "attributes": [
        {
          "name": "breakpoint-sm",
          "description": "Custom small breakpoint for the layouts; only updated on attached",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "breakpoint-md",
          "description": "Custom medium breakpoint for the layouts; only updated on attached",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "breakpoint-lg",
          "description": "Custom large breakpoint for the layouts; only updated on attached",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 243,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "breakpoint-xl",
          "description": "Custom extra-large breakpoint for the layouts; only updated on attached",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "columns",
          "description": "number of columns at this layout / responsive size",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "column-widths",
          "description": "name of selected layout",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-responsive",
          "description": "disables responsive layouts for HAX preview",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 274,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edit-mode",
          "description": "If the grid plate is in a state where its items\ncan be modified as far as order or column placement.",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "layout",
          "description": "an object with a layout's column sizes\nat the current responsive width",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "layouts",
          "description": "Predefined layouts of column sizes and various responsive widths.\nFor example:```\n{\n  \"1-1-1-1\": {                         //the name of the layout\n    \"xs\": [\"100%\",\"100%\",\"100%\",\"100%] //the responsive width of each column when the grid is extra small\n    \"sm\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is small\n    \"md\": [\"50%\",\"50%\",\"50%\",\"50%\"]    //the responsive width of each column when the grid is medium\n    \"lg\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is large\n    \"xl\": [\"25%\",\"25%\",\"25%\",\"25%\"]    //the responsive width of each column when the grid is extra large\n  },\n  {...}\n}```",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "responsive-size",
          "description": "Responsive size as `xs`, `sm`, `md`, `lg`, or `xl`",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "disable-responsive-changed",
          "description": "Fired when the `disableResponsive` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "grid-plate"
    }
  ]
}
