{"version":3,"file":"video-player.umd.js","sources":["video-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { MediaBehaviorsVideo } from \"@lrnwebcomponents/media-behaviors/media-behaviors.js\";\nimport \"@lrnwebcomponents/a11y-media-player/a11y-media-player.js\";\n/**\n * `video-player`\n * `A simple responsive video player with ridiculously powerful backing`\n *\n * @microcopy - language worth noting:\n * - `video source` - url / link to video file\n *\n * @demo demo/index.html\n * @customElement video-player\n */\nclass VideoPlayer extends MediaBehaviorsVideo(SchemaBehaviors(SimpleColors)) {\n  \n  //styles function\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n:host {\n  display: block;\n  margin: 0 0 15px;\n}\n.video-caption {\n  font-style: italic;\n  margin: 0;\n  padding: 8px;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n${this.isA11yMedia ? html`\n  <a11y-media-player\n    .accent-color=\"${this.accentColor || undefined}\"\n    ?audio-only=\"${this.audioOnly}\"\n    ?dark=\"${this.dark}\"\n    ?dark-transcript=\"${this.darkTranscript}\"\n    ?disable-interactive=\"${this.disableInteractive}\"\n    ?hide-timestamps=\"${this.hideTimestamps}\"\n    ?hide-transcript=\"${this.hideTiranscript}\"\n    id=\"${this.playerId}\"\n    lang=\"${this.lang || 'en'}\"\n    ?linkable=\"${this.linkable}\"\n    preload=\"${this.preload || 'metadata'}\"\n    .media-title=\"${this.mediaTitle || undefined}\"\n    .sources=\"${this.sourceData}\"\n    ?stand-alone=\"${this.standAlone}\"\n    sticky-corner=\"${this.stickyCorner || 'top-right'}\"\n    .thumbnail-src=\"${this.thumbnailSrc}\"\n    .tracks=\"${this.trackData}\"\n    .crossorigin=\"${this.crossorigin ? this.crossorigin : undefined}\"\n    .width=\"${this.width}\"\n    .height=\"${this.height}\"\n    youtube-id=\"${this.youtubeId}\"\n    >\n    ${this.audioOnly \n      ? html`<audio preload=\"${this.preload || 'metadata'}\">${this.html5}</audio>` \n      : html`<video preload=\"${this.preload || 'metadata'}\">${this.html5}</video>`\n    }  \n  </a11y-media-player>` : html`\n  <div class=\"responsive-video-container\" .lang=\"${this.lang || undefined}\">\n    ${this.sandboxed ? html``: html`\n      <webview\n        resource=\"${this.schemaResourceID}-video\"\n        .src=\"${this.sourceData && this.sourceData[0] && this.sourceData[0].src || undefined }\"\n        .width=\"${this.width || undefined }\"\n        .height=\"${this.height || undefined }\"\n        frameborder=\"0\">\n      </webview>`}\n    ${!(!this.sandboxed && this.iframed) ? html``: html`\n      <iframe\n        resource=\"${this.schemaResourceID}-video\"\n        .src=\"${this.sourceData && this.sourceData[0] && this.sourceData[0].src || undefined }\"\n        width=\"${this.width}\"\n        height=\"${this.height}\"\n        frameborder=\"0\"\n        webkitallowfullscreen=\"\"\n        mozallowfullscreen=\"\"\n        allowfullscreen=\"\"\n      ></iframe>\n    `}\n  </div>\n  <div id=\"videocaption\" class=\"video-caption\">\n    <p>\n      ${this.mediaTitle}\n      <span class=\"media-type print-only\">(embedded media)</span>\n    </p>\n    <slot name=\"caption\"></slot>\n  </div>`}`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": {\n    \"min\": 25,\n    \"step\": 12.5\n  },\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Video player\",\n    \"description\": \"This can present video in a highly accessible manner regardless of source.\",\n    \"icon\": \"av:play-circle-filled\",\n    \"color\": \"red\",\n    \"groups\": [\"Video\", \"Media\"],\n    \"handles\": [\n      {\n        \"type\": \"video\",\n        \"source\": \"source\",\n        \"title\": \"caption\",\n        \"caption\": \"caption\",\n        \"description\": \"caption\",\n        \"color\": \"primaryColor\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"LRNWebComponents\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [\n      {\n        \"property\": \"accentColor\",\n        \"title\": \"Accent color\",\n        \"description\": \"Select the accent color for the player.\",\n        \"inputMethod\": \"colorpicker\",\n        \"icon\": \"editor:format-color-fill\"\n      },\n      {\n        \"attribute\": \"dark\",\n        \"title\": \"Dark theme\",\n        \"description\": \"Enable dark theme for the player.\",\n        \"inputMethod\": \"boolean\",\n        \"icon\": \"invert-colors\"\n      }\n    ],\n    \"configure\": [\n      {\n        \"property\": \"source\",\n        \"title\": \"Source\",\n        \"description\": \"The URL for this video.\",\n        \"inputMethod\": \"haxupload\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"noCamera\": true,\n        \"noVoiceRecord\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"track\",\n        \"title\": \"Closed captions\",\n        \"description\": \"The URL for the captions file.\",\n        \"inputMethod\": \"textfield\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"thumbnailSrc\",\n        \"title\": \"Thumbnail image\",\n        \"description\": \"Optional. The URL for a thumbnail/poster image.\",\n        \"inputMethod\": \"haxupload\",\n        \"icon\": \"link\",\n        \"required\": true,\n        \"noVoiceRecord\": true,\n        \"validationType\": \"url\"\n      },\n      {\n        \"property\": \"mediaTitle\",\n        \"title\": \"Title\",\n        \"description\": \"Simple title for under video\",\n        \"inputMethod\": \"textfield\",\n        \"icon\": \"av:video-label\",\n        \"required\": false,\n        \"validationType\": \"text\"\n      },\n      {\n        \"property\": \"accentColor\",\n        \"title\": \"Accent color\",\n        \"description\": \"Select the accent color for the player.\",\n        \"inputMethod\": \"colorpicker\",\n        \"icon\": \"editor:format-color-fill\"\n      },\n      {\n        \"attribute\": \"dark\",\n        \"title\": \"Dark theme\",\n        \"description\": \"Enable dark theme for the player.\",\n        \"inputMethod\": \"boolean\",\n        \"icon\": \"invert-colors\"\n      }\n    ],\n    \"advanced\": [\n      {\n        \"property\": \"darkTranscript\",\n        \"title\": \"Dark theme for transcript\",\n        \"description\": \"Enable dark theme for the transcript.\",\n        \"inputMethod\": \"boolean\"\n      },\n      {\n        \"property\": \"hideTimestamps\",\n        \"title\": \"Hide timestamps\",\n        \"description\": \"Hide the time stamps on the transcript.\",\n        \"inputMethod\": \"boolean\"\n      },\n      {\n        \"property\": \"linkable\",\n        \"title\": \"Include a share link?\",\n        \"description\": \"Provides a link to share the video.\",\n        \"inputMethod\": \"boolean\"\n      },\n      {\n        \"property\": \"preload\",\n        \"title\": \"Preload source(s).\",\n        \"description\": \"How the sources should be preloaded, i.e. auto, metadata (default), or none.\",\n        \"inputMethod\": \"select\",\n        \"options\": {\n          \"preload\": \"Preload all media\",\n          \"metadata\": \"Preload media metadata only\",\n          \"none\": \"Don't preload anything\"\n        }\n      },\n      {\n        \"property\": \"stickyCorner\",\n        \"title\": \"Sticky Corner\",\n        \"description\": \"Set the corner where a video plays when scrolled out of range, or choose none to disable sticky video.\",\n        \"inputMethod\": \"select\",\n        \"options\": {\n          \"none\": \"none\",\n          \"top-left\": \"top-left\",\n          \"top-right\": \"top-right\",\n          \"bottom-left\": \"bottom-left\",\n          \"bottom-right\": \"bottom-right\"\n        }\n      },\n      {\n        \"property\": \"sources\",\n        \"title\": \"Other sources\",\n        \"description\": \"List of other sources\",\n        \"inputMethod\": \"array\",\n        \"properties\": [\n          {\n            \"property\": \"src\",\n            \"title\": \"Source\",\n            \"description\": \"The URL for this video.\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"type\",\n            \"title\": \"Type\",\n            \"description\": \"Media type data\",\n            \"inputMethod\": \"select\",\n            \"options\": {\n              \"audio/aac\": \"acc audio\",\n              \"audio/flac\": \"flac audio\",\n              \"audio/mp3\": \"mp3 audio\",\n              \"video/mp4\": \"mp4 video\",\n              \"video/mov\": \"mov video\",\n              \"audio/ogg\": \"ogg audio\",\n              \"video/ogg\": \"ogg video\",\n              \"audio/wav\": \"wav audio\",\n              \"audio/webm\": \"webm audio\",\n              \"video/webm\": \"webm video\"\n            }\n          }\n        ]\n      },\n      {\n        \"property\": \"tracks\",\n        \"title\": \"Track list\",\n        \"description\": \"Tracks of different languages of closed captions\",\n        \"inputMethod\": \"array\",\n        \"properties\": [\n          {\n            \"property\": \"kind\",\n            \"title\": \"Kind\",\n            \"description\": \"Kind of track\",\n            \"inputMethod\": \"select\",\n            \"options\": {\n              \"subtitles\": \"subtitles\" /*,\n              Future Features\n              'description': 'description',\n              'thumbnails': 'thumbnails',\n              'interactive': 'interactive',\n              'annotation': 'annotation'*/\n            }\n          },\n          {\n            \"property\": \"label\",\n            \"title\": \"Label\",\n            \"description\": \"The human-readable name for this track, eg. \\\"English Subtitles\\\"\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"src\",\n            \"title\": \"Source\",\n            \"description\": \"Source of the track\",\n            \"inputMethod\": \"textfield\"\n          },\n          {\n            \"property\": \"srclang\",\n            \"title\": \"Two letter, language code, eg. 'en' for English, \\\"de\\\" for German, \\\"es\\\" for Spanish, etc.\",\n            \"description\": \"Label\",\n            \"inputMethod\": \"textfield\"\n          }\n        ]\n      }\n    ]\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n    static get properties() {\n    \n    return {\n  \n  ...super.properties,\n  \n  /**\n   * Is media an audio file only?\n   */\n  \"audioOnly\": {\n    \"type\": Boolean\n  },\n  /**\n   * Optional accent color for controls,\n   * using these colors:\n   * `red`, `pink`, `purple`, `deep-purple`, `indigo`, `blue`,\n   * `light-blue`, `cyan`, `teal`, `green`, `light-green`, `lime`,\n   * `yellow`, `amber`, orange, deep-orange, and brown.\n   * Default is null.\n   */\n  \"accentColor\": {\n    \"type\": String,\n    \"attribute\": \"accent-color\",\n    \"reflect\": true\n  },\n  /**\n   * Cross origin flag for transcripts to load\n   */\n  \"crossorigin\": {\n    \"type\": String,\n    \"attribute\": \"crossorigin\",\n    \"reflect\": true\n  },\n  /**\n   * Enables darker player.\n   */\n  \"dark\": {\n    \"type\": Boolean,\n    \"attribute\": \"dark\",\n    \"reflect\": true\n  },\n  /**\n   * Use dark theme on transcript? Default is false, even when player is dark.\n   */\n  \"darkTranscript\": {\n    \"type\": Boolean\n  },\n  /**\n   * disable interactive mode that makes transcript clickable\n   */\n  \"disableInteractive\": {\n    \"type\": Boolean\n  },\n  /**\n   * Height of media player.\n   */\n  \"height\": {\n    \"type\": String\n  },\n  /**\n   * show cue's start and end time\n   */\n  \"hideTimestamps\": {\n    \"type\": Boolean\n  },\n  /**\n   * Hide transcript by default\n   */\n  \"hideTranscript\": {\n    \"type\": Boolean\n  },\n  /**\n   * Hide transcript by default\n   */\n  \"id\": {\n    \"type\": String,\n    \"attribute\": \"id\",\n    \"reflect\": true\n  },\n  /**\n   * Language of media\n   */\n  \"lang\": {\n    \"type\": String\n  },\n  /**\n   * Include a share link?\n   */\n  \"linkable\": {\n    \"type\": Boolean\n  },\n  /**\n   * Simple caption for video\n   */\n  \"mediaTitle\": {\n    \"type\": String\n  },\n  /**\n   * ID for a11y-media-player.\n   * If none specified it will be modified from schema-resource-id.\n   */\n  \"playerId\": {\n    \"type\": String\n  },\n  /**\n   * What to preload for a11y-media-player: auto, metadata (default), or none.\n   */\n  \"preload\": {\n    \"type\": String\n  },\n  /**\n   * Single sources of video\n   */\n  \"source\": {\n    \"type\": String,\n    \"attribute\": \"source\",\n    \"reflect\": true\n  },\n  /**\n   * Array of multiple video sources\n   */\n  \"sources\": {\n    \"type\": Array\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * `top-left`, `top-right`, `bottom-left`, `bottom-right`, or `none`?\n   * Default is `top-right`. `None` disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"type\": String,\n    \"attribute\": \"sticky-corner\",\n    \"reflect\": true\n  },\n  /**\n   * Url for a single subtitle track\n   */\n  \"track\": {\n    \"type\": String\n  },\n  /**\n   * Array of text tracks, eg. `[{ \"src\": \"path/to/track.vtt\", \"label\": \"English\", \"srclang\": \"en\", \"kind\": \"subtitles\", }]`\n   */\n  \"tracks\": {\n    \"type\": Array\n  },\n  /**\n   * Source of optional thumbnail image\n   */\n  \"thumbnailSrc\": {\n    \"type\": String,\n    \"attribute\": \"thumbnail-src\",\n    \"reflect\": true\n  },\n  /**\n   * Width of media player for non-a11y-media.\n   */\n  \"width\": {\n    \"type\": String\n  }\n}\n;\n  }\n  /**\n   * Store tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"video-player\";\n  }\n  constructor() {\n    super();\n    this.audioOnly = false;\n    this.dark = false;\n    this.darkTranscript = false;\n    this.disableInteractive = false;\n    this.hideTimestamps = false;\n    this.hideTranscript = false;\n    this.lang = \"en\";\n    this.linkable = false;\n    this.preload = \"metadata\";\n    this.sources = [];\n    this.stickyCorner = \"top-right\";\n    this.tracks = [];\n  }\n  /**\n   * gets the HTML5 `audio` or `video` children\n   * @readonly\n   * @returns {object} HTML template\n   */\n  get html5() {\n    return html`\n      ${this.sourceData\n        .filter(item => item.type !== \"youtube\")\n        .map(sd => {\n          html`\n            <source\n              .src=\"${sd.src || undefined}\"\n              .type=\"${sd.type || undefined}\"\n            />\n          `;\n        })}\n      ${this.trackData.map(track => {\n        `<track\n          .src=\"${track.src || undefined}\"\n          .kind=\"${track.kind || undefined}\"\n          .label=\"${track.label || undefined}\"\n          .srclang=\"${track.lang || undefined}\"\n        />`;\n      })}\n    `;\n  }\n\n  /**\n   * Computes whether uses iframe\n   * @readonly\n   * @returns {Boolean}\n   */\n  get iframed() {\n    // make sure we take into account sandboxing as well\n    // so that we can manage state effectively\n    if (\n      this.sourceData &&\n      this.sourceData.length > 0 &&\n      this.sourceData[0] !== undefined &&\n      window.MediaBehaviors.Video._sourceIsIframe(this.sourceData[0].src) &&\n      !this.sandboxed\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Determines if compatible with `a11y-media-player`\n   * @readonly\n   * @returns {Boolean}\n   */\n  get isA11yMedia() {\n    if (\n      !this.sandboxed &&\n      (this.sourceType == \"youtube\" || this.sourceType == \"local\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Compute sandboxed status\n   * @readonly\n   * @returns {Boolean}\n   */\n  get sandboxed() {\n    // we have something that would require an iframe\n    // see if we have a local system that would want to sandbox instead\n    if (\n      this.sourceData &&\n      this.sourceData.length > 0 &&\n      typeof this.sourceData[0] !== undefined &&\n      window.MediaBehaviors.Video._sourceIsIframe(this.sourceData[0].src)\n    ) {\n      // fake creation of a webview element to see if it's valid\n      // or not.\n      let test = document.createElement(\"webview\");\n      // if this function exists it means that our deploy target\n      // is in a sandboxed environment and is not able to run iframe\n      // content with any real stability. This is beyond edge case but\n      // as this is an incredibly useful tag we want to make sure it\n      // can mutate to work in chromium and android environments\n      // which support such sandboxing\n      if (typeof test.reload === \"function\") {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets source and adds to sources list\n   * @readonly\n   * @returns {Array} List of source objects\n   */\n  get sourceData() {\n    let temp =\n      typeof this.sources === \"string\"\n        ? JSON.parse(this.sources)\n        : this.sources.slice();\n    if (this.source) temp.unshift({ src: this.source });\n    if (temp && temp.length > 0)\n      temp.forEach(item => {\n        item.type = item.type || this._computeMediaType(item.src);\n        item.src = this._computeSRC(item.src, item.type);\n      });\n    return temp;\n  }\n\n  get standAlone() {\n    return (\n      this.trackData === undefined ||\n      this.trackData === null ||\n      this.trackData.length < 1\n    );\n  }\n\n  /**\n   * Gets type of source based on src attribute\n   * @returns {String} `local`, `vimeo`, `youtube`, etc.\n   */\n  get sourceType() {\n    if (\n      this.sourceData &&\n      this.sourceData.length > 0 &&\n      this.sourceData[0] !== undefined &&\n      typeof this.sourceData[0].src !== typeof undefined\n    ) {\n      return window.MediaBehaviors.Video.getVideoType(this.sourceData[0].src);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Gets cleaned track list\n   * @readonly\n   * @returns {Array} Eg. `[{ \"src\": \"path/to/track.vtt\", \"label\": \"English\", \"srclang\": \"en\", \"kind\": \"subtitles\",}]`\n   */\n  get trackData() {\n    let temp =\n      typeof this.tracks === \"string\"\n        ? JSON.parse(this.tracks).slice()\n        : this.tracks.slice();\n    if (this.track !== undefined && this.track !== null && this.track !== \"\")\n      temp.push({\n        src: this.track,\n        srclang: this.lang,\n        label: this.lang === \"en\" ? \"English\" : this.lang,\n        kind: \"subtitles\"\n      });\n    return temp;\n  }\n\n  /**\n   * Gets Youtube ID from source string\n   * @readonly\n   * @returns {String}\n   */\n  get youtubeId() {\n    if (\n      this.sourceData &&\n      this.sourceData[0] &&\n      this.sourceType === \"youtube\"\n    ) {\n      return this._computeSRC(this.sourceData[0].src).replace(\n        /.*\\/embed\\//,\n        \"\"\n      );\n    }\n    return;\n  }\n\n  /**\n   * gets an id for a11y-media-player\n   * @readonly\n   * @returns {string} an id for player\n   */\n  get playerId() {\n    return `${this.id || this.schemaResourceID}-media`;\n  }\n\n  /**\n   * Compute media type based on source, i.e. 'audio/wav' for '.wav'\n   */\n  _computeMediaType(source) {\n    let audio = [\"aac\", \"flac\", \"mp3\", \"oga\", \"wav\"],\n      video = [\"mov\", \"mp4\", \"ogv\", \"webm\"],\n      type = \"\",\n      findType = (text, data) => {\n        data.forEach(item => {\n          if (\n            type === \"\" &&\n            typeof source !== undefined &&\n            source !== null &&\n            source.toLowerCase().indexOf(\".\" + item) > -1\n          ) {\n            if (text === \"audio\") this.audioOnly = true;\n            type = text + \"/\" + item;\n          }\n        });\n      };\n    findType(\"audio\", audio);\n    findType(\"video\", video);\n    return type;\n  }\n\n  /**\n   * Compute src from type / source combo.\n   * Type is set by source so this ensures a waterfall\n   * of valid values.\n   */\n  _computeSRC(source, type) {\n    if (source !== null && typeof source !== undefined) {\n      // ensure that this is a valid url / cleaned up a bit\n      type = type || window.MediaBehaviors.Video.getVideoType(source);\n      source = window.MediaBehaviors.Video.cleanVideoSource(source, type);\n      if (type == \"vimeo\") {\n        if (this.vimeoTitle) {\n          source += \"?title=1\";\n        } else {\n          source += \"?title=0\";\n        }\n        if (this.vimeoByline) {\n          source += \"&byline=1\";\n        } else {\n          source += \"&byline=0\";\n        }\n        if (this.vimeoPortrait) {\n          source += \"&portrait=1\";\n        } else {\n          source += \"&portrait=0\";\n        }\n      } else if (type == \"dailymotion\") {\n        source += \"&ui-start-screen-info=false\";\n        source += \"&ui-logo=false\";\n        source += \"&sharing-enable=false\";\n        source += \"&endscreen-enable=false\";\n      }\n    }\n    return source;\n  }\n  /**\n   * postProcesshaxNodeToContent - clean up so we don't have empty array data\n   */\n  postProcesshaxNodeToContent(content) {\n    content = content.replace(' sources=\"[]\",', \"\");\n    content = content.replace(' tracks=\"[]\",', \"\");\n    return content;\n  }\n}\nwindow.customElements.define(VideoPlayer.tag, VideoPlayer);\nexport { VideoPlayer };\n"],"names":["VideoPlayer","audioOnly","dark","darkTranscript","disableInteractive","hideTimestamps","hideTranscript","lang","linkable","preload","sources","stickyCorner","tracks","MediaBehaviorsVideo","SchemaBehaviors","SimpleColors","html","this","isA11yMedia","accentColor","undefined","hideTiranscript","playerId","mediaTitle","sourceData","standAlone","thumbnailSrc","trackData","crossorigin","width","height","youtubeId","html5","sandboxed","schemaResourceID","src","iframed","css","Boolean","String","Array","source","type","findType","text","data","forEach","item","_typeof","toLowerCase","indexOf","_this2","window","MediaBehaviors","Video","getVideoType","cleanVideoSource","vimeoTitle","vimeoByline","vimeoPortrait","content","replace","filter","map","sd","track","kind","label","length","_sourceIsIframe","sourceType","document","createElement","reload","temp","JSON","parse","slice","unshift","_this3","_computeMediaType","_computeSRC","push","srclang","id","customElements","define","tag"],"mappings":"07JAmBMA,yKA6dGC,WAAY,IACZC,MAAO,IACPC,gBAAiB,IACjBC,oBAAqB,IACrBC,gBAAiB,IACjBC,gBAAiB,IACjBC,KAAO,OACPC,UAAW,IACXC,QAAU,aACVC,QAAU,KACVC,aAAe,cACfC,OAAS,iPAxeQC,sBAAoBC,kBAAgBC,6DAqBnDC,WAETC,KAAKC,YAAcF,WAEAC,KAAKE,kBAAeC,EACtBH,KAAKhB,UACXgB,KAAKf,KACMe,KAAKd,eACDc,KAAKb,mBACTa,KAAKZ,eACLY,KAAKI,gBACnBJ,KAAKK,SACHL,KAAKV,MAAQ,KACRU,KAAKT,SACPS,KAAKR,SAAW,WACXQ,KAAKM,iBAAcH,EACvBH,KAAKO,WACDP,KAAKQ,WACJR,KAAKN,cAAgB,YACpBM,KAAKS,aACZT,KAAKU,UACAV,KAAKW,YAAcX,KAAKW,iBAAcR,EAC5CH,KAAKY,MACJZ,KAAKa,OACFb,KAAKc,UAEjBd,KAAKhB,UACHe,WAAuBC,KAAKR,SAAW,WAAeQ,KAAKe,OAC3DhB,WAAuBC,KAAKR,SAAW,WAAeQ,KAAKe,QAEzChB,WACyBC,KAAKV,WAAQa,EAC1DH,KAAKgB,UAAYjB,YAAQA,WAEXC,KAAKiB,iBACTjB,KAAKO,YAAcP,KAAKO,WAAW,IAAMP,KAAKO,WAAW,GAAGW,UAAOf,EACjEH,KAAKY,YAAST,EACbH,KAAKa,aAAUV,GAGzBH,KAAKgB,YAAahB,KAAKmB,QAAWpB,YAAQA,WAE/BC,KAAKiB,iBACTjB,KAAKO,YAAcP,KAAKO,WAAW,IAAMP,KAAKO,WAAW,GAAGW,UAAOf,EAClEH,KAAKY,MACJZ,KAAKa,QAUfb,KAAKM,wFAtEPc,yDA+EK,UACG,KACH,QACC,mBAEK,iBACE,QACR,OACE,2BACM,kFACP,8BACC,aACC,CAAC,QAAS,iBACT,CACT,MACU,eACE,eACD,kBACE,sBACI,gBACN,sBAGL,QACI,8BAGF,OACD,CACP,UACc,oBACH,2BACM,sDACA,mBACP,4BAEV,WACe,aACJ,yBACM,gDACA,eACP,4BAGC,CACX,UACc,eACH,qBACM,sCACA,iBACP,iBACI,YACA,iBACK,iBACC,OAEpB,UACc,cACH,8BACM,6CACA,iBACP,iBACI,iBACM,OAEpB,UACc,qBACH,8BACM,8DACA,iBACP,iBACI,iBACK,iBACC,OAEpB,UACc,mBACH,oBACM,2CACA,iBACP,2BACI,iBACM,QAEpB,UACc,oBACH,2BACM,sDACA,mBACP,4BAEV,WACe,aACJ,yBACM,gDACA,eACP,2BAGA,CACV,UACc,uBACH,wCACM,oDACA,WAEjB,UACc,uBACH,8BACM,sDACA,WAEjB,UACc,iBACH,oCACM,kDACA,WAEjB,UACc,gBACH,iCACM,2FACA,iBACJ,SACE,6BACC,mCACJ,2BAGZ,UACc,qBACH,4BACM,qHACA,iBACJ,MACD,kBACI,uBACC,0BACE,6BACC,iBAGpB,UACc,gBACH,4BACM,oCACA,mBACD,CACZ,UACc,YACH,qBACM,sCACA,aAEjB,UACc,aACH,mBACM,8BACA,iBACJ,aACI,yBACC,yBACD,wBACA,wBACA,wBACA,wBACA,wBACA,yBACC,0BACA,iBAKtB,UACc,eACH,yBACM,+DACA,mBACD,CACZ,UACc,aACH,mBACM,4BACA,iBACJ,WACI,cAQjB,UACc,cACH,oBACM,8EACA,aAEjB,UACc,YACH,qBACM,kCACA,aAEjB,UACc,gBACH,yGACM,oBACA,gcAmBZ,MACHC,qBAUK,MACLC,iBACK,wBACF,eAKE,MACLA,iBACK,uBACF,QAKL,MACED,kBACK,gBACF,kBAKK,MACRA,4BAKY,MACZA,gBAKA,MACAC,uBAKQ,MACRD,wBAKQ,MACRA,YAKJ,MACIC,iBACK,cACF,QAKL,MACEA,iBAKE,MACFD,oBAKI,MACJC,iBAME,MACFA,gBAKC,MACDA,eAKA,MACAA,iBACK,kBACF,WAKF,MACDC,oBAOM,MACND,iBACK,yBACF,SAKJ,MACCA,eAKA,MACAC,oBAKM,MACND,iBACK,yBACF,SAKJ,MACCA,4CAUD,gEA6MSE,cAGdC,EAAO,GACPC,EAAW,SAACC,EAAMC,GAChBA,EAAKC,QAAQ,SAAAC,GAEA,KAATL,QACkBtB,IAAlB4B,EAAOP,IACI,OAAXA,GACAA,EAAOQ,cAAcC,QAAQ,IAAMH,IAAS,IAE/B,UAATH,IAAkBO,EAAKlD,WAAY,GACvCyC,EAAOE,EAAO,IAAMG,aAI5BJ,EAAS,QAhBG,CAAC,MAAO,OAAQ,MAAO,MAAO,QAiB1CA,EAAS,QAhBC,CAAC,MAAO,MAAO,MAAO,SAiBzBD,sCAQGD,EAAQC,UACH,OAAXD,QAAqCrB,IAAlB4B,EAAOP,KAE5BC,EAAOA,GAAQU,OAAOC,eAAeC,MAAMC,aAAad,GACxDA,EAASW,OAAOC,eAAeC,MAAME,iBAAiBf,EAAQC,GAClD,SAARA,GACEzB,KAAKwC,WACPhB,GAAU,WAEVA,GAAU,WAERxB,KAAKyC,YACPjB,GAAU,YAEVA,GAAU,YAERxB,KAAK0C,cACPlB,GAAU,cAEVA,GAAU,eAEK,eAARC,IACTD,GAAU,8BACVA,GAAU,iBACVA,GAAU,wBACVA,GAAU,4BAGPA,sDAKmBmB,UAE1BA,GADAA,EAAUA,EAAQC,QAAQ,iBAAkB,KAC1BA,QAAQ,gBAAiB,yCApPpC7C,WACHC,KAAKO,WACJsC,OAAO,SAAAf,SAAsB,YAAdA,EAAKL,OACpBqB,IAAI,SAAAC,GACHhD,WAEYgD,EAAG7B,UAAOf,EACT4C,EAAGtB,WAAQtB,KAI1BH,KAAKU,UAAUoC,IAAI,SAAAE,qCAETA,EAAM9B,UAAOf,iCACZ6C,EAAMC,WAAQ9C,kCACb6C,EAAME,YAAS/C,oCACb6C,EAAM1D,WAAQa,gEAe9BH,KAAKO,YACLP,KAAKO,WAAW4C,OAAS,QACFhD,IAAvBH,KAAKO,WAAW,IAChB4B,OAAOC,eAAeC,MAAMe,gBAAgBpD,KAAKO,WAAW,GAAGW,OAC9DlB,KAAKgB,uDAcLhB,KAAKgB,WACc,WAAnBhB,KAAKqD,YAA8C,SAAnBrD,KAAKqD,iDAgBtCrD,KAAKO,YACLP,KAAKO,WAAW4C,OAAS,QACKhD,IAA9B4B,EAAO/B,KAAKO,WAAW,KACvB4B,OAAOC,eAAeC,MAAMe,gBAAgBpD,KAAKO,WAAW,GAAGW,MAWpC,mBAPhBoC,SAASC,cAAc,WAOlBC,cACP,SAGJ,gDASHC,EACsB,iBAAjBzD,KAAKP,QACRiE,KAAKC,MAAM3D,KAAKP,SAChBO,KAAKP,QAAQmE,eACf5D,KAAKwB,QAAQiC,EAAKI,QAAQ,CAAE3C,IAAKlB,KAAKwB,SACtCiC,GAAQA,EAAKN,OAAS,GACxBM,EAAK5B,QAAQ,SAAAC,GACXA,EAAKL,KAAOK,EAAKL,MAAQqC,EAAKC,kBAAkBjC,EAAKZ,KACrDY,EAAKZ,IAAM4C,EAAKE,YAAYlC,EAAKZ,IAAKY,EAAKL,QAExCgC,iDAKctD,IAAnBH,KAAKU,WACc,OAAnBV,KAAKU,WACLV,KAAKU,UAAUyC,OAAS,4CAUxBnD,KAAKO,YACLP,KAAKO,WAAW4C,OAAS,QACFhD,IAAvBH,KAAKO,WAAW,kBAChBwB,EAAO/B,KAAKO,WAAW,GAAGW,KAEnBiB,OAAOC,eAAeC,MAAMC,aAAatC,KAAKO,WAAW,GAAGW,KAE5D,2CAULuC,EACqB,iBAAhBzD,KAAKL,OACR+D,KAAKC,MAAM3D,KAAKL,QAAQiE,QACxB5D,KAAKL,OAAOiE,oBACCzD,IAAfH,KAAKgD,OAAsC,OAAfhD,KAAKgD,OAAiC,KAAfhD,KAAKgD,OAC1DS,EAAKQ,KAAK,CACR/C,IAAKlB,KAAKgD,MACVkB,QAASlE,KAAKV,KACd4D,MAAqB,OAAdlD,KAAKV,KAAgB,UAAYU,KAAKV,KAC7C2D,KAAM,cAEHQ,uCAULzD,KAAKO,YACLP,KAAKO,WAAW,IACI,YAApBP,KAAKqD,kBAEErD,KAAKgE,YAAYhE,KAAKO,WAAW,GAAGW,KAAK0B,QAC9C,cACA,qDAYM5C,KAAKmE,IAAMnE,KAAKiB,oCAwE9BkB,OAAOiC,eAAeC,OAAOtF,EAAYuF,IAAKvF"}