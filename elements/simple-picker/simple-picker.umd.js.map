{"version":3,"file":"simple-picker.umd.js","sources":["lib/simple-picker-option.js","simple-picker.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@lrnwebcomponents/lrn-shared-styles/lrn-shared-styles.js\";\nexport { SimplePickerOption };\n/**\n * `simple-picker-option`\n * `a simple picker for options, icons, etc.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @see ../simple-picker.js\n * @see ../simple-color-picker-row.js\n */\nclass SimplePickerOption extends PolymerElement {\n  // render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"lrn-shared-styles\">\n        :host {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        :host .label {\n          padding: 2px 10px;\n          line-height: 100%;\n          @apply --simple-picker-option-label;\n        }\n      </style>\n      <iron-icon\n        aria-hidden=\"true\"\n        hidden$=\"[[_hideIcon(icon)]]\"\n        icon$=\"[[icon]]\"\n      ></iron-icon>\n      <div class$=\"[[_getSrOnly(hideOptionLabels)]]\">[[title]]</div>\n    `;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Is the option active?\n       */\n      active: {\n        name: \"active\",\n        type: \"Boolean\",\n        value: null,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Optional. If option is an iron icon, the iconset:name of the icon\n       */\n      icon: {\n        name: \"icon\",\n        type: \"String\",\n        value: null,\n        reflectToAttribute: false\n      },\n\n      /**\n       * Hide option labels? As color-picker or icon-picker, labels may be redundant.\n       * This option would move the labels off-screen so that only screen-readers will have them.\n       */\n      hideOptionLabels: {\n        name: \"hideOptionLabels\",\n        type: \"Boolean\",\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The id of the option\n       */\n      id: {\n        name: \"order\",\n        type: \"String\",\n        value: null,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Is the option selected?\n       */\n      selected: {\n        name: \"selected\",\n        type: \"Boolean\",\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The style of the option. (Required for accessibility.)\n       */\n      data: {\n        name: \"data\",\n        type: \"Object\",\n        value: null\n      },\n\n      /**\n       * The text of the option. (Required for accessibility.)\n       */\n      title: {\n        name: \"title\",\n        type: \"String\",\n        value: null,\n        reflectToAttribute: true\n      },\n\n      /**\n       * The value of the option.\n       */\n      value: {\n        name: \"label\",\n        type: \"String\",\n        value: null,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"simple-picker-option\";\n  }\n\n  /**\n   * If the option is not an iron-icon, hide the iron-icon.\n   *\n   * @param {string} the icon property\n   * @returns {boolean} whether or not the iron iron should be hidden\n   */\n  _hideIcon(icon) {\n    return this.icon === null;\n  }\n\n  /**\n   * On keyboard focus, fires an event to the picker so that active descendant can be set.\n   */\n  _handleFocus() {\n    this.dispatchEvent(new CustomEvent(\"option-focus\", { detail: this }));\n  }\n\n  /**\n   * On mouse hover, fires an event to the picker so that active descendant can be set.\n   */\n  _handleHover() {\n    this.dispatchEvent(new CustomEvent(\"option-focus\", { detail: this }));\n  }\n\n  /**\n   * determines if a label should visible on screen\n   *\n   * @param {boolean} hideOptionLabels property\n   * @returns {string} the sr-only (screenreader-only) class\n   */\n  _getSrOnly(hideOptionLabels) {\n    return hideOptionLabels === false ? \"label\" : \"label sr-only\";\n  }\n\n  /**\n   * Set event listeners\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    this.addEventListener(\"focus\", function(e) {\n      root._handleFocus();\n    });\n    this.addEventListener(\"mouseover\", function(e) {\n      root._handleHover();\n    });\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(SimplePickerOption.tag, SimplePickerOption);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lib/simple-picker-option.js\";\nexport { SimplePicker };\n/**\n * `simple-picker`\n * `a simple picker for options, icons, etc.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass SimplePicker extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: flex;\n  align-items: center;\n  position: relative;\n  --simple-picker-color: black;\n  font-size: var(--paper-input-container-label_-_font-size, var(--paper-font-subhead_-_font-size, inherit));\n  margin: 8px 0;\n  height: 42px;\n  @apply --simple-picker;\n}\n\n:host([disabled]) {\n  cursor: not-allowed;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host label {\n  padding-right: 5px;\n  color: var(--paper-input-container-label_-_color, var(--paper-input-container-color, var(--secondary-text-color, #000)));\n  @apply --simple-picker-label;\n}\n\n:host, \n:host #sample, \n:host .rows {\n  margin: 0;\n  padding: 0;\n}\n\n:host #listbox {\n  display: flex;\n  flex: 1 0 auto;\n}\n\n:host #sample {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px;\n  border-radius: 2px;\n  background-color: var(--simple-picker-background-color,#ddd);\n  border: 1px solid var(--simple-picker-border-color, var(--simple-picker-color));\n}\n\n:host #icon {\n  transform: rotate(-90deg);\n  transition: transform 0.25s;\n}\n\n:host([expanded]) #icon {\n  transform: rotate(0deg);\n  transition: transform 0.25s;\n}\n\n:host #collapse {\n  display: none;\n  width: 100%;\n  position: absolute;\n  top: 35px;\n  padding: 1px;\n  @apply --simple-picker-collapse;\n}\n\n:host([expanded]:not([disabled])) #collapse {\n  display: block;\n} \n\n:host .rows {\n  display: block;\n  position: absolute;\n  z-index: 1000;\n  outline: 1px solid var(--simple-picker-border-color, var(--simple-picker-color));\n  background-color: var(--simple-picker-background-color,#ddd);\n  box-shadow: 0px 0px 1px #888;\n  @apply --simple-picker-rows;\n}\n\n:host .row {\n  display: flex; \n  align-items: stretch;\n  justify-content: space-between;\n  @apply --simple-picker-row;\n}\n\n:host simple-picker-option {\n  z-index: 1;\n  flex: 1 1 auto;\n  max-height: unset;\n  min-height: var(--simple-picker-option-size, 24px);\n  min-width: var(--simple-picker-option-size, 24px);\n  line-height: var(--simple-picker-option-size, 24px);\n  color: var(--simple-picker-color);\n  background-color: var(--simple-picker-option-background-color, white);\n  outline: var(--simple-picker-option-outline, none);\n  transition: max-height 2s;\n  @apply --simple-picker-option;\n}\n\n:host #sample simple-picker-option {\n\n}\n\n:host simple-picker-option[selected] {\n  z-index: 50;\n  color: var(--simple-picker-color);\n  background-color: var(--simple-picker-selected-option-background-color, #e8e8e8);\n  outline: var(--simple-picker-selected-option-outline, none);\n}\n\n:host simple-picker-option[active] {\n  z-index: 100;\n  cursor: pointer;\n  color: var(--simple-picker-color);\n  background-color: var(--simple-picker-active-option-background-color, #aaddff);\n  outline: var(--simple-picker-active-option-outline, none);\n}\n\n:host #sample simple-picker-option {\n  color: var(--simple-picker-active-sample-color,  var(--simple-picker-color));\n  background-color: var(--simple-picker-sample-background-color, transparent);\n  border: none;\n}\n\n:host(:not([expanded])) #collapse simple-picker-option {\n  max-height: 0;\n  transition: max-height 1.5s;\n}\n\n@media screen and (max-width: 600px) {\n  :host {\n    position: static;\n  }\n  :host #collapse {\n    top: 0;\n    margin-top: 0;\n    position: relative;\n  } \n  :host .rows {\n    position: sticky;\n  }  \n}\n</style>\n<label for=\"listbox\" hidden$=\"[[!hasLabel]]\">[[label]]</label>\n<div id=\"listbox\"\n  aria-activedescendant$=\"[[__activeDesc]]\" \n  aria-labelledby$=\"[[ariaLabelledby]]\" \n  disabled$=\"[[disabled]]\"\n  role=\"listbox\" \n  tabindex=\"0\">\n  <div id=\"sample\">\n    <simple-picker-option \n      aria-hidden=\"true\" \n      hide-option-labels$=\"[[hideOptionLabels]]\"\n      icon$=\"[[__selectedOption.icon]]\"\n      style$=\"[[__selectedOption.style]]\" \n      title$=\"[[__selectedOption.alt]]\">\n    </simple-picker-option>\n    <span id=\"icon\"><iron-icon aria-hidden=\"true\" icon=\"arrow-drop-down\"></iron-icon></span>\n  </div>\n  <div id=\"collapse\">\n    <div class=\"rows\">\n      <template is=\"dom-repeat\" items=\"[[options]]\" as=\"row\" index-as=\"rownum\">\n        <div class=\"row\">\n          <template is=\"dom-repeat\" items=[[row]] as=\"option\" index-as=\"colnum\">\n            <simple-picker-option \n              active$=\"[[_isActive(__activeDesc,rownum,colnum)]]\"\n              aria-selected$=\"[[_isSelected(value,option.value)]]\"\n              data$=\"[[data]]\"\n              hide-option-labels$=\"[[hideOptionLabels]]\"\n              icon$=\"[[option.icon]]\"\n              id$=\"[[_getOptionId(rownum,colnum)]]\"\n              role=\"option\"\n              selected$=\"[[_isSelected(value,option.value)]]\"\n              on-option-focus=\"_handleOptionFocus\"\n              on-set-selected-option=\"_handleSetSelectedOption\"\n              style$=\"[[option.style]]\" \n              tabindex=\"-1\"\n              title$=\"[[option.alt]]\"\n              value$=\"[[option.value]]\">\n            </simple-picker-option>\n          </template>\n        </div>\n      </template>\n    </div>\n  </div>\n</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Optional. Sets the aria-labelledby attribute\n   */\n  \"ariaLabelledby\": {\n    \"name\": \"ariaLabelledby\",\n    \"type\": \"String\",\n    \"value\": null\n  },\n\n  /**\n   * Is the picker disabled?\n   */\n  \"disabled\": {\n    \"name\": \"disabled\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n\n  /**\n   * Is it expanded?\n   */\n  \"expanded\": {\n    \"name\": \"expanded\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n\n  /**\n   * Hide option labels? As color-picker or icon-picker, labels may be redundant.\n   * This option would move the labels off-screen so that only screen-readers will have them.\n   */\n  \"hideOptionLabels\": {\n    \"name\": \"hideOptionLabels\",\n    \"type\": \"Boolean\",\n    \"value\": false\n  },\n\n  /**\n   * Whether r not a label shoudl be added\n   */\n  \"hasLabel\": {\n    \"name\": \"label\",\n    \"type\": \"Boolean\",\n    \"computed\": \"_hasLabel(label)\"\n  },\n\n  /**\n   * Optional. The label for the picker input\n   */\n  \"label\": {\n    \"name\": \"label\",\n    \"type\": \"String\",\n    \"value\": null\n  },\n\n  /**\n   * An array of options for the picker, eg.: `\n[\n  {\n    \"icon\": \"editor:format-paint\",      //Optional. Used if the picker is used as an icon picker.\n    \"alt\": \"Blue\",                      //Required for accessibility. Alt text description of the choice.\n    \"style\": \"background-color: blue;\", //Optional. Used to set an option's style.\n    ...                                 //Optional. Any other properties that should be captured as part of the selected option's value\n  },...\n]`\n   */\n  \"options\": {\n    \"name\": \"options\",\n    \"type\": \"Array\",\n    \"value\": [[]]\n  },\n\n  /**\n   * position the swatches relative to the picker, where:\n   * `left` aligns the swatches to the picker's left edge\n   * `right` aligns the swatches to the picker's right edge\n   * `center` aligns the swatches to the picker's center\n  \"position\": {\n    \"name\": \"position\",\n    \"type\": \"Boolean\",\n    \"value\": \"left\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n   */\n\n  /**\n   * An string that stores the current value for the picker\n   */\n  \"value\": {\n    \"name\": \"value\",\n    \"type\": \"Object\",\n    \"value\": null,\n    \"notify\": true,\n    \"reflectToAttribute\": true\n  },\n\n  /**\n   * The aria-activedescendant attribute (active option's ID)\n   */\n  \"__activeDesc\": {\n    \"name\": \"__activeDesc\",\n    \"type\": \"String\",\n    \"value\": \"option-0-0\"\n  },\n\n  /**\n   * The selected option based on the value of the picker\n   */\n  \"__selectedOption\": {\n    \"name\": \"_setSelectedOption\",\n    \"type\": \"Object\",\n    \"computed\": \"_setSelectedOption(value)\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"simple-picker\";\n  }\n\n  /**\n   * returns the value of the selected option.\n   *\n   * @param {string} the selected option's id\n   * @returns {object} the selected option\n   */\n  _getOption(options, optionId) {\n    if (options !== undefined && optionId !== undefined && optionId !== null) {\n      let coords = optionId.split(\"-\");\n      return options[coords[1]][coords[2]];\n    }\n    return null;\n  }\n\n  /**\n   * returns a unique id for the option based on its row and column.\n   *\n   * @param {number} the row number\n   * @param {number} the column number\n   * @returns {string} a unique id\n   */\n  _getOptionId(rownum, colnum) {\n    return \"option-\" + rownum + \"-\" + colnum;\n  }\n\n  /**\n   * aligns collapse to picker\n   *\n   * @param {string} the position: left, right, center\n   * @return {string} css for aligning the collapse\n  _getPosition(position,width = 0) {\n    console.log(width);\n    if(position === \"right\"){\n      return \"left: \"+(0 - width);\n    } else if(position === \"center\"){\n      return \"left: \"+(0 - width/2);\n    } \n    return null;\n  }\n   */\n\n  /**\n   * sets a new active descendant and sets focus on it\n   *\n   * @param {number} the row number to be tested\n   * @param {number} the column number to be tested\n   */\n  _goToOption(rownum, colnum) {\n    let targetId = this._getOptionId(rownum, colnum),\n      target = this.shadowRoot.querySelector(\"#\" + targetId),\n      active = this.shadowRoot.querySelector(\"#\" + this.__activeDesc);\n    if (target !== null) {\n      target.tabindex = 0; //allow the item to be focusable.\n      target.focus();\n      active.tabindex = -1; //prevent tabbing between options.\n    }\n  }\n\n  /**\n   * handles listbox click event\n   */\n  _handleListboxClick(e) {\n    this._toggleListbox(!this.expanded);\n  }\n\n  /**\n   * handles listbox keyboard events\n   */\n  _handleListboxKeydown(e) {\n    let coords = this.__activeDesc.split(\"-\"),\n      rownum = parseInt(coords[1]),\n      colnum = parseInt(coords[2]);\n    if (e.keyCode === 32) {\n      //spacebar\n      e.preventDefault();\n      this._toggleListbox(!this.expanded);\n    } else if (this.expanded && [9, 35, 36, 38, 40].includes(e.keyCode)) {\n      e.preventDefault();\n      if (e.keyCode === 35) {\n        //end\n        let lastrow = this.options.length - 1,\n          lastcol = this.options[lastrow].length - 1;\n        this._goToOption(lastrow, lastcol); //move to last option\n      } else if (e.keyCode === 36) {\n        //home\n        this._goToOption(0, 0); //move to first option\n      } else if (e.keyCode === 38) {\n        //previous (up arrow)\n        if (colnum > 0) {\n          this._goToOption(rownum, colnum - 1); //move up to previous column\n        } else if (rownum > 0) {\n          this._goToOption(rownum - 1, this.options[rownum - 1].length - 1); //move up to end of previous row\n        }\n      } else if (e.keyCode === 40) {\n        //next (down arrow)\n        if (colnum < this.options[rownum].length - 1) {\n          //move down to next column\n          this._goToOption(rownum, colnum + 1);\n        } else if (rownum < this.options.length - 1) {\n          //move down to beginning of next row\n          this._goToOption(rownum + 1, [0]);\n        }\n      }\n    }\n  }\n\n  /**\n   * handles option focus event and sets the active descendant\n   */\n  _handleOptionFocus(e) {\n    this._setActiveOption(e.detail.id);\n  }\n\n  /**\n   * Determines if a label should be added\n   *\n   * @param {string} the label\n   * @returns {boolean} if there is a label\n   */\n  _hasLabel(label) {\n    return label !== undefined && label !== null && label.trim() !== \"\";\n  }\n\n  /**\n   * determines if an option is at a given row and column\n   *\n   * @param {string} an option's id\n   * @param {number} the row number to be tested\n   * @param {number} the column number to be tested\n   * @returns {boolean} whether or not the option is at the given row and column\n   */\n  _isActive(active, rownum, colnum) {\n    return active === this._getOptionId(rownum, colnum);\n  }\n\n  /**\n   * determines if an option is at a given row and column\n   *\n   * @param {string} an option's id\n   * @param {number} the row number to be tested\n   * @param {number} the column number to be tested\n   * @returns {boolean} whether or not the option is at the given row and column\n   */\n  _isSelected(value1, value2) {\n    return value1 === value2;\n  }\n\n  /**\n   * sets the  active descendant to a given option's id\n   *\n   * @param {string} the option id\n   */\n  _setActiveOption(id) {\n    this.__activeDesc = id;\n    this.dispatchEvent(new CustomEvent(\"option-focus\", { detail: this }));\n  }\n\n  /**\n   * sets the selected option to a given option's id\n   *\n   * @param {string} the option id\n   */\n  _setSelectedOption(value) {\n    let sel = null;\n    this.dispatchEvent(\n      new CustomEvent(\"change\", { bubbles: true, detail: this })\n    );\n    if (value !== null && this.options !== undefined && this.options !== null) {\n      for (var i = 0; i < this.options.length; i++) {\n        for (var j = 0; j < this.options[i].length; j++) {\n          if (this.options[i][j].value === value) {\n            this.__activeDesc = this.options[i][j].value;\n            sel = this.options[i][j];\n          }\n        }\n      }\n    }\n    return sel;\n  }\n\n  /**\n   * toggles the listbox\n   *\n   * @param {boolean} expand the listbox?\n   */\n  _toggleListbox(expanded) {\n    let active = this.shadowRoot.querySelector(\"#\" + this.__activeDesc);\n    this.expanded = expanded;\n    if (expanded) {\n      if (active !== null) active.focus();\n      this.dispatchEvent(new CustomEvent(\"expand\", { detail: this }));\n    } else {\n      if (active !== null) this.value = active.getAttribute(\"value\");\n      this.dispatchEvent(new CustomEvent(\"collapse\", { detail: this }));\n    }\n  }\n\n  /**\n   * Set event listeners\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    if (this.$.listbox !== undefined) {\n      this.$.listbox.addEventListener(\"click\", function(e) {\n        root._handleListboxClick(e);\n      });\n      this.$.listbox.addEventListener(\"keydown\", function(e) {\n        root._handleListboxKeydown(e);\n      });\n    }\n  }\n\n  /**\n   * sets the options for the picker\n   *\n   * @param {array} the nested array of options\n   */\n  setOptions(options) {\n    this.set(\"options\", [[]]);\n    this.set(\"options\", options);\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(SimplePicker.tag, SimplePicker);\n"],"names":["SimplePickerOption","PolymerElement","icon","this","dispatchEvent","CustomEvent","detail","hideOptionLabels","root","addEventListener","e","_handleFocus","_handleHover","html","active","name","type","value","reflectToAttribute","id","selected","data","title","window","customElements","define","tag","SimplePicker","options","optionId","undefined","coords","split","rownum","colnum","targetId","_getOptionId","target","shadowRoot","querySelector","__activeDesc","tabindex","focus","_toggleListbox","expanded","parseInt","keyCode","preventDefault","includes","lastrow","length","lastcol","_goToOption","_setActiveOption","label","trim","value1","value2","sel","bubbles","i","j","getAttribute","$","listbox","_handleListboxClick","_handleListboxKeydown","set"],"mappings":"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"}