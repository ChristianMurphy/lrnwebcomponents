{"version":3,"file":"lrn-button.umd.js","sources":["lrn-button.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\n\n/**\n * `lrn-button`\n * `Simple button wrapper with a few options`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass LrnButton extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>  :host {\n    display: block;\n    @apply --paper-font-common-base;\n    @apply --paper-button;\n    --lrnsys-button-height: 48px;\n  }\n\n  :host(.center) {\n    text-align: center;\n  }\n\n  a {\n    text-decoration: none;\n    display: block;\n    color: #000000;\n  }\n\n  paper-button {\n    transition: .3s;\n    margin: 0;\n    max-width: 50%;\n    height: inherit;\n    -webkit-justify-content: flex-start;\n    justify-content: flex-start;\n    align-items: center;\n    border-radius: unset;\n  }\n\n  paper-button iron-icon {\n    height: var(--lrnsys-button-height);\n    margin: 0 12px;\n  }\n\n  paper-button div.inner {\n    height: var(--lrnsys-button-height);\n    line-height: var(--lrnsys-button-height);\n    padding: 0 12px;\n  }\n\n  paper-button span.label {\n    height: var(--lrnsys-button-height);\n    line-height: var(--lrnsys-button-height);\n  }\n\n  .no-margin {\n    margin: 0 !important;\n  }\n\n  .no-right-padding {\n    padding-right: 0 !important;\n  }\n\n  .no-left-padding {\n    padding-left: 0 !important;\n  }\n\n  .center {\n    text-align: center;\n    margin: 0 auto;\n  }</style>\n<style include=\"materializecss-styles-colors\"></style>\n<a tabindex=\"-1\" id=\"lrnsys-button-link\" href$=\"[[showHref]]\" data-prefetch-hover$=\"[[prefetch]]\" target$=\"[[target]]\">\n  <paper-button id=\"button\" raised=\"[[raised]]\" class$=\"[[class]] [[color]] [[textColor]]\" disabled$=\"[[disabled]]\">\n    <div class$=\"inner [[innerClass]]\">\n      <iron-icon icon$=\"[[icon]]\" id=\"icon\" class$=\"[[iconClass]]\" hidden$=\"[[!icon]]\"></iron-icon>\n      <span class=\"label\" hidden$=\"[[!label]]\">\n        [[label]]\n      </span>\n      <slot></slot>\n    </div>\n  </paper-button>\n</a>\n<paper-tooltip for=\"lrnsys-button-link\" animation-delay=\"0\">[[alt]]</paper-tooltip>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Standard href pass down\n   */\n  \"href\": {\n    \"type\": String,\n    \"value\": \"#\"\n  },\n  /**\n   * What to display for the resource\n   */\n  \"showHref\": {\n    \"type\": String,\n    \"value\": false\n  },\n  /**\n   * If the button should be visually lifted off the UI.\n   */\n  \"raised\": {\n    \"type\": Boolean\n  },\n  /**\n   * Label to place in the text area\n   */\n  \"label\": {\n    \"type\": String,\n    \"value\": \"\"\n  },\n  \"target\": {\n    \"type\": String,\n    \"value\": \"\"\n  },\n  /**\n   * iron-icon to use (with iconset if needed)\n   */\n  \"icon\": {\n    \"type\": String,\n    \"value\": false\n  },\n  /**\n   * Classes to add / subtract based on the item being hovered.\n   */\n  \"hoverClass\": {\n    \"type\": String\n  },\n  /**\n   * Icon class in the event you want it to look different from the text.\n   */\n  \"iconClass\": {\n    \"type\": String\n  },\n  /**\n   * Inner container classes.\n   */\n  \"innerClass\": {\n    \"type\": String\n  },\n  /**\n   * materializeCSS color class\n   */\n  \"color\": {\n    \"type\": String\n  },\n  /**\n   * materializeCSS color class for text\n   */\n  \"textColor\": {\n    \"type\": String\n  },\n  /**\n   * Allow for prefetch data on hover\n   */\n  \"prefetch\": {\n    \"type\": String\n  },\n  /**\n   * Alt via tooltip.\n   */\n  \"alt\": {\n    \"type\": String\n  },\n  /**\n   * Disabled state.\n   */\n  \"disabled\": {\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Tracks if focus state is applied\n   */\n  \"focusState\": {\n    \"type\": Boolean,\n    \"value\": false\n  }\n}\n;\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"lrn-button\";\n  }\n  constructor() {\n    super();\n    import(\"@polymer/paper-button/paper-button.js\");\n    import(\"@polymer/paper-tooltip/paper-tooltip.js\");\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\"mousedown\", this.tapEventOn);\n      this.addEventListener(\"mouseover\", this.tapEventOn);\n      this.addEventListener(\"mouseout\", this.tapEventOff);\n      this.$.button.addEventListener(\"focused-changed\", this.focusToggle);\n    });\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    this.removeEventListener(\"mousedown\", this.tapEventOn);\n    this.removeEventListener(\"mouseover\", this.tapEventOn);\n    this.removeEventListener(\"mouseout\", this.tapEventOff);\n    this.$.button.removeEventListener(\"focused-changed\", this.focusToggle);\n    super.disconnectedCallback();\n  }\n  /**\n   * Go to the href if the button isn't disabled\n   */\n  ready() {\n    super.ready();\n    if (!this.disabled) {\n      this.showHref = this.href;\n    }\n  }\n\n  /**\n   * Class processing on un-tap / hover\n   */\n  tapEventOn(e) {\n    let root = this;\n    if (typeof root.hoverClass !== typeof undefined && !root.disabled) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.button.classList.add(item);\n          if (item.indexOf(\"-\") != -1) {\n            root.$.icon.classList.add(item);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Undo class processing on un-tap / hover\n   */\n  tapEventOff(e) {\n    let root = this;\n    if (typeof root.hoverClass !== typeof undefined && !root.disabled) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.button.classList.remove(item);\n          if (item.indexOf(\"-\") != -1) {\n            root.$.icon.classList.remove(item);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle(e) {\n    let root = this;\n    this.dispatchEvent(\n      new CustomEvent(\"focus-changed\", {\n        bubbles: true,\n        composed: true,\n        detail: { focus: root.focusState }\n      })\n    );\n    // see if it has hover classes\n    if (typeof root.hoverClass !== typeof undefined && !root.disabled) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          if (root.focusState) {\n            root.$.button.classList.add(item);\n            if (item.indexOf(\"-\") != -1) {\n              root.$.icon.classList.add(item);\n            }\n          } else {\n            root.$.button.classList.remove(item);\n            if (item.indexOf(\"-\") != -1) {\n              root.$.icon.classList.remove(item);\n            }\n          }\n        }\n      });\n    }\n    root.focusState = !root.focusState;\n  }\n}\nwindow.customElements.define(LrnButton.tag, LrnButton);\nexport { LrnButton };\n"],"names":["LrnButton","PolymerElement","html","String","Boolean","afterNextRender","this","addEventListener","tapEventOn","tapEventOff","$","button","focusToggle","removeEventListener","disabled","showHref","href","e","root","_typeof","hoverClass","split","forEach","item","index","classList","add","indexOf","icon","remove","dispatchEvent","CustomEvent","bubbles","composed","detail","focus","focusState","window","customElements","define","tag"],"mappings":"swHAqBMA,8KA6LK,gDACA,yRA9LaC,kEAIbC,qDA8EA,MAID,MACEC,aACC,cAKC,MACFA,cACC,UAKD,MACAC,eAKD,MACCD,aACC,WAED,MACAA,aACC,SAKH,MACEA,cACC,cAKG,MACJA,kBAKG,MACHA,mBAKI,MACJA,cAKD,MACCA,kBAKG,MACHA,iBAKE,MACFA,YAKH,MACGA,iBAKE,MACFC,eACC,cAKG,MACJA,eACC,sCAUF,sHAYPC,kBAAgBC,KAAM,gBACfC,iBAAiB,YAAaD,KAAKE,iBACnCD,iBAAiB,YAAaD,KAAKE,iBACnCD,iBAAiB,WAAYD,KAAKG,kBAClCC,EAAEC,OAAOJ,iBAAiB,kBAAmBD,KAAKM,mEAOpDC,oBAAoB,YAAaP,KAAKE,iBACtCK,oBAAoB,YAAaP,KAAKE,iBACtCK,oBAAoB,WAAYP,KAAKG,kBACrCC,EAAEC,OAAOE,oBAAoB,kBAAmBP,KAAKM,gJAQrDN,KAAKQ,gBACHC,SAAWT,KAAKU,yCAOdC,OACLC,EAAOZ,mBACPa,EAAOD,EAAKE,aAAoCF,EAAKJ,UAEzCI,EAAKE,WAAWC,MAAM,KAE5BC,QAAQ,SAASC,EAAMC,GACjB,IAARD,IACFL,EAAKR,EAAEC,OAAOc,UAAUC,IAAIH,IACF,GAAtBA,EAAKI,QAAQ,MACfT,EAAKR,EAAEkB,KAAKH,UAAUC,IAAIH,0CAUxBN,OACNC,EAAOZ,mBACPa,EAAOD,EAAKE,aAAoCF,EAAKJ,UAEzCI,EAAKE,WAAWC,MAAM,KAE5BC,QAAQ,SAASC,EAAMC,GACjB,IAARD,IACFL,EAAKR,EAAEC,OAAOc,UAAUI,OAAON,IACL,GAAtBA,EAAKI,QAAQ,MACfT,EAAKR,EAAEkB,KAAKH,UAAUI,OAAON,0CAU3BN,OACNC,EAAOZ,WACNwB,cACH,IAAIC,YAAY,gBAAiB,CAC/BC,SAAS,EACTC,UAAU,EACVC,OAAQ,CAAEC,MAAOjB,EAAKkB,6BAItBjB,EAAOD,EAAKE,aAAoCF,EAAKJ,WAEzCI,EAAKE,WAAWC,MAAM,KAE5BC,QAAQ,SAASC,EAAMC,GACjB,IAARD,IACEL,EAAKkB,YACPlB,EAAKR,EAAEC,OAAOc,UAAUC,IAAIH,IACF,GAAtBA,EAAKI,QAAQ,MACfT,EAAKR,EAAEkB,KAAKH,UAAUC,IAAIH,KAG5BL,EAAKR,EAAEC,OAAOc,UAAUI,OAAON,IACL,GAAtBA,EAAKI,QAAQ,MACfT,EAAKR,EAAEkB,KAAKH,UAAUI,OAAON,OAMvCL,EAAKkB,YAAclB,EAAKkB,oBAG5BC,OAAOC,eAAeC,OAAOvC,EAAUwC,IAAKxC"}