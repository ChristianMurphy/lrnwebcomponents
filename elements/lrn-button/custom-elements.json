{
  "version": 2,
  "tags": [
    {
      "name": "lrn-button",
      "description": "`lrn-button`\n`Simple button wrapper with a few options`",
      "jsDoc": "/**\n * `lrn-button`\n * `Simple button wrapper with a few options`\n * @demo demo/index.html\n * @customElement lrn-button\n */",
      "attributes": [],
      "properties": [
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "focusState",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "focus-changed"
        }
      ],
      "slots": []
    },
    {
      "name": "lrn-button",
      "description": "`lrn-button`\n`Simple button wrapper with a few options`",
      "jsDoc": "/**\n * `lrn-button`\n * `Simple button wrapper with a few options`\n * @demo demo/index.html\n * @customElement lrn-button\n */",
      "attributes": [
        {
          "name": "show-href",
          "description": "What to display for the resource",
          "jsDoc": "/**\n       * What to display for the resource\n       */",
          "type": "string"
        },
        {
          "name": "raised",
          "description": "If the button should be visually lifted off the UI.",
          "jsDoc": "/**\n       * If the button should be visually lifted off the UI.\n       */",
          "type": "boolean"
        },
        {
          "name": "icon",
          "description": "iron-icon to use (with iconset if needed)",
          "jsDoc": "/**\n       * iron-icon to use (with iconset if needed)\n       */",
          "type": "string"
        },
        {
          "name": "hover-class",
          "description": "Classes to add / subtract based on the item being hovered.",
          "jsDoc": "/**\n       * Classes to add / subtract based on the item being hovered.\n       */",
          "type": "string"
        },
        {
          "name": "icon-class",
          "description": "Icon class in the event you want it to look different from the text.",
          "jsDoc": "/**\n       * Icon class in the event you want it to look different from the text.\n       */",
          "type": "string"
        },
        {
          "name": "inner-class",
          "description": "Inner container classes.",
          "jsDoc": "/**\n       * Inner container classes.\n       */",
          "type": "string"
        },
        {
          "name": "color",
          "description": "materializeCSS color class",
          "jsDoc": "/**\n       * materializeCSS color class\n       */",
          "type": "string"
        },
        {
          "name": "text-color",
          "description": "materializeCSS color class for text",
          "jsDoc": "/**\n       * materializeCSS color class for text\n       */",
          "type": "string"
        },
        {
          "name": "prefetch",
          "description": "Allow for prefetch data on hover",
          "jsDoc": "/**\n       * Allow for prefetch data on hover\n       */",
          "type": "string"
        },
        {
          "name": "alt",
          "description": "Alt via tooltip.",
          "jsDoc": "/**\n       * Alt via tooltip.\n       */",
          "type": "string"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "focus-state",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "showHref",
          "description": "What to display for the resource",
          "jsDoc": "/**\n       * What to display for the resource\n       */",
          "type": "string"
        },
        {
          "name": "raised",
          "description": "If the button should be visually lifted off the UI.",
          "jsDoc": "/**\n       * If the button should be visually lifted off the UI.\n       */",
          "type": "boolean"
        },
        {
          "name": "icon",
          "description": "iron-icon to use (with iconset if needed)",
          "jsDoc": "/**\n       * iron-icon to use (with iconset if needed)\n       */",
          "type": "string"
        },
        {
          "name": "hoverClass",
          "description": "Classes to add / subtract based on the item being hovered.",
          "jsDoc": "/**\n       * Classes to add / subtract based on the item being hovered.\n       */",
          "type": "string"
        },
        {
          "name": "iconClass",
          "description": "Icon class in the event you want it to look different from the text.",
          "jsDoc": "/**\n       * Icon class in the event you want it to look different from the text.\n       */",
          "type": "string"
        },
        {
          "name": "innerClass",
          "description": "Inner container classes.",
          "jsDoc": "/**\n       * Inner container classes.\n       */",
          "type": "string"
        },
        {
          "name": "color",
          "description": "materializeCSS color class",
          "jsDoc": "/**\n       * materializeCSS color class\n       */",
          "type": "string"
        },
        {
          "name": "textColor",
          "description": "materializeCSS color class for text",
          "jsDoc": "/**\n       * materializeCSS color class for text\n       */",
          "type": "string"
        },
        {
          "name": "prefetch",
          "description": "Allow for prefetch data on hover",
          "jsDoc": "/**\n       * Allow for prefetch data on hover\n       */",
          "type": "string"
        },
        {
          "name": "alt",
          "description": "Alt via tooltip.",
          "jsDoc": "/**\n       * Alt via tooltip.\n       */",
          "type": "string"
        },
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "focusState",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "focus-changed"
        }
      ],
      "slots": []
    },
    {
      "name": "lrn-button",
      "description": "`lrn-button`\n`Simple button wrapper with a few options`",
      "jsDoc": "/**\n * `lrn-button`\n * `Simple button wrapper with a few options`\n * @demo demo/index.html\n * @customElement lrn-button\n */",
      "attributes": [],
      "properties": [
        {
          "name": "href",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "focusState",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "focus-changed"
        }
      ],
      "slots": []
    }
  ]
}
