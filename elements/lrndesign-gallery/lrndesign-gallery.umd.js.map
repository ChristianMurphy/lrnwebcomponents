{"version":3,"file":"lrndesign-gallery.umd.js","sources":["lib/lrndesign-gallery-shared-styles.js","lib/lrndesign-gallery-behaviors.js","lib/lrndesign-gallery-details.js","lib/lrndesign-gallery-zoom.js","lib/lrndesign-gallery-carousel.js","lib/lrndesign-gallery-grid.js","lrndesign-gallery.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `lrndesign-gallery-shared-styles`\n * @customElement lrndesign-gallery-shared-styles\n * `a shared set of styles for lrndesign-gallery`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @pseudoElement\n * @polymer\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout.js\";\nconst styleElement = document.createElement(\"dom-module\");\nconst css = html`\n  <style>\n    :host {\n      display: block;\n      --lrndesign-gallery-color: var(--simple-colors-default-theme-grey-12);\n      --lrndesign-gallery-background-color: var(\n        --simple-colors-default-theme-grey-2\n      );\n      --lrndesign-gallery-focus-color: var(\n        --simple-colors-default-theme-accent-9\n      );\n      --lrndesign-gallery-border-color: var(\n        --simple-colors-default-theme-grey-4\n      );\n      --lrndesign-gallery-thumbnail-outline: 1px solid\n        var(--simple-colors-default-theme-grey-12);\n\n      --lrndesign-gallery-dialog-color: var(\n        --simple-colors-default-theme-grey-12\n      );\n      --lrndesign-gallery-dialog-background-color: var(\n        --simple-colors-default-theme-grey-1\n      );\n      --lrndesign-gallery-dialog-titlebar-color: var(\n        --simple-colors-default-theme-grey-1\n      );\n      --lrndesign-gallery-dialog-titlebar-background-color: var(\n        --simple-colors-default-theme-accent-9\n      );\n      --lrndesign-gallery-dialog-header-color: var(\n        --simple-colors-default-theme-grey-12\n      );\n      --lrndesign-gallery-dialog-header-background-color: var(\n        --simple-colors-default-theme-grey-2\n      );\n      --lrndesign-gallery-carousel-next-bg: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0.7) 70%,\n        rgba(255, 255, 255, 0.9) 90%\n      );\n      --lrndesign-gallery-carousel-prev-bg: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0.9) 10%,\n        rgba(255, 255, 255, 0.7) 30%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0) 100%\n      );\n      --lrndesign-gallery-thumbnail-image: {\n        display: block;\n        border-radius: 3px;\n        border: 2px solid transparent;\n      }\n      --lrndesign-gallery-thumbnail-image-focus: {\n        opacity: 0.7;\n        border: 2px solid var(--lrndesign-gallery-focus-color);\n      }\n      --lrndesign-gallery-thumbnail-image-selected: {\n        opacity: 0.5;\n        cursor: default;\n      }\n    }\n    :host([dark]) {\n      --lrndesign-gallery-border-color: var(\n        --simple-colors-default-theme-grey-1\n      );\n      --lrndesign-gallery-carousel-next-bg: linear-gradient(\n        to right,\n        rgba(0, 0, 0, 0) 0%,\n        rgba(0, 0, 0, 0.5) 50%,\n        rgba(0, 0, 0, 0.7) 70%,\n        rgba(0, 0, 0, 0.9) 90%\n      );\n      --lrndesign-gallery-carousel-prev-bg: linear-gradient(\n        to right,\n        rgba(0, 0, 0, 0.9) 10%,\n        rgba(0, 0, 0, 0.7) 30%,\n        rgba(0, 0, 0, 0.5) 50%,\n        rgba(0, 0, 0, 0) 100%\n      );\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    :host .sr-only {\n      position: absolute;\n      left: -999999;\n      height: 0;\n      width: 0;\n      overflow: hidden;\n    }\n    :host .gallerythumb {\n      min-width: unset;\n      max-width: 100%;\n      padding: 0;\n      margin: 0;\n      display: inline-block;\n      transform: none !important;\n      position: static !important;\n      cursor: pointer;\n    }\n    :host .gallerythumb iron-image {\n      @apply --lrndesign-gallery-thumbnail-image;\n    }\n    :host .gallerythumb:focus iron-image,\n    :host .gallerythumb:hover iron-image {\n      @apply --lrndesign-gallery-thumbnail-image-focus;\n    }\n    :host lrndesign-gallery-zoom iron-icon {\n      width: 24px;\n      height: 24px;\n      opacity: 0.5;\n      border-radius: 3px;\n      color: var(--lrndesign-gallery-color);\n      background-color: var(--lrndesign-gallery-dialog-background-color);\n      transition: opacity 0.5s;\n    }\n    :host lrndesign-gallery-zoom:focus iron-icon,\n    :host lrndesign-gallery-zoom:hover iron-icon {\n      opacity: 1;\n    }\n    :host #galleryprint {\n      display: none;\n    }\n    @media print {\n      :host #galleryscreen {\n        display: none;\n      }\n      :host #galleryprint {\n        display: block;\n      }\n      :host #galleryprint section {\n        margin-top: 15px;\n        margin-bottom: 15px;\n      }\n      :host #galleryprint .print-image {\n        max-width: 400px;\n        max-height: 400px;\n        display: block;\n        border: 1px solid #ddd;\n        page-break-inside: avoid;\n      }\n    }\n  </style>\n`;\nstyleElement.appendChild(css);\n\nstyleElement.register(\"lrndesign-gallery-shared-styles\");\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColorsPolymer } from \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\nimport { ResponsiveUtility } from \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\nimport \"@polymer/iron-image/iron-image.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./lrndesign-gallery-shared-styles.js\";\n\n/**\n * `lerndesign-gallery-behaviors`\n * @customElement lerndesign-gallery-behaviors\n * `A set of properties for lerndesign-gallery components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends SimpleColorsPolymer\n\n * @polymer\n */\nclass LrndesignGalleryBehaviors extends SimpleColorsPolymer {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"lrndesign-gallery-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * a named anchor for the gallery\n       */\n      anchorData: {\n        type: Object,\n        computed: \"_getAnchorData()\"\n      },\n      /**\n       * aspect ratio of media\n       */\n      aspectRatio: {\n        type: Number,\n        value: \"1.33333333\"\n      },\n      /**\n       * size for responsive CSS\n       */\n      extraWide: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * gallery's unique id\n       */\n      galleryId: {\n        type: String,\n        value: null\n      },\n      /**\n       * size for responsive CSS\n       */\n      grid: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * array of carousel/grid items\n       */\n      items: {\n        type: Array,\n        computed: \"_itemsLoaded(sources,sizing)\"\n      },\n      /*\n       * parent size for responsive styling\n       */\n      responsiveSize: {\n        type: String,\n        value: \"xs\",\n        reflectToAttribute: true\n      },\n      /*\n       * data for the selected item\n       */\n      selected: {\n        type: Object,\n        value: {},\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * default sizing: fit screen by cropping (cover)\n       * or with letterboxing (contain)\n       */\n      sizing: {\n        type: String,\n        value: \"cover\"\n      },\n      /**\n       * array of carousel/grid items\n       */\n      sources: {\n        type: Array,\n        value: [],\n        reflectToAttribute: false\n      },\n      /**\n       * gallery's title\n       */\n      title: {\n        type: String,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * gets aspect ratio of an image and\n   * determine if aspect ratio is extra wide\n   *\n   * @param {array}\n   */\n  _getAnchorData() {\n    let temp =\n        window.location.hash !== null && window.location.hash !== \"\"\n          ? window.location.hash.replace(\"#\", \"\").split(\"---\")\n          : [],\n      anchorGallery = temp.length > 0 ? temp[0] : -1,\n      selectedItemId = temp.length > 1 ? temp[1] : -1,\n      selectedItemIndex =\n        this.sources !== null\n          ? this.sources.findIndex(i => i.id === selectedItemId)\n          : 1,\n      selectedGallery = anchorGallery === this.galleryId,\n      zoom = scroll && temp.length > 2 && temp[2] === \"zoom\";\n    return {\n      selectedItemId: selectedItemId,\n      selectedItemIndex: selectedItemIndex > 0 ? selectedItemIndex : 0,\n      selectedGallery: selectedGallery,\n      zoom: zoom\n    };\n  }\n\n  /**\n   * get data for an item\n   *\n   * @param {object} a gallery item\n   * @param {number} the index of the item\n   * @returns {object} the reformatted gallery item\n   */\n  _getItemData(item, index, length) {\n    if (this.galleryId === null)\n      this.galleryId = \"gallery-\" + this._generateUUID();\n    let anchorData = this._getAnchorData(),\n      temp = {};\n    temp.details = item.details;\n    temp.index = index;\n    temp.id = this._selfOrDefault(item.id, this.galleryId + \"-item-\" + index);\n    temp.src = item.src;\n    temp.large = this._selfOrDefault(item.large, temp.src);\n    temp.thumbnail = this._selfOrDefault(item.thumbnail, temp.src);\n    temp.xofy = parseInt(index + 1) + \" of \" + length;\n    temp.next = index + 1 < length ? index + 1 : -1;\n    temp.prev = index - 1 > -1 ? index - 1 : -1;\n    temp.sizing = this._selfOrDefault(item.sizing, this.sizing);\n    temp.title = item.title;\n    temp.tooltip = this._selfOrDefault(\n      temp.title,\n      \"Full-Sized Image\",\n      \" (Full-Sized)\"\n    );\n    temp.heading = this._selfOrDefault(\n      temp.title,\n      \"Full-Sized Image\",\n      \" (Full-Sized)\"\n    );\n    temp.zoom = anchorData.zoom && anchorData.selectedItemId === temp.id;\n    temp.scroll =\n      anchorData.selectedGallery && anchorData.selectedItemId === temp.id;\n    temp.tooltip = this._selfOrDefault(item.title, \"Zoom In\", \" Zoom\");\n    if (anchorData.selectedItemIndex === index) {\n      this.set(\"selected\", temp);\n    }\n    return temp;\n  }\n\n  /**\n   * gets parent node's offset in light DOM\n   *\n   * @param {object} the node\n   * @returns {number} the parent node's offset in pixels\n   */\n  _getParentOffset(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent.offsetTop;\n  }\n\n  /**\n   * tallies the offsets (item and parent) and scrolls to the item\n   *\n   * @param {array} an array of offsets\n   */\n  _scrollIntoView(offsets = [0]) {\n    window.scrollTo({\n      top: offsets.reduce((total, num) => {\n        return total + num;\n      }),\n      behavior: \"smooth\"\n    });\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _isAttrSet(attr = null) {\n    return attr !== null;\n  }\n\n  /**\n   * sets selected attribute of thumbnail\n   *\n   * @param {object} the selected item\n   * @param {object} the current item\n   * @returns {boolean} whether current item is selected\n   */\n  _isSelected(selected = {}, item = {}) {\n    return selected.id === item.id;\n  }\n\n  /**\n   * adds additional properties to gallery\n   *\n   * @param {array} array of sources\n   * @param {sizing} default sizing for the item\n   * @returns {array} formatted array of items\n   */\n  _itemsLoaded(sources, sizing) {\n    let root = this,\n      img = new Image(),\n      temp = [];\n    this.set(\"items\", []);\n    if (this.galleryId === null) this.id = \"gallery-\" + this._generateUUID();\n    if (sources !== undefined && sources !== null && sources.length > 0) {\n      this._setAspectProperties(sources[0].src);\n      for (var i in sources) {\n        temp[i] = this._getItemData(sources[i], parseInt(i), sources.length);\n      }\n    }\n    return temp;\n  }\n\n  /**\n   * replaces an undefined value\n   *\n   * @param {object} the value check\n   * @param {object} the default value\n   * @param {object} the default value\n   * @returns {object} the updated value\n   */\n  _selfOrDefault(val1 = null, val2 = false, append = null) {\n    let val3 = val2;\n    if (val1 !== undefined && val1 !== null) {\n      if (append !== null) {\n        val3 = val1 + append;\n      } else {\n        val3 = val1;\n      }\n    }\n    return val3;\n  }\n\n  /**\n   * gets aspect ratio of an image and\n   * determine if aspect ratio is extra wide\n   *\n   * @param {array}\n   */\n  _setAspectProperties(imgSrc) {\n    if (imgSrc !== undefined && imgSrc !== null) {\n      let img = new Image();\n      img.src = imgSrc;\n      this.aspectRatio =\n        img.naturalWidth > 0 && img.naturalHeight > 0\n          ? img.naturalWidth / img.naturalHeight\n          : 1.33333333;\n      this.extraWide = this.aspectRatio > 2;\n    }\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr = null, val = false) {\n    return attr === val;\n  }\n\n  /**\n   * Generate a UUID\n   */\n  _generateUUID() {\n    return \"ss-s-s-s-sss\".replace(/s/g, this._uuidPart);\n  }\n\n  _uuidPart() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n}\nwindow.customElements.define(\n  LrndesignGalleryBehaviors.tag,\n  LrndesignGalleryBehaviors\n);\nexport { LrndesignGalleryBehaviors };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**\n * `lrndesign-gallery-details`\n * `An element that renders the print view of a gallery item.`\n *\n * @microcopy - language worth noting:```\n<lrndesign-gallery-details \n  details=\"<strong>HTML MARKUP HERE</strong>\"       //required, an array of item data\n</lrndesign-gallery-details>```\n *\n * @customElement lrndesign-gallery-details\n */\nclass LrndesignGalleryDetails extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n      `\n    ];\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"lrndesign-gallery-details\";\n  }\n  // render function\n  render() {\n    return html`\n      <div id=\"details\"></div>\n    `;\n  }\n  constructor() {\n    super();\n    this.details = null;\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"details\") {\n        this._detailsChanged(this[propName]);\n      }\n    });\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * image's details in as a string of HTML\n       */\n      details: {\n        type: String\n      }\n    };\n  }\n  /**\n   * updates the details\n   */\n  _detailsChanged(newValue) {\n    if (this.shadowRoot) {\n      this.shadowRoot.querySelector(\"#details\").innerHTML = newValue;\n    }\n  }\n}\nwindow.customElements.define(\n  LrndesignGalleryDetails.tag,\n  LrndesignGalleryDetails\n);\nexport { LrndesignGalleryDetails };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@lrnwebcomponents/simple-modal/lib/simple-modal-template.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/img-pan-zoom/img-pan-zoom.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n/**\n * `lrndesign-gallery-zoom`\n * @customElement lrndesign-gallery-zoom\n * `An element that renders the zoom feature for the gallery.`\n *\n * @microcopy - language worth noting:```\n<lrndesign-gallery-zoom \n  details=\"Text details about the image.\" //optional text about the image\n  heading$=\"Image title\"                  //required, image dialog title\n  item-id=\"0\"                             //required, index of the item to view\n  src$=\"[[item.large]]\"                   //required, full-sized image\n  tooltip$=\"[[item.tooltip]]\"             //required, tooltip text\n  zoom-alt$=\"[[item.alt]]\"                //required, alt text for the image\n  tooltip=\"ZOOM\"                       \n</lrndesign-gallery-zoom>```\n *\n * CSS Variables: ```\n--lrndesign-gallery-dialog-color                        //text color of dialog\n--lrndesign-gallery-dialog-background-color             //background-color of dialog\n--lrndesign-gallery-dialog-titlebar-color               //text color of dialog titlebar\n--lrndesign-gallery-dialog-titlebar-background-color    //background-color of dialog titlebar\n--lrndesign-gallery-dialog-header-color                 //text color of dialog header\n--lrndesign-gallery-dialog-header-background-color      //background-color of dialog header```\n * \n\n * @polymer\n */\nclass LrndesignGalleryZoom extends PolymerElement {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"lrndesign-gallery-zoom\";\n  }\n\n  //get gallery behaviors\n  static get behaviors() {\n    return [LrndesignGalleryBehaviors];\n  }\n\n  // render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        :host paper-button {\n          width: 100%;\n        }\n        simple-modal-template[modal-id=\"zoomdialog\"] {\n          --simple-modal-width: 75vw;\n          --simple-modal-height: 75vh;\n          --simple-modal-titlebar-color: var(\n            --lrndesign-gallery-dialog-titlebar-color\n          );\n          --simple-modal-titlebar-background: var(\n            --lrndesign-gallery-dialog-titlebar-background-color\n          );\n          --simple-modal-header-color: var(\n            --lrndesign-gallery-dialog-header-color\n          );\n          --simple-modal-header-background: var(\n            --lrndesign-gallery-dialog-header-background-color\n          );\n          --simple-modal-content-container-color: var(\n            --lrndesign-gallery-dialog-color\n          );\n          --simple-modal-content-container-background: var(\n            --lrndesign-gallery-dialog-background-color\n          );\n        }\n        #zoombtn {\n          padding: 0px;\n          margin: 0;\n          min-width: unset;\n        }\n      </style>\n      <paper-button\n        id=\"zoombtn\"\n        label$=\"[[tooltip]]\"\n        title=\"\"\n        controls=\"zoomdialog\"\n      >\n        <slot></slot>\n      </paper-button>\n      <paper-tooltip for=\"zoombtn\" position=\"right\">[[tooltip]]</paper-tooltip>\n      <simple-modal-template\n        id=\"zoomtpl\"\n        modal-id=\"zoomdialog\"\n        title$=\"[[heading]]\"\n      >\n        <div\n          id=\"details\"\n          slot=\"header\"\n          hidden$=\"[[!_isAttrSet(details)]]\"\n        ></div>\n        <div slot=\"content\" hidden$=\"[[!_isAttrSet(src)]]\">\n          <img-pan-zoom\n            id=\"img\"\n            alt$=\"[[zoomAlt]]\"\n            src$=\"[[src]]\"\n            max-zoom-pixel-ratio=\"1.5\"\n            min-zoom-image-ratio=\"0.5\"\n            zoom-per-click=\"1.2\"\n            zoom-per-scroll=\"0.6\"\n          >\n          </img-pan-zoom>\n          <div>\n            Swipe, use a mouse or use the +/- and arrow keys to zoom and pan the\n            image above.\n          </div>\n        </div>\n      </simple-modal-template>\n    `;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * optional: details for zooming\n       */\n      details: {\n        type: String,\n        value: null,\n        observer: \"_detailsChanged\"\n      },\n      /**\n       * heading for the zoom modal\n       */\n      heading: {\n        type: String,\n        value: \"Image Zoom\"\n      },\n      /**\n       * heading for the zoom modal\n       */\n      itemId: {\n        type: String,\n        value: null\n        //observer: \"_itemChanged\"\n      },\n      /**\n       * The zoom modal\n       */\n      modal: {\n        type: Object,\n        value: null\n      },\n      /**\n       * scrolled to by default (for grid)?\n       */\n      scrolled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Image source.\n       */\n      src: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * tooltip for the zoom button\n       */\n      tooltip: {\n        type: String,\n        value: \"Zoom In\"\n      },\n      /**\n       * gallery item's alt text\n       */\n      zoomAlt: {\n        type: String,\n        value: null\n      },\n      /**\n       * zoomed by default?\n       */\n      zoomed: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is ready\n   */\n  ready() {\n    super.ready();\n    this._detailsChanged();\n    this.shadowRoot\n      .querySelector(\"#zoomtpl\")\n      .associateEvents(this.shadowRoot.querySelector(\"#zoombtn\"));\n    if (this.scrolled) {\n      this.dispatchEvent(new CustomEvent(\"gallery-scroll\"));\n      if (!this.zoomed) this.shadowRoot.querySelector(\"#zoombtn\").focus();\n    }\n    if (this.zoomed) {\n      this.zoom();\n    }\n  }\n\n  /**\n   * opens the modal\n   */\n  zoom() {\n    let root = this;\n    root.shadowRoot\n      .querySelector(\"#zoombtn\")\n      .dispatchEvent(new CustomEvent(\"gallery-zoom\", { detail: { root } }));\n  }\n\n  /**\n   * updates the details.\n   */\n  _detailsChanged(e) {\n    this.shadowRoot.querySelector(\"#details\").innerHTML = this.details;\n  }\n\n  /**\n   * returns true if the given attribute is not null\n   *\n   * @param {string} the attribute to test\n   * @returns {boolean} if there is a non-null value for the attribute\n   */\n  _isAttrSet(attr = null) {\n    return attr !== null && attr !== undefined;\n  }\n}\nwindow.customElements.define(LrndesignGalleryZoom.tag, LrndesignGalleryZoom);\nexport { LrndesignGalleryZoom };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { LrndesignGalleryBehaviors } from \"./lrndesign-gallery-behaviors.js\";\nimport \"./lrndesign-gallery-details.js\";\nimport \"./lrndesign-gallery-zoom.js\";\n\n/**\n * `lrndesign-gallery-carousel`\n * @customElement lrndesign-gallery-carousel\n * `An element that renders a collection of gallery items into a carousel or a single media item into a layout.`\n *\n * @microcopy - language worth noting:```\n <lrndesign-gallery-carousel \n  accent-color=\"grey\"               //optional, the accent color from simple-colors; default is grey\n  dark                              //optional, if true, gallery will use the simple-colors dark theme; default is false (fixed-theme)\n  id=\"mygallery1\"                   //optional, a unique id for the gallery; if true, you can use the id in anchors to access gallery items on page load\n  sources=\"[]\"                      //required, array of image sources\n  sizing=\"contain\"                  //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing\n  title=\"My Gallery\">               //optional, the title of the gallery\n  Optional description of the gallery.\n</lrndesign-gallery-carousel>```\n * where `sources` array is:```\n[{\n  \"alt\": \"IMAGE ALT TEXT\",                          //required\n  \"details\": \"TEXT ABOUT IMAGE HERE\",               //optional \n  \"heading\": \"IMAGE HEADING HERE\",                  //required, the image heading when in zoom mode\n  \"id\": \"123\"                                       //required, unique id  \n  \"sizing\": \"contain\",                              //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing, default is parent's sizing\n  \"large\": \"PATH/TO/LARGE/IMAGE/HERE.JPG\",          //optional, larger image for zoom instead of src \n  \"src\": \"PATH/TO/FULL/IMAGE/HERE.JPG\",             //required\n  \"thumbnail\": \"PATH/TO/THUMBAIL/IMAGE/HERE.JPG\",   //required\n  \"tooltip\": \"IMAGE TOOLTIP HERE\",                  //required, the tooltip for the image thumbnail\n  \"title\": \"IMAGE TITLE HERE\",                      //optional, the image title when viewed\n  \"type\": \"image\",                                  //required, \"image\", \"video\", \"audio\", etc.\n}]```\n *\n\n * @polymer\n * @demo ./demo/index.html demo\n */\nclass LrndesignGalleryCarousel extends LrndesignGalleryBehaviors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"lrndesign-gallery-carousel\";\n  }\n\n  //get gallery behaviors\n  static get behaviors() {\n    return [LrndesignGalleryBehaviors];\n  }\n\n  // render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"lrndesign-gallery-shared-styles\">\n        :host {\n          margin: 15px 0 0;\n          padding: 0;\n        }\n        :host #carouselitem {\n          width: 100%;\n          color: var(--lrndesign-gallery-color);\n          background-color: var(--lrndesign-gallery-background-color);\n          border: 1px solid var(--lrndesign-gallery-border-color);\n        }\n        :host(:not([responsive-size=\"xs\"]):not([extra-wide])) #carouselitem {\n          display: flex;\n          justify-content: space-between;\n          align-items: stretch;\n          border-top: 4px solid var(--lrndesign-gallery-focus-color);\n        }\n        :host([responsive-size=\"sm\"]:not([extra-wide])) #carouselitem,\n        :host([responsive-size=\"sm\"]:not([extra-wide])) #prevnextnav,\n        :host([responsive-size=\"md\"]:not([extra-wide])) #carouselitem,\n        :host([responsive-size=\"md\"]:not([extra-wide])) #prevnextnav {\n          height: 200px;\n          max-height: 200px;\n        }\n        :host([responsive-size=\"lg\"]:not([extra-wide])) #carouselitem,\n        :host([responsive-size=\"lg\"]:not([extra-wide])) #prevnextnav {\n          height: 300px;\n          max-height: 300px;\n        }\n        :host([responsive-size=\"xl\"]:not([extra-wide])) #carouselitem,\n        :host([responsive-size=\"xl\"]:not([extra-wide])) #prevnextnav {\n          height: 400px;\n          max-height: 400px;\n        }\n        :host #carouselimage {\n          position: relative;\n        }\n        :host #carouselimage iron-image {\n          width: 100%;\n          height: 100%;\n        }\n        :host #prevnextnav {\n          left: 0;\n          top: 0;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n        :host #prevnextnav paper-button {\n          position: absolute;\n          display: flex;\n          align-items: center;\n          justify-content: flex-end;\n          left: 50%;\n          top: 0;\n          width: 50%;\n          height: 100%;\n          opacity: 0;\n          margin: 0;\n          border-radius: 0;\n          color: var(--lrndesign-gallery-color);\n          background-color: var(--lrndesign-gallery-background-color);\n          --paper-button-ink-color: var(--lrndesign-gallery-background-color);\n          background: var(--lrndesign-gallery-next-bg);\n          transition: opacity 0.5s;\n        }\n        :host #prevnextnav paper-button#carouselprev {\n          left: 0;\n          justify-content: flex-start;\n          background: var(--lrndesign-gallery-prev-bg);\n        }\n        :host #prevnextnav paper-button[item=\"-1\"] {\n          display: none;\n        }\n        :host #prevnextnav paper-button:focus,\n        :host #prevnextnav paper-button:hover {\n          opacity: 0.8;\n        }\n        :host #prevnextnav iron-icon {\n          margin: 10%;\n        }\n        :host lrndesign-gallery-zoom {\n          left: 3px;\n          bottom: 0;\n          z-index: 2;\n          position: absolute;\n        }\n        :host #details {\n          flex-grow: 1;\n          flex-shrink: 1;\n          overflow-y: auto;\n        }\n        :host([responsive-size=\"xs\"]) #details,\n        :host([extra-wide]) #details {\n          margin-top: -4px;\n          border-top: 4px solid var(--lrndesign-gallery-focus-color);\n        }\n        :host #details-inner {\n          height: 100%;\n          display: flex;\n          position: relative;\n          justify-content: space-between;\n          flex-wrap: wrap;\n          align-items: stretch;\n          align-content: stretch;\n        }\n        :host #itemdetails,\n        :host #thumbnails {\n          padding: 20px;\n          flex-basis: 100%;\n        }\n        :host #itemdetails {\n          align-self: flex-start;\n          flex-grow: 1;\n          flex-shrink: 1;\n          overflow-y: auto;\n        }\n        :host #thumbnails {\n          align-self: flex-end;\n        }\n        :host .gallerythumb[disabled] {\n          @apply --lrndesign-gallery-thumbnail-image-selected;\n        }\n        :host .gallerythumb iron-image {\n          width: 40px;\n          height: 40px;\n        }\n        :host([responsive-size=\"xs\"]) .gallerythumb iron-image {\n          display: none;\n        }\n        :host([responsive-size=\"md\"]) .gallerythumb iron-image {\n          width: 45px;\n          height: 45px;\n        }\n        :host([responsive-size=\"lg\"]) .gallerythumb iron-image,\n        :host([responsive-size=\"xl\"]) .gallerythumb iron-image {\n          width: 50px;\n          height: 50px;\n        }\n        :host #itemtitle {\n          margin-top: 0;\n        }\n        :host .x-of-y {\n          font-size: 85%;\n          font-style: italic;\n          text-align: right;\n          padding: 0;\n          margin: 0;\n        }\n        :host #xystart,\n        :host #xyend {\n          position: absolute;\n          right: 20px;\n          top: 20px;\n        }\n      </style>\n      <article id=\"carousel\">\n        <template is=\"dom-if\" if=\"[[_isAttrSet(title)]]\">\n          <h1 id=\"gallerytitle\">[[title]]</h1>\n        </template>\n        <div id=\"gallerydescription\"><slot></slot></div>\n        <p class=\"sr-only\">A carousel of items:</p>\n        <div id=\"galleryscreen\">\n          <div\n            id=\"carouselitem\"\n            aspect-ratio$=\"[[aspectRatio]]\"\n            dark$=\"[[dark]]\"\n            extra-wide$=\"[[extraWide]]\"\n            image-style$=\"[[__imageStyle]]\"\n            item=\"[[selected]]\"\n            responsive-size$=\"[[responsiveSize]]\"\n          >\n            <p id=\"xystart\" class=\"sr-only\" hidden$=\"[[_hideNav(items)]]\">\n              Slide [[selected.xofy]] selected.\n            </p>\n            <div id=\"carouselimage\">\n              <iron-image\n                alt$=\"[[selected.alt]]\"\n                fade=\"\"\n                id$=\"[[selected.id]]\"\n                placeholder$=\"[[selected.thumbnail]]\"\n                sizing$=\"[[selected.sizing]]\"\n                src$=\"[[selected.src]]\"\n                style$=\"[[__imageStyle]]\"\n              >\n              </iron-image>\n              <lrndesign-gallery-zoom\n                details$=\"[[selected.details]]\"\n                heading$=\"[[selected.heading]]\"\n                id=\"galleryzoom\"\n                item-id=\"[[selected.id]]\"\n                src$=\"[[selected.large]]\"\n                tooltip$=\"[[selected.tooltip]]\"\n                zoom-alt$=\"[[selected.alt]]\"\n                zoomed$=\"[[selected.zoom]]\"\n              >\n                <iron-icon\n                  icon=\"zoom-in\"\n                  hidden$=\"[[!_isAttrSet(icon)]]\"\n                ></iron-icon>\n              </lrndesign-gallery-zoom>\n              <div id=\"prevnextnav\">\n                <paper-button\n                  id=\"carouselprev\"\n                  aria-controls$=\"[[__gallery.id]]\"\n                  aria-label=\"prev\"\n                  hidden$=\"[[_hideNav(items)]]\"\n                  index$=\"[[selected.prev]]\"\n                  on-click=\"_onPrev\"\n                  target$=\"[[__gallery]]\"\n                  tabindex=\"-1\"\n                  title=\"\"\n                >\n                  <iron-icon icon=\"chevron-left\"></iron-icon>\n                </paper-button>\n                <paper-tooltip for=\"carouselprev\" position=\"top\"\n                  >previous</paper-tooltip\n                >\n                <paper-button\n                  id=\"carouselnext\"\n                  aria-controls$=\"[[__gallery.id]]\"\n                  aria-label=\"next\"\n                  hidden$=\"[[_hideNav(items)]]\"\n                  index$=\"[[selected.next]]\"\n                  on-click=\"_onNext\"\n                  target=\"[[__gallery]]\"\n                  tabindex=\"-1\"\n                  title=\"\"\n                >\n                  <iron-icon icon=\"chevron-right\"></iron-icon>\n                </paper-button>\n                <paper-tooltip for=\"carouselnext\" position=\"top\"\n                  >next</paper-tooltip\n                >\n              </div>\n            </div>\n            <div id=\"details\" class=\"item-info\">\n              <div id=\"details-inner\">\n                <div id=\"itemdetails\">\n                  <h2 id=\"itemtitle\" hidden=\"[[!_isAttrSet(selected.title)]]\">\n                    [[selected.title]]\n                  </h2>\n                  <div id=\"itembody\">\n                    <lrndesign-gallery-details\n                      details$=\"[[selected.details]]\"\n                    ></lrndesign-gallery-details>\n                  </div>\n                </div>\n                <div id=\"xyend\">\n                  <p class=\"x-of-y\" hidden$=\"[[_hideNav(items)]]\">\n                    (<span class=\"sr-only\"> End of slide </span>\n                    [[selected.xofy]]<span class=\"sr-only\">.</span>)\n                  </p>\n                </div>\n                <div id=\"thumbnails\" class=\"item-info\">\n                  <div id=\"thumbnails-inner\">\n                    <div>\n                      <p class=\"sr-only\" hidden$=\"[[_hideNav(items)]]\">\n                        Slides list:\n                      </p>\n                      <template is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n                        <paper-button\n                          id$=\"[[item.id]]\"\n                          aria-controls$=\"[[__gallery.id]]\"\n                          class=\"gallerythumb\"\n                          hidden$=\"[[_hideNav(items)]]\"\n                          index$=\"[[item.index]]\"\n                          on-click=\"_onNavTapped\"\n                          disabled$=\"[[_isSelected(selected,item)]]\"\n                          target$=\"[[item.target]]\"\n                          title\n                        >\n                          <iron-image\n                            alt$=\"[[item.alt]]\"\n                            fade\n                            sizing=\"cover\"\n                            src$=\"[[item.thumbnail]]\"\n                          >\n                          </iron-image>\n                        </paper-button>\n                        <paper-tooltip\n                          for$=\"[[item.id]]\"\n                          hidden$=\"[[_isSelected(selected,item)]]\"\n                          position=\"top\"\n                        >\n                          [[item.alt]]\n                        </paper-tooltip>\n                      </template>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"galleryprint\">\n          <template id=\"printlist\" is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <section>\n              <template is=\"dom-if\" if=\"[[_isAttrSet(item.title)]]\">\n                <h2>[[item.title]]</h2>\n              </template>\n              <lrndesign-gallery-details\n                details$=\"[[item.details]]\"\n              ></lrndesign-gallery-details>\n              <img\n                class=\"print-image\"\n                alt$=\"[[item.alt]]\"\n                src$=\"[[item.src]]\"\n              />\n            </section>\n          </template>\n        </div>\n      </article>\n    `;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * height css of iron image (sets aspect ratio in xs or extraWide)\n       */\n      __imageStyle: {\n        type: String,\n        computed: \"_getImageStyle(extraWide,responsiveSize)\"\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is ready\n   */\n  ready() {\n    super.ready();\n    if (this.selected.scroll) {\n      let target = this.shadowRoot.querySelector(\"#carouselitem\");\n      this._scrollIntoView([this._getParentOffset(target)]);\n      if (!this.selected.zoomed) target.focus();\n    }\n  }\n\n  /**\n   * go to item by id, or index\n   *\n   * @param {o}\n   */\n  goToItem(index) {\n    let root = this;\n    if (typeof index === \"number\" && index >= 0 && index < root.items.length) {\n      root.selected = root.items[index];\n    }\n  }\n\n  /**\n   * returns the proper padding to maintain image aspect ratio and\n   *\n   * @param {boolean} whether on not the first image is extra wide\n   * @param {string} the responsive size of the gallery, as in 'xs','sm','md','lg', or 'xl'\n   * @returns {string} the style for the image\n   */\n  _getImageStyle(extraWide, responsiveSize) {\n    if (extraWide || responsiveSize === \"xs\") {\n      return \"padding-bottom: \" + 100 / this.aspectRatio + \"%;\";\n    } else {\n      if (responsiveSize === \"xl\") {\n        return \"width: \" + this.aspectRatio * 400 + \"px; height: 400px;\";\n      } else if (responsiveSize === \"lg\") {\n        return \"width: \" + this.aspectRatio * 300 + \"px; height: 300px;\";\n      } else if (responsiveSize === \"md\") {\n        return \"width: \" + this.aspectRatio * 200 + \"px; height: 200px;\";\n      } else {\n        return \"width: \" + this.aspectRatio * 200 + \"px; height: 200px;\";\n      }\n    }\n  }\n\n  /**\n   * returns index of the previous or next item\n   *\n   *\n   */\n  _getIndex(index, step) {\n    return index + step;\n  }\n\n  /**\n   * gets unique id for carousel and sets it as a target\n   */\n  _hideNav(items) {\n    return items !== undefined ? items.length < 2 : true;\n  }\n\n  /**\n   * when a prev is tapped, goes to the prev item\n   */\n  _onPrev(e) {\n    this.goToItem(\n      parseInt(\n        this.shadowRoot.querySelector(\"#carouselprev\").getAttribute(\"index\")\n      )\n    );\n  }\n\n  /**\n   * when a next is tapped, goes to the next item\n   */\n  _onNext(e) {\n    this.goToItem(\n      parseInt(\n        this.shadowRoot.querySelector(\"#carouselnext\").getAttribute(\"index\")\n      )\n    );\n  }\n\n  /**\n   * when a thumbnail is tapped, goes to that item\n   */\n  _onNavTapped(e) {\n    this.goToItem(e.model.item.index);\n  }\n\n  /**\n   * updates the item details\n   */\n  _updateDetails() {\n    this.shadowRoot.querySelector(\"#itembody\").innerHTML = this.item.details;\n  }\n}\nwindow.customElements.define(\n  LrndesignGalleryCarousel.tag,\n  LrndesignGalleryCarousel\n);\nexport { LrndesignGalleryCarousel };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport {} from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { LrndesignGalleryBehaviors } from \"./lrndesign-gallery-behaviors.js\";\nimport \"./lrndesign-gallery-zoom.js\";\nimport \"./lrndesign-gallery-details.js\";\n\nexport { LrndesignGalleryGrid };\n/**\n * `lrndesign-gallery-grid`\n * @customElement lrndesign-gallery-grid\n * `An element that renders a collection of gallery items into a grid or a single media item into a layout.`\n *\n * @microcopy - language worth noting:```\n<lrndesign-gallery-grid \n  accent-color=\"grey\"               //optional, the accent color from simple-colors; default is grey\n  dark                              //optional, if true, gallery will use the simple-colors dark theme; default is false (fixed-theme)\n  id=\"mygallery1\"                   //optional, a unique id for the gallery; if true, you can use the id in anchors to access gallery items on page load\n  sources=\"[]\"                      //required, array of image sources\n  sizing=\"contain\"                  //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing\n  title=\"My Gallery\">               //optional, the title of the gallery\n  Optional description of the gallery.\n</lrndesign-gallery-grid>```\n * where `sources` array is:```\n[{\n  \"alt\": \"IMAGE ALT TEXT\",                          //required\n  \"details\": \"TEXT ABOUT IMAGE HERE\",               //optional \n  \"heading\": \"IMAGE HEADING HERE\",                  //required, the image heading when in zoom mode\n  \"id\": \"123\"                                       //required, unique id  \n  \"sizing\": \"contain\",                              //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing, default is parent's sizing\n  \"large\": \"PATH/TO/LARGE/IMAGE/HERE.JPG\",          //optional, larger image for zoom instead of src \n  \"src\": \"PATH/TO/FULL/IMAGE/HERE.JPG\",             //required\n  \"thumbnail\": \"PATH/TO/THUMBAIL/IMAGE/HERE.JPG\",   //required\n  \"tooltip\": \"IMAGE TOOLTIP HERE\",                  //required, the tooltip for the image thumbnail\n  \"title\": \"IMAGE TITLE HERE\",                      //optional, the image title when viewed\n  \"type\": \"image\",                                  //required, \"image\", \"video\", \"audio\", etc.\n}]```\n *\n\n * @polymer\n * @demo ./demo/grid.html demo\n */\nclass LrndesignGalleryGrid extends LrndesignGalleryBehaviors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   */\n  static get tag() {\n    return \"lrndesign-gallery-grid\";\n  }\n\n  static get behaviors() {\n    return [LrndesignGalleryBehaviors];\n  }\n\n  // render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"lrndesign-gallery-shared-styles\">\n        :host {\n          margin: 15px 0 0;\n          padding: 0;\n          max-width: 100%;\n          display: block;\n        }\n        :host .gallerythumb div {\n          position: relative;\n          display: flex;\n          align-items: stretch;\n        }\n        :host .gallerythumb div,\n        :host .gallerythumb iron-image {\n          width: 100%;\n        }\n        :host .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-xs, 100px);\n        }\n        :host([responsive-size=\"sm\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-sm, 150px);\n        }\n        :host([responsive-size=\"md\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-md, 200px);\n        }\n        :host([responsive-size=\"lg\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-lg, 250px);\n        }\n        :host([responsive-size=\"xl\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-lg, 300px);\n        }\n        :host .gallerythumb iron-icon {\n          position: absolute;\n          bottom: 7px;\n          left: 7px;\n        }\n      </style>\n      <article id=\"grid\">\n        <template is=\"dom-if\" if=\"[[_isAttrSet(title)]]\">\n          <h1 id=\"gallery-title\">[[title]]</h1>\n        </template>\n        <div id=\"gallery-description\"><slot></slot></div>\n        <p class=\"sr-only\">A list of thumbnail buttons items:</p>\n        <div id=\"galleryscreen\">\n          <template id=\"screenlist\" is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <lrndesign-gallery-zoom\n              anchored-item=\"[[__anchoredItem]]\"\n              class=\"gallerythumb\"\n              details$=\"[[item.details]]\"\n              heading$=\"[[item.heading]]\"\n              item-id=\"[[item.id]]\"\n              on-gallery-scroll=\"_handleScroll\"\n              scrolled$=\"[[item.scroll]]\"\n              src$=\"[[item.large]]\"\n              tooltip$=\"[[item.tooltip]]\"\n              zoom-alt$=\"[[item.zoomAlt]]\"\n              zoomed$=\"[[item.zoom]]\"\n            >\n              <div>\n                <iron-image\n                  alt$=\"[[item.zoomAlt]]\"\n                  fade\n                  sizing=\"cover\"\n                  src$=\"[[item.thumbnail]]\"\n                  style$=\"[[_getImageStyle(items)]]\"\n                >\n                </iron-image>\n              </div>\n              <iron-icon icon=\"zoom-in\"></iron-icon>\n            </lrndesign-gallery-zoom>\n          </template>\n        </div>\n        <div id=\"galleryprint\">\n          <template id=\"printlist\" is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <section>\n              <template is=\"dom-if\" if=\"[[_isAttrSet(item.title)]]\">\n                <h2>[[item.title]]</h2>\n              </template>\n              <lrndesign-gallery-details\n                details$=\"[[item.details]]\"\n              ></lrndesign-gallery-details>\n              <img\n                class=\"print-image\"\n                alt$=\"[[item.alt]]\"\n                src$=\"[[item.src]]\"\n              />\n            </section>\n          </template>\n        </div>\n      </article>\n    `;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * aspect ratio of media\n       */\n      imageStyle: {\n        type: String,\n        computed: \"_getImageStyle(items)\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * handles gallery-scroll event\n   */\n  _handleScroll(e) {\n    this._scrollIntoView([this._getParentOffset(this), e.path[0].offsetTop]);\n  }\n\n  /**\n   * returns the proper padding to maintain image aspect ratio and updates\n   *\n   * @param {array} an array of items\n   * @returns {string} the style based on the first item\n   */\n  _getImageStyle(items = []) {\n    let img = new Image(),\n      padding = 75;\n    if (items !== undefined && items.length > 0) {\n      img.src = items[0].src;\n      if (img.naturalWidth > 0 && img.naturalHeight > 0)\n        padding = (100 * img.naturalHeight) / img.naturalWidth;\n    }\n    return \"padding-bottom: \" + padding + \"%;\";\n  }\n}\nwindow.customElements.define(LrndesignGalleryGrid.tag, LrndesignGalleryGrid);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { LrndesignGalleryBehaviors } from \"./lib/lrndesign-gallery-behaviors.js\";\nimport \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\nimport \"./lib/lrndesign-gallery-carousel.js\";\nimport \"./lib/lrndesign-gallery-grid.js\";\n\nexport { LrndesignGallery };\n/**\n * `lrndesign-gallery`\n * @customElement lrndesign-gallery\n * `An element that renders a collection of gallery items into a carousel or a single media item into a layout.`\n *\n * @microcopy - language worth noting:```\n <lrndesign-gallery \n  accent-color=\"grey\"               //optional, the accent color from simple-colors; default is grey\n  dark                              //optional, if true, gallery will use the simple-colors dark theme; default is false (fixed-theme)\n  id=\"mygallery1\"                   //optional, a unique id for the gallery; if true, you can use the id in anchors to access gallery items on page load\n  sources=\"[]\"                      //required, array of image sources\n  sizing=\"contain\"                  //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing\n  title=\"My Gallery\">               //optional, the title of the gallery\n  Optional description of the gallery.\n</lrndesign-gallery>```\n * where `sources` array is:```\n[{\n  \"alt\": \"IMAGE ALT TEXT\",                          //required\n  \"details\": \"TEXT ABOUT IMAGE HERE\",               //optional \n  \"heading\": \"IMAGE HEADING HERE\",                  //required, the image heading when in zoom mode\n  \"id\": \"123\"                                       //required, unique id  \n  \"sizing\": \"contain\",                              //optional, \"cover\" for cropping (default) or \"contain\" for letterboxing, default is parent's sizing\n  \"large\": \"PATH/TO/LARGE/IMAGE/HERE.JPG\",          //optional, larger image for zoom instead of src \n  \"src\": \"PATH/TO/FULL/IMAGE/HERE.JPG\",             //required\n  \"thumbnail\": \"PATH/TO/THUMBAIL/IMAGE/HERE.JPG\",   //required\n  \"tooltip\": \"IMAGE TOOLTIP HERE\",                  //required, the tooltip for the image thumbnail\n  \"title\": \"IMAGE TITLE HERE\",                      //optional, the image title when viewed\n  \"type\": \"image\",                                  //required, \"image\", \"video\", \"audio\", etc.\n}]```\n *\n\n * @polymer\n * @demo ./demo/index.html carousel demo\n * @demo ./demo/grid.html grid demo\n */\nclass LrndesignGallery extends LrndesignGalleryBehaviors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"lrndesign-gallery\";\n  }\n\n  static get behaviors() {\n    return [LrndesignGalleryBehaviors];\n  }\n\n  // render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: block;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <div id=\"gallery\">\n        <template is=\"dom-if\" if=\"[[!grid]]\" restamp>\n          <lrndesign-gallery-carousel\n            accent-color$=\"[[accentColor]]\"\n            aspect-ratio$=\"[[aspectRatio]]\"\n            title$=\"[[title]]\"\n            dark$=\"[[dark]]\"\n            gallery-id$=\"[[id]]\"\n            responsive-size$=\"[[responsiveSize]]\"\n            sizing$=\"[[sizing]]\"\n            sources=\"[[sources]]\"\n            title$=\"[[title]]\"\n          >\n            <slot></slot>\n          </lrndesign-gallery-carousel>\n        </template>\n        <template is=\"dom-if\" if=\"[[grid]]\">\n          <lrndesign-gallery-grid\n            accent-color$=\"[[accentColor]]\"\n            aspect-ratio$=\"[[aspectRatio]]\"\n            dark$=\"[[dark]]\"\n            gallery-id$=\"[[id]]\"\n            responsive-size$=\"[[responsiveSize]]\"\n            sizing$=\"[[sizing]]\"\n            sources=\"[[sources]]\"\n            title$=\"[[title]]\"\n          >\n            <slot></slot>\n          </lrndesign-gallery-grid>\n        </template>\n      </div>\n    `;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n      canScale: false,\n      canPosition: false,\n      canEditSource: true,\n      gizmo: {\n        title: \"Image Gallery\",\n        description: \"An image gallery displayed as a carousel or a grid\",\n        icon: \"image:collections\",\n        color: \"cyan\",\n        groups: [\"Content\", \"Instructional\", \"Media\", \"Image\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"image\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Gallery Title\",\n            description: \"A title for the gallery.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"accentColor\",\n            title: \"Accent Color\",\n            description: \"An optional accent color.\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"dark\",\n            title: \"Dark Theme\",\n            description: \"Enable Dark Theme\",\n            inputMethod: \"boolean\",\n            icon: \"icons:invert-colors\"\n          },\n          {\n            property: \"grid\",\n            title: \"Grid View\",\n            description: \"Display as grid?\",\n            inputMethod: \"boolean\",\n            icon: \"icons:view-module\"\n          },\n          {\n            slot: \"description\",\n            title: \"Gallery Description\",\n            description: \"An optional description for the gallery.\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"sources\",\n            title: \"Gallery Images\",\n            description: \"The images for the gallery.\",\n            inputMethod: \"array\",\n            itemLabel: \"title\",\n            properties: [\n              {\n                property: \"title\",\n                title: \"Image Title\",\n                description: \"The heading for the image.\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"details\",\n                title: \"Image Details\",\n                description: \"The body text with details for the image.\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"src\",\n                title: \"Image Source\",\n                description: \"The path of the image.\",\n                inputMethod: \"haxupload\"\n              },\n              {\n                property: \"thumbnail\",\n                title: \"Image Thumbnail Source\",\n                description:\n                  \"The path of an optional thumbnail version of the image.\",\n                inputMethod: \"haxupload\"\n              },\n              {\n                property: \"large\",\n                title: \"Image Full Size Source\",\n                description:\n                  \"The path of an optional large version of the image for zooming.\",\n                inputMethod: \"haxupload\"\n              }\n            ]\n          }\n        ],\n        advanced: [\n          {\n            property: \"aspectRatio\",\n            title: \"Aspect Ratio\",\n            description:\n              \"Custom aspect ratio, default is calculated based on the first image's aspect ratio\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"sizing\",\n            title: \"Fit to Aspect Ratio\",\n            description: \"Fit images to aspect ratio\",\n            inputMethod: \"select\",\n            options: {\n              cover: \"crop\",\n              contain: \"letterbox\"\n            }\n          }\n        ]\n      }\n    };\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {};\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.__gallery = root.shadowRoot.querySelector(\"#gallery\");\n    root.anchorData = root._getAnchorData();\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail: {\n          element: root,\n          attribute: \"responsive-size\",\n          relativeToParent: true\n        }\n      })\n    );\n  }\n\n  /**\n   * life cycle, element is ready\n   */\n  ready() {\n    super.ready();\n  }\n}\nwindow.customElements.define(LrndesignGallery.tag, LrndesignGallery);\n"],"names":["styleElement","document","createElement","css","html","appendChild","register","LrndesignGalleryBehaviors","SimpleColorsPolymer","options","window","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","this","attribute","relativeToParent","temp","location","hash","replace","split","anchorGallery","length","selectedItemId","selectedItemIndex","sources","findIndex","i","id","selectedGallery","galleryId","zoom","scroll","item","index","_generateUUID","anchorData","_getAnchorData","details","_selfOrDefault","src","large","thumbnail","xofy","parseInt","next","prev","sizing","title","tooltip","heading","set","node","parent","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","offsetTop","offsets","scrollTo","top","reduce","total","num","behavior","selected","Image","_setAspectProperties","_getItemData","val1","val2","append","val3","imgSrc","img","aspectRatio","naturalWidth","naturalHeight","extraWide","_uuidPart","Math","floor","random","toString","substring","type","Object","computed","Number","value","Boolean","reflectToAttribute","String","grid","items","Array","responsiveSize","notify","customElements","define","tag","LrndesignGalleryDetails","LitElement","changedProperties","forEach","oldValue","propName","_this2","_detailsChanged","newValue","shadowRoot","querySelector","innerHTML","LrndesignGalleryZoom","PolymerElement","associateEvents","scrolled","zoomed","focus","root","e","attr","observer","itemId","modal","zoomAlt","LrndesignGalleryCarousel","target","_scrollIntoView","_getParentOffset","step","goToItem","getAttribute","model","__imageStyle","LrndesignGalleryGrid","path","padding","imageStyle","LrndesignGallery","__gallery","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","source","meta","author","settings","quick","configure","property","inputMethod","slot","itemLabel","properties","advanced","cover","contain"],"mappings":"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"}