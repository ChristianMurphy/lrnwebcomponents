{"version":3,"file":"exif-data.umd.js","sources":["exif-data.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n\n/**\n * `exif-data`\n * `obtain exif data from slotted elements`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @demo demo/index.html\n */\nclass ExifData extends HTMLElement {\n  \n\n  // render function\n  get html() {\n    return `\n<style>\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n        </style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {...super.properties};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"exif-data\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n    \n    // set tag for later use\n    this.tag = ExifData.tag;\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/ExifData-properties.json\n    let obj = ExifData.properties;\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (this.hasAttribute(p)) {\n          this[p] = this.getAttribute(p);\n        }\n        else {\n          this.setAttribute(p, obj[p].value);\n          this[p] = obj[p].value;\n        }\n      }\n    }\n    // optional queue for future use\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    \n  }\n\n  _copyAttribute(name, to) {\n    const recipients = this.shadowRoot.querySelectorAll(to);\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  //static get observedAttributes() {\n  //  return [];\n  //}\n  // disconnectedCallback() {}\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n  \n}\nwindow.customElements.define(ExifData.tag, ExifData);\nexport { ExifData };\n"],"names":["ExifData","delayRender","tag","obj","properties","p","hasOwnProperty","_this","hasAttribute","getAttribute","setAttribute","value","_queue","template","document","createElement","attachShadow","mode","render","HTMLElement","window","ShadyCSS","styleElement","this","name","to","recipients","shadowRoot","querySelectorAll","fname","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","customElements","define"],"mappings":"woEAeMA,iCAiCQC,4LAILC,IAAMF,EAASE,QAIhBC,EAAMH,EAASI,eACd,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,KACjBE,EAAKC,aAAaH,KACfA,GAAKE,EAAKE,aAAaJ,MAGvBK,aAAaL,EAAGF,EAAIE,GAAGM,SACvBN,GAAKF,EAAIE,GAAGM,iBAKlBC,OAAS,KACTC,SAAWC,SAASC,cAAc,cAElCC,aAAa,CAAEC,KAAM,SAErBhB,KACEiB,yPA5DYC,ylBA4BZ,+DAuCHC,OAAOC,UACTD,OAAOC,SAASC,aAAaC,6CAMlBC,EAAMC,OACbC,EAAaH,KAAKI,WAAWC,iBAAiBH,GAC9Cd,EAAQY,KAAKd,aAAae,GAC1BK,EAAiB,MAATlB,EAAgB,kBAAoB,kDAC/Be,iDAAY,SACxBG,GAAOL,EAAMb,mIAIPa,IAAAA,KAAMb,IAAAA,WACda,GAAQb,wCAIRgB,WAAWG,UAAY,UACvBjB,SAASiB,UAAYP,KAAKQ,KAE3BX,OAAOC,UACTD,OAAOC,SAASW,gBAAgBT,KAAKV,SAAUU,KAAKrB,UAEjDyB,WAAWM,YAAYV,KAAKV,SAASqB,QAAQC,WAAU,aAUhEf,OAAOgB,eAAeC,OAAOrC,EAASE,IAAKF"}