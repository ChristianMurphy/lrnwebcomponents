{"version":3,"file":"relative-heading.umd.js","sources":["relative-heading.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport { wipeSlot } from \"@lrnwebcomponents/utils/utils.js\";\n/**\n * `relative-heading`\n * `outputs the correct heading hierarchy based on parent heading`\n *\n * @demo demo/index.html\n * @customElement relative-heading\n */\nclass RelativeHeading extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: block;\n}\n:host([hidden]) {\n  display: none;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<div><slot></slot></div>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Relative heading\",\n    \"description\": \"outputs the correct heading hierarchy based on parent's heading\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Heading\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"nikkimk\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"parentHeading\",\n        \"description\": \"\",\n        \"inputMethod\": \"array\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"tag\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * The default heading level (1-6), eg., 1 for <h1>, if there  is no parent.\n   */\n  \"defaultLevel\": {\n    \"type\": Number,\n    \"attribute\": \"default-level\"\n  },\n  /**\n   * The relative-heading's UUID.\n   */\n  \"id\": {\n    \"type\": String\n  },\n  /**\n   * The parent relative-heading's UUID.\n   */\n  \"parentId\": {\n    \"type\": String,\n    \"attribute\": \"parent-id\"\n  },\n  /**\n   * The heading text.\n   */\n  \"text\": {\n    \"type\": String\n  },\n  /**\n   * The heading level (1-6), eg., 1 for <h1>\n   */\n  \"level\": {\n    \"type\": Number,\n    \"reflect\": true\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"relative-heading\";\n  }\n  /**\n   * update this level when the parent id changes\n   */\n  _getLevel(parentId, defaultLevel) {\n    let parent = document.querySelector(\"#\" + parentId),\n      parentLvl =\n        parent !== null && parent.level !== undefined\n          ? parent.level\n          : defaultLevel - 1,\n      level = parentLvl < 6 ? parentLvl + 1 : 6;\n    return level;\n  }\n  _updateChildren() {\n    document\n      .querySelectorAll('relative-heading[parent-id=\"' + this.id + '\"]')\n      .forEach(child => {\n        child.parentId = null;\n        child.parentId = this.id;\n      });\n  }\n  /**\n   * determines if the level matches a specific level\n   *\n   * @param {number} the heading level\n   * @param {number} the level it might match\n   * @returns {boolean} whether or not they match\n   */\n  _isLevel(level, testLevel) {\n    return level === testLevel;\n  }\n  constructor() {\n    super();\n    this.defaultLevel = 1;\n    this.parentId = null;\n    this.text = \"\";\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"id\") {\n        this._updateChildren(this[propName], oldValue);\n      }\n      if (propName == \"level\" || propName == \"text\") {\n        wipeSlot(this);\n        let level = document.createElement(`h${this.level}`);\n        level.innerText = this.text;\n        this.appendChild(level);\n        this._updateChildren(this.level, oldValue);\n      }\n      if ([\"parentId\", \"defaultLevel\"].includes(propName)) {\n        this.level = this._getLevel(this.parentId, this.defaultLevel);\n      }\n    });\n  }\n}\nwindow.customElements.define(RelativeHeading.tag, RelativeHeading);\nexport { RelativeHeading };\n"],"names":["RelativeHeading","defaultLevel","parentId","text","LitElement","html","parent","document","querySelector","parentLvl","undefined","level","querySelectorAll","this","id","forEach","child","_this2","testLevel","css","Number","String","changedProperties","oldValue","propName","_this3","_updateChildren","wipeSlot","createElement","innerText","appendChild","includes","_getLevel","window","customElements","define","tag"],"mappings":"ivDAaMA,yKAqJGC,aAAe,IACfC,SAAW,OACXC,KAAO,iPAvJcC,yDAiBnBC,8CAuGCH,EAAUD,OACdK,EAASC,SAASC,cAAc,IAAMN,GACxCO,EACa,OAAXH,QAAoCI,IAAjBJ,EAAOK,MACtBL,EAAOK,MACPV,EAAe,SACbQ,EAAY,EAAIA,EAAY,EAAI,uDAI1CF,SACGK,iBAAiB,+BAAiCC,KAAKC,GAAK,MAC5DC,QAAQ,SAAAC,GACPA,EAAMd,SAAW,KACjBc,EAAMd,SAAWe,EAAKH,sCAUnBH,EAAOO,UACPP,IAAUO,yCA7IT,CACNC,wDAmBK,WACG,eACG,iBACE,QACR,OACE,+BACM,uEACP,sBACC,eACC,CAAC,mBACA,CACT,MACU,sCAGJ,QACI,gBACD,+CAGD,OACD,aACI,CACX,UACc,4BACG,eACA,kBACH,OACJ,iBAEV,UACc,kBACG,eACA,sBACH,OACJ,2BAGA,6ZAcE,MACNC,iBACK,oBAKT,MACIC,iBAKE,MACFA,iBACK,kBAKP,MACEA,cAKD,MACCD,gBACG,uCAWJ,0DAsCDE,cACNA,EAAkBP,QAAQ,SAACQ,EAAUC,MACnB,MAAZA,GACFC,EAAKC,gBAAgBD,EAAKD,GAAWD,GAEvB,SAAZC,GAAmC,QAAZA,EAAoB,CAC7CG,WAASF,OACLd,EAAQJ,SAASqB,yBAAkBH,EAAKd,QAC5CA,EAAMkB,UAAYJ,EAAKtB,KACvBsB,EAAKK,YAAYnB,GACjBc,EAAKC,gBAAgBD,EAAKd,MAAOY,GAE/B,CAAC,WAAY,gBAAgBQ,SAASP,KACxCC,EAAKd,MAAQc,EAAKO,UAAUP,EAAKvB,SAAUuB,EAAKxB,0BAKxDgC,OAAOC,eAAeC,OAAOnC,EAAgBoC,IAAKpC"}