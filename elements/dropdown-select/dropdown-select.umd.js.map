{"version":3,"file":"dropdown-select.umd.js","sources":["dropdown-select.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**\n * `dropdown-select`\n * @customElement dropdown-select\n * an easy to use, works as expected dropdown menu.\n *\n * @demo demo/index.html\n */\nclass DropdownSelect extends LitElement {\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        paper-listbox ::slotted(paper-item) {\n          display: block;\n          width: calc(100% - 32px);\n          padding: 0 16px;\n          min-height: 32px;\n          vertical-align: text-top;\n          line-height: 32px;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <paper-dropdown-menu\n        id=\"menu\"\n        error-message=\"${this.errorMessage}\"\n        horizontal-align=\"${this.horizontalAlign}\"\n        label=\"${this.label}\"\n        placeholder=\"${this.placeholder}\"\n        vertical-align=\"${this.verticalAlign}\"\n        vertical-offset=\"${this.verticalOffset}\"\n        ?allow-outside-scroll=\"${this.allowOutsideScroll}\"\n        ?always-float-label=\"${this.alwaysFloatLabel}\"\n        ?dynamic-align=\"${this.dynamicAlign}\"\n        ?no-animations=\"${this.noAnimations}\"\n        ?no-label-float=\"${this.noLabelFloat}\"\n        ?restore-focus-on-close=\"${this.restoreFocusOnClose}\"\n        @paper-dropdown-open=\"${this._onOpen}\"\n        @paper-dropdown-close=\"${this.onClose}\"\n        @selected-item-changed=\"${this._dropDownChanged}\"\n      >\n        <paper-listbox\n          id=\"listbox\"\n          slot=\"dropdown-content\"\n          class=\"dropdown-content\"\n          .selected=\"${this.selectedItemIndex}\"\n        >\n          <slot id=\"content\"></slot>\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get tag() {\n    return \"dropdown-select\";\n  }\n  constructor() {\n    super();\n    this.allowOutsideScroll = false;\n    this.alwaysFloatLabel = false;\n    this.dynamicAlign = false;\n    this.horizontalAlign = \"right\";\n    this.label = \"Select an option.\";\n    this.noAnimations = false;\n    this.noLabelFloat = false;\n    this.opened = false;\n    this.restoreFocusOnClose = true;\n    this.selectedItemIndex = null;\n    this.selectedItemLabel = null;\n    this.value = null;\n    this.verticalAlign = \"top\";\n    import(\"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\");\n    import(\"@polymer/paper-item/paper-item.js\");\n    import(\"@polymer/paper-listbox/paper-listbox.js\");\n  }\n\n  static get properties() {\n    return {\n      /**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */\n      allowOutsideScroll: {\n        attribute: \"allow-outside-scroll\",\n        type: Boolean\n      },\n\n      /**\n       * Set to true to always float the label.\n       */\n      alwaysFloatLabel: {\n        attribute: \"always-float-label\",\n        type: Boolean\n      },\n\n      /**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */\n      dynamicAlign: {\n        attribute: \"dynamic-align\",\n        type: Boolean\n      },\n\n      /**\n       * The error message to display when invalid.\n       */\n      errorMessage: {\n        attribute: \"error-message\",\n        type: String\n      },\n\n      /**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */\n      horizontalAlign: {\n        attribute: \"horizontal-align\",\n        type: String\n      },\n\n      /**\n       * The label of the select menu\n       */\n      label: {\n        type: String\n      },\n\n      /**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */\n      noAnimations: {\n        attribute: \"no-animations\",\n        type: Boolean\n      },\n\n      /**\n       * Set to true to disable the floating label.\n       */\n      noLabelFloat: {\n        attribute: \"no-label-float\",\n        type: Boolean\n      },\n\n      /**\n       * True if the dropdown is open. Otherwise, false.\n       */\n      opened: {\n        type: Boolean\n      },\n\n      /**\n       * The placeholder for the dropdown.\n       */\n      placeholder: {\n        type: String\n      },\n\n      /**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */\n      restoreFocusOnClose: {\n        attribute: \"restore-focus-on-close\",\n        type: Boolean\n      },\n\n      /**\n       * The last selected item.\n       */\n      selectedItem: {\n        attribute: \"selected-item\",\n        type: Object\n      },\n\n      /**\n       * The index of the selected item\n       */\n      selectedItemIndex: {\n        attribute: \"selected-item-index\",\n        type: Number\n      },\n\n      /**\n       * The label of the selected item\n       */\n      selectedItemLabel: {\n        attribute: \"selected-item-label\",\n        type: String\n      },\n\n      /**\n       * The default value\n       */\n      value: {\n        type: String,\n        reflect: true\n      },\n\n      /**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */\n      verticalAlign: {\n        attribute: \"vertical-align\",\n        type: String\n      },\n\n      /**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */\n      verticalOffset: {\n        attribute: \"vertical-offset\",\n        type: Number\n      }\n    };\n  }\n\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName === \"value\") this._valueChanged(this.value, oldValue);\n    });\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { value: this.value }\n      })\n    );\n  }\n\n  /**\n   * Sets the opened property to true\n   */\n  _onOpen() {\n    this.opened = true;\n    this.dispatchEvent(\n      new CustomEvent(\"open\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n\n  /**\n   * Sets the opened property to false\n   */\n  _onClose() {\n    this.opened = false;\n    this.dispatchEvent(\n      new CustomEvent(\"close\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n  /**\n   * updates value when dropdown-menu's selected item changes\n   * @param {event} e change event\n   */\n  _dropDownChanged(e) {\n    this.value = e.detail.value ? e.detail.value.getAttribute(\"value\") : null;\n  }\n  /**\n   * Notice value has changed and ensure data model is accurate\n   * @param {string} newValue\n   * @param {string} oldValue\n   * @fires dropdown-select-changed\n   * @fires value-changed\n   */\n  _valueChanged(newValue, oldValue) {\n    let items = Array.prototype.slice.call(this.querySelectorAll(`paper-item`));\n    this.selectedItem = this.querySelector(`paper-item[value=\"${newValue}\"]`);\n    this.selectedItemLabel = this.selectedItem\n      ? this.selectedItem.innerHTML\n      : null;\n    this.selectedItemIndex = this.selectedItem\n      ? items.indexOf(this.selectedItem)\n      : null;\n    if (typeof oldValue !== typeof undefined) {\n      this.dispatchEvent(\n        new CustomEvent(\"value-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          target: this,\n          detail: {\n            value: newValue,\n            oldValue: oldValue\n          }\n        })\n      );\n      this.dispatchEvent(\n        new CustomEvent(\"dropdown-select-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    }\n  }\n\n  /**\n   * @event awesome-change\n   *\n   * Fired when `element` changes its awesomeness level.\n   */\n\n  /**\n   * @event value-changed\n   *\n   * fired when value has changed\n   * @param {object} target dropdown-select instance\n   * @param {object} detail `{ value: newValue, oldValue: oldValue }`\n   */\n\n  /**\n   * @event dropdown-select-changed\n   *\n   * fired when value has changed (deprecated)\n   * @param {object} detail dropdown-select instance\n   */\n}\nwindow.customElements.define(DropdownSelect.tag, DropdownSelect);\nexport { DropdownSelect };\n"],"names":["DropdownSelect","allowOutsideScroll","alwaysFloatLabel","dynamicAlign","horizontalAlign","label","noAnimations","noLabelFloat","opened","restoreFocusOnClose","selectedItemIndex","selectedItemLabel","value","verticalAlign","LitElement","html","this","errorMessage","placeholder","verticalOffset","_onOpen","onClose","_dropDownChanged","css","changedProperties","forEach","oldValue","propName","_this2","_valueChanged","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","e","getAttribute","newValue","items","Array","prototype","slice","call","querySelectorAll","selectedItem","querySelector","innerHTML","indexOf","_typeof","target","attribute","type","Boolean","String","Object","Number","reflect","window","customElements","define","tag"],"mappings":"g8EAQMA,yKAuDGC,oBAAqB,IACrBC,kBAAmB,IACnBC,cAAe,IACfC,gBAAkB,UAClBC,MAAQ,sBACRC,cAAe,IACfC,cAAe,IACfC,QAAS,IACTC,qBAAsB,IACtBC,kBAAoB,OACpBC,kBAAoB,OACpBC,MAAQ,OACRC,cAAgB,aACd,8DACA,4CACA,yRAtEkBC,yDAmBlBC,WAGcC,KAAKC,aACFD,KAAKZ,gBAChBY,KAAKX,MACCW,KAAKE,YACFF,KAAKH,cACJG,KAAKG,eACCH,KAAKf,mBACPe,KAAKd,iBACVc,KAAKb,aACLa,KAAKV,aACJU,KAAKT,aACGS,KAAKP,oBACRO,KAAKI,QACJJ,KAAKK,QACJL,KAAKM,iBAMhBN,KAAKN,0DAxCjB,CACLa,8CAgDK,yDAyKDC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GAClB,UAAbA,GAAsBC,EAAKC,cAAcD,EAAKhB,MAAOc,UAEtDI,cACH,IAAIC,YAAY,SAAU,CACxBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CAAEvB,MAAOI,KAAKJ,iDASrBJ,QAAS,OACTsB,cACH,IAAIC,YAAY,OAAQ,CACtBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQnB,gDASPR,QAAS,OACTsB,cACH,IAAIC,YAAY,QAAS,CACvBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQnB,iDAQGoB,QACVxB,MAAQwB,EAAED,OAAOvB,MAAQwB,EAAED,OAAOvB,MAAMyB,aAAa,SAAW,2CASzDC,EAAUZ,OAClBa,EAAQC,MAAMC,UAAUC,MAAMC,KAAK3B,KAAK4B,qCACvCC,aAAe7B,KAAK8B,0CAAmCR,cACvD3B,kBAAoBK,KAAK6B,aAC1B7B,KAAK6B,aAAaE,UAClB,UACCrC,kBAAoBM,KAAK6B,aAC1BN,EAAMS,QAAQhC,KAAK6B,cACnB,mBACAI,EAAOvB,UACJI,cACH,IAAIC,YAAY,gBAAiB,CAC/BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVgB,OAAQlC,KACRmB,OAAQ,CACNvB,MAAO0B,EACPZ,SAAUA,WAIXI,cACH,IAAIC,YAAY,0BAA2B,CACzCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQnB,oDAtOP,CAOLf,mBAAoB,CAClBkD,UAAW,uBACXC,KAAMC,SAMRnD,iBAAkB,CAChBiD,UAAW,qBACXC,KAAMC,SASRlD,aAAc,CACZgD,UAAW,gBACXC,KAAMC,SAMRpC,aAAc,CACZkC,UAAW,gBACXC,KAAME,QAORlD,gBAAiB,CACf+C,UAAW,mBACXC,KAAME,QAMRjD,MAAO,CACL+C,KAAME,QAORhD,aAAc,CACZ6C,UAAW,gBACXC,KAAMC,SAMR9C,aAAc,CACZ4C,UAAW,iBACXC,KAAMC,SAMR7C,OAAQ,CACN4C,KAAMC,SAMRnC,YAAa,CACXkC,KAAME,QAMR7C,oBAAqB,CACnB0C,UAAW,yBACXC,KAAMC,SAMRR,aAAc,CACZM,UAAW,gBACXC,KAAMG,QAMR7C,kBAAmB,CACjByC,UAAW,sBACXC,KAAMI,QAMR7C,kBAAmB,CACjBwC,UAAW,sBACXC,KAAME,QAMR1C,MAAO,CACLwC,KAAME,OACNG,SAAS,GAOX5C,cAAe,CACbsC,UAAW,iBACXC,KAAME,QAORnC,eAAgB,CACdgC,UAAW,kBACXC,KAAMI,kBAoHdE,OAAOC,eAAeC,OAAO5D,EAAe6D,IAAK7D"}