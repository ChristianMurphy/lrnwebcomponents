{
  "version": 2,
  "tags": [
    {
      "name": "dropdown-select\nan easy to use, works as expected dropdown menu.",
      "description": "`dropdown-select`",
      "jsDoc": "/**\n * `dropdown-select`\n * @customElement dropdown-select\n * an easy to use, works as expected dropdown menu.\n *\n * @demo demo/index.html\n */",
      "attributes": [
        {
          "name": "allow-outside-scroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selected-item",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selected-item-index",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selected-item-label",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "vertical-offset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "allowOutsideScroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "alwaysFloatLabel",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamicAlign",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontalAlign",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "noAnimations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "noLabelFloat",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restoreFocusOnClose",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selectedItem",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selectedItemIndex",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selectedItemLabel",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "verticalAlign",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "verticalOffset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "events": [
        {
          "name": "dropdown-select-changed"
        },
        {
          "name": "value-changed"
        },
        {
          "name": "change"
        }
      ],
      "slots": []
    },
    {
      "name": "dropdown-select\nan easy to use, works as expected dropdown menu.",
      "description": "`dropdown-select`",
      "jsDoc": "/**\n * `dropdown-select`\n * @customElement dropdown-select\n * an easy to use, works as expected dropdown menu.\n *\n * @demo demo/index.html\n */",
      "attributes": [
        {
          "name": "allow-outside-scroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selected-item",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selected-item-index",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selected-item-label",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "vertical-offset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "allowOutsideScroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "alwaysFloatLabel",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamicAlign",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontalAlign",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "noAnimations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "noLabelFloat",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restoreFocusOnClose",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selectedItem",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selectedItemIndex",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selectedItemLabel",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "verticalAlign",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "verticalOffset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "events": [
        {
          "name": "dropdown-select-changed"
        },
        {
          "name": "value-changed"
        },
        {
          "name": "change"
        }
      ],
      "slots": []
    },
    {
      "name": "dropdown-select\nan easy to use, works as expected dropdown menu.",
      "description": "`dropdown-select`",
      "jsDoc": "/**\n * `dropdown-select`\n * @customElement dropdown-select\n * an easy to use, works as expected dropdown menu.\n *\n * @demo demo/index.html\n */",
      "attributes": [
        {
          "name": "allow-outside-scroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selected-item",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selected-item-index",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selected-item-label",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "vertical-offset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "properties": [
        {
          "name": "allowOutsideScroll",
          "jsDoc": "/**\n       * @property {boolean} allowOutsideScroll\n       *\n       * Set to true in order to prevent scroll from being constrained\n       * to the dropdown when it opens.\n       */",
          "type": "boolean"
        },
        {
          "name": "alwaysFloatLabel",
          "description": "Set to true to always float the label.",
          "jsDoc": "/**\n       * Set to true to always float the label.\n       */",
          "type": "boolean"
        },
        {
          "name": "dynamicAlign",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "jsDoc": "/**\n       * If true, the `horizontalAlign` and `verticalAlign` properties will\n       * be considered preferences instead of strict requirements when\n       * positioning the dropdown and may be changed if doing so reduces\n       * the area of the dropdown falling outside of `fitInto`.\n       */",
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "description": "The error message to display when invalid.",
          "jsDoc": "/**\n       * The error message to display when invalid.\n       */",
          "type": "string"
        },
        {
          "name": "horizontalAlign",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * horizontally relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label of the select menu",
          "jsDoc": "/**\n       * The label of the select menu\n       */",
          "type": "string"
        },
        {
          "name": "noAnimations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "jsDoc": "/**\n       * Set to true to disable animations when opening and closing the\n       * dropdown.\n       */",
          "type": "boolean"
        },
        {
          "name": "noLabelFloat",
          "description": "Set to true to disable the floating label.",
          "jsDoc": "/**\n       * Set to true to disable the floating label.\n       */",
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "jsDoc": "/**\n       * True if the dropdown is open. Otherwise, false.\n       */",
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "jsDoc": "/**\n       * The placeholder for the dropdown.\n       */",
          "type": "string"
        },
        {
          "name": "restoreFocusOnClose",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "jsDoc": "/**\n       * Whether focus should be restored to the dropdown when the menu closes.\n       */",
          "type": "boolean"
        },
        {
          "name": "selectedItem",
          "description": "The last selected item.",
          "jsDoc": "/**\n       * The last selected item.\n       */",
          "type": "{}"
        },
        {
          "name": "selectedItemIndex",
          "description": "The index of the selected item",
          "jsDoc": "/**\n       * The index of the selected item\n       */",
          "type": "number"
        },
        {
          "name": "selectedItemLabel",
          "description": "The label of the selected item",
          "jsDoc": "/**\n       * The label of the selected item\n       */",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The default value",
          "jsDoc": "/**\n       * The default value\n       */",
          "type": "string"
        },
        {
          "name": "verticalAlign",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "jsDoc": "/**\n       * The orientation against which to align the menu dropdown\n       * vertically relative to the dropdown trigger.\n       */",
          "type": "string"
        },
        {
          "name": "verticalOffset",
          "description": "Overrides the vertical offset computed in\n_computeMenuVerticalOffset.",
          "jsDoc": "/**\n       * Overrides the vertical offset computed in\n       * _computeMenuVerticalOffset.\n       */",
          "type": "number"
        }
      ],
      "events": [
        {
          "name": "dropdown-select-changed"
        },
        {
          "name": "value-changed"
        },
        {
          "name": "change"
        }
      ],
      "slots": []
    }
  ]
}
