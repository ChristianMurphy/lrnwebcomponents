{"version":3,"file":"lrnsys-layout.umd.js","sources":["lib/lrnsys-button-inner.js","lib/lrnsys-collapselist-item.js","lib/lrnsys-collapselist.js","lib/lrnsys-dialog-toolbar-button.js","lib/lrnsys-dialog-toolbar.js","lib/lrnsys-dialog.js","lib/lrnsys-drawer.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n * `lrnsys-button-inner`\n */\nclass LrnsysButtonInner extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n      }\n      :host > div > * {\n        vertical-align: middle;\n      }\n      .text-label {\n        margin-left: 8px;\n      }\n      .text-label-only {\n        margin-left: 0;\n      }\n    </style>\n    <div>\n      <template is=\"dom-if\" if=\"[[avatar]]\">\n        <paper-avatar src\\$=\"[[avatar]]\"></paper-avatar>\n      </template>\n      <template is=\"dom-if\" if=\"[[icon]]\">\n        <lrn-icon icon=\"[[icon]]\"></lrn-icon>\n      </template>\n      <template is=\"dom-if\" if=\"[[text]]\">\n        <span class\\$=\"[[_getTextLabelClass()]]\">[[text]]</span>\n      </template>\n    </div>\n    <div><slot name=\"button\"></slot><slot></slot></div>`;\n  }\n\n  static get tag() {\n    return \"lrnsys-button-inner\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Icon to present for clicking.\n       */\n      icon: {\n        type: String\n      },\n      /**\n       * Icon to present for clicking.\n       */\n      avatar: {\n        type: String\n      },\n      /**\n       * Text to present for clicking.\n       */\n      text: {\n        type: String\n      }\n    };\n  }\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n}\nwindow.customElements.define(LrnsysButtonInner.tag, LrnsysButtonInner);\nexport { LrnsysButtonInner };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n`lrnsys-collapselist-item`\n\n\n* @demo demo/index.html\n*/\nclass LrnsysCollapselistItem extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: block;\n        color: var(--lrnsys-collapselist-text-color, #000);\n      }\n      paper-button {\n        height: 48px;\n        padding: 0;\n        margin: 0;\n        min-width: 0.16px;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n        background-color: var(--lrnsys-collapselist-item-color, #fff);\n      }\n      paper-button span {\n        pointer-events: none;\n      }\n      .collapse-label {\n        padding: 12px 8px 4px 8px;\n        width: 100%;\n        height: 32px;\n      }\n      :host([opened]) #collapse {\n        border-top: 1px solid var(--lrnsys-collapselist-item-border, #bbb);\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      :host([opened]) .collapse-label {\n        font-weight: bold;\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      .collapse-content {\n        padding: 16px;\n      }\n    </style>\n    <paper-button\n      on-tap=\"collapseToggle\"\n      id=\"collapse-trigger\"\n      aria-controls=\"collapse\"\n    >\n      <span class=\"collapse-label\"> <slot name=\"label\"></slot> </span>\n    </paper-button>\n    <iron-collapse id=\"collapse\" opened=\"{{opened}}\">\n      <div class=\"collapse-content\"><slot name=\"content\"></slot></div>\n    </iron-collapse>`;\n  }\n\n  static get tag() {\n    return \"lrnsys-collapselist-item\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Whether or not this is default open on render.\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  /**\n   * Toggling collapse on an iron element.\n   */\n  collapseToggle(e) {\n    this.$.collapse.toggle();\n  }\n}\nwindow.customElements.define(LrnsysCollapselistItem.tag, LrnsysCollapselistItem);\nexport { LrnsysCollapselistItem };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n * `lrnsys-collapselist`\n */\nclass LrnsysCollapselist extends PolymerElement {\n  static get template() {\n    return html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        background-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-text-color: var(--simple-colors-foreground1);\n        --lrnsys-collapselist-item-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-item-active-color: var(\n          --simple-colors-background2\n        );\n        --lrnsys-collapselist-item-border: var(--simple-colors-background5);\n      }\n      ul {\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n      }\n      ul li {\n        width: 100%;\n        border: 1px solid var(--lrnsys-collapselist-item-border);\n        margin-bottom: -1px;\n      }\n      ul li paper-button {\n        height: 32px;\n        padding: 8px;\n        margin: 0;\n        min-width: 0.16px;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n      }\n      ul li paper-button iron-icon,\n      ul li paper-button span {\n        pointer-events: none;\n      }\n      iron-icon {\n        display: inline-block;\n      }\n      .collapse-label {\n        margin-left: 8px;\n      }\n      .collapse-content {\n        padding: 16px;\n      }\n    </style>\n    <ul>\n      <template is=\"dom-repeat\" items=\"{{items}}\" as=\"row\">\n        <li>\n          <lrnsys-collapselist-item>\n            <span slot=\"label\">\n              <iron-icon icon=\"[[row.icon]]\"></iron-icon>\n              <span class=\"collapse-label\">[[row.label]]</span>\n            </span>\n            <span slot=\"content\"> [[row.content]] </span>\n          </lrnsys-collapselist-item>\n        </li>\n      </template>\n    </ul>`;\n  }\n  static get tag() {\n    return \"lrnsys-collapselist\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Array of items to present with label and content for the list of collapses.\n       */\n      items: {\n        type: Array\n      }\n    };\n  }\n}\nwindow.customElements.define(LrnsysCollapselist.tag, LrnsysCollapselist);\nexport { LrnsysCollapselist };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nclass LrnsysDialogToolbarButton extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n      iron-icon {\n        display: inline-block;\n        height: 16px;\n        width: 16px;\n      }\n    </style>\n    <paper-button raisedon-tap=\"_onTap\" id$=\"[[id]]\" aria-label$=\"[[title]]\">\n      <iron-icon icon=\"[[icon]]\"></iron-icon> [[title]]\n    </paper-button>\n    <paper-tooltip for$=\"[[id]]\" animation-delay=\"200\">[[title]]</paper-tooltip>`;\n  }\n  static get tag() {\n    return \"lrnsys-dialog-toolbar-button\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The title of the button.\n       */\n      title: {\n        type: String\n      },\n      /**\n       * The button icon.\n       */\n      icon: {\n        type: String\n      },\n      /**\n       * The button ID.\n       */\n      id: {\n        type: String\n      }\n    };\n  }\n\n  /**\n   * Ready lifecycle\n   */\n  ready() {\n    super.ready();\n    this.dispatchEvent(new CustomEvent(\"button-initialized\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  { id: this.id }\n    }));\n  }\n\n  /**\n   * Button has been tapped.\n   */\n  _onTap(e) {\n    var normalizedEvent = dom(e);\n    var localTarget = normalizedEvent.localTarget;\n    var id = localTarget.getAttribute(\"id\");\n    this.dispatchEvent(new CustomEvent(\"dialog-toolbar-button-tapped\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  { id: id }\n    }));\n  }\n}\nwindow.customElements.define(LrnsysDialogToolbarButton.tag, LrnsysDialogToolbarButton);\nexport { LrnsysDialogToolbarButton };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"./lrnsys-dialog-toolbar-button.js\";\nclass LrnsysDialogToolbar extends PolymerElement {\n  static get template() {\n    return html`\n    <style is=\"custom-style\">\n      :host {\n        display: block;\n        --app-toolbar-primary-height: 40px;\n        --app-toolbar-secondary-height: 50px;\n        --app-toolbar-secondary-color: var(\n          --lrnsys-dialog-secondary-background-color\n        );\n        --app-toolbar-primary-color: var(\n          --lrnsys-dialog-toolbar-background-color\n        );\n        position: relative;\n        margin: 0;\n        padding: 0;\n      }\n      app-toolbar#primary {\n        color: var(--lrnsys-dialog-color, #000);\n        background-color: var(--app-toolbar-primary-color);\n        z-index: 10;\n        position: relative;\n        height: var(--app-toolbar-primary-height);\n      }\n      app-toolbar#secondary {\n        color: var(--lrnsys-dialog-color, #000);\n        background-color: var(--app-toolbar-secondary-color);\n        z-index: 5;\n        position: absolute;\n        width: 100%;\n        transform: translateY(-100%);\n        transition: all 0.3s ease-in;\n        height: var(--app-toolbar-primary-height);\n        display: flex;\n        justify-content: center;\n        padding: 0;\n      }\n      :host([secondary-visible]) #secondary {\n        transform: translateY(0);\n        height: var(--app-toolbar-secondary-height);\n      }\n      .secondary-buttons {\n        display: flex;\n      }\n      .secondary-buttons ::slotted(*) {\n        display: inline-flex;\n      }\n    </style>\n    <app-toolbar id=\"primary\">\n      <slot name=\"primary\"></slot>\n      <div main-title=\"\"></div>\n      <lrnsys-dialog-toolbar-button\n        icon=\"close\"\n        id=\"close\"\n        title=\"close dialog\"\n      ></lrnsys-dialog-toolbar-button>\n    </app-toolbar>\n    <app-toolbar id=\"secondary\" hidden\\$=\"[[!_secondaryHasChildren]]\">\n      <div class=\"secondary-buttons\">\n        <slot name=\"secondary\" id=\"secondary-slot\"></slot>\n      </div>\n    </app-toolbar>`;\n  }\n\n  static get tag() {\n    return \"lrnsys-dialog-toolbar\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Internal state of secondary toolbar\n       */\n      _secondaryHasChildren: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Button tapped\n   */\n  _tapHandler(e) {\n    this.dispatchEvent(new CustomEvent(\"button-clicked\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  e.detail\n    }));\n  }\n\n  /**\n   * Ready.\n   */\n  ready() {\n    super.ready();\n    afterNextRender(this, function () {\n      // listen to see if buttons have been initialized in the secondary toolbar\n      this.$.secondary.addEventListener(\"button-initialized\", e => {\n        this._secondaryHasChildren = true;\n      });\n      this.addEventListener(\"dialog-toolbar-button-tapped\", this._tapHandler.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.$.secondary.removeEventListener(\"button-initialized\", e => {\n      this._secondaryHasChildren = true;\n    });\n    this.removeEventListener(\"dialog-toolbar-button-tapped\", this._tapHandler.bind(this));\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(LrnsysDialogToolbar.tag, LrnsysDialogToolbar);\nexport { LrnsysDialogToolbar };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/simple-modal/simple-modal.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/neon-animation/neon-animations.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n`lrnsys-dialog`\n\n* @demo demo/index.html\n*/\nclass LrnsysDialog extends PolymerElement {\n  static get template() {\n    return html`\n    <custom-style>\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: inline-block;\n          --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);\n          --lrnsys-dialog-background-color: var(--simple-colors-background1);\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background3\n          );\n          --lrnsys-dialog-secondary-background-color: rgba(255, 255, 255, 0.7);\n        }\n        :host([dark]) {\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background1\n          );\n          --lrnsys-dialog-background-color: var(--simple-colors-background3);\n          --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n        }\n        #dialogtrigger {\n          display: inline-block;\n        }\n      </style>\n    </custom-style>\n    <paper-button\n      class$=\"[[class]]\"\n      id=\"dialogtrigger\"\n      on-tap=\"openDialog\"\n      raised=\"[[raised]]\"\n      disabled$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n      aria-label$=\"[[alt]]\"\n    >\n      <lrnsys-button-inner\n        avatar$=\"[[avatar]]\"\n        icon$=\"[[icon]]\"\n        text$=\"[[text]]\"\n      >\n        <slot name=\"button\" slot=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden$=\"[[!alt]]\"\n      >[[alt]]</paper-tooltip\n    >`;\n  }\n\n  static get tag() {\n    return \"lrnsys-dialog\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Icon to present for clicking.\n       */\n      icon: {\n        type: String\n      },\n      /**\n       * If the button should be visually lifted off the UI.\n       */\n      raised: {\n        type: Boolean\n      },\n      /**\n       * Icon to present for clicking.\n       */\n      avatar: {\n        type: String\n      },\n      /**\n       * Text to present for clicking.\n       */\n      text: {\n        type: String\n      },\n      /**\n       * Alt / hover text for this link\n       */\n      alt: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Header for the dialog\n       */\n      header: {\n        type: String\n      },\n      /**\n       * Disabled state.\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Classes to add / subtract based on the item being hovered\n       */\n      hoverClass: {\n        type: String\n      },\n      /**\n       * Default heading classes.\n       */\n      headingClass: {\n        type: String,\n        value: \"white-text black\"\n      },\n      /**\n       * Support for dynamic loading of iron-image elements that are in the content slot.\n       */\n      dynamicImages: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Tracks if focus state is applied\n       */\n      focusState: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Handle a focus/tap event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.add(item);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.remove(item);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  openDialog() {\n    // assemble everything in the slot\n    let nodes = dom(this).getEffectiveChildNodes();\n    let h = document.createElement(\"span\");\n    let c = document.createElement(\"span\");\n    let node = {};\n    for (var i in nodes) {\n      if (typeof nodes[i].tagName !== typeof undefined) {\n        switch (nodes[i].getAttribute(\"slot\")) {\n          case \"toolbar-primary\":\n          case \"toolbar-secondary\":\n          case \"toolbar\":\n          case \"header\":\n            node = nodes[i].cloneNode(true);\n            h.appendChild(node);\n            break;\n          case \"button\":\n            // do nothing\n            break;\n          default:\n            node = nodes[i].cloneNode(true);\n            if (this.dynamicImages && node.tagName === \"IRON-IMAGE\") {\n              node.preventLoad = false;\n              node.removeAttribute(\"prevent-load\");\n            }\n            c.appendChild(node);\n            break;\n        }\n      }\n    }\n    const evt = new CustomEvent(\"simple-modal-show\", {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        title: this.header,\n        elements: {\n          header: h,\n          content: c\n        },\n        invokedBy: this.$.dialogtrigger\n      }\n    });\n    this.dispatchEvent(evt);\n  }\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle(e) {\n      this.dispatchEvent(new CustomEvent(\"focus-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { focus: this.focusState }\n      }));\n    // see if it has hover classes\n      if (typeof this.hoverClass !== typeof undefined) {\n      // break class into array\n        var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          if (this.focusState) {\n            this.$.dialogtrigger.classList.add(item);\n          } else {\n            this.$.dialogtrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n      this.focusState = !this.focusState;\n  }\n  /**\n   * Ready lifecycle\n   */\n  ready() {\n    super.ready();\n    this.__modal = window.SimpleModal.requestAvailability();\n  }\n\n  /**\n   * Attached lifecycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function () {\n      this.$.dialogtrigger.addEventListener(\n        \"focused-changed\",\n        this.focusToggle.bind(this)\n      );\n      this.addEventListener(\"mousedown\", this.tapEventOn.bind(this));\n      this.addEventListener(\"mouseover\", this.tapEventOn.bind(this));\n      this.addEventListener(\"mouseout\", this.tapEventOff.bind(this));\n    });\n  }\n  /**\n   * detached lifecycle\n   */\n  disconnectedCallback() {\n    this.$.dialogtrigger.removeEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n    this.removeEventListener(\"mousedown\", this.tapEventOn.bind(this));\n    this.removeEventListener(\"mouseover\", this.tapEventOn.bind(this));\n    this.removeEventListener(\"mouseout\", this.tapEventOff.bind(this));\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(LrnsysDialog.tag, LrnsysDialog);\nexport { LrnsysDialog };","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/simple-drawer/simple-drawer.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n * `lrnsys-drawer`\n *\n * @demo demo/index.html\n */\nclass LrnsysDrawer extends PolymerElement {\n  static get template() {\n    return html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        --lrnsys-drawer-color: var(--simple-colors-foreground1);\n        --lrnsys-drawer-background-color: var(--simple-colors-background1);\n      }\n      paper-button {\n        display: inline-block;\n      }\n    </style>\n    <paper-button\n      class\\$=\"[[class]]\"\n      id=\"flyouttrigger\"\n      on-tap=\"toggleDrawer\"\n      raised=\"[[raised]]\"\n      disabled\\$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n    >\n      <lrnsys-button-inner avatar=\"[[avatar]]\" icon=\"[[icon]]\" text=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"flyouttrigger\" animation-delay=\"0\"\n      >[[alt]]</paper-tooltip\n    >`;\n  }\n\n  static get tag() {\n    return \"lrnsys-drawer\";\n  }\n  static get properties() {\n    return {\n      /**\n       * State for if it is currently open.\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * If the button should be visually lifted off the UI.\n       */\n      raised: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * Icon to present for clicking.\n       */\n      icon: {\n        type: String\n      },\n      /**\n       * Icon to present for clicking.\n       */\n      avatar: {\n        type: String\n      },\n      /**\n       * Text to present for clicking.\n       */\n      text: {\n        type: String\n      },\n      /**\n       * Side of the screen to align the flyout (right or left)\n       */\n      align: {\n        type: String,\n        value: \"left\"\n      },\n      /**\n       * Alt / hover text for this link\n       */\n      alt: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Header for the drawer\n       */\n      header: {\n        type: String\n      },\n      /**\n       * Disabled state.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Classes to add / subtract based on the item being hovered\n       */\n      hoverClass: {\n        type: String\n      },\n      /**\n       * Heading classes to apply downstream.\n       */\n      headingClass: {\n        type: String,\n        value: \"white-text black\"\n      },\n      /**\n       * Tracks if focus state is applied\n       */\n      focusState: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Ready lifecycle\n   */\n  ready() {\n    super.ready();\n    this.__modal = window.SimpleDrawer.requestAvailability();\n  }\n\n  /**\n   * Attached lifecycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function () {\n      this.addEventListener(\"mousedown\", this.tapEventOn.bind(this));\n      this.addEventListener(\"mouseover\", this.tapEventOn.bind(this));\n      this.addEventListener(\"mouseout\", this.tapEventOff.bind(this));\n      this.$.flyouttrigger.addEventListener(\n        \"focused-changed\",\n        this.focusToggle.bind(this)\n      );\n    });\n  }\n  /**\n   * detached lifecycle\n   */\n  disconnectedCallback() {\n    this.removeEventListener(\"mousedown\", this.tapEventOn.bind(this));\n    this.removeEventListener(\"mouseover\", this.tapEventOn.bind(this));\n    this.removeEventListener(\"mouseout\", this.tapEventOff.bind(this));\n    this.$.flyouttrigger.removeEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Handle a mouse on event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn(e) {\n    if (typeof this.hoverClass !== typeof undefined) {\n      var classes = this.hoverClass.split(\" \");\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.$.flyouttrigger.classList.add(item);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff(e) {\n    if (typeof this.hoverClass !== typeof undefined) {\n      var classes = this.hoverClass.split(\" \");\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.$.flyouttrigger.classList.remove(item);\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  toggleDrawer() {\n    // assemble everything in the slot\n    let nodes = dom(this).getEffectiveChildNodes();\n    let h = document.createElement(\"span\");\n    let c = document.createElement(\"span\");\n    for (var i in nodes) {\n      if (typeof nodes[i].tagName !== typeof undefined) {\n        switch (nodes[i].getAttribute(\"slot\")) {\n          case \"header\":\n            h.appendChild(nodes[i].cloneNode(true));\n            break;\n          default:\n            c.appendChild(nodes[i].cloneNode(true));\n            break;\n        }\n      }\n    }\n    const evt = new CustomEvent(\"simple-drawer-show\", {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        title: this.header,\n        elements: { content: c, header: h },\n        invokedBy: this.$.flyouttrigger,\n        align: this.align,\n        size: \"30%\",\n        clone: false\n      }\n    });\n    this.dispatchEvent(evt);\n  }\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle(e) {\n    this.dispatchEvent(new CustomEvent(\"focus-changed\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  { focus: this.focusState }\n    }));\n    // see if it has hover classes\n    if (typeof this.hoverClass !== typeof undefined) {\n      // break class into array\n      var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          if (this.focusState) {\n            this.$.flyouttrigger.classList.add(item);\n          } else {\n            this.$.flyouttrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n    this.focusState = !this.focusState;\n  }\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n}\nwindow.customElements.define(LrnsysDrawer.tag, LrnsysDrawer);\nexport { LrnsysDrawer };"],"names":["LrnsysButtonInner","PolymerElement","this","avatar","icon","html","type","String","text","window","customElements","define","tag","LrnsysCollapselistItem","e","$","collapse","toggle","opened","Boolean","value","reflectToAttribute","notify","LrnsysCollapselist","items","Array","LrnsysDialogToolbarButton","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","id","dom","localTarget","getAttribute","title","LrnsysDialogToolbar","afterNextRender","secondary","addEventListener","_this","_secondaryHasChildren","_tapHandler","bind","removeEventListener","_this2","LrnsysDialog","root","_typeof","hoverClass","split","forEach","item","index","dialogtrigger","classList","add","remove","nodes","getEffectiveChildNodes","h","document","createElement","c","node","i","tagName","cloneNode","appendChild","dynamicImages","preventLoad","removeAttribute","evt","header","elements","content","invokedBy","focus","focusState","__modal","SimpleModal","requestAvailability","focusToggle","tapEventOn","tapEventOff","raised","alt","disabled","headingClass","LrnsysDrawer","SimpleDrawer","flyouttrigger","align","size","clone","_this3"],"mappings":"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"}