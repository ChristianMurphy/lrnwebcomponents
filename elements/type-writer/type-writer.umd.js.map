{"version":3,"file":"type-writer.umd.js","sources":["type-writer.umd.js"],"sourcesContent":["/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from 'lit-element/lit-element.js';\n\n/**\n * `type-writer`\n * `typewritter effect`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @demo demo/index.html\n * @customElement type-writer\n */\nclass TypeWriter extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n      `\n    ];\n  }\n\n  // render function\n  render() {\n    return html`\n\n<slot></slot>\n<div>${this.delay}</div>\n<div>${this.cursorDuration}</div>\n<div>${this.text}</div>\n<div>${this.speed}</div>\n<div>${this.eraseSpeed}</div>\n<div>${this.typing}</div>\n<div>${this._length}</div>\n<div>${this._oldText}</div>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Type writer\",\n    \"description\": \"typewritter effect\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\n      \"Writer\"\n    ],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"delay\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"cursorDuration\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"text\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"speed\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"eraseSpeed\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"typing\",\n        \"description\": \"\",\n        \"inputMethod\": \"boolean\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"_length\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"_oldText\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n};\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  ...super.properties,\n  \n  \"delay\": {\n    \"name\": \"delay\",\n    \"type\": Number,\n    \"value\": \"0\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"cursorDuration\": {\n    \"name\": \"cursorDuration\",\n    \"type\": Number,\n    \"value\": \"0\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"text\": {\n    \"name\": \"text\",\n    \"type\": String,\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"speed\": {\n    \"name\": \"speed\",\n    \"type\": Number,\n    \"value\": \"150\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"eraseSpeed\": {\n    \"name\": \"eraseSpeed\",\n    \"type\": Number,\n    \"value\": \"150\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"typing\": {\n    \"name\": \"typing\",\n    \"type\": Boolean,\n    \"value\": \"false\",\n    \"reflectToAttribute\": true,\n    \"observer\": false\n  },\n  \"_length\": {\n    \"name\": \"_length\",\n    \"type\": Number,\n    \"value\": \"0\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"_oldText\": {\n    \"name\": \"_oldText\",\n    \"type\": String,\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n};\n  }\n\n  /**\n   * Convention we use\n   */\n  static get tag() {\n    return \"type-writer\";\n  }\n\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    \n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated(changedProperties) {\n    \n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      /* notify example\n      // notify\n      if (propName == 'format') {\n        this.dispatchEvent(\n          new CustomEvent(`${propName}-changed`, {\n            detail: {\n              value: this[propName],\n            }\n          })\n        );\n      }\n      */\n      /* observer example\n      if (propName == 'activeNode') {\n        this._activeNodeChanged(this[propName], oldValue);\n      }\n      */\n      /* computed example\n      if (['id', 'selected'].includes(propName)) {\n        this.__selectedChanged(this.selected, this.id);\n      }\n      */\n    });\n  }\n  \n}\ncustomElements.define(TypeWriter.tag, TypeWriter);\nexport { TypeWriter };\n"],"names":["TypeWriter","LitElement","html","this","delay","cursorDuration","text","speed","eraseSpeed","typing","_length","_oldText","css","Number","String","Boolean","changedProperties","forEach","oldValue","propName","customElements","define","tag"],"mappings":"m+DAgBMA,2YAAmBC,yDAmBdC,WAGJC,KAAKC,MACLD,KAAKE,eACLF,KAAKG,KACLH,KAAKI,MACLJ,KAAKK,WACLL,KAAKM,OACLN,KAAKO,QACLP,KAAKQ,iDAzBA,CACNC,wDA6BK,WACG,eACG,iBACE,QACR,OACE,0BACM,0BACP,sBACC,eACC,CACR,kBAES,CACT,MACU,sCAGJ,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,oBACG,eACA,sBACH,OACJ,iBAEV,UACc,6BACG,eACA,sBACH,OACJ,iBAEV,UACc,mBACG,eACA,sBACH,OACJ,iBAEV,UACc,oBACG,eACA,sBACH,OACJ,iBAEV,UACc,yBACG,eACA,sBACH,OACJ,iBAEV,UACc,qBACG,eACA,oBACH,OACJ,iBAEV,UACc,sBACG,eACA,sBACH,OACJ,iBAEV,UACc,uBACG,eACA,sBACH,OACJ,2BAGA,+aASL,MACC,aACAC,aACC,wBACa,YACV,kBAEI,MACR,sBACAA,aACC,wBACa,YACV,QAEN,MACE,YACAC,aACC,uBACa,YACV,SAEL,MACC,aACAD,aACC,0BACa,YACV,cAEA,MACJ,kBACAA,aACC,0BACa,YACV,UAEJ,MACA,cACAE,cACC,4BACa,YACV,WAEH,MACD,eACAF,aACC,wBACa,YACV,YAEF,MACF,gBACAC,aACC,uBACa,YACV,uCASL,0DAaIE,oCAMLA,GACNA,EAAkBC,QAAQ,SAACC,EAAUC,eA2BzCC,eAAeC,OAAOrB,EAAWsB,IAAKtB"}