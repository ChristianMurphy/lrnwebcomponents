{"version":3,"file":"glossary-term.umd.js","sources":["glossary-term.umd.js"],"sourcesContent":["/**\n * Copyright 2019 PSU\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/lrn-vocab/lrn-vocab.js\";\n\n/**\n * `glossary-term`\n * ``\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass GlossaryTerm extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: inline-block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\nlrn-vocab {\n  display: inline;\n}</style>\n<template is=\"dom-if\" if=\"[[!_fallback]]\">\n  <lrn-vocab term=\"[[display]]\">\n    <div>[[definition]]</div>\n  </lrn-vocab>\n</template>\n<template is=\"dom-if\" if=\"[[_fallback]]\">\n  <slot></slot>\n</template>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Glossary term\",\n    \"description\": \"\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Term\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"heyMP\",\n      \"owner\": \"PSU\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"name\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"definition\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      },\n      {\n        \"property\": \"display\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"name\": {\n    \"name\": \"name\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"definition\": {\n    \"name\": \"display\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"display\": {\n    \"name\": \"display\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  },\n  \"_fallback\": {\n    \"name\": \"fallback\",\n    \"type\": \"Boolean\",\n    \"value\": true,\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"glossary-term\";\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(GlossaryTerm.haxProperties, GlossaryTerm.tag, this);\n    // fetch definition\n    fetch(\"http://localhost:4000\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `{ term(name: \"${this.name}\") { name definition } }`\n      })\n    })\n      .then(r => r.json())\n      .then(r => {\n        try {\n          this.definition = r.data.term.definition;\n          this._fallback = false;\n        } catch (error) {}\n      });\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(GlossaryTerm.tag, GlossaryTerm);\n\nexport { GlossaryTerm };\n"],"names":["GlossaryTerm","PolymerElement","html","HAXWiring","setup","haxProperties","tag","this","fetch","method","headers","body","JSON","stringify","query","name","then","r","json","_this","definition","data","term","_fallback","error","window","customElements","define"],"mappings":"g4DAmBMA,gaAAqBC,+DAIhBC,wDAwBA,WACG,eACG,iBACE,QACR,OACE,4BACM,QACP,sBACC,eACC,CAAC,gBACA,CACT,MACU,sCAGJ,QACI,cACD,iBAGD,OACD,aACI,CACX,UACc,mBACG,eACA,sBACH,OACJ,iBAEV,UACc,yBACG,eACA,sBACH,OACJ,iBAEV,UACc,sBACG,eACA,sBACH,OACJ,2BAGA,8CAOL,MACD,MACE,YACA,eACC,uBACa,YACV,cAEA,MACJ,eACA,eACC,uBACa,YACV,WAEH,MACD,eACA,eACC,uBACa,YACV,aAED,MACH,gBACA,iBACC,sBACa,YACV,sCAWL,uIAQFC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMJ,EAAaK,cAAeL,EAAaM,IAAKC,MAEnEC,MAAM,wBAAyB,CAC7BC,OAAQ,OACRC,QAAS,gBAAkB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,8BAAwBP,KAAKQ,qCAG9BC,KAAK,SAAAC,UAAKA,EAAEC,SACZF,KAAK,SAAAC,OAEFE,EAAKC,WAAaH,EAAEI,KAAKC,KAAKF,WAC9BD,EAAKI,WAAY,EACjB,MAAOC,4CAQjBC,OAAOC,eAAeC,OAAO3B,EAAaM,IAAKN"}