{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-player-behaviors.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-html5.js","lib/a11y-media-play-button.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-state-manager.js","lib/a11y-media-youtube.js","a11y-media-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n\nexport { A11yMediaBehaviors };\n/**\n * `a11y-media-behaviors`\n * `A set of properties common to player and transcript a11y-media components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends SimpleColors\n * @customElement\n * @polymer\n */\nclass A11yMediaBehaviors extends SimpleColors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * autoplay is an option,\n       * but generally not recommended for a11y\n       */\n      autoplay: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show closed captions\n       */\n      cc: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * The height of the media player.\n       */\n      height: {\n        type: Number,\n        value: null\n      },\n      /**\n       * is YouTube?\n       */\n      isYoutube: {\n        type: Boolean,\n        computed: \"_hasAttribute(youtubeId)\"\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\"\n      },\n      /**\n       * custom localization settings\n       */\n      localization: {\n        type: Object,\n        value: {}\n      },\n      /**\n       * default localization settings\n       */\n      localizationDefaults: {\n        type: Object,\n        value: {\n          audio: { label: \"Audio\" },\n          autoScroll: {\n            label: \"Scroll transcript with video.\",\n            icon: \"swap-vert\"\n          },\n          captions: {\n            label: \"Closed Captions\",\n            icon: \"av:closed-caption\",\n            off: \"Off\"\n          },\n          forward: {\n            label: \"Forward\",\n            icon: \"av:fast-forward\"\n          },\n          fullscreen: {\n            label: \"Fullscreen\",\n            icon: \"fullscreen\"\n          },\n          loading: {\n            label: \"Loading...\"\n          },\n          loop: {\n            label: \"Loop Playback\"\n          },\n          mute: {\n            label: \"Mute\",\n            icon: \"av:volume-up\"\n          },\n          nextResult: {\n            label: \"Next\",\n            icon: \"arrow-forward\"\n          },\n          pause: {\n            label: \"Pause\",\n            icon: \"av:pause\"\n          },\n          play: {\n            label: \"Play\",\n            icon: \"av:play-arrow\"\n          },\n          prevResult: {\n            label: \"Previous\",\n            icon: \"arrow-back\"\n          },\n          print: {\n            label: \"Print the transcript.\",\n            icon: \"print\"\n          },\n          restart: {\n            label: \"Restart\",\n            icon: \"av:replay\"\n          },\n          rewind: {\n            label: \"Backward\",\n            icon: \"av:fast-rewind\"\n          },\n          search: {\n            label: \"Search the transcript.\",\n            icon: \"search\"\n          },\n          settings: {\n            label: \"Settings\",\n            icon: \"settings\"\n          },\n          speed: {\n            label: \"Speed %\"\n          },\n          transcript: {\n            label: \"Transcript\",\n            icon: \"description\",\n            loading: \"Loading the transcript(s)...\",\n            skip: \"Skip to the transcript.\"\n          },\n          unmute: {\n            label: \"Unmute\",\n            icon: \"av:volume-off\"\n          },\n          video: {\n            label: \"Video\"\n          },\n          volume: {\n            label: \"Volume\"\n          }\n        },\n        readOnly: true\n      },\n      /**\n       * Loop the video?\n       */\n      loop: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Dash.js manifest source?\n       */\n      manifest: {\n        type: String,\n        value: null\n      },\n      /**\n       * Is audio muted?\n       */\n      muted: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Preload the sources: auto, metadata (default), or none.\n       */\n      preload: {\n        type: String,\n        value: \"metadata\"\n      },\n      /**\n       * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n       */\n      playbackRate: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * status\n       */\n      status: {\n        type: String,\n        value: \"loading...\"\n      },\n      /**\n       * the selected track\n       */\n      selectedTrack: {\n        type: Object,\n        value: null\n      },\n      /**\n       * id of the selected track\n       */\n      selectedTrackID: {\n        type: Number,\n        value: null\n      },\n      /**\n       * array of tracks and cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      },\n      /**\n       * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n       */\n      volume: {\n        type: Number,\n        value: 70\n      },\n      /**\n       * the id for the video\n       */\n      youtubeId: {\n        type: String,\n        value: null\n      },\n      /**\n       * the YouTube player object\n       */\n      youTube: {\n        type: Object,\n        value: {}\n      }\n    };\n  }\n\n  /**\n   * gets behaviors\n   */\n  static get behaviors() {\n    return [SimpleColors, ResponsiveUtility];\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _hasAttribute(attr) {\n    return attr !== undefined && attr !== null;\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr, val) {\n    return attr === val;\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * converts time in millesconds to HH:MM:SS\n   *\n   * @param {float} the elapsed time, in seconds\n   * @param {float} the duration, in seconds\n   * @returns {string} a human-readable string of elapsed time/duration in HH:MM:SS\n   *\n   */\n  _getHHMMSS(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n\n  /**\n   * gets the localization by compaing the localization set to the defaults\n   *\n   * @param {object} the localization object\n   * @param {string} the key to search for\n   * @param {string} the subkey to search for\n   * @returns {string} the default value for [key][subkey], unless localization[key][subkey] exists\n   */\n  _getLocal(localization, key, subkey) {\n    let local = \"\";\n    if (\n      localization !== undefined &&\n      localization[key] !== undefined &&\n      localization[key][subkey] !== undefined\n    ) {\n      local = localization[key][subkey];\n    } else if (\n      this.localizationDefaults !== undefined &&\n      this.localizationDefaults[key] !== undefined &&\n      this.localizationDefaults[key][subkey] !== undefined\n    ) {\n      local = this.localizationDefaults[key][subkey];\n    }\n    return local;\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handlePrintClick(e) {\n    this.dispatchEvent(new CustomEvent(\"print-transcript\", { detail: this }));\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n}\nwindow.customElements.define(A11yMediaBehaviors.tag, A11yMediaBehaviors);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\n\nexport { A11yMediaPlayerBehaviors };\n/**\n * `a11y-media-player-behaviors`\n * `A set of properties for a11y-media components that are NOT used in the transcript components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaPlayerBehaviors extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Allow this media to play concurrently with other a11y-media-players?\n       * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n       */\n\n      allowConcurrent: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is it an audio player with no thumbnail?\n       */\n      audioNoThumb: {\n        type: Boolean,\n        computed: \"_getAudioNoThumb(audioOnly,thumbnailSrc)\"\n      },\n      /**\n       * Is this an audio file?\n       */\n      audioOnly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Use compact controls?\n       */\n      compactControls: {\n        type: Boolean,\n        computed: \"_getCompactControls(responsiveSize)\"\n      },\n      /**\n       * crossorigin attribute for <video> and <audio> tags\n       */\n      crossorigin: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * Use dark theme on transcript? Default is false, even when player is dark.\n       */\n      darkTranscript: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable fullscreen option\n       */\n      disableFullscreen: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disableInteractive: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable transcript search feature\n       */\n      disableSearch: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable autoscrolling as transcript plays\n       */\n      disableScroll: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * disable transcript print button\n       */\n      disablePrintButton: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Determines if video and transcript are in a flex layout\n       */\n      flexLayout: {\n        type: Boolean,\n        computed:\n          \"_isFlexLayout(standAlone,hideTranscript,audioNoThumb,stackedLayout)\",\n        reflectToAttribute: true\n      },\n      /**\n       * Is fullscreen mode?\n       */\n      fullscreen: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show the FullscreenButton?\n       */\n      fullscreenButton: {\n        type: Boolean,\n        computed: \"_getFullscreenButton(disableFullscreen)\",\n        notify: true\n      },\n      /**\n       * Does the player have tracks?\n       */\n      hasCaptions: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Does the player have an interactive transcript?\n       */\n      hasTranscript: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * The height of the media player.\n       */\n      height: {\n        type: String,\n        value: null\n      },\n      /**\n       * Hide elapsed time?\n       */\n      hideElapsedTime: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * initially hide the transcript?\n       */\n      hideTranscript: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * show cue's start and end time\n       */\n      hideTimestamps: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * the media to be manipulated\n       */\n      media: {\n        type: Object,\n        value: null\n      },\n      /**\n       * the language of the media (if different from user interface language)\n       */\n      mediaLang: {\n        type: String,\n        value: \"en\"\n      },\n      /**\n       * optional title of media (shows when printed)\n       */\n      mediaTitle: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * mute/unmute button\n       */\n      muteUnmute: {\n        type: Object,\n        computed: \"_getMuteUnmute(muted,localization)\"\n      },\n      /**\n       * Is media playing?\n       */\n      playing: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * play/pause button\n       */\n      playPause: {\n        type: Object,\n        computed: \"_getPlayPause(playing,localization)\"\n      },\n      /**\n       * Size of the a11y media element for responsive styling\n       */\n      responsiveSize: {\n        type: String,\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * the search tool for the transcript\n       */\n      search: {\n        type: Object,\n        value: null\n      },\n      /**\n       * is YouTube?\n       */\n      showCustomCaptions: {\n        type: Boolean,\n        computed: \"_showCustomCaptions(isYoutube,audioOnly,hasCaptions,cc)\"\n      },\n      /**\n       * stacked layout instead of side-by-side?\n       */\n      stackedLayout: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is stand-alone player (without transcript)?\n       */\n      standAlone: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      },\n      /**\n       * Source of optional thumbnail image\n       */\n      thumbnailSrc: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * The width of the media player.\n       */\n      width: {\n        type: String,\n        value: null\n      }\n    };\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player-behaviors\";\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {boolean} Is the media audio only?\n   * @param {string} optional: the source URL of the thumbnail image\n   * @returns {boolean} Should height of video/thumbnail area be set to 0?\n   */\n  _getAudioNoThumb(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  }\n\n  /**\n   * returns whether or not the fullscreen mode should be disabled\n   *\n   * @param {boolean} Is fullscreen mode set to disabled?\n   * @returns {boolean} Should fullscreen disabled?\n   */\n  _getFullscreenButton(disableFullscreen) {\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   *\n   * @param {string} the size of the player: `xs`,`sm`,`md`,`lg`, or `xl`\n   * @returns {boolean} Should the player use compact controls?\n   */\n  _getCompactControls(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} icon if button pauses media\n   * @param {string} label if button plays media\n   * @param {string} icon if button plays media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"Pause\", \"icon\": \"av:pause\"}`\n   */\n  _getPlayPause(playing, localization) {\n    return playing\n      ? {\n          label: this._getLocal(localization, \"pause\", \"label\"),\n          icon: this._getLocal(localization, \"pause\", \"icon\"),\n          action: \"pause\"\n        }\n      : {\n          label: this._getLocal(localization, \"play\", \"label\"),\n          icon: this._getLocal(localization, \"play\", \"icon\"),\n          action: \"play\"\n        };\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media muted?\n   * @param {string} label if button mutes media\n   * @param {string} icon if button mutes media\n   * @param {string} label if button unmutes media\n   * @param {string} icon if button unmutes media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"mute\", \"icon\": \"av:volume-off\"}`\n   */\n  _getMuteUnmute(muted, localization) {\n    return muted\n      ? {\n          label: this._getLocal(localization, \"unmute\", \"label\"),\n          icon: this._getLocal(localization, \"unmute\", \"icon\"),\n          action: \"unmute\"\n        }\n      : {\n          label: this._getLocal(localization, \"mute\", \"label\"),\n          icon: this._getLocal(localization, \"mute\", \"icon\"),\n          action: \"mute\"\n        };\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return (isYoutube || audioOnly) && hasCaptions && cc;\n  }\n\n  /**\n   * Does the player have custom CC tracks?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @returns {boolean} Does the player have custom CC?\n   */\n  _hasCustomCaptions(isYoutube, audioOnly, hasCaptions) {\n    return (isYoutube || audioOnly) && hasCaptions;\n  }\n\n  /**\n   * Determines if video and transcript are in a flex layout\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the transcript hidden?\n   * @param {boolean} Does the media no video or thumbnail image?\n   * @param {boolean} Is the layout stacked?\n   * @returns {boolean} Is the video in flex layout mode?\n   */\n  _isFlexLayout(standAlone, hideTranscript, audioNoThumb, stackedLayout) {\n    return !standAlone && !hideTranscript && !audioNoThumb && !stackedLayout;\n  }\n}\nwindow.customElements.define(\n  A11yMediaPlayerBehaviors.tag,\n  A11yMediaPlayerBehaviors\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaButton };\n/**\n * `a11y-media-button`\n * `A button used in a11y-media-controls and a11y-media-transcript-controls.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaButton extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is button action to send as an event\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-button\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          margin: 0;\n          padding: 0;\n        }\n        :host #button {\n          margin: 0;\n          padding: 8px;\n          line-height: 1;\n          border: none;\n          transition: color 0.25s;\n          color: var(--a11y-media-button-color);\n          background-color: var(--a11y-media-button-bg-color);\n        }\n        :host([toggle]) #button {\n          color: var(--a11y-media-button-toggle-color);\n          background-color: var(--a11y-media-button-toggle-bg-color);\n        }\n        :host([toggle]:active) #button,\n        :host([toggle]:focus) #button,\n        :host([toggle]:hover) #button,\n        :host(:active) #button,\n        :host(:focus) #button,\n        :host(:hover) #button {\n          cursor: pointer;\n          color: var(--a11y-media-button-hover-color);\n          background-color: var(--a11y-media-button-hover-bg-color);\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host paper-tooltip {\n          z-index: 100;\n        }\n        iron-icon {\n          display: inline-block;\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-label$=\"[[label]]\"\n        aria-pressed$=\"[[toggle]]\"\n        aria-role=\"button\"\n        controls=\"[[controls]]\"\n        disabled$=\"[[disabled]]\"\n        on-tap=\"_buttonTap\"\n        tabindex=\"0\"\n        toggle$=\"[[toggle]]\"\n      >\n        <iron-icon icon=\"[[icon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"button\">[[label]]</paper-tooltip>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * lets player know this button was clicked\n   */\n  _buttonTap() {\n    this.dispatchEvent(new CustomEvent(\"tap\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaButton.tag, A11yMediaButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaControls };\n/**\n * `a11y-media-controls`\n * `The controls bar for the a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-button \n  accent-color$=\"[[accentColor]]\"             // Optional accent color for controls, \n                                              // using the following materialize colors: \n                                              // red, pink, purple, deep-purple, indigo, blue, \n                                              // light blue, cyan, teal, green, light green, lime, \n                                              // yellow, amber, orange, deep-orange, and brown. \n                                              // Default is null. \n  allow-fullscreen$=\"[[allowFullscreen]]\"     // Allow fullscreen mode?\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  dark$=\"[[dark]]\"                            // Is the color scheme dark? Default is light.    \n  disableFullscreen$=\"[[disableFullscreen]]\"  // Is full screen mode disabled?\n  fullscreen$=\"[[fullscreen]]\"                // Is full screen mode toggled on?\n  hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n  loop$=\"[[loop]]\"                            // Is video on a loop?\n  microcopy$=\"[[microcopy]]\"                  // Optional customization or text and icons\n  muted$=\"[[muted]]\"                          // Is video muted?\n  responsive-size$=\"[[responsiveSize]]\"       // The size of the player determines how controls are displayed\n  volume$=\"[[volume]]\">                       // The initial volume of the video\n</a11y-media-button>```\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaControls extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Is the player a fixed height (iframe mode) so that theure is no transcript toggle?\n       */\n      fixedHeight: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * hide the transcript toggle menu item?\n       */\n      hideTranscriptButton: {\n        type: Boolean,\n        computed: \"_hideTranscriptButton(noTranscriptMenu,compactControls)\"\n      },\n      /**\n       * hide the print transcript feature available?\n       */\n      noPrinting: {\n        type: Boolean,\n        computed: \"_noPrinting(standalone,fixedHeight)\"\n      },\n      /**\n       * Is the transctipt toggle feature available?\n       */\n      noTranscriptToggle: {\n        type: Boolean,\n        computed: \"_noTranscriptToggle(standalone,fixedHeight,hasTranscript)\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          height: 44px;\n          max-height: 44px;\n          position: relative;\n          color: var(--a11y-media-color);\n          --primary-text-color: var(--a11y-media-settings-menu-color);\n          --paper-menu-button-dropdown-background: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-background-color: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-color: var(--a11y-media-settings-menu-color);\n          --paper-listbox: {\n            padding: 0;\n          };\n          --paper-menu-button: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n          };\n          --paper-menu-button-dropdown: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n            margin-top: 0 !important;\n            margin-bottom: 0 !important;\n          };\n          --paper-item-selected: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n          --paper-item-focused: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n        }\n        :host > #controls-left {\n          position: absolute;\n          left: 0;\n          min-width: 200px;\n        }\n        :host > #controls-right {\n          position: absolute;\n          right: 0;\n          top: -2px;\n        }\n        :host paper-menu-button,\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host paper-icon-button {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-icon-button:active,\n        :host paper-icon-button:focus,\n        :host paper-icon-button:hover {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-item {\n          min-height: 40;\n        }\n        :host paper-slider {\n          @apply --a11y-media-slider;\n        }\n        :host .play-status,\n        :host paper-icon-button {\n          border: none;\n          position: relative;\n        }\n        :host .play-status {\n          font-size: 85%;\n        }\n        :host .play-status.control-bar {\n          padding: 8px 13px 8px;\n        }\n        :host([hide-play-status]) .play-status {\n          display: none;\n        }\n        :host .setting {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n        :host .setting-text {\n          min-width: 125px;\n        }\n        :host .setting-control {\n          max-width: 100px;\n        }\n        :host .setting-slider {\n          width: 130px;\n          margin-left: -15px;\n          margin-right: -15px;\n          @apply --a11y-media-slider;\n        }\n        :host #speed {\n          --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n        }\n        :host #showvolume {\n          display: inline;\n          position: relative;\n        }\n        :host #volume {\n          z-index: 1;\n          position: absolute;\n          left: 30px;\n          top: -5px;\n          width: 0;\n          overflow: hidden;\n          transition: width 0.5s;\n          z-index: 3;\n          background-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n\n        }\n        :host #volume:active,\n        :host #volume:focus,\n        :host #volume:hover,\n        :host #volume.focus,\n        :host #showvolume:active #volume,\n        :host #showvolume:focus #volume,\n        :host #showvolume:hover #volume {\n          overflow: visible;\n          width: 100px;\n        }\n        :host([responsive-size=\"xs\"]) #volume:active,\n        :host([responsive-size=\"xs\"]) #volume:focus,\n        :host([responsive-size=\"xs\"]) #volume:hover,\n        :host([responsive-size=\"xs\"]) #volume.focus,\n        :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n          top: -35px\n          border-radius: 4px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div id=\"controls-left\">\n        <a11y-media-button\n          action$=\"[[playPause.action]]\"\n          icon$=\"[[playPause.icon]]\"\n          label$=\"[[playPause.label]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"rewind\"\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal(localization,'rewind','icon')]]\"\n          label$=\"[[_getLocal(localization,'rewind','label')]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"forward\"\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal(localization,'forward','icon')]]\"\n          label$=\"[[_getLocal(localization,'forward','label')]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"restart\"\n          disabled$=\"[[compactControls]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal(localization,'restart','icon')]]\"\n          label$=\"[[_getLocal(localization,'restart','label')]]\"\n          on-tap=\"_onButtonTap\"\n        ></a11y-media-button>\n        <div id=\"showvolume\">\n          <a11y-media-button\n            id=\"mute\"\n            action$=\"[[muteUnmute.action]]\"\n            icon$=\"[[muteUnmute.icon]]\"\n            label$=\"[[muteUnmute.label]]\"\n            on-tap=\"_onButtonTap\"\n          ></a11y-media-button>\n          <span id=\"volume-slider-label\" class=\"sr-only\">[[volumeLabel]]</span>\n          <paper-slider\n            id=\"volume\"\n            aria-labelledby=\"volume-slider-label\"\n            min=\"0\"\n            max=\"100\"\n            on-change=\"_onSettingsChanged\"\n            pin\n            step=\"10\"\n            value$=\"[[volume]]\"\n          ></paper-slider>\n        </div>\n        <span class=\"play-status control-bar\">\n          <span id=\"statbar\"></span>\n        </span>\n      </div>\n      <div id=\"controls-right\">\n        <a11y-media-button\n          action=\"captions\"\n          disabled$=\"[[!hasCaptions]]\"\n          hidden$=\"[[!hasCaptions]]\"\n          icon$=\"[[_getLocal(localization,'captions','icon')]]\"\n          label$=\"[[_getLocal(localization,'captions','label')]]\"\n          on-tap=\"_onButtonTap\"\n          toggle$=\"[[cc]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"transcript\"\n          controls=\"transcript\"\n          disabled$=\"[[hideTranscriptButton]]\"\n          hidden$=\"[[hideTranscriptButton]]\"\n          icon$=\"[[_getLocal(localization,'transcript','icon')]]\"\n          label$=\"[[_getLocal(localization,'transcript','label')]]\"\n          on-tap=\"_onButtonTap\"\n          toggle$=\"[[!hideTranscript]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"print\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal(localization,'print','icon')]]\"\n          label=\"[[_getLocal(localization,'print','label')]]\"\n          on-tap=\"_handlePrintClick\"\n        >\n        </a11y-media-button>\n        <paper-menu-button\n          id=\"settings\"\n          allow-outside-scroll\n          horizontal-align=\"right\"\n          ignore-select\n          on-change=\"_onSettingsChanged\"\n          on-iron-activate=\"_handleSettingsActivate\"\n          on-iron-select=\"_handleSettingsSelect\"\n          vertical-align=\"bottom\"\n        >\n          <paper-icon-button\n            action=\"settings\"\n            alt$=\"[[_getLocal(localization,'settings','label')]]\"\n            icon$=\"[[_getLocal(localization,'settings','icon')]]\"\n            slot=\"dropdown-trigger\"\n          >\n          </paper-icon-button>\n          <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n            <paper-item hidden$=\"[[!hasCaptions]]\">\n              <div class=\"setting\">\n                <div class=\"setting-text\">\n                  [[_getLocal(localization,'captions','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <dropdown-select\n                    id=\"tracks\"\n                    disabled$=\"[[!hasCaptions]]\"\n                    no-label-float\n                    on-change=\"_handleTrackChange\"\n                    value\n                  >\n                    <paper-item value=\"\"\n                      >[[_getLocal(localization,'captions','off')]]</paper-item\n                    >\n                    <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                      <paper-item value$=\"{{option.value}}\"\n                        >{{option.text}}</paper-item\n                      >\n                    </template>\n                  </dropdown-select>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[noTranscriptToggle]]\">\n              <div class=\"setting\">\n                <div id=\"transcript-label\" class=\"setting-text\">\n                  [[_getLocal(localization,'transcript','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"transcript-toggle\"\n                    aria-labelledby=\"transcript-label\"\n                    checked$=\"[[!hideTranscript]]\"\n                    controls=\"transcript\"\n                    disabled$=\"[[noTranscriptToggle]]\"\n                  >\n                  </paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"loop-label\" class=\"setting-text\">\n                  [[_getLocal(localization,'loop','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"loop\"\n                    aria-labelledby=\"loop-label\"\n                    checked$=\"[[loop]]\"\n                  ></paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"speed-label\" class=\"setting-text\">\n                  [[_getLocal(localization,'speed','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-slider\n                    id=\"speed\"\n                    aria-labelledby=\"speed-label\"\n                    class=\"setting-slider\"\n                    label=\"tracks\"\n                    min=\"0.5\"\n                    max=\"4\"\n                    pin\n                    step=\"0.5\"\n                    tab-index=\"-1\"\n                    value$=\"[[playbackRate]]\"\n                  ></paper-slider>\n                </div>\n              </div>\n            </paper-item>\n          </paper-listbox>\n        </paper-menu-button>\n        <paper-tooltip for=\"settings\">\n          [[_getLocal(localization,'settings','label')]]\n        </paper-tooltip>\n        <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n          <template is=\"dom-if\" if=\"[[!audioNoThumb]]\">\n            <a11y-media-button\n              action=\"fullscreen\"\n              icon$=\"[[_getLocal(localization,'fullscreen','icon')]]\"\n              label$=\"[[_getLocal(localization,'fullscreen','label')]]\"\n              on-tap=\"_onButtonTap\"\n              toggle$=\"[[fullscreen]]\"\n              step=\"1\"\n            >\n            </a11y-media-button>\n          </template>\n        </template>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.$.mute.$.button.onfocus = function() {\n      root.$.volume.classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.$.mute.$.button.onblur = function() {\n      root.$.volume.classList.remove(\"focus\");\n    };\n  }\n\n  /**\n   * updates the play status of the media\n   *\n   * @param {string} the status, eg., `Loading...` or `00:02:01/00:11:43`\n   */\n  setStatus(status) {\n    this.$.statbar.innerText = status;\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {object} the tracks of the media\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", []);\n    this.set(\"tracks\", tracks.slice(0));\n  }\n\n  /**\n   * handles when the tracks dropdown selection changes\n   * (when the tracks dropdown-select changes, update track and CC button)\n   */\n  _handleTrackChange(e) {\n    let root = this;\n    if (root.__selectedTrack !== null) {\n      if (e.detail.value !== \"\") {\n        root.dispatchEvent(\n          new CustomEvent(\"select-track\", {\n            detail: { control: root, value: e.detail.value }\n          })\n        );\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: true }\n          })\n        );\n      } else {\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: false }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsSelect(e) {\n    //e.preventDefault();\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsActivate(e) {\n    //if (e.target == this.$.settingslist) e.preventDefault();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.detail })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.target })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * Determines if the transcript button should be hidden.\n   *\n   * @param {boolean} Is this feature available?\n   * @param {boolean} Is the player too small to fit the extra controls?\n   * @returns {boolean} Show the transcript button?\n   */\n  _hideTranscriptButton(noTranscriptToggle, compactControls) {\n    return noTranscriptToggle || compactControls;\n  }\n\n  /**\n   * Determines if the print transcript feature is available from the controls.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should print transcript be unavailable from controls?\n   */\n  _noPrinting(standAlone, fixedHeight) {\n    return standAlone || !fixedHeight;\n  }\n\n  /**\n   * Determines if the transcript toggle feature is available.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should transcript toggle be unavailable?\n   */\n  _noTranscriptToggle(standAlone, fixedHeight, hasTranscript) {\n    return standAlone || fixedHeight || !hasTranscript;\n  }\n}\nwindow.customElements.define(A11yMediaControls.tag, A11yMediaControls);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\n\nexport { A11yMediaHtml5 };\n/**\n * `a11y-media-html5`\n * `Loads HTML5 audio or video. `\n *\n * @microcopy - language worth noting:\n```<a11y-media-html5 \n    autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n    cc$=\"[[cc]]\"                                // Are closed captions toggled? \n    height$=\"[[height]]\"                        // The height of player\n    lang$=\"[[lang]]\"                            // The language of the media\n    loop$=\"[[loop]]\"                            // Is video on a loop?\n    muted$=\"[[muted]]\"                          // Is video muted?\n    playback-rate$=\"[[playbackRate]]\"           // The playback rate of the video\n    volume$=\"[[volume]]\"                        // The initial volume of the video\n    width$=\"[[width]]\">                         // The width of player\n                                                // video source and tracks \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-html5>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaHtml5 extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it paused?\n       */\n      paused: {\n        type: Boolean,\n        value: true\n      },\n      /*\n       * the seekable range of the media\n       */\n      seekable: {\n        type: Object,\n        value: {\n          length: 0,\n          start: null,\n          stop: null\n        }\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-html5\";\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          height: 100%;\n          display: flex;\n          align-items: stretch;\n          position: relative;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #video {\n          width: 100%;\n          max-width: 100%;\n        }\n      </style>\n      <video\n        id=\"video\"\n        aria-hidden$=\"[[isYoutube]]\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 video not supported\n      </video>\n      <audio\n        id=\"audio\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[!audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        preload=\"metadata\"\n      >\n        HTML5 audio not supported\n      </audio>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    root.media =\n      root.$.video !== undefined && !root.audioOnly\n        ? root.$.video\n        : root.$.audio;\n  }\n\n  /**\n   * handles the loaded metadata\n   */\n  _handleMetadata() {\n    let root = this;\n    root.duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.tracks = [];\n    root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.seekable = root.media.seekable;\n    root.setVolume(root.volume);\n    root.setMute(root.muted);\n    root.setCC(root.cc);\n    root.setLoop(root.loop);\n    root.setPlaybackRate(root.playbackRate);\n\n    // adjusts aspect ratio\n    root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n    root.dispatchEvent(new CustomEvent(\"media-loaded\", { detail: root }));\n  }\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  }\n\n  /**\n   * gets the current time\n   *\n   * @returns {float} the elapsed time, in seconds\n   */\n  getCurrentTime() {\n    return this.media.currentTime;\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    this.paused = false;\n    this.media.play();\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    this.paused = true;\n    this.media.pause();\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {float} the index of the track\n   */\n  selectTrack(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks to a specific time\n   */\n  seek(time) {\n    this.media.currentTime = time;\n  }\n\n  /**\n   * sets captions\n   *\n   * @param {boolean} Turn CC on? `true` is on; `false` or `null` is off.\n   *\n   */\n  setCC(mode) {\n    this.media.cc = mode === true;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.$.video.textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.$.video.textTracks.value = \"\";\n    }\n  }\n\n  /**\n   * sets volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.media.volume = value / 100;\n  }\n\n  /**\n   * sets speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  }\n\n  /**\n   * sets looping\n   *\n   * @param {boolean} Turn looping on? `true` is on; `false` or `null` is off.\n   */\n  setLoop(mode) {\n    this.media.loop = mode === true;\n  }\n\n  /**\n   * sets mute\n   *\n   * @param {boolean} Turn mute on? `true` is on; `false` or `null` is off.\n   */\n  setMute(mode) {\n    this.media.muted = mode;\n  }\n}\nwindow.customElements.define(A11yMediaHtml5.tag, A11yMediaHtml5);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaPlayButton };\n/**\n * `a11y-media-play-button`\n * `A giant play button that overlays the media in a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-play-button\n  playing$=\"[[__playing]]\"            // Is the media currently playing?\n</a11y-media-play-button>\n\nCustom styles:\n--a11y-play-button-bg-color: overlay background color, default is #000000\n--a11y-play-button-focus-bg-color: overlay background color, default is --a11y-play-button-bg-color```\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaPlayButton extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is button action to send as an event\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /**\n       * is button disabled\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * is media playing\n       */\n      playing: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-play-button\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          opacity: 1;\n          transition: opacity 0.5s;\n        }\n        :host([disabled]),\n        :host([elapsed]) {\n          opacity: 0;\n        }\n        :host,\n        :host #thumbnail,\n        :host #background,\n        :host #button {\n          width: 100%;\n          top: 0;\n          left: 0;\n          opacity: 1;\n          transition: opacity 0.5s;\n        }\n        :host #thumbnail,\n        :host #background,\n        :host #button {\n          position: absolute;\n          height: 100%;\n          padding: 0;\n          margin: 0;\n          border: none;\n        }\n        :host #thumbnail {\n          height: auto;\n          overflow: hidden;\n        }\n        :host #button {\n          overflow: hidden;\n          background: transparent;\n        }\n        :host #button:hover {\n          cursor: pointer;\n        }\n        :host #background {\n          opacity: 0.3;\n          background: var(--a11y-play-button-bg-color);\n        }\n        :host #button:focus #background,\n        :host #button:hover #background {\n          background: var(--a11y-play-button-focus-bg-color);\n          opacity: 0.1;\n        }\n        :host #arrow {\n          stroke: #ffffff;\n          fill: #000000;\n        }\n        :host #text {\n          fill: #ffffff;\n        }\n        :host .sr-only {\n          font-size: 0;\n        }\n        @media print {\n          :host(:not([thumbnail-src])),\n          :host #background,\n          :host #svg {\n            display: none;\n          }\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-pressed$=\"[[playing]]\"\n        aria-hidden$=\"[[disabled]]\"\n        tabindex=\"0\"\n        disabled$=\"[[disabled]]\"\n        controls=\"video\"\n        on-tap=\"_buttonTap\"\n        title$=\"[[label]]\"\n      >\n        <svg\n          id=\"svg\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 200 200\"\n          width=\"30%\"\n          height=\"30%\"\n          opacity=\"0.7\"\n        >\n          <g>\n            <polygon\n              id=\"arrow\"\n              points=\"30,20 30,180 170,100\"\n              fill=\"#000000\"\n              stroke=\"#ffffff\"\n              stroke-width=\"15px\"\n            ></polygon>\n            <text\n              id=\"text\"\n              class=\"sr-only\"\n              x=\"50\"\n              y=\"115\"\n              fill=\"#ffffff\"\n              font-size=\"30px\"\n            >\n              [[playPause.label]]\n            </text>\n          </g>\n        </svg>\n      </button>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.text.innerText = this.playLabel;\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * handle button tap\n   */\n  _buttonTap() {\n    let root = this;\n    root.dispatchEvent(new CustomEvent(\"controls-change\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaPlayButton.tag, A11yMediaPlayButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\n\nexport { A11yMediaTranscriptCue };\n/**\n * `a11y-media-transcript-cue`\n * `A single cue in a11y-media-transcriptas static text or as an button that controls media.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-cue \n  active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n  cue$=\"[[cue]]\"                                  // An array of cue data\n  order$=\"[[cue.order]]\"                          // The index of the current cue\n  disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n  controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n  hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n</a11y-media-transcript-cue>```\n * \n * Custom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n *   \n * Custom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n *   \n * Custom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptCue extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is cue active\n       */\n      active: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"_getActiveCue(cue,activeCues)\",\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * array of currently active cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        notify: true\n      },\n      /**\n       * array of cue data\n       */\n      cue: {\n        type: Array,\n        value: null\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * parsed cue text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-cue\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          cursor: default;\n          display: table-row;\n          width: 100%;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          transition: color 0.25s, background-color 0.25s;\n        }\n        :host([hide-timestamps]) {\n          display: inline;\n        }\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          cursor: pointer;\n          color: var(--a11y-media-transcript-focused-cue-color);\n          background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n          outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n          @apply --a11y-media-transcript-focused-cue;\n        }\n        :host([active]) {\n          color: var(--a11y-media-transcript-active-cue-color);\n          background-color: var(--a11y-media-transcript-active-cue-bg-color);\n          @apply --a11y-media-transcript-active-cue;\n        }\n        :host #text {\n          display: table-cell;\n          width: 100%;\n          line-height: 200%;\n        }\n        :host([hide-timestamps]) #text {\n          display: inline;\n        }\n        :host #time {\n          display: table-cell;\n          font-size: 80%;\n          padding: 0 16px 0 0;\n          white-space: nowrap;\n          font-family: monospace;\n        }\n        :host([hide-timestamps]) #time {\n          display: none;\n        }\n        :host simple-search-content {\n          --simple-search-match-text-color: var(\n            --a11y-media-transcript-match-color\n          );\n          --simple-search-match-bg-color: var(\n            --a11y-media-transcript-match-bg-color\n          );\n          --simple-search-match-border-color: var(\n            --a11y-media-transcript-match-border-color\n          );\n          --simple-search-match: {\n            border: none;\n            border-radius: 4px;\n            font-weight: normal;\n          }\n        }\n        @media print {\n          :host,\n          :host([active]),\n          :host(:not([active]):not([disabled]):active),\n          :host(:not([active]):not([disabled]):focus),\n          :host(:not([active]):not([disabled]):hover) {\n            color: #000000;\n            background-color: #ffffff;\n          }\n        }\n      </style>\n      <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n      <span id=\"text\">\n        <simple-search-content id=\"content\" content=\"[[cue.text]]\">\n          [[cue.text]]\n        </simple-search-content>\n      </span>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.$.content.enableSearch(search);\n    }\n    root.addEventListener(\"click\", root._handleTap);\n  }\n\n  /**\n   * gets the active cue for styling\n   *\n   * @param {object} the current cue object\n   * @param {array} an array of all active cues\n   * @returns {boolean} Is the cue active?\n   */\n  _getActiveCue(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  }\n\n  /**\n   * handles tap\n   */\n  _handleTap(e) {\n    let root = this;\n    this.dispatchEvent(new CustomEvent(\"tap\", { detail: root.cue.seek }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptCue.tag,\n  A11yMediaTranscriptCue\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"./a11y-media-transcript-cue.js\";\n\nexport { A11yMediaTranscript };\n/**\n * `a11y-media-transcript`\n * `A transcript element to pair with a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  media-id=\"\"                                     // The id of the player\n  selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n</a11y-media-transcript>```\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscript extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * array of cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * the id of media\n       */\n      mediaId: {\n        type: String,\n        value: null\n      },\n      /**\n       * tabindex of cues\n       */\n      tabIndex: {\n        type: Number,\n        computed: \"_getTabIndex(disableInteractive)\"\n      },\n      /**\n       * tabindex of cues\n       */\n      role: {\n        type: Number,\n        computed: \"_getRole(disableInteractive)\"\n      },\n      /**\n       * selected transcript track id\n       */\n      selectedTranscript: {\n        type: String,\n        value: \"0\"\n      },\n      /**\n       * array of cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          color: var(--a11y-media-transcript-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          border-left: 1px solid var(--a11y-media-transcript-bg-color);\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        :host .transcript-from-track {\n          display: none;\n          width: calc(100% - 30px);\n          padding: 0 15px 15px;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n        }\n        :host .transcript-from-track[active] {\n          display: table;\n        }\n        :host .transcript-from-track[active][hideTimestamps] {\n          display: block;\n        }\n        :host .sr-only:not(:focus) {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media print {\n          :host {\n            padding: 0 15px 5px;\n            color: #000;\n            background-color: #ffffff;\n            border-top: 1px solid #aaa;\n          }\n        }\n      </style>\n      <a id=\"transcript-desc\" class=\"sr-only\" href=\"#bottom\">\n        [[_getLocal(localization,'transcript','skip')]]\n      </a>\n      <div\n        id=\"loading\"\n        active$=\"[[_isLoading(selectedTranscript, tracks)]]\"\n        class=\"transcript-from-track\"\n      >\n        [[_getLocal(localization,'transcript','loading')]]\n      </div>\n      <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          id=\"track\"\n          class=\"transcript-from-track\"\n          lang=\"{{track.language}}\"\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            <a11y-media-transcript-cue\n              accent-color$=\"[[accentColor]]\"\n              active-cues$=\"[[activeCues]]\"\n              controls$=\"[[mediaId]]\"\n              cue$=\"{{cue}}\"\n              disabled$=\"[[disableInteractive]]\"\n              disable-search$=\"[[disableSearch]]\"\n              hide-timestamps$=\"[[hideTimestamps]]\"\n              on-tap=\"_handleCueSeek\"\n              order$=\"{{cue.order}}\"\n              role=\"button\"\n              search=\"[[search]]\"\n              tabindex=\"0\"\n            >\n            </a11y-media-transcript-cue>\n          </template>\n        </div>\n      </template>\n      <div id=\"bottom\" class=\"sr-only\"></div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n  }\n\n  /**\n   * prints the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  print(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#track[active]\").cloneNode(true),\n      css = html`\n        <style>\n          a11y-media-transcript-cue {\n            display: table-row;\n            background-color: #fff;\n            color: #000;\n          }\n          a11y-media-transcript-cue[hide-timestamps],\n          a11y-media-transcript-cue[hide-timestamps] #text {\n            display: inline;\n          }\n          a11y-media-transcript-cue #text {\n            display: table-cell;\n            line-height: 200%;\n          }\n          a11y-media-transcript-cue #time {\n            display: table-cell;\n            font-size: 80%;\n            padding: 0 16px;\n            white-space: nowrap;\n            font-family: monospace;\n          }\n          a11y-media-transcript-cue[hide-timestamps] #time {\n            display: none;\n          }\n          a11y-media-transcript-cue [matched] {\n            background-color: #fff;\n            color: #eee;\n            padding: 3px 4px;\n            border-radius: 3px;\n          }\n        </style>\n      `,\n      h1 = html`\n        <h1>Transcript</h1>\n      `;\n    if (mediaTitle !== undefined) h1.innerHTML = mediaTitle;\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n        \"\",\n        \"\",\n        \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n      );\n      print.document.body.appendChild(css);\n      print.document.body.appendChild(h1);\n      print.document.body.appendChild(track);\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  }\n\n  /**\n   * updates activeCues array and scrolls to position\n   *\n   * @param {array} an array of cues\n   */\n  setActiveCues(cues) {\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#track\") !== null &&\n        root.shadowRoot.querySelector(\"#track\") !== undefined\n          ? root.shadowRoot.querySelector(\"#track\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#track a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (!root.disableScroll && (cue !== null) & (cue !== undefined)) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {object} the player\n   */\n  setMedia(player) {\n    this.media = player;\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {array} an array of tracks\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.$.tracks.render();\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {boolean} Hide transcript? `true` is hidden, `false` is visible, and `null` toggles based on current state.\n   */\n  toggleHidden(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {integer} the tabindex of the cue\n   */\n  _getTabIndex(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  }\n\n  /**\n   * gets the role of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {string} the role of the cue, `button` or `null`\n   */\n  _getRole(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  }\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _handleCueSeek(e) {\n    if (!this.disableInteractive) {\n      this.dispatchEvent(new CustomEvent(\"cue-seek\", { detail: e.detail }));\n    }\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isActive(selectedTranscript, index) {\n    return (\n      selectedTranscript !== undefined &&\n      selectedTranscript !== null &&\n      parseInt(selectedTranscript) === parseInt(index)\n    );\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isLoading(selectedTranscript, tracks) {\n    return (\n      selectedTranscript === undefined ||\n      selectedTranscript === null ||\n      tracks === undefined ||\n      tracks === null ||\n      tracks.length === 0\n    );\n  }\n\n  _stampLocal(localization, id, key) {\n    this.$[id].innerHTML = this._getLocal(localization, \"transcript\", key);\n    return this._getLocal(localization, \"transcript\", key);\n  }\n}\nwindow.customElements.define(A11yMediaTranscript.tag, A11yMediaTranscript);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./a11y-media-player-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaTranscriptControls };\n/**\n * `a11y-media-transcript-controls`\n * `A controls for the transcript element.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-controls \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n</a11y-media-transcript-controls>```\n *\n * @extends A11yMediaPlayerBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptControls extends A11yMediaPlayerBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-controls\";\n  }\n\n  //get player-specifc properties\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: flex;\n          height: 44px;\n          max-height: 44px;\n          min-height: 44px;\n          color: var(--a11y-media-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-hover-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-input-text-color: var(--a11y-media-color);\n          --simple-search-input-line-color: var(--a11y-media-accent-color);\n          --simple-search-input-placeholder-color: var(\n            --a11y-media-transcript-color\n          );\n          --simple-search-button-color: var(--a11y-media-accent-color);\n          --simple-search-button-hover-color: var(\n            --a11y-media-faded-accent-color\n          );\n          --simple-search-button-bg-color: var(--a11y-media-bg-color);\n          --simple-search-button-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-hover-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-disabled-color: var(\n            --simple-colors-default-theme-grey-5\n          );\n          --simple-search-button-disabled-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --simple-search-button-disabled-border-color: var(\n            --simple-colors-default-theme-grey-3\n          );\n          --paper-input-container-input-color: var(--a11y-media-color);\n          --simple-search-container: {\n            padding: 0 15px;\n          }\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n      </style>\n      <div id=\"searchbar\">\n        <div id=\"searching\">\n          <simple-search\n            id=\"simplesearch\"\n            controls=\"transcript\"\n            disabled$=\"[[disableSearch]]\"\n            hidden$=\"[[disableSearch]]\"\n            no-label-float\n            next-button-icon$=\"[[_getLocal(localization,'nextResult','icon')]]\"\n            next-button-label$=\"[[_getLocal(localization,'nextResult','label')]]\"\n            prev-button-icon$=\"[[_getLocal(localization,'prevResult','icon')]]\"\n            prev-button-label$=\"[[_getLocal(localization,'prevResult','label')]]\"\n            search-input-icon$=\"[[_getLocal(localization,'search','icon')]]\"\n            search-input-label$=\"[[_getLocal(localization,'search','label')]]\"\n            target=\"[[target]]\"\n          >\n          </simple-search>\n        </div>\n        <div id=\"scrolling\">\n          <a11y-media-button\n            id=\"scroll\"\n            controls=\"transcript\"\n            icon=\"[[_getLocal(localization,'autoScroll','icon')]]\"\n            label=\"[[_getLocal(localization,'autoScroll','label')]]\"\n            on-tap=\"_handleScrollClick\"\n            toggle$=\"[[!disableScroll]]\"\n          >\n          </a11y-media-button>\n        </div>\n        <div\n          id=\"printing\"\n          hidden$=\"[[disablePrintButton]]\"\n          disabled$=\"[[disablePrintButton]]\"\n        >\n          <a11y-media-button\n            id=\"print\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal(localization,'print','icon')]]\"\n            label=\"[[_getLocal(localization,'print','label')]]\"\n            on-tap=\"_handlePrintClick\"\n          >\n          </a11y-media-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.search = root.$.simplesearch;\n    root.dispatchEvent(\n      new CustomEvent(\"searchbar-added\", { detail: root.search })\n    );\n  }\n\n  /**\n   * handles the transcript scroll button toggle\n   */\n  _handleScrollClick(e) {\n    this.dispatchEvent(new CustomEvent(\"toggle-scroll\", { detail: this }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptControls.tag,\n  A11yMediaTranscriptControls\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaStateManager = window.A11yMediaStateManager || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.A11yMediaStateManager.requestAvailability = () => {\n  if (!window.A11yMediaStateManager.instance) {\n    window.A11yMediaStateManager.instance = document.createElement(\n      \"a11y-media-state-manager\"\n    );\n    document.body.appendChild(window.A11yMediaStateManager.instance);\n  }\n  return window.A11yMediaStateManager.instance;\n};\n/**\n * `a11y-media-state-manager`\n * `A utility that manages the state of multiple a11y-media-players on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaStateManager extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-state-manager\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      players: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Manages which player is sticky.\n       */\n      stickyPlayer: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  constructor() {\n    super();\n    let root = this;\n    root.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaStateManager.instance) {\n      window.A11yMediaStateManager.instance = this;\n\n      // listen for a players added to the page\n      window.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    window.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  }\n\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n  checkConcurrentPlayers() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  }\n\n  /**\n   * stops all other players on the page\n   *\n   * @param {object} the player to set stickiness\n   */\n  setStickyPlayer(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  }\n\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n  _checkScroll() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  }\n\n  /**\n   * gets parent node in light DOM\n   *\n   * @param {object} the node\n   * @returns {object} the parent node\n   */\n  _getParentNode(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    window.removeEventListener(\"a11y-player\", root.__playerLoader);\n    window.removeEventListener(\"a11y-player-playing\", root.__stickyManager);\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  }\n}\nwindow.customElements.define(A11yMediaStateManager.tag, A11yMediaStateManager);\nexport { A11yMediaStateManager };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaYoutube = window.A11yMediaYoutube || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\n\nwindow.A11yMediaYoutube.requestAvailability = () => {\n  if (!window.A11yMediaYoutube.instance) {\n    window.A11yMediaYoutube.instance = document.createElement(\n      \"a11y-media-youtube\"\n    );\n    document.body.appendChild(window.A11yMediaYoutube.instance);\n  }\n  return window.A11yMediaYoutube.instance;\n};\n/**\n * `a11y-media-youtube`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaYoutube extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-youtube\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * whether or not the YouTube API is ready\n       */\n      apiReady: {\n        type: \"Boolean\",\n        value: window.YT !== undefined\n      },\n      /**\n       * a counter for creating unique ideas for each YouTube player container\n       */\n      counter: {\n        type: \"Number\",\n        value: 0\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this,\n      api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = () => {\n      var event = new CustomEvent(\"youtube-api-ready\");\n      root.apiReady = true;\n      document.dispatchEvent(event);\n    };\n  }\n\n  /**\n   * initializes the youtube player for a given element\n   *\n   * @param {options} the YouTube options object, eg. `{ \"width\": \"100%\", \"height\": \"100%\", \"videoId\": \"NP0mQeLWCCo\" }`\n   * @returns {options} the YouTube player object\n   */\n  initYoutubePlayer(options) {\n    //get unique id for each youtube iframe\n    // function to create and init iframe\n    let temp = \"a11y-media-yt-\",\n      div = document.createElement(\"div\"),\n      vdata = options.videoId.split(/[\\?&]/),\n      vid = vdata[0],\n      start = null,\n      end = null,\n      cue = { videoId: vid };\n    this.counter++;\n    temp += this.counter;\n    document.body.appendChild(div);\n    div.setAttribute(\"id\", temp);\n    let loadVideo = e => {\n        for (let i = 1; i < vdata.length; i++) {\n          let param = vdata[i].split(\"=\");\n          if (param[0] === \"t\") {\n            let hh = param[1].match(/(\\d)+h/),\n              mm = param[1].match(/(\\d)+m/),\n              ss = param[1]\n                .replace(/\\d+h/, \"\")\n                .replace(/\\d+m/, \"\")\n                .replace(/s/, \"\")\n                .match(/(\\d)+/),\n              h = hh !== null && hh.length > 1 ? parseInt(hh[1]) * 360 : 0,\n              m = mm !== null && mm.length > 1 ? parseInt(mm[1]) * 60 : 0,\n              s = ss !== null && ss.length > 1 ? parseInt(ss[1]) : 0;\n            start = parseInt(h + m + s);\n          } else if (param[0] === \"start\") {\n            start = parseInt(param[1]);\n          } else if (param[0] === \"end\") {\n            end = parseInt(param[1]);\n          }\n        }\n        if (start !== null) {\n          start = Math.max(0, start);\n          cue.startSeconds = start;\n        }\n        if (end !== null) {\n          end = start !== null ? Math.max(start, end) : Math.max(0, end);\n          cue.endSeconds = end;\n        }\n        e.target.cueVideoById(cue);\n      },\n      iframe = new YT.Player(temp, {\n        width: options.width,\n        height: options.height,\n        events: { onReady: loadVideo },\n        playerVars: {\n          color: \"white\",\n          controls: 0,\n          autoplay: options.autoplay,\n          disablekb: 1,\n          enablejsapi: 1,\n          iv_load_policy: 3,\n          modestbranding: 1,\n          showinfo: 0,\n          rel: 0\n        }\n      });\n\n    // add methods and properties to api so that it matches HTML5 video\n    iframe.tracks = [];\n    iframe.seekable = { length: 0 };\n    iframe.duration = 0;\n    iframe.paused = true;\n    iframe.timeupdate;\n    iframe.play = () => {\n      if (iframe.playVideo !== undefined) iframe.playVideo();\n    };\n    iframe.addEventListener(\"onStateChange\", () => {\n      iframe.paused = iframe.getPlayerState() !== 1;\n      if (iframe.paused) {\n        clearInterval(iframe.timeupdate);\n      } else {\n        iframe.timeupdate = setInterval(() => {\n          document.dispatchEvent(\n            new CustomEvent(\"timeupdate\", { detail: iframe })\n          );\n        }, 1);\n      }\n    });\n    iframe.pause = () => {\n      if (iframe.pauseVideo !== undefined) iframe.pauseVideo();\n    };\n    iframe.seek = (time = 0) => {\n      if (iframe.seekTo !== undefined) {\n        iframe.pause();\n        iframe.seekTo(time);\n        document.dispatchEvent(\n          new CustomEvent(\"timeupdate\", { detail: iframe })\n        );\n      }\n    };\n    iframe.setMute = mode => {\n      if (iframe.mute !== undefined) mode ? iframe.mute() : iframe.unMute();\n    };\n    //keep playing the video until the duration is loaded\n    let int = setInterval(() => {\n        if (iframe.playVideo !== undefined) {\n          clearInterval(int);\n          if (iframe.getDuration === undefined || iframe.duration === 0)\n            iframe.play();\n        }\n      }, 100),\n      int2 = setInterval(() => {\n        if (iframe.getDuration !== undefined && iframe.getDuration() > 0) {\n          clearInterval(int2);\n          iframe.duration = iframe.getDuration();\n          iframe.pause();\n          start = start !== null ? Math.min(start, iframe.duration) : 0;\n          end = end !== null ? Math.min(end, iframe.duration) : iframe.duration;\n          //add markers to the slider; could be used in future for interactive as well\n          iframe.seekable.length = 1;\n          iframe.seekable.start = index => {\n            return start;\n          };\n          iframe.seekable.end = index => {\n            return end;\n          };\n          iframe.seekTo(start);\n          document.dispatchEvent(\n            new CustomEvent(\"youtube-video-metadata-loaded\", { detail: iframe })\n          );\n        }\n      }, 100);\n    // return the iframe so that a11y-media-player can control it\n    return iframe;\n  }\n}\nwindow.customElements.define(A11yMediaYoutube.tag, A11yMediaYoutube);\nexport { A11yMediaYoutube };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaPlayerBehaviors } from \"./lib/a11y-media-player-behaviors.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"./lib/screenfull-lib.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-html5.js\";\nimport \"./lib/a11y-media-play-button.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-state-manager.js\";\nimport \"./lib/a11y-media-youtube.js\";\n\nexport { A11yMediaPlayer };\n/**\n * `a11y-media-player`\n * An accessible video player\n *\n * @microcopy - the mental model for this element\n * ```\n<a11y-media-player\n  accent-color$=\"[[accentColor]]\"              // Optional accent color for controls,\n                                               // using the following materialize colors:\n                                               // red, pink, purple, deep-purple, indigo, blue,\n                                               // light blue, cyan, teal, green, light green, lime,\n                                              // yellow, amber, orange, deep-orange, and brown.\n                                              // Default is null.\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  custom-microcopy$=\"[[customMicrocopy]]\"  // Optional customization or text and icons\n  dark$=\"[[dark]]\"  // Is the color scheme dark? Default is light.\n  dark-transcript$=\"[[darkTranscript]]\"  // Use dark theme on transcript? Default is false, even when player is dark.\n  disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n  disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n  fullscreen$=\"[[fullscreen]]\"  // Is full screen mode toggled on?\n  height$=\"[[height]]\"  // The height of player\n  hide-elapsed-time$=\"[[hideElapsedTime]]\"    // Is elapsed time hidden?\n  hide-timestamps$=\"[[hideTimestamps]]\"  // Hide cue timestamps?\n  lang$=\"[[lang]]\"  // The language of the media\n  loop$=\"[[loop]]\"  // Is video on a loop?\n  muted$=\"[[muted]]\"  // Is video muted?\n  media-title$=\"[[mediaTitle]]\"  // The title of the media\n  playback-rate$=\"[[playbackRate]]\"  // The speed that video plays, default is 1 (for 100%)\n  sticky-corner$=\"[[stickyCorner]]\"  // When user scrolls a playing video off-screen,\n  which corner will it stick to? Values are:\n  top-right (default), top-left, bottom-left, bottom-right,\n  and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"  // Optional thumbanil/cover image url\n  volume$=\"[[volume]]\">  // The initial volume of the video\n\n  <!--video sources and tracks-->\n  <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n  <source src=\"/path/to/video.webm\" type=\"video/webm\">\n  <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n  <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n  <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n\n</a11y-media-player>```\n *\n * Intermediate customization of player:\n * ```\n--a11y-media-text-color: text color, default is --simple-colors-default-theme-grey-11\n--a11y-media-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-default-theme-grey-12\n--a11y-media-hover-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-accent-color: an accent color, default is --simple-colors-default-theme-accent-9\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-default-theme-accent-8\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color```\n *\n * Intermediate customization of transcript:\n * ```\n --a11y-media-transcript-color: transcript color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-default-theme-grey-12```\n *\n * Advanced styles for settings menu:\n * ```\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color```\n *\n * Advanced styles for buttons:\n * ```\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color```\n *\n * Advanced styles for toggles:\n * ```\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color```\n *\n * Advanced styles for sliders:\n * ```\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color```\n *\n * @extends A11yMediaPlayerBehaviors\n * @polymer\n * @customElement\n * @demo demo/index.html video demo\n * @demo demo/audio.html audio demo\n * @demo demo/youtube.html YouTube demo\n *\n */\nclass A11yMediaPlayer extends A11yMediaPlayerBehaviors {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  width: calc(100% - 2px);\n  border: 1px solid var(--simple-colors-default-theme-grey-3);\n  --a11y-media-color: var(--simple-colors-default-theme-grey-11);\n  --a11y-media-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n  --a11y-media-hover-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-accent-color: var(--simple-colors-default-theme-accent-9);\n  --a11y-media-faded-accent-color: var(--simple-colors-default-theme-accent-8);\n\n  \n  --a11y-media-settings-menu-color: var(--a11y-media-color);\n  --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n  --a11y-media-settings-menu-hover-bg-color: var(--a11y-media-hover-bg-color);\n\n  \n  --a11y-media-button-color: var(--a11y-media-color);\n  --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n  --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n  --a11y-media-button-toggle-color: var(--a11y-media-faded-accent-color);\n\n  \n  --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n  --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n  --paper-toggle-button-checked-bar-color: var(--a11y-media-accent-color);\n  --paper-toggle-button-checked-button-color: var(--a11y-media-accent-color);\n\n  \n  --paper-slider-active-color: var(--a11y-media-accent-color);\n  --paper-slider-secondary-color: var(--a11y-media-faded-accent-color);\n  --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-knob-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n  \n  \n  --a11y-media-transcript-color: var(--simple-colors-default-theme-grey-7);\n  --a11y-media-transcript-bg-color: var(--simple-colors-default-theme-grey-1);\n  --a11y-media-transcript-accent-color: var(--simple-colors-default-theme-accent-8);\n  --a11y-media-transcript-faded-accent-color: var(--simple-colors-default-theme-accent-10);\n  --a11y-media-transcript-cue-color: var(--simple-colors-light-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-light-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-light-theme-grey-12);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-light-theme-accent-1);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-light-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-light-theme-grey-2);\n  --a11y-media-transcript-match-color: var(--simple-colors-light-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-light-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-light-theme-accent-12);\n}\n:host([dark]) {\n  border: 1px solid var(--simple-colors-default-theme-grey-1);\n}\n:host([dark-transcript]) {\n  --a11y-media-transcript-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-dark-theme-accent-12);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-dark-theme-grey-2);\n}\n:host,\n:host #outerplayer {\n  color: var(--simple-colors-default-theme-grey-12);\n  background-color: var(--simple-colors-default-theme-grey-2);\n}\n:host > * {\n  transition: all 0.5s;\n}\n:host,\n:host #outerplayer,\n:host #player,\n:host #outertranscript,\n:host #innertranscript {\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n  align-content: stretch;\n} \n:host #innerplayer {\n  display: flex;\n}\n:host([hidden]),\n:host *[hidden] {\n  display: none !important;\n}\n:host #innerplayer,\n:host #player, \n:host #player > *,\n:host #customcc,\n:host #customcctxt,\n:host #slider,\n:host #controls,\n:host #outertranscript,\n:host #innertranscript {\n  width: 100%;\n}\n:host #innertranscript > * {\n  width: calc(100% - 1px);\n}\n:host > *,\n:host #innerplayer,\n:host #player,\n:host #player > *,\n:host #customcctxt {\n  flex: 1 1 auto;\n}\n:host #controls,\n:host #tcontrols {\n  flex: 0 0 44px;\n}\n:host #innerplayer {\n  margin: 0 auto;\n}\n:host #player {\n  position: relative;\n}\n:host #player > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n}\n:host #playbutton,\n:host #slider,\n:host #controls {\n  z-index: 2;\n}\n:host([audio-only]) #playbutton {\n  opacity: 0;\n}\n:host #slider {\n  flex: 0 0 32px;\n  height: 32px;\n}\n:host([thumbnail-src]) #youtube {\n  opacity: 0;\n}\n:host #youtube[elapsed] {\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n:host #customcc:not([hidden]) {\n  font-size: 20px;\n  transition: font-size 0.25s;\n  display: flex;\n}\n:host #customcctxt:not(:empty) {\n  align-self: flex-end;\n  font-family: sans-serif;\n  color: white;\n  margin: 4px 10px;\n  padding: 0.15em 4px;\n  background-color: black;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: all 0.5s;\n}\n:host([audio-only]:not([thumbnail-src])) #customcctxt {\n  align-self: center;\n  color: var(--a11y-media-color);\n  background-color: transparent;\n}\n:host #printthumb {\n  width: 100%;\n  margin: 0;\n  display: block;\n  border-top: 1px solid #aaaaaa;\n}\n:host .media-caption:not(:empty) {\n  width: calc(100% - 30px);\n  padding: 5px 15px;\n}\n:host .media-type {\n  font-style: italic;\n}\n:host #outertranscript {\n  padding: 0 1px 0 0;\n}\n:host #innertranscript {\n  flex: 1 0 194px;\n}\n:host #transcript {\n  flex: 1 0 150px;\n  overflow-y: scroll;\n}\n:host .sr-only {\n  position: absolute;\n  left: -9999px;\n  font-size: 0;\n  height: 0;\n  width: 0;\n  overflow: hidden;\n}\n@media screen {\n  :host([flex-layout]:not([responsive-size*=\"s\"])) {\n    flex-flow: row;\n    padding: 0;\n  }\n  :host([flex-layout]:not([responsive-size*=\"s\"])) #outerplayer {\n    flex: 1 0 auto;\n  }\n  :host #printthumb,\n  :host([height]) #outertranscript,\n  :host([stand-alone]) #outertranscript,\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    position: fixed;\n    top: 5px;\n    right: 5px;\n    width: 200px;\n    max-width: 200px;\n    z-index: 999999;\n    border: 1px solid var(--a11y-media-bg-color);\n    box-shadow: 1px 1px 20px 1px rgba(125, 125, 125);\n    border-radius: 3.2px;\n  }\n  :host([dark][sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    border: 1px solid var(--a11y-media-bg-color);\n  }\n  :host([sticky][sticky-corner=\"top-left\"]) #outerplayer {\n    right: unset;\n    left: 5px;\n  }\n  :host([flex-layout]:not([responsive-size*=\"s\"])) > div {\n    width: 50%;\n    flex: 1 1 auto;\n  }\n  :host #innertranscript {\n    position: relative;\n  }\n  :host([hide-transcript]) #outerplayer {\n    min-width: 50%;\n    max-width: 100%;\n  }\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n    #transcript {\n    position: absolute;\n    top: 44px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow-y: scroll;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n    #innerplayer.totop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 200px !important;\n    z-index: 9999;\n  }\n  :host([sticky][sticky-corner=\"bottom-left\"]) #innerplayer {\n    top: unset;\n    right: unset;\n    bottom: 5px;\n  }\n  :host([sticky][sticky-corner=\"bottom-right\"]) #innerplayer {\n    top: unset;\n    bottom: 5px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size*=\"s\"]))\n    #controls {\n    display: none;\n  }\n  :host([responsive-size=\"lg\"]) #customcc {\n    font-size: 16px;\n  }\n  :host([responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"xl\"]) #customcc {\n    font-size: 14px;\n  }\n  :host([responsive-size=\"sm\"]) #customcc,\n  :host([flex-layout][responsive-size=\"lg\"]) #customcc {\n    font-size: 12px;\n  }\n  :host([responsive-size=\"xs\"]) #customcc,\n  :host([flex-layout][responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"sm\"]) #customcc {\n    font-size: 10px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n    display: none;\n  }\n  :host .media-caption {\n    color: var(--a11y-media-bg-color);\n    background-color: var(--a11y-media-accent-color);\n  }\n  :host #audio-only {\n    text-align: center;\n    font-style: italic;\n    width: 100%;\n    line-height: 160%;\n  }\n  :host .print-only {\n    display: none;\n  }\n}\n\n@media print {\n  :host,\n  :host([dark]) {\n    outline: 1px solid #aaaaaa;\n    background-color: #ffffff;\n  }\n  :host .screen-only,\n  :host #printthumb:not([src]),\n  :host(:not([thumbnail-src])) #player {\n    display: none;\n  }\n  :host #searchbar {\n    display: none;\n  }\n  :host .media-caption {\n    background-color: #cccccc;\n    color: #000000;\n    font-size: 120%;\n  }\n}</style>\n<style is=\"custom-style\" include=\"simple-colors\"></style>\n\n    <div class=\"sr-only\">[[mediaCaption]]</div>\n  <div id=\"outerplayer\">\n    <div id=\"innerplayer\">\n      <div id=\"player\"\n        style$=\"[[_getThumbnailCSS(thumbnailSrc,isYoutube,audioOnly)]]\">\n        <a11y-media-play-button\n          id=\"playbutton\"\n          action$=\"[[playPause.action]]\"\n          audio-only$=\"[[audioOnly]]\"\n          disabled=\"true\"\n          elapsed$=\"[[_hidePlayButton(thumbnailSrc, isYoutube, __elapsed)]]\"\n          hidden$=\"[[audioNoThumb]]\"\n          disabled$=\"[[audioNoThumb]]\"\n          on-controls-change=\"_onControlsChanged\"\n          localization$=\"[[localization]]\">\n        </a11y-media-play-button>\n        <a11y-media-html5\n          id=\"html5\"\n          audio-only$=\"[[audioOnly]]\"\n          autoplay$=\"[[autoplay]]\"\n          cc$=\"[[cc]]\"\n          crossorigin$=\"[[crossorigin]]\"\n          hidden$=\"[[isYoutube]]\"\n          media-lang$=\"[[mediaLang]]\"\n          loop$=\"[[loop]]\"\n          muted$=\"[[muted]]\"\n          manifest$=\"[[manifest]]\"\n          on-media-loaded=\"_handleMediaLoaded\"\n          ontimeupdate=\"_handleTimeUpdate\"\n          playing$=\"[[__playing]]\"\n          playback-rate$=\"[[playbackRate]]\"\n          thumbnail-src$=\"[[thumbnailSrc]]\"\n          preload$=\"[[preload]]\"\n          volume$=\"[[volume]]\"\n        >\n          <slot></slot>\n        </a11y-media-html5>\n        <div id=\"youtube\" \n          elapsed$=\"[[__elapsed]]\" \n          lang$=\"[[mediaLang]]\"\n          video-id$=\"[[videoId]]\">\n        </div>\n        <div id=\"customcc\" \n          class=\"screen-only\" \n          hidden$=\"[[!showCustomCaptions]]\">\n          <div id=\"customcctxt\"></div>\n        </div>\n      </div>\n    </div>\n    <paper-slider id=\"slider\"\n      class=\"screen-only\"\n      max$=\"[[__duration]]\"\n      secondary-progress$=\"[[__buffered]]\"\n      value$=\"[[__elapsed]]\"\n    >\n    </paper-slider>\n    <a11y-media-controls id=\"controls\"\n      cc$=\"[[cc]]\"\n      fixed-height$=\"[[height]]\"\n      has-captions$=\"[[hasCaptions]]\"\n      has-transcript$=\"[[hasTranscript]]\"\n      hide-transcript$=\"[[hideTranscript]]\"\n      localization$=\"[[localization]]\"\n      muted$=\"[[muted]]\"\n      on-controls-change=\"_onControlsChanged\"\n      on-print-transcript=\"_handlePrinting\"\n      playing$=\"[[__playing]]\"\n      search-transcript$=\"[[searchTranscript]]\"\n      stand-alone$=\"[[standAlone]]\"\n      volume=\"[[__volume]]\">\n    </a11y-media-controls>\n    <div\n      aria-hidden=\"true\"\n      class=\"screen-only media-caption\"\n      hidden$=\"[[!_hasAttribute(mediaCaption)]]\">\n      [[mediaCaption]]\n    </div>\n    <div class=\"print-only media-caption\">[[printCaption]]</div>\n  </div>\n  <img id=\"printthumb\" aria-hidden=\"true\" src$=\"[[thumbnailSrc]]\" />\n  <div id=\"outertranscript\" hidden$=\"[[standAlone]]\">\n    <div id=\"innertranscript\" hidden$=\"[[hideTranscript]]\">\n      <a11y-media-transcript-controls id=\"tcontrols\"\n        accent-color$=\"[[accentColor]]\"\n        localization$=\"[[localization]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-print-button$=\"[[disablePrintButton]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        on-searchbar-added=\"_handleSearchAdded\"\n        on-toggle-scroll=\"_handleTranscriptScrollToggle\"\n        on-print-transcript=\"_handlePrinting\"\n        stand-alone$=\"[[standAlone]]\">\n      </a11y-media-transcript-controls>\n      <a11y-media-transcript id=\"transcript\"\n        accent-color$=\"[[accentColor]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        disable-interactive$=\"[[disableInteractive]]\"\n        hide-timestamps$=\"[[hideTimestamps]]\"\n        on-cue-seek=\"_handleCueSeek\"\n        localization$=\"[[localization]]\"\n        search=\"[[search]]\"\n        selected-transcript$=\"[[__selectedTrack]]\">\n      </a11y-media-transcript>\n    </div>\n  </div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * The default media caption if none is given.\n   */\n  \"mediaCaption\": {\n    \"type\": \"String\",\n    \"computed\": \"_getMediaCaption(audioOnly,localization,mediaTitle)\"\n  },\n  /**\n   * The media caption that displays when the page is printed.\n   */\n  \"printCaption\": {\n    \"type\": \"String\",\n    \"computed\": \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n  },\n  /**\n   * is YouTube?\n   */\n  \"showCustomCaptions\": {\n    \"type\": \"Boolean\",\n    \"computed\": \"_showCustomCaptions(isYoutube,audioOnly,hasCaptions,cc)\"\n  },\n  /**\n   * Optional array ouf sources.\n   */\n  \"sources\": {\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n   */\n  \"sticky\": {\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * top-left, top-right, bottom-left, bottom-right, or none?\n   * Default is \"top-right\". \"None\" disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"type\": \"String\",\n    \"value\": \"top-right\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Optional array ouf tracks.\n   */\n  \"tracks\": {\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__playing\": {\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"notify\": true,\n    \"reflectToAttribute\": true\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player\";\n  }\n\n  //get player-specific behaviors\n  static get behaviors() {\n    return [A11yMediaPlayerBehaviors];\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.__playerAttached = true;\n    window.A11yMediaStateManager.requestAvailability();\n    root._addResponsiveUtility();\n    window.dispatchEvent(new CustomEvent(\"a11y-player\", { detail: root }));\n    if (root.isYoutube) {\n      root._youTubeRequest();\n    }\n  }\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      aspect = 16 / 9,\n      tracks = new Array(),\n      tdata = new Array(),\n      selected = 0;\n    root.__playerReady = true;\n    root.__interactive = !root.disableInteractive;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root.loadingLabel;\n    root.__slider = root.$.slider;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__showFullscreen = !this.disableFullscreen && screenfull.enabled;\n    root.__duration = 0;\n    root.$.controls.setStatus(root.__status);\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root._setPlayerHeight(aspect);\n    if (root.isYoutube) {\n      root._youTubeRequest();\n      document.addEventListener(\"timeupdate\", e => {\n        if (e.detail === root.media) root._handleTimeUpdate(e);\n      });\n    } else {\n      root.media = root.$.html5;\n      root.media.media.addEventListener(\"timeupdate\", e => {\n        root._handleTimeUpdate(e);\n      });\n      root._addSourcesAndTracks();\n    }\n    root.$.transcript.setMedia(root.$.innerplayer);\n\n    // handles fullscreen\n    if (root.__showFullscreen) {\n      screenfull.on(\"change\", () => {\n        this.fullscreen = screenfull.isFullscreen;\n      });\n    }\n    root.$.slider.addEventListener(\"mousedown\", e => {\n      root._handleSliderStart();\n    });\n    root.$.slider.addEventListener(\"mouseup\", e => {\n      root._handleSliderStop();\n    });\n    root.$.slider.addEventListener(\"keydown\", e => {\n      root._handleSliderStart();\n    });\n    root.$.slider.addEventListener(\"keyup\", e => {\n      root._handleSliderStop();\n    });\n    root.$.slider.addEventListener(\"blur\", e => {\n      root._handleSliderStop();\n    });\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    let root = this,\n      stopped = !(root.__playing === true);\n    root.__playing = true;\n    root.media.play();\n    window.dispatchEvent(\n      new CustomEvent(\"a11y-player-playing\", { detail: root })\n    );\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    let root = this;\n    root.__playing = false;\n    root.media.pause();\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks media backward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  rewind(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() - amt, 0);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks media forward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  forward(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() + amt);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks to a specific time\n   *\n   * @param {float} the time, in seconds, to seek\n   */\n  seek(time) {\n    let seekable =\n      this.media !== undefined && this.media !== null\n        ? this.media.seekable\n        : [];\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.media.seek(time);\n    }\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {integer} the index of the track\n   */\n  selectTrack(index) {\n    this.__selectedTrack = index;\n    this.$.html5.selectTrack(index);\n  }\n\n  /**\n   * set volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.volume = value !== null ? value : 70;\n    this.media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  }\n\n  /**\n   * set speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    value = value !== null ? value : 1;\n    this.media.setPlaybackRate(value);\n  }\n\n  /**\n   * toggles captions\n   *\n   * @param {boolean} Toggle CC on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleCC(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.$.html5.setCC(this.cc);\n  }\n\n  /**\n   * toggles looping\n   *\n   * @param {boolean} Toggle looping on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleLoop(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.media.setLoop(this.loop);\n    }\n  }\n\n  /**\n   * toggles mute\n   *\n   * @param {boolean} Toggle mute on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleMute(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.media.setMute(this.muted);\n  }\n\n  /**\n   * toggles sticky attribute\n   *\n   * @param {boolean} Toggle sticky mode on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleSticky(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.dispatchEvent(new CustomEvent(\"player-sticky\", { detail: this }));\n  }\n\n  /**\n   * toggles transcript\n   *\n   * @param {boolean} Toggle transcript on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleTranscript(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (this.$.transcript !== undefined && this.$.transcript !== null) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-toggle\", { detail: this })\n      );\n    }\n  }\n\n  /**\n   * dynamically adds source and track data\n   * from the sources and tracks properties\n   * (needed for media-player)\n   */\n  _appendToPlayer(data, type) {\n    if (data !== undefined && data !== null && data !== []) {\n      let root = this,\n        arr = Array.isArray(data) ? data : JSON.parse(data);\n      for (let i = 0; i < arr.length; i++) {\n        let el = document.createElement(type);\n        for (let key in arr[i]) {\n          el.setAttribute(key, arr[i][key]);\n        }\n        root.$.html5.media.appendChild(el);\n      }\n    }\n  }\n\n  /**\n   * sets the height of the player\n   * @param {Number} the aspect ratio of the media or its poster thumbnail\n   */\n  _setPlayerHeight(aspect) {\n    let root = this;\n    if (root.audioOnly && root.thumbnailSrc === null && root.height === null) {\n      root.$.player.style.height = \"60px\";\n    } else if (root.height === null) {\n      root.$.player.style.paddingTop = 100 / aspect + \"%\";\n      root.$.innerplayer.style.maxWidth =\n        \"calc(\" + aspect * 100 + \"vh - \" + aspect * 80 + \"px)\";\n    } else {\n      root.$.outerplayer.style.height = root.height;\n    }\n  }\n\n  /**\n   * gets media caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the title of the media\n   * @returns {string} the media caption\n   */\n  _getMediaCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(localization, \"audio\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * gets print caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the text that indicates this player is for video\n   * @param {string} the title of the media\n   * @returns {string} the media caption when the page is printed\n   */\n  _getPrintCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(localization, \"audio\", \"label\"),\n      videoLabel = this._getLocal(localization, \"video\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  }\n\n  /**\n   * get thumbanail css based on whether or not the video is playing\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _getThumbnailCSS(thumbnailSrc, isYoutube, audioOnly) {\n    return thumbnailSrc != null && (isYoutube || audioOnly)\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _addSourcesAndTracks() {\n    let root = this,\n      counter = 0;\n    root.querySelectorAll(\"source,track\").forEach(node => {\n      root.$.html5.media.appendChild(node);\n    });\n    root._appendToPlayer(root.tracks, \"track\");\n    root._appendToPlayer(root.sources, \"source\");\n    root.$.html5.media.textTracks.onaddtrack = e => {\n      root.hasCaptions = true;\n      root.hasTranscript = !root.standAlone;\n      root._getTrackData(e.track, counter++);\n    };\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _getTrackData(track, id) {\n    let root = this,\n      selected = track.default === true || root.__selectedTrack === undefined,\n      loadCueData;\n    if (selected) root.selectTrack(id);\n    track.mode = selected && this.cc === true ? \"showing\" : \"hidden\";\n    loadCueData = setInterval(() => {\n      if (\n        track.cues !== undefined &&\n        track.cues !== null &&\n        track.cues.length > 0\n      ) {\n        clearInterval(loadCueData);\n        let cues = Object.keys(track.cues).map(key => {\n          return {\n            order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n            seek: track.cues[key].startTime,\n            seekEnd: track.cues[key].endTime,\n            start: root._getHHMMSS(\n              track.cues[key].startTime,\n              root.media.duration\n            ),\n            end: root._getHHMMSS(track.cues[key].endTime, root.media.duration),\n            text: track.cues[key].text\n          };\n        });\n\n        if (root.__tracks === undefined) root.__tracks = [];\n        root.push(\"__tracks\", {\n          value: id,\n          language: track.language,\n          text:\n            track.label !== undefined\n              ? track.label\n              : track.language !== undefined\n              ? track.language\n              : \"Track \" + id,\n          cues: cues\n        });\n        root.$.controls.setTracks(root.__tracks);\n        root.$.transcript.setTracks(root.__tracks);\n        root.push(\"__tracks\");\n        track.oncuechange = e => {\n          root.$.transcript.setActiveCues(\n            Object.keys(e.currentTarget.activeCues).map(key => {\n              return e.currentTarget.activeCues[key].id;\n            })\n          );\n        };\n      }\n    }, 1);\n  }\n\n  /**\n   * handles the seek function when a transcript cue is activated\n   */\n  _handleCueSeek(e) {\n    let root = this;\n    if (\n      !root.standAlone &&\n      root.$.transcript !== undefined &&\n      root.$.transcript !== null\n    ) {\n      root.__resumePlaying = root.__playing;\n      root.seek(e.detail);\n    }\n  }\n\n  /**\n   * handles media metadata when media is loaded\n   */\n  _handleMediaLoaded(e) {\n    let root = this,\n      aspect = root.media.aspectRatio;\n    root._setPlayerHeight(aspect);\n    root.$.playbutton.removeAttribute(\"disabled\");\n\n    // gets and converts video duration\n    root._setElapsedTime();\n    root._getTrackData(root.$.html5.media);\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _hidePlayButton(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      (isYoutube && thumbnailSrc === null) ||\n      !(__elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n\n  /**\n   * sets search the simple-search element\n   */\n  _handleSearchAdded(e) {\n    this.search = e.detail;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStart(e) {\n    this.__resumePlaying = !this.paused;\n    this.pause();\n    this.__seeking = true;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStop(e) {\n    this.seek(this.$.slider.immediateValue);\n    this.__seeking = false;\n    if (this.__resumePlaying) {\n      this.play();\n      this.__resumePlaying = null;\n    }\n  }\n\n  /**\n   * handles time updates\n   */\n  _handleTimeUpdate(e) {\n    let root = this;\n    //if play exceeds clip length, stop\n    if (\n      root.media.seekable !== undefined &&\n      root.media.seekable.length > 0 &&\n      root.media.seekable.end(0) <= root.media.getCurrentTime()\n    ) {\n      root.stop();\n      root.__playing = false;\n    }\n    //prevent slider and cue updates until finished seeking\n    root._updateCustomTracks();\n    root._setElapsedTime();\n  }\n\n  /**\n   * handles transcript scroll toggle\n   */\n  _handleTranscriptScrollToggle(e) {\n    this.disableScroll = !this.disableScroll;\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged(e) {\n    let root = this,\n      action = e.detail.action !== undefined ? e.detail.action : e.detail.id;\n    if (action === \"backward\" || action === \"rewind\") {\n      root.rewind();\n    } else if (action === \"captions\") {\n      root.toggleCC();\n    } else if (action === \"transcript\" || action === \"transcript-toggle\") {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\") {\n      root.forward();\n    } else if (action === \"fullscreen\") {\n      this.toggleTranscript(this.fullscreen);\n      screenfull.toggle(root.$.outerplayer);\n    } else if (action === \"loop\") {\n      root.toggleLoop();\n    } else if (action === \"mute\" || action === \"unmute\") {\n      root.toggleMute();\n    } else if (action === \"pause\") {\n      root.pause();\n    } else if (action === \"play\") {\n      root.play();\n    } else if (action === \"restart\") {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\") {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\") {\n      root.setVolume(e.detail.value);\n    }\n  }\n\n  /**\n   * sets duration, taking into consideration start and stop times\n   *\n   * @param {integer} seek time in seconds, optional\n   * @returns {string} status\n   */\n  _setElapsedTime() {\n    let elapsed =\n        this.__seeking === true\n          ? this.$.slider.immediateValue\n          : this.media.getCurrentTime() > 0\n          ? this.media.getCurrentTime()\n          : 0,\n      duration = this.media.duration > 0 ? this.media.duration : 0;\n    this.__elapsed = elapsed;\n    this.__duration = duration;\n    if (this.media.seekable !== undefined && this.media.seekable.length > 0) {\n      if (this.media.seekable.start(0) !== undefined)\n        elapsed -= this.media.seekable.start(0);\n      if (this.media.seekable.end(0) !== undefined)\n        duration =\n          this.media.seekable.end(0) -\n          (this.media.seekable.start(0) !== undefined\n            ? this.media.seekable.start(0)\n            : 0);\n    }\n    this.__status =\n      this._getHHMMSS(elapsed, duration) + \"/\" + this._getHHMMSS(duration);\n    this.$.controls.setStatus(this.__status);\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return (isYoutube || audioOnly) && hasCaptions && cc;\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _useYoutubeIframe(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      isYoutube &&\n      (thumbnailSrc === null || __elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest() {\n    window.A11yMediaYoutube.requestAvailability();\n    let root = this,\n      ytUtil = window.A11yMediaYoutube.instance;\n    root.disableInteractive = true;\n    if (root.__playerAttached && root.__playerReady) {\n      let ytInit = () => {\n          // once metadata is ready on video set it on the media player\n          let setMetadata = () => {\n            root.__duration = root.media.duration;\n            root._setElapsedTime();\n            if (\n              root.media.seekable !== undefined &&\n              root.media.seekable.length > 0\n            ) {\n              root.$.slider.min = root.media.seekable.start(0);\n            }\n            root._addSourcesAndTracks();\n          };\n          // initialize the YouTube player\n          root.media = ytUtil.initYoutubePlayer({\n            width: \"100%\",\n            height: \"100%\",\n            videoId: root.youtubeId\n          });\n          // move the YouTube iframe to the media player's YouTube container\n          root.$.youtube.appendChild(root.media.a);\n          root.__ytAppended = true;\n          root._updateCustomTracks();\n\n          // youtube API doesn't immediately give length of a video\n          if (root.media.duration > 0) {\n            setMetadata();\n          } else {\n            document.addEventListener(\"youtube-video-metadata-loaded\", e => {\n              if (e.detail === root.media) {\n                setMetadata();\n              }\n            });\n          }\n        },\n        checkApi = e => {\n          if (ytUtil.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            if (!root.__ytAppended) {\n              ytInit();\n            }\n          }\n        };\n      if (ytUtil.apiReady) {\n        if (!root.__ytAppended) {\n          ytInit();\n        }\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  }\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTracks() {\n    if (this._hasCustomCaptions(this.isYoutube, this.audioOnly, this.tracks)) {\n      let root = this,\n        track = root.tracks[this.$.transcript.selectedTranscript],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.$.customcctxt.innerText = caption;\n        root.$.transcript.setActiveCues(active);\n      }\n    }\n  }\n}\n/**\n * life cycle, element is removed from the DOM\n */\n//disconnectedCallback() {}\nwindow.customElements.define(A11yMediaPlayer.tag, A11yMediaPlayer);\n"],"names":["A11yMediaBehaviors","SimpleColors","attr","val","options","window","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","this","attribute","relativeToParent","max","a","b","i","none","Math","floor","round","localization","key","subkey","local","localizationDefaults","e","$","transcript","print","mediaTitle","autoplay","type","Boolean","value","cc","height","Number","isYoutube","computed","lang","String","Object","audio","label","autoScroll","icon","captions","off","forward","fullscreen","loading","loop","mute","nextResult","pause","play","prevResult","restart","rewind","search","settings","speed","skip","unmute","video","volume","readOnly","manifest","muted","preload","playbackRate","status","selectedTrack","selectedTrackID","tracks","Array","youtubeId","youTube","customElements","define","tag","A11yMediaPlayerBehaviors","audioOnly","thumbnailSrc","disableFullscreen","test","navigator","userAgent","responsiveSize","_testAttribute","playing","_getLocal","action","hasCaptions","standAlone","hideTranscript","audioNoThumb","stackedLayout","allowConcurrent","reflectToAttribute","compactControls","crossorigin","darkTranscript","disableInteractive","disableSearch","disableScroll","disablePrintButton","flexLayout","fullscreenButton","notify","hasTranscript","hideElapsedTime","hideTimestamps","media","mediaLang","muteUnmute","playPause","showCustomCaptions","target","width","A11yMediaButton","__target","button","controls","toggle","disabled","html","A11yMediaControls","_addResponsiveUtility","sm","md","lg","xl","root","onfocus","classList","add","onblur","remove","statbar","innerText","set","slice","__selectedTrack","control","close","noTranscriptToggle","fixedHeight","hideTranscriptButton","noPrinting","A11yMediaHtml5","duration","seekable","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","buffered","length","end","getCurrentTime","currentTime","paused","index","textTracks","parseInt","mode","seek","time","selectedTrackId","start","stop","A11yMediaPlayButton","text","playLabel","A11yMediaTranscriptCue","setAttribute","mediaId","content","enableSearch","addEventListener","_handleTap","cue","activeCues","includes","order","toString","active","A11yMediaTranscript","track","shadowRoot","querySelector","cloneNode","css","h1","innerHTML","open","document","body","appendChild","focus","cues","offset","offsetTop","scrollingTo","to","perTick","scrollTop","setTimeout","player","notifyPath","render","inner","getElementById","hidden","selectedTranscript","id","tabIndex","role","A11yMediaTranscriptControls","simplesearch","A11yMediaStateManager","instance","createElement","__playerLoader","players","push","PolymerElement","stickyPlayer","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","playeri","parent","_getParentNode","__playerTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","style","checkConcurrentPlayers","wintop","pageYOffset","winbottom","innerHeight","__playing","node","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","removeEventListener","A11yMediaYoutube","api","onYouTubeIframeAPIReady","event","apiReady","temp","div","vdata","videoId","split","vid","counter","iframe","YT","Player","events","onReady","param","hh","match","mm","ss","replace","h","m","s","startSeconds","endSeconds","cueVideoById","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","playVideo","getPlayerState","clearInterval","timeupdate","setInterval","pauseVideo","seekTo","unMute","int","getDuration","int2","min","A11yMediaPlayer","__playerAttached","_youTubeRequest","__playerReady","__interactive","__status","loadingLabel","__slider","slider","__volume","__resumePlaying","__showFullscreen","screenfull","enabled","__duration","setStatus","maxWidth","_setPlayerHeight","_handleTimeUpdate","html5","_addSourcesAndTracks","setMedia","innerplayer","on","_this","isFullscreen","_handleSliderStart","_handleSliderStop","amt","selectTrack","sticky","data","arr","isArray","JSON","parse","el","aspect","paddingTop","outerplayer","audioLabel","hasMediaTitle","videoLabel","querySelectorAll","forEach","_appendToPlayer","sources","onaddtrack","_getTrackData","loadCueData","selected","default","keys","map","startTime","seekEnd","endTime","_getHHMMSS","__tracks","language","setTracks","oncuechange","setActiveCues","currentTarget","playbutton","removeAttribute","_setElapsedTime","__elapsed","__seeking","immediateValue","_updateCustomTracks","toggleCC","toggleTranscript","toggleLoop","toggleMute","elapsed","ytUtil","ytInit","setMetadata","initYoutubePlayer","youtube","__ytAppended","checkApi","_hasCustomCaptions","caption","customcctxt"],"mappings":"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"}