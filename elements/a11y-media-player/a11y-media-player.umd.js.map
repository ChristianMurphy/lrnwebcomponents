{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-state-manager.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-html5.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-youtube.js","a11y-media-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n\n/**\n * `a11y-media-behaviors`\n * `A set of properties common to player and transcript a11y-media components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaBehaviors extends SimpleColors {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return Object.assign(SimpleColors.properties, {\n      /**\n       * Is this an audio file?\n       */\n      audioOnly: {\n        name: \"audioOnly\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * autoplay is an option,\n       * but generally not recommended for a11y\n       */\n      autoplay: {\n        name: \"autoplay\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * show closed captions\n       */\n      cc: {\n        name: \"cc\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript print button\n       */\n      disablePrintButton: {\n        name: \"disablePrintButton\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript search feature\n       */\n      disableSearch: {\n        name: \"disableSearch\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable autoscrolling as transcript plays\n       */\n      disableScroll: {\n        name: \"disableScroll\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disables seeking\n       */\n      disableSeek: {\n        name: \"disableSeek\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Does the player have an interactive transcript?\n       */\n      hasTranscript: {\n        name: \"hasTranscript\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The height of the media player.\n       */\n      height: {\n        name: \"height\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * is YouTube?\n       */\n      isYoutube: {\n        name: \"isYoutube\",\n        type: Boolean,\n        computed: \"_hasAttribute(youtubeId)\"\n      },\n\n      /**\n       * Language\n       */\n      lang: {\n        name: \"lang\",\n        type: String,\n        value: \"en\"\n      },\n\n      /**\n       * custom localization settings\n       */\n      localization: {\n        name: \"localization\",\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * default localization settings\n       */\n      localizationDefaults: {\n        name: \"localizationDefaults\",\n        type: Object,\n        value: {\n          audio: { label: \"Audio\" },\n          autoScroll: {\n            label: \"Scroll transcript with video.\",\n            icon: \"swap-vert\"\n          },\n          captions: {\n            label: \"Closed Captions\",\n            icon: \"av:closed-caption\",\n            off: \"Off\"\n          },\n          download: {\n            label: \"Download the transcript.\",\n            icon: \"file-download\"\n          },\n          forward: {\n            label: \"Forward\",\n            icon: \"av:fast-forward\"\n          },\n          fullscreen: {\n            label: \"Fullscreen\",\n            icon: \"fullscreen\"\n          },\n          loading: {\n            label: \"Loading...\"\n          },\n          loop: {\n            label: \"Loop Playback\"\n          },\n          mute: {\n            label: \"Mute\",\n            icon: \"av:volume-up\"\n          },\n          nextResult: {\n            label: \"Next\",\n            icon: \"arrow-forward\"\n          },\n          pause: {\n            label: \"Pause\",\n            icon: \"av:pause\"\n          },\n          play: {\n            label: \"Play\",\n            icon: \"av:play-arrow\"\n          },\n          prevResult: {\n            label: \"Previous\",\n            icon: \"arrow-back\"\n          },\n          print: {\n            label: \"Print the transcript.\",\n            icon: \"print\"\n          },\n          restart: {\n            label: \"Restart\",\n            icon: \"av:replay\"\n          },\n          rewind: {\n            label: \"Backward\",\n            icon: \"av:fast-rewind\"\n          },\n          search: {\n            label: \"Search the transcript.\",\n            icon: \"search\"\n          },\n          seekSlider: {\n            label: \"Seek Slider\"\n          },\n          settings: {\n            label: \"Settings\",\n            icon: \"settings\"\n          },\n          speed: {\n            label: \"Speed %\"\n          },\n          transcript: {\n            label: \"Transcript\",\n            icon: \"description\",\n            loading: \"Loading the transcript(s)...\",\n            skip: \"Skip to the transcript.\"\n          },\n          unmute: {\n            label: \"Unmute\",\n            icon: \"av:volume-off\"\n          },\n          video: {\n            label: \"Video\"\n          },\n          volume: {\n            label: \"Volume\"\n          },\n          youTubeLoading: {\n            label: \"Ready.\"\n          },\n          youTubeTranscript: {\n            label: \"Transcript will load once media plays.\"\n          }\n        },\n        readOnly: true\n      },\n\n      /**\n       * Loop the video?\n       */\n      loop: {\n        name: \"loop\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Dash.js manifest source?\n       */\n      manifest: {\n        name: \"manifest\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * the media to be manipulated\n       */\n      media: {\n        name: \"media\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * optional title of media (shows when printed)\n       */\n      mediaTitle: {\n        name: \"mediaTitle\",\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * Is audio muted?\n       */\n      muted: {\n        name: \"muted\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n       */\n      playbackRate: {\n        name: \"playbackRate\",\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Is media playing?\n       */\n      playing: {\n        name: \"playing\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * play/pause button\n       */\n      playPause: {\n        name: \"playPause\",\n        type: Object\n      },\n\n      /**\n       * Preload the \"sources\": auto, metadata (default), or none.\n       */\n      preload: {\n        name: \"preload\",\n        type: String,\n        value: \"metadata\"\n      },\n\n      /**\n       * the search tool for the transcript\n       */\n      search: {\n        name: \"search\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * Is stand-alone player (without transcript)?\n       */\n      standAlone: {\n        name: \"standAlone\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * status\n       */\n      status: {\n        name: \"status\",\n        type: String,\n        value: \"loading...\"\n      },\n      /**\n       * the selected track\n       */\n      selectedTrack: {\n        name: \"selectedTrack\",\n        type: Object,\n        value: null\n      },\n      /**\n       * id of the selected track\n       */\n      selectedTrackID: {\n        name: \"selectedTrackID\",\n        type: Number,\n        value: null\n      },\n      /**\n       * target of the controls\n       */\n      target: {\n        name: \"target\",\n        type: Object,\n        value: null\n      },\n      /**\n       * array of tracks and cues\n       */\n      tracks: {\n        name: \"tracks\",\n        type: Array,\n        value: null\n      },\n      /**\n       * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n       */\n      volume: {\n        name: \"volume\",\n        type: Number,\n        value: 70\n      },\n      /**\n       * The width of the media player.\n       */\n      width: {\n        name: \"width\",\n        type: String,\n        value: null\n      },\n      /**\n       * the id for the video\n       */\n      youtubeId: {\n        name: \"youtubeId\",\n        type: String,\n        value: null\n      },\n      /**\n       * the YouTube player object\n       */\n      youTube: {\n        name: \"youTube\",\n        type: Object,\n        value: {}\n      }\n    });\n  }\n\n  /**\n   * gets behaviors\n   */\n  static get behaviors() {\n    return [ResponsiveUtility];\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _hasAttribute(attr) {\n    return attr !== undefined && attr !== null;\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr, val) {\n    return attr === val;\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * converts time in millesconds to HH:MM:SS\n   *\n   * @param {float} the elapsed time, in seconds\n   * @param {float} the duration, in seconds\n   * @returns {string} a human-readable string of elapsed time/duration in HH:MM:SS\n   *\n   */\n  _getHHMMSS(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n\n  /**\n   * gets the localization by compaing the localization set to the defaults\n   *\n   * @param {object} the localization object\n   * @param {string} the key to search for\n   * @param {string} the subkey to search for\n   * @returns {string} the default value for [key][subkey], unless localization[key][subkey] exists\n   */\n  _getLocal(key, subkey) {\n    let local = \"\",\n      localization = this.localization;\n    if (\n      localization !== undefined &&\n      localization[key] !== undefined &&\n      localization[key][subkey] !== undefined\n    ) {\n      local = localization[key][subkey];\n    } else if (\n      this.localizationDefaults !== undefined &&\n      this.localizationDefaults[key] !== undefined &&\n      this.localizationDefaults[key][subkey] !== undefined\n    ) {\n      local = this.localizationDefaults[key][subkey];\n    }\n    return local;\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handlePrintClick(e) {\n    this.dispatchEvent(new CustomEvent(\"print-transcript\", { detail: this }));\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handleDownloadClick(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"download-transcript\", { detail: this })\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handleDownload(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"downloading-transcript\", { detail: root })\n    );\n    root.$.transcript.download(root.mediaTitle);\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n}\nwindow.customElements.define(A11yMediaBehaviors.tag, A11yMediaBehaviors);\nexport { A11yMediaBehaviors };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaStateManager = window.A11yMediaStateManager || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.A11yMediaStateManager.requestAvailability = () => {\n  if (!window.A11yMediaStateManager.instance) {\n    window.A11yMediaStateManager.instance = document.createElement(\n      \"a11y-media-state-manager\"\n    );\n    document.body.appendChild(window.A11yMediaStateManager.instance);\n  }\n  return window.A11yMediaStateManager.instance;\n};\n/**\n * `a11y-media-state-manager`\n * `A utility that manages the state of multiple a11y-media-players on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaStateManager extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-state-manager\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      players: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Is the screenfull library loaded and screenfull constant set.\n       */\n      screenfullLoaded: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Manages which player is sticky.\n       */\n      stickyPlayer: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  constructor() {\n    super();\n    let root = this;\n    root.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaStateManager.instance) {\n      window.A11yMediaStateManager.instance = this;\n\n      // listen for a players added to the page\n      window.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    window.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  }\n\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n  checkConcurrentPlayers() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  }\n\n  /**\n   * stops all other players on the page\n   *\n   * @param {object} the player to set stickiness\n   */\n  setStickyPlayer(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  }\n\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n  _checkScroll() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  }\n\n  /**\n   * gets parent node in light DOM\n   *\n   * @param {object} the node\n   * @returns {object} the parent node\n   */\n  _getParentNode(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    window.removeEventListener(\"a11y-player\", root.__playerLoader);\n    window.removeEventListener(\"a11y-player-playing\", root.__stickyManager);\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  }\n}\nwindow.customElements.define(A11yMediaStateManager.tag, A11yMediaStateManager);\nexport { A11yMediaStateManager };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaButton };\n/**\n * `a11y-media-button`\n * `A button used in a11y-media-controls and a11y-media-transcript-controls.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaButton extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is button action to send as an event\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-button\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles\">\n        :host {\n          margin: 0;\n          padding: 0;\n        }\n        :host #button {\n          margin: 0;\n          padding: 8px;\n          line-height: 1;\n          border: none;\n          transition: color 0.25s;\n          color: var(--a11y-media-button-color);\n          background-color: var(--a11y-media-button-bg-color);\n        }\n        :host([toggle]) #button {\n          color: var(--a11y-media-button-toggle-color);\n          background-color: var(--a11y-media-button-toggle-bg-color);\n        }\n        :host([toggle]:active) #button,\n        :host([toggle]:focus) #button,\n        :host([toggle]:hover) #button,\n        :host(:active) #button,\n        :host(:focus) #button,\n        :host(:hover) #button {\n          cursor: pointer;\n          color: var(--a11y-media-button-hover-color);\n          background-color: var(--a11y-media-button-hover-bg-color);\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host paper-tooltip {\n          z-index: 100;\n        }\n        iron-icon {\n          display: inline-block;\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-label$=\"[[label]]\"\n        aria-pressed$=\"[[toggle]]\"\n        controls=\"[[controls]]\"\n        disabled$=\"[[disabled]]\"\n        on-click=\"_buttonTap\"\n        role=\"button\"\n        tabindex=\"0\"\n        toggle$=\"[[toggle]]\"\n      >\n        <iron-icon icon=\"[[icon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"button\">[[label]]</paper-tooltip>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.$.button;\n  }\n\n  /**\n   * lets player know this button was clicked\n   */\n  _buttonTap() {\n    this.dispatchEvent(new CustomEvent(\"click\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaButton.tag, A11yMediaButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaControls };\n/**\n * `a11y-media-controls`\n * `The controls bar for the a11y-media-player.`\n *\n * @microcopy - language worth noting:\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Use compact controls?\n       */\n      compactControls: {\n        name: \"compactControls\",\n        type: Boolean,\n        computed: \"_getCompactControls(responsiveSize)\"\n      },\n      /**\n       * Is the player a fixed height (iframe mode) so that theure is no transcript toggle?\n       */\n      fixedHeight: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is fullscreen mode?\n       */\n      fullscreen: {\n        name: \"fullscreen\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show the FullscreenButton?\n       */\n      fullscreenButton: {\n        name: \"fullscreenButton\",\n        type: Boolean,\n        value: false,\n        nofity: true\n      },\n\n      /**\n       * Does the player have tracks?\n       */\n      hasCaptions: {\n        name: \"hasCaptions\",\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * initially hide the transcript?\n       */\n      hideTranscript: {\n        name: \"hideTranscript\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * hide the transcript toggle menu item?\n       */\n      hideTranscriptButton: {\n        type: Boolean,\n        computed: \"_hideTranscriptButton(noTranscriptToggle,compactControls)\"\n      },\n      /**\n       * mute/unmute button\n       */\n      muteUnmute: {\n        name: \"muteUnmute\",\n        type: Object\n      },\n      /**\n       * hide the print transcript feature available?\n       */\n      noPrinting: {\n        type: Boolean,\n        computed: \"_noPrinting(standAlone,fixedHeight)\"\n      },\n      /**\n       * Is the transctipt toggle feature available?\n       */\n      noTranscriptToggle: {\n        type: Boolean,\n        computed: \"_noTranscriptToggle(standAlone,fixedHeight,hasTranscript)\"\n      },\n      /**\n       * Size of the a11y media element for responsive styling\n       */\n      responsiveSize: {\n        name: \"responsiveSize\",\n        type: String,\n        notify: true,\n        value: \"xs\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-controls\";\n  }\n  //inherit styles from a11y-media-player\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors-shared-styles\">\n        :host {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          height: 44px;\n          max-height: 44px;\n          position: relative;\n          color: var(--a11y-media-color);\n          --primary-text-color: var(--a11y-media-settings-menu-color);\n          --paper-menu-button-dropdown-background: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-background-color: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-color: var(--a11y-media-settings-menu-color);\n          --paper-listbox: {\n            padding: 0;\n          };\n          --paper-menu-button: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n          };\n          --paper-menu-button-dropdown: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n            margin-top: 0 !important;\n            margin-bottom: 0 !important;\n          };\n          --paper-item-selected: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n          --paper-item-focused: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n        }\n        :host > #controls-left {\n          position: absolute;\n          left: 0;\n          min-width: 200px;\n        }\n        :host > #controls-right {\n          position: absolute;\n          right: 0;\n          top: -2px;\n        }\n        :host paper-menu-button,\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host paper-icon-button {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-icon-button:active,\n        :host paper-icon-button:focus,\n        :host paper-icon-button:hover {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-item {\n          min-height: 40;\n        }\n        :host paper-slider {\n          @apply --a11y-media-slider;\n        }\n        :host .play-status,\n        :host paper-icon-button {\n          border: none;\n          position: relative;\n        }\n        :host .play-status {\n          font-size: 85%;\n        }\n        :host .play-status.control-bar {\n          padding: 8px 13px 8px;\n        }\n        :host([hide-play-status]) .play-status {\n          display: none;\n        }\n        :host .setting {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n        :host .setting-text {\n          min-width: 125px;\n        }\n        :host .setting-control {\n          max-width: 100px;\n        }\n        :host .setting-slider {\n          width: 130px;\n          margin-left: -15px;\n          margin-right: -15px;\n          @apply --a11y-media-slider;\n        }\n        :host #speed {\n          --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n        }\n        :host #showvolume {\n          display: inline;\n          position: relative;\n        }\n        :host #volume {\n          z-index: 1;\n          position: absolute;\n          left: 30px;\n          top: -5px;\n          width: 0;\n          overflow: hidden;\n          transition: width 0.5s;\n          z-index: 3;\n          background-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n\n        }\n        :host #volume:active,\n        :host #volume:focus,\n        :host #volume:hover,\n        :host #volume.focus,\n        :host #showvolume:active #volume,\n        :host #showvolume:focus #volume,\n        :host #showvolume:hover #volume {\n          overflow: visible;\n          width: 100px;\n        }\n        :host([responsive-size=\"xs\"]) #volume:active,\n        :host([responsive-size=\"xs\"]) #volume:focus,\n        :host([responsive-size=\"xs\"]) #volume:hover,\n        :host([responsive-size=\"xs\"]) #volume.focus,\n        :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n          top: -35px\n          border-radius: 4px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div id=\"controls-left\">\n        <a11y-media-button\n          action$=\"[[playPause.action]]\"\n          icon$=\"[[playPause.icon]]\"\n          label$=\"[[playPause.label]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"rewind\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('rewind','icon')]]\"\n          label$=\"[[_getLocal('rewind','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"forward\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('forward','icon')]]\"\n          label$=\"[[_getLocal('forward','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"restart\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('restart','icon')]]\"\n          label$=\"[[_getLocal('restart','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <div id=\"showvolume\">\n          <a11y-media-button\n            id=\"mute\"\n            action$=\"[[muteUnmute.action]]\"\n            icon$=\"[[muteUnmute.icon]]\"\n            label$=\"[[muteUnmute.label]]\"\n            on-click=\"_onButtonTap\"\n          ></a11y-media-button>\n          <paper-slider\n            id=\"volume\"\n            aria-labelledby=\"volume-slider-label\"\n            label$=\"[[volumeLabel]]\"\n            min=\"0\"\n            max=\"100\"\n            on-change=\"_onSettingsChanged\"\n            pin\n            step=\"10\"\n            value$=\"[[volume]]\"\n          ></paper-slider>\n        </div>\n        <span aria-live=\"polite\" class=\"play-status control-bar\">\n          <span id=\"statbar\"></span>\n        </span>\n      </div>\n      <div id=\"controls-right\">\n        <a11y-media-button\n          action=\"captions\"\n          disabled$=\"[[!hasCaptions]]\"\n          hidden$=\"[[!hasCaptions]]\"\n          icon$=\"[[_getLocal('captions','icon')]]\"\n          label$=\"[[_getLocal('captions','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[cc]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"transcript\"\n          controls=\"transcript\"\n          disabled$=\"[[hideTranscriptButton]]\"\n          hidden$=\"[[hideTranscriptButton]]\"\n          icon$=\"[[_getLocal('transcript','icon')]]\"\n          label$=\"[[_getLocal('transcript','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[hideTranscript]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"print\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('print','icon')]]\"\n          label=\"[[_getLocal('print','label')]]\"\n          on-click=\"_handlePrintClick\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"download\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('download','icon')]]\"\n          label=\"[[_getLocal('download','label')]]\"\n          on-click=\"_handleDownloadClick\"\n        >\n        </a11y-media-button>\n        <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n          <a11y-media-button\n            action=\"fullscreen\"\n            hidden$=\"[[audioNoThumb]]\"\n            icon$=\"[[_getLocal('fullscreen','icon')]]\"\n            label$=\"[[_getLocal('fullscreen','label')]]\"\n            on-click=\"_onButtonTap\"\n            toggle$=\"[[fullscreen]]\"\n            step=\"1\"\n          >\n          </a11y-media-button>\n        </template>\n        <paper-menu-button\n          id=\"settings\"\n          allow-outside-scroll\n          horizontal-align=\"right\"\n          ignore-select\n          on-change=\"_onSettingsChanged\"\n          on-iron-activate=\"_handleSettingsActivate\"\n          on-iron-select=\"_handleSettingsSelect\"\n          vertical-align=\"bottom\"\n        >\n          <paper-icon-button\n            action=\"settings\"\n            alt$=\"[[_getLocal('settings','label')]]\"\n            icon$=\"[[_getLocal('settings','icon')]]\"\n            slot=\"dropdown-trigger\"\n          >\n          </paper-icon-button>\n          <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n            <paper-item hidden$=\"[[!hasCaptions]]\">\n              <div class=\"setting\">\n                <div class=\"setting-text\">\n                  [[_getLocal('captions','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <dropdown-select\n                    id=\"tracks\"\n                    disabled$=\"[[!hasCaptions]]\"\n                    no-label-float\n                    on-change=\"_handleTrackChange\"\n                    value\n                  >\n                    <paper-item value=\"\"\n                      >[[_getLocal('captions','off')]]</paper-item\n                    >\n                    <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                      <paper-item value$=\"{{option.value}}\"\n                        >{{option.text}}</paper-item\n                      >\n                    </template>\n                  </dropdown-select>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[noTranscriptToggle]]\">\n              <div class=\"setting\">\n                <div id=\"transcript-label\" class=\"setting-text\">\n                  [[_getLocal('transcript','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"transcript-toggle\"\n                    aria-labelledby=\"transcript-label\"\n                    checked$=\"[[!hideTranscript]]\"\n                    controls=\"transcript\"\n                    disabled$=\"[[noTranscriptToggle]]\"\n                  >\n                  </paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"loop-label\" class=\"setting-text\">\n                  [[_getLocal('loop','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"loop\"\n                    aria-labelledby=\"loop-label\"\n                    checked$=\"[[loop]]\"\n                  ></paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"speed-label\" class=\"setting-text\">\n                  [[_getLocal('speed','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-slider\n                    id=\"speed\"\n                    aria-labelledby=\"speed-label\"\n                    class=\"setting-slider\"\n                    min=\"0.5\"\n                    max=\"4\"\n                    pin\n                    step=\"0.5\"\n                    tab-index=\"-1\"\n                    value$=\"[[playbackRate]]\"\n                  ></paper-slider>\n                </div>\n              </div>\n            </paper-item>\n          </paper-listbox>\n        </paper-menu-button>\n        <paper-tooltip for=\"settings\">\n          [[_getLocal('settings','label')]]\n        </paper-tooltip>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.$.mute.$.button.onfocus = function() {\n      root.$.volume.classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.$.mute.$.button.onblur = function() {\n      root.$.volume.classList.remove(\"focus\");\n    };\n  }\n\n  /**\n   * updates the play status of the media\n   *\n   * @param {string} the status, eg., `Loading...` or `00:02:01/00:11:43`\n   */\n  setStatus(status) {\n    this.$.statbar.innerText = status;\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {object} the tracks of the media\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", []);\n    this.set(\"tracks\", tracks.slice(0));\n  }\n\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   *\n   * @param {string} the size of the player: `xs`,`sm`,`md`,`lg`, or `xl`\n   * @returns {boolean} Should the player use compact controls?\n   */\n  _getCompactControls(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  }\n\n  /**\n   * handles when the tracks dropdown selection changes\n   * (when the tracks dropdown-select changes, update track and CC button)\n   */\n  _handleTrackChange(e) {\n    let root = this;\n    if (root.__selectedTrack !== null) {\n      if (e.detail.value !== \"\") {\n        root.dispatchEvent(\n          new CustomEvent(\"select-track\", {\n            detail: { control: root, value: e.detail.value }\n          })\n        );\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: true }\n          })\n        );\n      } else {\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: false }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsSelect(e) {\n    //e.preventDefault();\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsActivate(e) {\n    //if (e.target == this.$.settingslist) e.preventDefault();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.detail })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.target })\n    );\n    this.$.settings.close();\n  }\n\n  /**\n   * Determines if the transcript button should be hidden.\n   *\n   * @param {boolean} Is this feature available?\n   * @param {boolean} Is the player too small to fit the extra controls?\n   * @returns {boolean} Show the transcript button?\n   */\n  _hideTranscriptButton(noTranscriptToggle, compactControls) {\n    return noTranscriptToggle || compactControls;\n  }\n\n  /**\n   * Determines if the print transcript feature is available from the controls.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should print transcript be unavailable from controls?\n   */\n  _noPrinting(standAlone, fixedHeight) {\n    return standAlone || !fixedHeight;\n  }\n\n  /**\n   * Determines if the transcript toggle feature is available.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should transcript toggle be unavailable?\n   */\n  _noTranscriptToggle(standAlone, fixedHeight, hasTranscript) {\n    return standAlone || fixedHeight || !hasTranscript;\n  }\n}\nwindow.customElements.define(A11yMediaControls.tag, A11yMediaControls);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\n\nexport { A11yMediaHtml5 };\n/**\n * `a11y-media-html5`\n * `Loads HTML5 audio or video. `\n *\n * @microcopy - language worth noting:\n```<a11y-media-html5>                   \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-html5>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaHtml5 extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /**\n       * crossorigin attribute for <video> and <audio> tags\n       */\n      crossorigin: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * the language of the media (if different from user interface language)\n       */\n      mediaLang: {\n        name: \"mediaLang\",\n        type: String,\n        value: \"en\"\n      },\n      /*\n       * Is it paused?\n       */\n      paused: {\n        type: Boolean,\n        value: true\n      },\n      /*\n       * the seekable range of the media\n       */\n      seekable: {\n        type: Object,\n        value: {\n          length: 0,\n          start: null,\n          stop: null\n        }\n      },\n      /**\n       * Source of optional thumbnail image\n       */\n      thumbnailSrc: {\n        name: \"thumbnailSrc\",\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-html5\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles\">\n        :host {\n          height: 100%;\n          display: flex;\n          align-items: stretch;\n          position: relative;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #video {\n          width: 100%;\n          max-width: 100%;\n        }\n      </style>\n      <video\n        id=\"video\"\n        aria-hidden$=\"[[isYoutube]]\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 video not supported\n      </video>\n      <audio\n        id=\"audio\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[!audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        preload=\"metadata\"\n      >\n        HTML5 audio not supported\n      </audio>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    root.media =\n      root.$.video !== undefined && !root.audioOnly\n        ? root.$.video\n        : root.$.audio;\n  }\n\n  /**\n   * handles the loaded metadata\n   */\n  _handleMetadata() {\n    let root = this;\n    root.duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.tracks = [];\n    root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.seekable = root.media.seekable;\n    root.setVolume(root.volume);\n    root.setMute(root.muted);\n    root.setCC(root.cc);\n    root.setLoop(root.loop);\n    root.setPlaybackRate(root.playbackRate);\n\n    // adjusts aspect ratio\n    root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n    root.dispatchEvent(new CustomEvent(\"media-loaded\", { detail: root }));\n  }\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  }\n\n  /**\n   * gets the current time\n   *\n   * @returns {float} the elapsed time, in seconds\n   */\n  getCurrentTime() {\n    return this.media.currentTime;\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    this.paused = false;\n    this.media.play();\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    this.paused = true;\n    this.media.pause();\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {float} the index of the track\n   */\n  selectTrack(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks to a specific time\n   */\n  seek(time) {\n    this.media.currentTime = time;\n  }\n\n  /**\n   * sets captions\n   *\n   * @param {boolean} Turn CC on? `true` is on; `false` or `null` is off.\n   *\n   */\n  setCC(mode) {\n    this.media.cc = mode === true;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.$.video.textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.$.video.textTracks.value = \"\";\n    }\n  }\n\n  /**\n   * sets volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.media.volume = value / 100;\n  }\n\n  /**\n   * sets speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  }\n\n  /**\n   * sets looping\n   *\n   * @param {boolean} Turn looping on? `true` is on; `false` or `null` is off.\n   */\n  setLoop(mode) {\n    this.media.loop = mode === true;\n  }\n\n  /**\n   * sets mute\n   *\n   * @param {boolean} Turn mute on? `true` is on; `false` or `null` is off.\n   */\n  setMute(mode) {\n    this.media.muted = mode;\n  }\n}\nwindow.customElements.define(A11yMediaHtml5.tag, A11yMediaHtml5);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\n\nexport { A11yMediaTranscriptCue };\n/**\n * `a11y-media-transcript-cue`\n * `A single cue in a11y-media-transcriptas static text or as an button that controls media.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-cue \n  active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n  cue$=\"[[cue]]\"                                  // An array of cue data\n  order$=\"[[cue.order]]\"                          // The index of the current cue\n  disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n  controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n  hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n</a11y-media-transcript-cue>```\n * \n * Custom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n *   \n * Custom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n *   \n * Custom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptCue extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is cue active\n       */\n      active: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"_getActiveCue(cue,activeCues)\",\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * array of currently active cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        notify: true\n      },\n      /**\n       * array of cue data\n       */\n      cue: {\n        type: Array,\n        value: null\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * parsed cue text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-cue\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors-shared-styles\">\n        :host {\n          cursor: default;\n          display: table-row;\n          width: 100%;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          transition: color 0.25s, background-color 0.25s;\n        }\n        :host([hide-timestamps]) {\n          display: inline;\n        }\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          cursor: pointer;\n          color: var(--a11y-media-transcript-focused-cue-color);\n          background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n          outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n          @apply --a11y-media-transcript-focused-cue;\n        }\n        :host([active]) {\n          color: var(--a11y-media-transcript-active-cue-color);\n          background-color: var(--a11y-media-transcript-active-cue-bg-color);\n          @apply --a11y-media-transcript-active-cue;\n        }\n        :host #text {\n          display: table-cell;\n          width: 100%;\n          line-height: 200%;\n        }\n        :host([hide-timestamps]) #text {\n          display: inline;\n        }\n        :host #time {\n          display: table-cell;\n          font-size: 80%;\n          padding: 0 16px 0 0;\n          white-space: nowrap;\n          font-family: monospace;\n        }\n        :host([hide-timestamps]) #time {\n          display: none;\n        }\n        :host simple-search-content {\n          --simple-search-match-text-color: var(\n            --a11y-media-transcript-match-color\n          );\n          --simple-search-match-bg-color: var(\n            --a11y-media-transcript-match-bg-color\n          );\n          --simple-search-match-border-color: var(\n            --a11y-media-transcript-match-border-color\n          );\n          --simple-search-match: {\n            border: none;\n            border-radius: 4px;\n            font-weight: normal;\n          }\n        }\n        @media print {\n          :host,\n          :host([active]),\n          :host(:not([active]):not([disabled]):active),\n          :host(:not([active]):not([disabled]):focus),\n          :host(:not([active]):not([disabled]):hover) {\n            color: #000000;\n            background-color: #ffffff;\n          }\n        }\n      </style>\n      <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n      <span id=\"text\">\n        <simple-search-content id=\"content\" content=\"[[cue.text]]\">\n          [[cue.text]]\n        </simple-search-content>\n      </span>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.$.content.enableSearch(search);\n    }\n    root.addEventListener(\"click\", root._handleTap);\n  }\n\n  /**\n   * gets the active cue for styling\n   *\n   * @param {object} the current cue object\n   * @param {array} an array of all active cues\n   * @returns {boolean} Is the cue active?\n   */\n  _getActiveCue(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  }\n\n  /**\n   * handles tap\n   */\n  _handleTap(e) {\n    let root = this;\n    this.dispatchEvent(new CustomEvent(\"cue-seek\", { detail: root.cue.seek }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptCue.tag,\n  A11yMediaTranscriptCue\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-transcript-cue.js\";\n\nexport { A11yMediaTranscript };\n/**\n * `a11y-media-transcript`\n * `A transcript element to pair with a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  media-id=\"\"                                     // The id of the player\n  selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n</a11y-media-transcript>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscript extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * array of cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disableInteractive: {\n        name: \"disableInteractive\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show cue's start and end time\n       */\n      hideTimestamps: {\n        name: \"hideTimestamps\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * the id of media\n       */\n      mediaId: {\n        type: String,\n        value: null\n      },\n      /**\n       * tabindex of cues\n       */\n      tabIndex: {\n        type: Number,\n        computed: \"_getTabIndex(disableInteractive)\"\n      },\n      /**\n       * tabindex of cues\n       */\n      role: {\n        type: Number,\n        computed: \"_getRole(disableInteractive)\"\n      },\n      /**\n       * selected transcript track id\n       */\n      selectedTranscript: {\n        type: String,\n        value: \"0\"\n      },\n      /**\n       * the status of the transcript loading\n       */\n      status: {\n        type: String,\n        computed: \"_stampLoadingStatus(disableSeek)\"\n      },\n      /**\n       * array of cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript\";\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          border-left: 1px solid var(--a11y-media-transcript-bg-color);\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        :host .transcript-from-track {\n          display: none;\n          width: calc(100% - 30px);\n          padding: 0 15px 15px;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n        }\n        :host .transcript-from-track[active] {\n          display: table;\n        }\n        :host .transcript-from-track[active][hideTimestamps] {\n          display: block;\n        }\n        :host .sr-only:not(:focus) {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media print {\n          :host {\n            padding: 0 15px 5px;\n            color: #000;\n            background-color: #ffffff;\n            border-top: 1px solid #aaa;\n          }\n        }\n      </style>\n      <a id=\"transcript-desc\" class=\"sr-only\" href=\"#bottom\">\n        [[_getLocal('transcript','skip')]]\n      </a>\n      <div\n        aria-live=\"polite\"\n        id=\"loading\"\n        active$=\"[[_isLoading(selectedTranscript, tracks)]]\"\n        class=\"transcript-from-track\"\n      >\n        [[status]]\n      </div>\n      <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          aria-live=\"polite\"\n          id=\"track\"\n          class=\"transcript-from-track\"\n          lang=\"{{track.language}}\"\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            <a11y-media-transcript-cue\n              accent-color$=\"[[accentColor]]\"\n              active-cues$=\"[[activeCues]]\"\n              controls$=\"[[mediaId]]\"\n              cue$=\"{{cue}}\"\n              disabled$=\"[[disableCue]]\"\n              disable-search$=\"[[disableSearch]]\"\n              hide-timestamps$=\"[[hideTimestamps]]\"\n              on-cue-seek=\"_handleCueSeek\"\n              order$=\"{{cue.order}}\"\n              role=\"button\"\n              search=\"[[search]]\"\n              tabindex=\"0\"\n            >\n            </a11y-media-transcript-cue>\n          </template>\n        </div>\n      </template>\n      <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          id=\"download\"\n          class=\"downloadable-track\"\n          hidden\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            [[cue.start]] - [[cue.end]]: [[cue.text]]\n          </template>\n        </div>\n      </template>\n      <div id=\"bottom\" class=\"sr-only\"></div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n  }\n\n  /**\n   * gets download data for the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  download(mediaTitle) {\n    let root = this,\n      a = document.createElement(\"a\"),\n      title =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle\n          : this._getLocal(\"transcript\", \"label\"),\n      filename =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle.replace(/[^\\w\\d]/g, \"\")\n          : \"Transcript\",\n      track = root.shadowRoot.querySelector(\"#download[active]\"),\n      data = track !== null ? track.innerText : \"\";\n    a.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=UTF-8,\" + encodeURIComponent(title + \"\\n\" + data)\n    );\n    a.setAttribute(\"download\", filename + \".txt\");\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n  /**\n   * prints the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  print(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#track[active]\").cloneNode(true),\n      css = html`\n        <style>\n          a11y-media-transcript-cue {\n            display: table-row;\n            background-color: #fff;\n            color: #000;\n          }\n          a11y-media-transcript-cue[hide-timestamps],\n          a11y-media-transcript-cue[hide-timestamps] #text {\n            display: inline;\n          }\n          a11y-media-transcript-cue #text {\n            display: table-cell;\n            line-height: 200%;\n          }\n          a11y-media-transcript-cue #time {\n            display: table-cell;\n            font-size: 80%;\n            padding: 0 16px;\n            white-space: nowrap;\n            font-family: monospace;\n          }\n          a11y-media-transcript-cue[hide-timestamps] #time {\n            display: none;\n          }\n          a11y-media-transcript-cue [matched] {\n            background-color: #fff;\n            color: #eee;\n            padding: 3px 4px;\n            border-radius: 3px;\n          }\n        </style>\n      `,\n      h1 = html`\n        <h1>Transcript</h1>\n      `;\n    if (mediaTitle !== undefined) h1.innerHTML = mediaTitle;\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n        \"\",\n        \"\",\n        \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n      );\n      print.document.body.appendChild(css);\n      print.document.body.appendChild(h1);\n      print.document.body.appendChild(track);\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  }\n\n  /**\n   * updates activeCues array and scrolls to position\n   *\n   * @param {array} an array of cues\n   */\n  setActiveCues(cues) {\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#track\") !== null &&\n        root.shadowRoot.querySelector(\"#track\") !== undefined\n          ? root.shadowRoot.querySelector(\"#track\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#track a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (\n      !root.disableScroll &&\n      cue !== undefined &&\n      cue !== null &&\n      root.activeCues !== undefined &&\n      cue.getAttribute(\"order\") !== root.activeCues[0]\n    ) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {object} the player\n   */\n  setMedia(player) {\n    this.media = player;\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {array} an array of tracks\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.$.tracks.render();\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {boolean} Hide transcript? `true` is hidden, `false` is visible, and `null` toggles based on current state.\n   */\n  toggleHidden(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {integer} the tabindex of the cue\n   */\n  _getTabIndex(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  }\n\n  /**\n   * gets the role of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {string} the role of the cue, `button` or `null`\n   */\n  _getRole(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  }\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _handleCueSeek(e) {\n    if (!this.disableInteractive) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-seek\", { detail: e.detail })\n      );\n    }\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isActive(selectedTranscript, index) {\n    return (\n      selectedTranscript !== undefined &&\n      selectedTranscript !== null &&\n      parseInt(selectedTranscript) === parseInt(index)\n    );\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isLoading(selectedTranscript, tracks) {\n    return (\n      selectedTranscript === undefined ||\n      selectedTranscript === null ||\n      tracks === undefined ||\n      tracks === null ||\n      tracks.length === 0\n    );\n  }\n\n  _stampLoadingStatus(disableSeek) {\n    this.$.loading.innerHTML =\n      disableSeek === false\n        ? this._getLocal(\"transcript\", \"label\")\n        : this._getLocal(\"youTubeTranscript\", \"label\");\n    return this.$.loading.innerHTML;\n  }\n}\nwindow.customElements.define(A11yMediaTranscript.tag, A11yMediaTranscript);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"./a11y-media-button.js\";\n\n/**\n * `a11y-media-transcript-controls`\n * `A controls for the transcript element.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-controls \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n</a11y-media-transcript-controls>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-transcript-controls\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles\">\n        :host {\n          display: flex;\n          height: 44px;\n          max-height: 44px;\n          min-height: 44px;\n          color: var(--a11y-media-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-hover-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-input-text-color: var(--a11y-media-color);\n          --simple-search-input-line-color: var(--a11y-media-accent-color);\n          --simple-search-input-placeholder-color: var(\n            --a11y-media-transcript-color\n          );\n          --simple-search-button-color: var(--a11y-media-accent-color);\n          --simple-search-button-hover-color: var(\n            --a11y-media-faded-accent-color\n          );\n          --simple-search-button-bg-color: var(--a11y-media-bg-color);\n          --simple-search-button-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-hover-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-disabled-color: var(\n            --simple-colors-default-theme-grey-5\n          );\n          --simple-search-button-disabled-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --simple-search-button-disabled-border-color: var(\n            --simple-colors-default-theme-grey-3\n          );\n          --paper-input-container-input-color: var(--a11y-media-color);\n          --simple-search-container: {\n            padding: 0 15px;\n          }\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n      </style>\n      <div id=\"searchbar\">\n        <div id=\"searching\">\n          <simple-search\n            id=\"simplesearch\"\n            controls=\"transcript\"\n            disabled$=\"[[disableSearch]]\"\n            hidden$=\"[[disableSearch]]\"\n            no-label-float\n            next-button-icon$=\"[[_getLocal('nextResult','icon')]]\"\n            next-button-label$=\"[[_getLocal('nextResult','label')]]\"\n            prev-button-icon$=\"[[_getLocal('prevResult','icon')]]\"\n            prev-button-label$=\"[[_getLocal('prevResult','label')]]\"\n            search-input-icon$=\"[[_getLocal('search','icon')]]\"\n            search-input-label$=\"[[_getLocal('search','label')]]\"\n            target=\"[[target]]\"\n          >\n          </simple-search>\n        </div>\n        <div id=\"scrolling\">\n          <a11y-media-button\n            id=\"scroll\"\n            controls=\"transcript\"\n            icon=\"[[_getLocal('autoScroll','icon')]]\"\n            label=\"[[_getLocal('autoScroll','label')]]\"\n            on-tap=\"_handleScrollClick\"\n            toggle$=\"[[!disableScroll]]\"\n          >\n          </a11y-media-button>\n        </div>\n        <div\n          id=\"printing\"\n          hidden$=\"[[disablePrintButton]]\"\n          disabled$=\"[[disablePrintButton]]\"\n        >\n          <a11y-media-button\n            id=\"download\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('download','icon')]]\"\n            label=\"[[_getLocal('download','label')]]\"\n            on-tap=\"_handleDownloadClick\"\n          >\n          </a11y-media-button>\n          <a11y-media-button\n            id=\"print\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('print','icon')]]\"\n            label=\"[[_getLocal('print','label')]]\"\n            on-tap=\"_handlePrintClick\"\n          >\n          </a11y-media-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.search = root.$.simplesearch;\n    root.dispatchEvent(\n      new CustomEvent(\"searchbar-added\", { detail: root.search })\n    );\n  }\n\n  /**\n   * handles the transcript scroll button toggle\n   */\n  _handleScrollClick(e) {\n    this.dispatchEvent(new CustomEvent(\"toggle-scroll\", { detail: this }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptControls.tag,\n  A11yMediaTranscriptControls\n);\n\nexport { A11yMediaTranscriptControls };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaYoutube = window.A11yMediaYoutube || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\n\nwindow.A11yMediaYoutube.requestAvailability = () => {\n  if (!window.A11yMediaYoutube.instance) {\n    window.A11yMediaYoutube.instance = document.createElement(\n      \"a11y-media-youtube\"\n    );\n    document.body.appendChild(window.A11yMediaYoutube.instance);\n  }\n  return window.A11yMediaYoutube.instance;\n};\n/**\n * `a11y-media-youtube`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaYoutube extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-youtube\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * whether or not the YouTube API is ready\n       */\n      apiReady: {\n        type: Boolean,\n        value: window.YT !== undefined\n      },\n      /**\n       * a counter for creating unique ideas for each YouTube player container\n       */\n      counter: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this,\n      api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = () => {\n      var event = new CustomEvent(\"youtube-api-ready\");\n      root.apiReady = true;\n      document.dispatchEvent(event);\n    };\n  }\n\n  /**\n   * initializes the youtube player for a given element\n   *\n   * @param {options} the YouTube options object, eg. `{ \"width\": \"100%\", \"height\": \"100%\", \"videoId\": \"NP0mQeLWCCo\" }`\n   * @returns {options} the YouTube player object\n   */\n  initYoutubePlayer(options) {\n    //get unique id for each youtube iframe\n    // function to create and init iframe\n    let temp = \"a11y-media-yt-\",\n      div = document.createElement(\"div\"),\n      vdata = options.videoId.split(/[\\?&]/),\n      vid = vdata[0],\n      start = null,\n      end = null,\n      cue = { videoId: vid };\n    this.counter++;\n    temp += this.counter;\n    document.body.appendChild(div);\n    div.setAttribute(\"id\", temp);\n    let loadVideo = e => {\n        for (let i = 1; i < vdata.length; i++) {\n          let param = vdata[i].split(\"=\");\n          if (param[0] === \"t\") {\n            let hh = param[1].match(/(\\d)+h/),\n              mm = param[1].match(/(\\d)+m/),\n              ss = param[1]\n                .replace(/\\d+h/, \"\")\n                .replace(/\\d+m/, \"\")\n                .replace(/s/, \"\")\n                .match(/(\\d)+/),\n              h = hh !== null && hh.length > 1 ? parseInt(hh[1]) * 360 : 0,\n              m = mm !== null && mm.length > 1 ? parseInt(mm[1]) * 60 : 0,\n              s = ss !== null && ss.length > 1 ? parseInt(ss[1]) : 0;\n            start = parseInt(h + m + s);\n          } else if (param[0] === \"start\") {\n            start = parseInt(param[1]);\n          } else if (param[0] === \"end\") {\n            end = parseInt(param[1]);\n          }\n        }\n        if (start !== null) {\n          start = Math.max(0, start);\n          cue.startSeconds = start;\n        } else {\n          start = 0;\n        }\n        if (end !== null) {\n          end = start !== null ? Math.max(start, end) : Math.max(0, end);\n          cue.endSeconds = end;\n        }\n        e.target.cueVideoById(cue);\n      },\n      iframe = new YT.Player(temp, {\n        width: options.width,\n        height: options.height,\n        events: { onReady: loadVideo },\n        playerVars: {\n          color: \"white\",\n          controls: 0,\n          autoplay: options.autoplay,\n          disablekb: 1,\n          enablejsapi: 1,\n          iv_load_policy: 3,\n          modestbranding: 1,\n          showinfo: 0,\n          rel: 0\n        }\n      });\n\n    // add methods and properties to api so that it matches HTML5 video\n    iframe.tracks = [];\n    iframe.duration = 0;\n    iframe.seekable = {\n      length: 1,\n      start: index => {\n        iframe.seekable.start = index => {\n          return start || 0;\n        };\n      },\n      end: index => {\n        iframe.seekable.end = index => {\n          return end !== null\n            ? Math.min(end, iframe.duration)\n            : iframe.duration;\n        };\n      }\n    };\n    iframe.paused = true;\n    iframe.timeupdate;\n    iframe.play = () => {\n      if (iframe.playVideo !== undefined) iframe.playVideo();\n    };\n    iframe.addEventListener(\"onStateChange\", () => {\n      iframe.paused = iframe.getPlayerState() !== 1;\n      if (iframe.paused) {\n        clearInterval(iframe.timeupdate);\n      } else {\n        iframe.timeupdate = setInterval(() => {\n          document.dispatchEvent(\n            new CustomEvent(\"timeupdate\", { detail: iframe })\n          );\n        }, 1);\n      }\n    });\n    iframe.pause = () => {\n      if (iframe.pauseVideo !== undefined) iframe.pauseVideo();\n    };\n    iframe.seek = (time = 0) => {\n      if (iframe.seekTo !== undefined) {\n        iframe.seekTo(time);\n        if (iframe.paused) {\n          iframe.seekupdate = setInterval(() => {\n            if (Math.abs(iframe.getCurrentTime() - time) < 1) {\n              document.dispatchEvent(\n                new CustomEvent(\"timeupdate\", { detail: iframe })\n              );\n              clearInterval(iframe.seekupdate);\n            }\n          }, 1);\n        }\n      }\n    };\n    iframe.setMute = mode => {\n      if (iframe.mute !== undefined) mode ? iframe.mute() : iframe.unMute();\n    };\n    return iframe;\n  }\n}\nwindow.customElements.define(A11yMediaYoutube.tag, A11yMediaYoutube);\nexport { A11yMediaYoutube };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { A11yMediaBehaviors } from \"./lib/a11y-media-behaviors.js\";\nimport { pathFromUrl } from \"@polymer/polymer/lib/utils/resolve-url.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport \"./lib/a11y-media-state-manager.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-html5.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-youtube.js\";\n/**\n * `a11y-media-player`\n * An accessible video player\n *\n * @microcopy - the mental model for this element\n * ```\n<a11y-media-player\n  accent-color$=\"[[accentColor]]\"              // Optional accent color for controls,\n                                               // using the following materialize colors:\n                                               // red, pink, purple, deep-purple, indigo, blue,\n                                               // light blue, cyan, teal, green, light green, lime,\n                                              // yellow, amber, orange, deep-orange, and brown.\n                                              // Default is null.\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  custom-microcopy$=\"[[customMicrocopy]]\"  // Optional customization or text and icons\n  dark$=\"[[dark]]\"  // Is the color scheme dark? Default is light.\n  dark-transcript$=\"[[darkTranscript]]\"  // Use dark theme on transcript? Default is false, even when player is dark.\n  disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n  disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n  fullscreen$=\"[[fullscreen]]\"  // Is full screen mode toggled on?\n  height$=\"[[height]]\"  // The height of player\n  hide-timestamps$=\"[[hideTimestamps]]\"  // Hide cue timestamps?\n  lang$=\"[[lang]]\"  // The language of the media\n  loop$=\"[[loop]]\"  // Is video on a loop?\n  muted$=\"[[muted]]\"  // Is video muted?\n  media-title$=\"[[mediaTitle]]\"  // The title of the media\n  playback-rate$=\"[[playbackRate]]\"  // The speed that video plays, default is 1 (for 100%)\n  sticky-corner$=\"[[stickyCorner]]\"  // When user scrolls a playing video off-screen,\n  which corner will it stick to? Values are:\n  top-right (default), top-left, bottom-left, bottom-right,\n  and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"  // Optional thumbanil/cover image url\n  volume$=\"[[volume]]\">  // The initial volume of the video\n\n  <!--video sources and tracks-->\n  <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n  <source src=\"/path/to/video.webm\" type=\"video/webm\">\n  <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n  <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n  <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n\n</a11y-media-player>```\n *\n * Intermediate customization of player:\n * ```\n--a11y-media-text-color: text color, default is --simple-colors-default-theme-grey-11\n--a11y-media-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-default-theme-grey-12\n--a11y-media-hover-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-accent-color: an accent color, default is --simple-colors-default-theme-accent-9\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-default-theme-accent-8\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color```\n *\n * Intermediate customization of transcript:\n * ```\n --a11y-media-transcript-color: transcript color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-default-theme-grey-12```\n *\n * Advanced styles for settings menu:\n * ```\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color```\n *\n * Advanced styles for buttons:\n * ```\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color```\n *\n * Advanced styles for toggles:\n * ```\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color```\n *\n * Advanced styles for sliders:\n * ```\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color```\n *\n * @extends A11yMediaBehaviors\n * @extends SimpleColors\n * @polymer\n * @customElement\n * @demo demo/index.html video demo\n * @demo demo/audio.html audio demo\n * @demo demo/youtube.html YouTube demo\n *\n */\nclass A11yMediaPlayer extends A11yMediaBehaviors {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  width: calc(100% - 2px);\n  border: 1px solid var(--simple-colors-default-theme-grey-3);\n  --a11y-media-color: var(--simple-colors-default-theme-grey-11);\n  --a11y-media-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n  --a11y-media-hover-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-accent-color: var(--simple-colors-default-theme-accent-9);\n  --a11y-media-faded-accent-color: var(--simple-colors-default-theme-accent-8);\n\n  \n  --a11y-media-settings-menu-color: var(--a11y-media-color);\n  --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n  --a11y-media-settings-menu-hover-bg-color: var(--a11y-media-hover-bg-color);\n\n  \n  --a11y-media-button-color: var(--a11y-media-color);\n  --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n  --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n  --a11y-media-button-toggle-color: var(--a11y-media-faded-accent-color);\n\n  \n  --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n  --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n  --paper-toggle-button-checked-bar-color: var(--a11y-media-accent-color);\n  --paper-toggle-button-checked-button-color: var(--a11y-media-accent-color);\n\n  \n  --paper-slider-active-color: var(--a11y-media-accent-color);\n  --paper-slider-secondary-color: var(--a11y-media-faded-accent-color);\n  --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-knob-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n  \n  \n  --a11y-media-transcript-color: var(--simple-colors-default-theme-grey-7);\n  --a11y-media-transcript-bg-color: var(--simple-colors-default-theme-grey-1);\n  --a11y-media-transcript-accent-color: var(--simple-colors-default-theme-accent-8);\n  --a11y-media-transcript-faded-accent-color: var(--simple-colors-default-theme-accent-10);\n  --a11y-media-transcript-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-fixed-theme-accent-1);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-fixed-theme-grey-2);\n  --a11y-media-transcript-match-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-fixed-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-fixed-theme-accent-12);\n}\n:host([dark]) {\n  border: 1px solid var(--simple-colors-default-theme-grey-1);\n}\n:host([dark-transcript]) {\n  --a11y-media-transcript-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-dark-theme-accent-12);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-dark-theme-grey-2);\n}\n:host,\n:host #outerplayer {\n  color: var(--simple-colors-default-theme-grey-12);\n  background-color: var(--simple-colors-default-theme-grey-2);\n}\n:host > * {\n  transition: all 0.5s;\n}\n:host,\n:host #outerplayer,\n:host #player,\n:host #outertranscript,\n:host #innertranscript {\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n  align-content: stretch;\n} \n:host #captionlink:link {\n  text-decoration: none;\n}\n:host #innerplayer {\n  display: flex;\n}\n:host([hidden]),\n:host *[hidden] {\n  display: none !important;\n}\n:host #innerplayer,\n:host #player, \n:host #player > *,\n:host #customcc,\n:host #customcctxt,\n:host #slider,\n:host #controls,\n:host #outertranscript,\n:host #innertranscript {\n  width: 100%;\n}\n:host #innertranscript > * {\n  width: calc(100% - 1px);\n}\n:host > *,\n:host #innerplayer,\n:host #player,\n:host #player > *,\n:host #customcctxt {\n  flex: 1 1 auto;\n}\n:host #controls,\n:host #tcontrols {\n  flex: 0 0 44px;\n}\n:host #innerplayer {\n  margin: 0 auto;\n}\n:host #player {\n  height: 400px;\n  position: relative;\n}\n:host #player > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n}\n:host #playbutton,\n:host #slider,\n:host #controls {\n  z-index: 2;\n}\n:host([audio-only]) #playbutton {\n  opacity: 0;\n}\n:host #slider {\n  flex: 0 0 32px;\n  height: 32px;\n}\n:host([thumbnail-src]) #youtube {\n  opacity: 0;\n}\n:host #youtube[elapsed] {\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n:host #customcc:not([hidden]) {\n  font-size: 20px;\n  transition: font-size 0.25s;\n  display: flex;\n}\n:host #customcctxt:not(:empty) {\n  align-self: flex-end;\n  font-family: sans-serif;\n  color: white;\n  margin: 4px 10px;\n  padding: 0.15em 4px;\n  background-color: black;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: all 0.5s;\n}\n:host([audio-only]:not([thumbnail-src])) #customcctxt {\n  align-self: center;\n  color: var(--a11y-media-color);\n  background-color: transparent;\n}\n:host #printthumb {\n  width: 100%;\n  margin: 0;\n  display: block;\n  border-top: 1px solid #aaaaaa;\n}\n:host .media-caption:not(:empty) {\n  width: calc(100% - 30px);\n  padding: 5px 15px;\n}\n:host .media-type {\n  font-style: italic;\n}\n:host #outertranscript {\n  padding: 0 1px 0 0;\n}\n:host #innertranscript {\n  flex: 1 0 194px;\n}\n:host #transcript {\n  flex: 1 0 150px;\n  overflow-y: scroll;\n}\n:host .sr-only {\n  position: absolute;\n  left: -9999px;\n  font-size: 0;\n  height: 0;\n  width: 0;\n  overflow: hidden;\n}\n@media screen {\n  :host([flex-layout]:not([responsive-size=\"xs\"])) {\n    flex-flow: row;\n    padding: 0;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) #outerplayer {\n    flex: 1 0 auto;\n  }\n  :host #printthumb,\n  :host([height]) #outertranscript,\n  :host([stand-alone]) #outertranscript,\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    position: fixed;\n    top: 5px;\n    right: 5px;\n    width: 200px;\n    max-width: 200px;\n    z-index: 999999;\n    border: 1px solid var(--a11y-media-bg-color);\n    box-shadow: 1px 1px 20px 1px rgba(125, 125, 125);\n    border-radius: 3.2px;\n  }\n  :host([dark][sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    border: 1px solid var(--a11y-media-bg-color);\n  }\n  :host([sticky][sticky-corner=\"top-left\"]) #outerplayer {\n    right: unset;\n    left: 5px;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) > div {\n    width: 50%;\n    flex: 1 1 auto;\n  }\n  :host #innertranscript {\n    position: relative;\n  }\n  :host([hide-transcript]) #outerplayer {\n    min-width: 50%;\n    max-width: 100%;\n  }\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #transcript {\n    position: absolute;\n    top: 44px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow-y: scroll;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #innerplayer.totop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 200px !important;\n    z-index: 9999;\n  }\n  :host([sticky][sticky-corner=\"bottom-left\"]) #innerplayer {\n    top: unset;\n    right: unset;\n    bottom: 5px;\n  }\n  :host([sticky][sticky-corner=\"bottom-right\"]) #innerplayer {\n    top: unset;\n    bottom: 5px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #controls {\n    display: none;\n  }\n  :host([responsive-size=\"lg\"]) #customcc {\n    font-size: 16px;\n  }\n  :host([responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"xl\"]) #customcc {\n    font-size: 14px;\n  }\n  :host([responsive-size=\"sm\"]) #customcc,\n  :host([flex-layout][responsive-size=\"lg\"]) #customcc {\n    font-size: 12px;\n  }\n  :host([responsive-size=\"xs\"]) #customcc,\n  :host([flex-layout][responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"sm\"]) #customcc {\n    font-size: 10px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n    display: none;\n  }\n  :host .media-caption {\n    color: var(--a11y-media-bg-color);\n    background-color: var(--a11y-media-accent-color);\n  }\n  :host #audio-only {\n    text-align: center;\n    font-style: italic;\n    width: 100%;\n    line-height: 160%;\n  }\n  :host .print-only {\n    display: none;\n  }\n}\n\n@media print {\n  :host,\n  :host([dark]) {\n    outline: 1px solid #aaaaaa;\n    background-color: #ffffff;\n  }\n  :host .screen-only,\n  :host #printthumb:not([src]),\n  :host(:not([thumbnail-src])) #player {\n    display: none;\n  }\n  :host #searchbar {\n    display: none;\n  }\n  :host .media-caption {\n    background-color: #cccccc;\n    color: #000000;\n    font-size: 120%;\n  }\n}</style>\n<style include=\"simple-colors-shared-styles\"></style>\n  <div class=\"sr-only\">\n      <a href$=\"[[__captionHref]]\">[[mediaCaption]]</a>\n  </div>\n  <div id=\"outerplayer\">\n    <div id=\"innerplayer\">\n      <div id=\"player\"\n        style$=\"[[_getThumbnailCSS(thumbnailSrc,isYoutube,audioOnly)]]\">\n        <a11y-media-play-button\n          id=\"playbutton\"\n          action$=\"[[playPause.action]]\"\n          audio-only$=\"[[audioOnly]]\"\n          disabled=\"true\"\n          elapsed$=\"[[_hidePlayButton(thumbnailSrc, isYoutube, __elapsed)]]\"\n          hidden$=\"[[audioNoThumb]]\"\n          disabled$=\"[[audioNoThumb]]\"\n          on-controls-change=\"_onControlsChanged\"\n          localization$=\"[[localization]]\">\n        </a11y-media-play-button>\n        <a11y-media-html5\n          id=\"html5\"\n          audio-only$=\"[[audioOnly]]\"\n          autoplay$=\"[[autoplay]]\"\n          cc$=\"[[cc]]\"\n          crossorigin$=\"[[crossorigin]]\"\n          hidden$=\"[[isYoutube]]\"\n          media-lang$=\"[[mediaLang]]\"\n          loop$=\"[[loop]]\"\n          muted$=\"[[muted]]\"\n          manifest$=\"[[manifest]]\"\n          on-media-loaded=\"_handleMediaLoaded\"\n          ontimeupdate=\"_handleTimeUpdate\"\n          playing$=\"[[__playing]]\"\n          playback-rate$=\"[[playbackRate]]\"\n          thumbnail-src$=\"[[thumbnailSrc]]\"\n          preload$=\"[[preload]]\"\n          volume$=\"[[volume]]\"\n        >\n          <slot></slot>\n        </a11y-media-html5>\n        <div id=\"youtube\" \n          elapsed$=\"[[__elapsed]]\" \n          lang$=\"[[mediaLang]]\"\n          video-id$=\"[[videoId]]\">\n        </div>\n        <div id=\"customcc\" \n          aria-live=\"polite\"\n          class=\"screen-only\" \n          hidden$=\"[[!showCustomCaptions]]\">\n          <div id=\"customcctxt\"></div>\n        </div>\n      </div>\n    </div>\n    <paper-slider id=\"slider\"\n      class=\"screen-only\"\n      disabled$=\"[[disableSeek]]\"\n      label$=\"[[seekSlider.label]]\"\n      min=\"0\"\n      max=\"[[__duration]]\"\n      on-mousedown=\"_handleSliderStart\"\n      on-mouseup=\"_handleSliderStop\"\n      on-keyup=\"_handleSliderStop\"\n      on-keydown=\"_handleSliderStart\"\n      on-blur=\"_handleSliderStop\"\n      secondary-progress=\"[[__buffered]]\"\n      value=\"[[__elapsed]]\"\n    >\n    </paper-slider>\n    <a11y-media-controls id=\"controls\"\n      cc$=\"[[cc]]\"\n      disable-seek$=\"[[disableSeek]]\"\n      fixed-height$=\"[[height]]\"\n      fullscreen$=\"[[fullscreen]]\"\n      fullscreen-button$=\"[[fullscreenButton]]\"\n      has-captions$=\"[[hasCaptions]]\"\n      has-transcript$=\"[[hasTranscript]]\"\n      hide-transcript$=\"[[hideTranscript]]\"\n      mute-unmute=\"[[muteUnmute]]\"\n      on-controls-change=\"_onControlsChanged\"\n      on-print-transcript=\"_handlePrinting\"\n      on-download-transcript=\"_handleDownload\"\n      responsive-size$=\"[[responsiveSize]]\"\n      play-pause=\"[[playPause]]\"\n      stand-alone$=\"[[standAlone]]\"\n      volume=\"[[__volume]]\">\n    </a11y-media-controls>\n    <a id=\"captionlink\" href$=\"[[__captionHref]]\">\n      <div\n        aria-hidden=\"true\"\n        class=\"screen-only media-caption\"\n        hidden$=\"[[!_hasAttribute(mediaCaption)]]\">\n        [[mediaCaption]]\n      </div>\n    </a>\n    <div class=\"print-only media-caption\">[[printCaption]]</div>\n  </div>\n  <img id=\"printthumb\" aria-hidden=\"true\" src$=\"[[thumbnailSrc]]\" />\n  <div id=\"outertranscript\" hidden$=\"[[standAlone]]\">\n    <div id=\"innertranscript\" hidden$=\"[[hideTranscript]]\">\n      <a11y-media-transcript-controls id=\"tcontrols\"\n        accent-color$=\"[[accentColor]]\"\n        localization$=\"[[localization]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-print-button$=\"[[disablePrintButton]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        has-transcript$=\"[[hasTranscript]]\"\n        localization$=\"[[localization]]\"\n        on-searchbar-added=\"_handleSearchAdded\"\n        on-toggle-scroll=\"_handleTranscriptScrollToggle\"\n        on-print-transcript=\"_handlePrinting\"\n        on-download-transcript=\"_handleDownload\"\n        stand-alone$=\"[[standAlone]]\">\n      </a11y-media-transcript-controls>\n      <a11y-media-transcript id=\"transcript\" \n        accent-color$=\"[[accentColor]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        disable-seek$=\"[[disableSeek]]\"\n        disable-interactive$=\"[[disableInteractive]]\"\n        hide-timestamps$=\"[[hideTimestamps]]\"\n        media-id$=\"[[id]]\"\n        on-transcript-seek=\"_handleTranscriptSeek\"\n        localization$=\"[[localization]]\"\n        search=\"[[search]]\"\n        selected-transcript$=\"[[__selectedTrack]]\">\n      </a11y-media-transcript>\n    </div>\n  </div>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    \n    return {\n  /**\n   * Allow this media to play concurrently with other a11y-media-players?\n   * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n   */\n\n  \"allowConcurrent\": {\n    \"name\": \"allowConcurrent\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Is it an audio player with no thumbnail?\n   */\n  \"audioNoThumb\": {\n    \"name\": \"audioNoThumb\",\n    \"type\": Boolean,\n    \"computed\": \"_getAudioNoThumb(audioOnly,thumbnailSrc)\"\n  },\n  /**\n   * Use dark theme on transcript? Default is false, even when player is dark.\n   */\n  \"darkTranscript\": {\n    \"name\": \"darkTranscript\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * disable fullscreen option\n   */\n  \"disableFullscreen\": {\n    \"name\": \"disableFullscreen\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * disable interactive mode that makes the transcript clickable\n   */\n  \"disableInteractive\": {\n    \"name\": \"disableInteractive\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Determines if video and transcript are in a flex layout\n   */\n  \"flexLayout\": {\n    \"name\": \"flexLayout\",\n    \"type\": Boolean,\n    \"computed\": \"_isFlexLayout(standAlone,hideTranscript,audioNoThumb,stackedLayout)\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Is fullscreen mode?\n   */\n  \"fullscreen\": {\n    \"name\": \"fullscreen\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * show the FullscreenButton?\n   */\n  \"fullscreenButton\": {\n    \"name\": \"fullscreenButton\",\n    \"type\": Boolean,\n    \"computed\": \"_getFullscreenButton(disableFullscreen,audioNoThumb,screenfullLoaded)\",\n    \"notify\": true\n  },\n\n  /**\n   * Does the player have tracks?\n   */\n  \"hasCaptions\": {\n    \"name\": \"hasCaptions\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n\n  /**\n   * Hide elapsed time?\n   */\n  \"hideElapsedTime\": {\n    \"name\": \"hideElapsedTime\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * show cue's start and end time\n   */\n  \"hideTimestamps\": {\n    \"name\": \"hideTimestamps\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"hideTranscript\": {\n    \"name\": \"hideTranscript\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"id\": {\n    \"name\": \"id\",\n    \"type\": String,\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The default media caption if none is given.\n   */\n  \"mediaCaption\": {\n    \"name\": \"mediaCaption\",\n    \"type\": String,\n    \"computed\": \"_getMediaCaption(audioOnly,localization,mediaTitle)\"\n  },\n  /**\n   * the language of the media (if different from user interface language)\n   */\n  \"mediaLang\": {\n    \"name\": \"mediaLang\",\n    \"type\": String,\n    \"value\": \"en\"\n  },\n  /**\n   * mute/unmute button\n   */\n  \"muteUnmute\": {\n    \"name\": \"muteUnmute\",\n    \"type\": Object,\n    \"computed\": \"_getMuteUnmute(muted)\"\n  },\n  /**\n   * The media caption that displays when the page is printed.\n   */\n  \"printCaption\": {\n    \"name\": \"printCaption\",\n    \"type\": String,\n    \"computed\": \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n  },\n  /**\n   * Size of the a11y media element for responsive styling\n   */\n  \"responsiveSize\": {\n    \"name\": \"responsiveSize\",\n    \"type\": String,\n    \"notify\": true,\n    \"value\": \"xs\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Has screenfull loaded?\n   */\n  \"screenfullLoaded\": {\n    \"name\": \"screenfullLoaded\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"notify\": true\n  },\n  /**\n   * is YouTube?\n   */\n  \"showCustomCaptions\": {\n    \"name\": \"showCustomCaptions\",\n    \"type\": Boolean,\n    \"computed\": \"_showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc)\"\n  },\n  /**\n   * Optional array ouf sources.\n   */\n  \"sources\": {\n    \"name\": \"sources\",\n    \"type\": Array,\n    \"value\": []\n  },\n  /**\n   * stacked layout instead of side-by-side?\n   */\n  \"stackedLayout\": {\n    \"name\": \"stackedLayout\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n   */\n  \"sticky\": {\n    \"name\": \"sticky\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * top-left, top-right, bottom-left, bottom-right, or none?\n   * Default is \"top-right\". \"None\" disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"name\": \"stickyCorner\",\n    \"type\": String,\n    \"value\": \"top-right\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Source of optional thumbnail image\n   */\n  \"thumbnailSrc\": {\n    \"name\": \"thumbnailSrc\",\n    \"type\": String,\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Optional array ouf tracks.\n   */\n  \"tracks\": {\n    \"name\": \"tracks\",\n    \"type\": Array,\n    \"value\": []\n  },\n  /**\n   * play/pause button\n   */\n  \"playPause\": {\n    \"name\": \"playPause\",\n    \"type\": Object,\n    \"computed\": \"_getPlayPause(__playing)\"\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__playing\": {\n    \"name\": \"__playing\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"notify\": true,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__captionHref\": {\n    \"name\": \"__captionHref\",\n    \"type\": String,\n    \"value\": null,\n    \"notify\": true\n  }\n}\n;\n  }\n\n  constructor() {\n    super();\n    import(\"@polymer/paper-slider/paper-slider.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/av-icons.js\");\n    import(\"@lrnwebcomponents/a11y-media-player/lib/a11y-media-play-button.js\");\n    const basePath = pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/screenfull/dist/screenfull.js`;\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"screenfullLib\", location);\n    window.addEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    this.__playerAttached = true;\n    window.A11yMediaStateManager.requestAvailability();\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player\";\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this._addResponsiveUtility();\n    window.dispatchEvent(new CustomEvent(\"a11y-player\", { detail: this }));\n    if (this.isYoutube) {\n      this._youTubeRequest();\n    }\n  }\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      aspect = 16 / 9,\n      tracks = new Array(),\n      tdata = new Array(),\n      selected = 0;\n    if (typeof screenfull === \"object\") root._onScreenfullLoaded.bind(root);\n    if (root.id === null) root.id = \"a11y-media-player\" + Date.now();\n    root.__playerReady = true;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root._getLocal(\"loading\", \"label\");\n    root.__slider = root.$.slider;\n    root.__slider.min = 0;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__duration = 0;\n    root.$.controls.setStatus(root.__status);\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root._setPlayerHeight(aspect);\n    if (root.isYoutube) {\n      root._youTubeRequest();\n      document.addEventListener(\"timeupdate\", e => {\n        if (e.detail === root.media) root._handleTimeUpdate(e);\n      });\n    } else {\n      root.media = root.$.html5;\n      root.media.media.addEventListener(\"timeupdate\", e => {\n        root._handleTimeUpdate(e);\n      });\n      root._addSourcesAndTracks();\n    }\n    root.$.transcript.setMedia(root.$.innerplayer);\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    let root = this,\n      stopped = !(root.__playing === true);\n    if (root.isYoutube && !root.__ytAppended) {\n      ytInit();\n    } else {\n      root.__playing = true;\n      root.media.play();\n      window.dispatchEvent(\n        new CustomEvent(\"a11y-player-playing\", { detail: root })\n      );\n    }\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    let root = this;\n    root.__playing = false;\n    root.media.pause();\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks media backward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  rewind(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() - amt, 0);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks media forward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  forward(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() + amt);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks to a specific time\n   *\n   * @param {float} the time, in seconds, to seek\n   */\n  seek(time) {\n    let seekable =\n      this.media !== undefined && this.media !== null\n        ? this.media.seekable\n        : [];\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.media.seek(time);\n    }\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {integer} the index of the track\n   */\n  selectTrack(index) {\n    this.__selectedTrack = index;\n    this.$.html5.selectTrack(index);\n  }\n\n  /**\n   * set volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.volume = value !== null ? value : 70;\n    this.media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  }\n\n  /**\n   * set speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    value = value !== null ? value : 1;\n    this.media.setPlaybackRate(value);\n  }\n\n  /**\n   * toggles captions\n   *\n   * @param {boolean} Toggle CC on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleCC(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.$.html5.setCC(this.cc);\n  }\n\n  /**\n   * toggles looping\n   *\n   * @param {boolean} Toggle looping on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleLoop(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.media.setLoop(this.loop);\n    }\n  }\n\n  /**\n   * toggles mute\n   *\n   * @param {boolean} Toggle mute on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleMute(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.media.setMute(this.muted);\n  }\n\n  /**\n   * toggles sticky attribute\n   *\n   * @param {boolean} Toggle sticky mode on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleSticky(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.dispatchEvent(new CustomEvent(\"player-sticky\", { detail: this }));\n  }\n\n  /**\n   * toggles transcript\n   *\n   * @param {boolean} Toggle transcript on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleTranscript(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (this.$.transcript !== undefined && this.$.transcript !== null) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-toggle\", { detail: this })\n      );\n    }\n  }\n\n  /**\n   * dynamically adds source and track data\n   * from the sources and tracks properties\n   * (needed for media-player)\n   */\n  _appendToPlayer(data, type) {\n    if (data !== undefined && data !== null && data !== []) {\n      let root = this,\n        arr = Array.isArray(data) ? data : JSON.parse(data);\n      for (let i = 0; i < arr.length; i++) {\n        let el = document.createElement(type);\n        if (!this.__captionHref && type === \"source\")\n          this.__captionHref = arr[i].src;\n        for (let key in arr[i]) {\n          el.setAttribute(key, arr[i][key]);\n        }\n        root.$.html5.media.appendChild(el);\n      }\n    }\n  }\n\n  /**\n   * sets the height of the player\n   * @param {Number} the aspect ratio of the media or its poster thumbnail\n   */\n  _setPlayerHeight(aspect) {\n    let root = this;\n    root.$.player.style.height = \"unset\";\n    if (root.audioOnly && root.thumbnailSrc === null && root.height === null) {\n      root.$.player.style.height = \"60px\";\n    } else if (root.height === null) {\n      root.$.player.style.paddingTop = 100 / aspect + \"%\";\n      root.$.innerplayer.style.maxWidth =\n        \"calc(\" + aspect * 100 + \"vh - \" + aspect * 80 + \"px)\";\n    } else {\n      root.$.outerplayer.style.height = root.height;\n    }\n  }\n\n  /**\n   * gets media caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the title of the media\n   * @returns {string} the media caption\n   */\n  _getMediaCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media muted?\n   * @param {string} label if button mutes media\n   * @param {string} icon if button mutes media\n   * @param {string} label if button unmutes media\n   * @param {string} icon if button unmutes media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"mute\", \"icon\": \"av:volume-off\"}`\n   */\n  _getMuteUnmute(muted) {\n    return muted\n      ? {\n          label: this._getLocal(\"unmute\", \"label\"),\n          icon: this._getLocal(\"unmute\", \"icon\"),\n          action: \"unmute\"\n        }\n      : {\n          label: this._getLocal(\"mute\", \"label\"),\n          icon: this._getLocal(\"mute\", \"icon\"),\n          action: \"mute\"\n        };\n  }\n\n  /**\n   * gets print caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the text that indicates this player is for video\n   * @param {string} the title of the media\n   * @returns {string} the media caption when the page is printed\n   */\n  _getPrintCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      videoLabel = this._getLocal(\"video\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  }\n\n  /**\n   * get thumbanail css based on whether or not the video is playing\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _getThumbnailCSS(thumbnailSrc, isYoutube, audioOnly) {\n    return thumbnailSrc != null && (isYoutube || audioOnly)\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _addSourcesAndTracks() {\n    let root = this,\n      counter = 0;\n    root.querySelectorAll(\"source,track\").forEach(node => {\n      if (!root.__captionHref && node.tagName === \"SOURCE\")\n        root.__captionHref = node.getAttribute(\"src\");\n      root.$.html5.media.appendChild(node);\n    });\n    root._appendToPlayer(root.tracks, \"track\");\n    root._appendToPlayer(root.sources, \"source\");\n    root.$.html5.media.textTracks.onaddtrack = e => {\n      root.hasCaptions = true;\n      root.hasTranscript = !root.standAlone;\n      root._getTrackData(e.track, counter++);\n    };\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {boolean} Is the media audio only?\n   * @param {string} optional: the source URL of the thumbnail image\n   * @returns {boolean} Should height of video/thumbnail area be set to 0?\n   */\n  _getAudioNoThumb(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  }\n\n  /**\n   * returns whether or not the fullscreen mode should be disabled\n   *\n   * @param {boolean} Is fullscreen mode set to disabled?\n   * @returns {boolean} Should fullscreen disabled?\n   */\n  _getFullscreenButton(disableFullscreen, audioNoThumb, screenfullLoaded) {\n    let root = this;\n    if (typeof screenfull === \"object\") root._onScreenfullLoaded.bind(root);\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen ||\n      audioNoThumb ||\n      !(typeof screenfull === \"object\")\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} icon if button pauses media\n   * @param {string} label if button plays media\n   * @param {string} icon if button plays media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"Pause\", \"icon\": \"av:pause\"}`\n   */\n  _getPlayPause(__playing) {\n    return __playing !== false\n      ? {\n          label: this._getLocal(\"pause\", \"label\"),\n          icon: this._getLocal(\"pause\", \"icon\"),\n          action: \"pause\"\n        }\n      : {\n          label: this._getLocal(\"play\", \"label\"),\n          icon: this._getLocal(\"play\", \"icon\"),\n          action: \"play\"\n        };\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _getTrackData(track, id) {\n    let root = this,\n      selected = track.default === true || root.__selectedTrack === undefined,\n      loadCueData;\n    if (selected) root.selectTrack(id);\n    track.mode = selected && this.cc === true ? \"showing\" : \"hidden\";\n    loadCueData = setInterval(() => {\n      if (\n        track.cues !== undefined &&\n        track.cues !== null &&\n        track.cues.length > 0\n      ) {\n        clearInterval(loadCueData);\n        let cues = Object.keys(track.cues).map(key => {\n          return {\n            order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n            seek: track.cues[key].startTime,\n            seekEnd: track.cues[key].endTime,\n            start: root._getHHMMSS(\n              track.cues[key].startTime,\n              root.media.duration\n            ),\n            end: root._getHHMMSS(track.cues[key].endTime, root.media.duration),\n            text: track.cues[key].text\n          };\n        });\n\n        if (root.__tracks === undefined) root.__tracks = [];\n        root.push(\"__tracks\", {\n          value: id,\n          language: track.language,\n          text:\n            track.label !== undefined\n              ? track.label\n              : track.language !== undefined\n              ? track.language\n              : \"Track \" + id,\n          cues: cues\n        });\n        root.$.controls.setTracks(root.__tracks);\n        root.$.transcript.setTracks(root.__tracks);\n        root.push(\"__tracks\");\n        track.oncuechange = e => {\n          root.$.transcript.setActiveCues(\n            Object.keys(e.currentTarget.activeCues).map(key => {\n              return e.currentTarget.activeCues[key].id;\n            })\n          );\n        };\n      }\n    }, 1);\n  }\n\n  /**\n   * handles the seek function when a transcript cue is activated\n   */\n  _handleTranscriptSeek(e) {\n    let root = this;\n    if (\n      !root.standAlone &&\n      root.$.transcript !== undefined &&\n      root.$.transcript !== null\n    ) {\n      root.__resumePlaying = root.__playing;\n      root.seek(e.detail);\n    }\n  }\n\n  /**\n   * handles media metadata when media is loaded\n   */\n  _handleMediaLoaded(e) {\n    let root = this,\n      aspect = root.media.aspectRatio;\n    root._setPlayerHeight(aspect);\n    root.$.playbutton.removeAttribute(\"disabled\");\n\n    // gets and converts video duration\n    root._setElapsedTime();\n    root._getTrackData(root.$.html5.media);\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _hidePlayButton(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      (isYoutube && thumbnailSrc === null) ||\n      !(__elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.$.transcript.print(root.mediaTitle);\n  }\n\n  /**\n   * sets search the simple-search element\n   */\n  _handleSearchAdded(e) {\n    this.search = e.detail;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStart(e) {\n    this.__resumePlaying = !this.paused;\n    this.pause();\n    this.__seeking = true;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStop(e) {\n    this.seek(this.$.slider.immediateValue);\n    this.__seeking = false;\n    if (this.__resumePlaying) {\n      this.play();\n      this.__resumePlaying = null;\n    }\n  }\n\n  /**\n   * handles time updates\n   */\n  _handleTimeUpdate(e) {\n    let root = this;\n    //if play exceeds clip length, stop\n    if (root.isYoutube && root.media.duration !== root.media.getDuration()) {\n      root.__duration = root.media.duration = root.media.getDuration();\n      root.disableSeek = false;\n      root._addSourcesAndTracks();\n      if (\n        root.media.seekable &&\n        root.media.seekable.length > 0 &&\n        root.media.seekable.start(0) !== 0\n      ) {\n        root.$.slider.min = root.media.seekable.start(0);\n      }\n    }\n    if (\n      root.media.seekable !== undefined &&\n      root.media.seekable.length > 0 &&\n      root.media.seekable.end(0) <= root.media.getCurrentTime()\n    ) {\n      root.stop();\n      root.__playing = false;\n    }\n    //prevent slider and cue updates until finished seeking\n    root._updateCustomTracks();\n    root._setElapsedTime();\n  }\n\n  /**\n   * handles transcript scroll toggle\n   */\n  _handleTranscriptScrollToggle(e) {\n    this.disableScroll = !this.disableScroll;\n  }\n\n  /**\n   * Determines if video and transcript are in a flex layout\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the transcript hidden?\n   * @param {boolean} Does the media no video or thumbnail image?\n   * @param {boolean} Is the layout stacked?\n   * @returns {boolean} Is the video in flex layout mode?\n   */\n  _isFlexLayout(standAlone, hideTranscript, audioNoThumb, stackedLayout) {\n    return !standAlone && !hideTranscript && !audioNoThumb && !stackedLayout;\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged(e) {\n    let root = this,\n      action = e.detail.action !== undefined ? e.detail.action : e.detail.id;\n    if (action === \"backward\" || action === \"rewind\") {\n      root.rewind();\n    } else if (action === \"captions\") {\n      root.toggleCC();\n    } else if (action === \"transcript\" || action === \"transcript-toggle\") {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\") {\n      root.forward();\n    } else if (action === \"fullscreen\" && root.fullscreenButton) {\n      root.toggleTranscript(root.fullscreen);\n      screenfull.toggle(root.$.outerplayer);\n    } else if (action === \"loop\") {\n      root.toggleLoop();\n    } else if (action === \"mute\" || action === \"unmute\") {\n      root.toggleMute();\n    } else if (action === \"pause\") {\n      root.pause();\n    } else if (action === \"play\") {\n      root.play();\n    } else if (action === \"restart\") {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\") {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\") {\n      root.setVolume(e.detail.value);\n    }\n  }\n\n  /**\n   * sets the element's screenfullLoaded variable to true once screenfull is loaded\n   * and adds an event listener for screenfull\n   */\n  _onScreenfullLoaded() {\n    let root = this;\n    root.screenfullLoaded = true;\n\n    // handles fullscreen\n    if (screenfull) {\n      screenfull.on(\"change\", () => {\n        if (screenfull.enabled) root.fullscreen = screenfull.isFullscreen;\n      });\n    }\n  }\n\n  /**\n   * sets duration, taking into consideration start and stop times\n   *\n   * @param {integer} seek time in seconds, optional\n   * @returns {string} status\n   */\n  _setElapsedTime() {\n    let elapsed =\n        this.__seeking === true\n          ? this.$.slider.immediateValue\n          : this.media.getCurrentTime() > 0\n          ? this.media.getCurrentTime()\n          : 0,\n      duration = this.media.duration > 0 ? this.media.duration : 0;\n    this.__elapsed = elapsed;\n    this.__duration = duration;\n    if (this.media.seekable !== undefined && this.media.seekable.length > 0) {\n      if (this.media.seekable.start(0) !== undefined)\n        elapsed -= this.media.seekable.start(0);\n      if (this.media.seekable.end(0) !== undefined)\n        duration =\n          this.media.seekable.end(0) -\n          (this.media.seekable.start(0) !== undefined\n            ? this.media.seekable.start(0)\n            : 0);\n    }\n    this.__status =\n      this._getHHMMSS(elapsed, duration) + \"/\" + this._getHHMMSS(duration);\n    this.$.controls.setStatus(this.__status);\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return (isYoutube || audioOnly) && hasCaptions && cc;\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _useYoutubeIframe(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      isYoutube &&\n      (thumbnailSrc === null || __elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest() {\n    window.A11yMediaYoutube.requestAvailability();\n    let root = this,\n      ytUtil = window.A11yMediaYoutube.instance;\n    root.disableSeek = true;\n    if (root.__playerAttached && root.__playerReady) {\n      let ytInit = () => {\n          // once metadata is ready on video set it on the media player\n          // initialize the YouTube player\n          root.media = ytUtil.initYoutubePlayer({\n            width: \"100%\",\n            height: \"100%\",\n            videoId: root.youtubeId\n          });\n          root.__status = root._getLocal(\"youTubeLoading\", \"label\");\n          root.$.controls.setStatus(root.__status);\n          // move the YouTube iframe to the media player's YouTube container\n          root.$.youtube.appendChild(root.media.a);\n          root.__ytAppended = true;\n          root._updateCustomTracks();\n        },\n        checkApi = e => {\n          if (ytUtil.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            if (!root.__ytAppended) {\n              ytInit();\n            }\n          }\n        };\n      if (ytUtil.apiReady) {\n        if (!root.__ytAppended) {\n          ytInit();\n        }\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  }\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTracks() {\n    if ((this.isYoutube || this.audioOnly) && this.__tracks) {\n      let root = this,\n        track = root.__tracks[this.$.transcript.selectedTranscript],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.$.customcctxt.innerText = caption;\n        root.$.transcript.setActiveCues(active);\n      }\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(A11yMediaPlayer.tag, A11yMediaPlayer);\nexport { A11yMediaPlayer };\n"],"names":["A11yMediaBehaviors","SimpleColors","attr","val","options","window","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","this","attribute","relativeToParent","max","a","b","i","none","Math","floor","round","key","subkey","local","localization","localizationDefaults","e","$","transcript","download","mediaTitle","print","Object","assign","properties","audioOnly","name","type","Boolean","value","reflectToAttribute","autoplay","cc","disablePrintButton","disableSearch","disableScroll","disableSeek","hasTranscript","height","String","isYoutube","computed","lang","audio","label","autoScroll","icon","captions","off","forward","fullscreen","loading","loop","mute","nextResult","pause","play","prevResult","restart","rewind","search","seekSlider","settings","speed","skip","unmute","video","volume","youTubeLoading","youTubeTranscript","readOnly","manifest","media","muted","playbackRate","Number","playing","playPause","preload","standAlone","status","selectedTrack","selectedTrackID","target","tracks","Array","width","youtubeId","youTube","customElements","define","tag","A11yMediaStateManager","instance","document","createElement","body","appendChild","root","__playerLoader","players","push","addEventListener","PolymerElement","screenfullLoaded","stickyPlayer","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","player","length","playeri","allowConcurrent","parent","_getParentNode","__playerTop","offsetTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","style","checkConcurrentPlayers","wintop","pageYOffset","winbottom","innerHeight","__playing","node","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","removeEventListener","A11yMediaButton","action","controls","toggle","disabled","__target","button","html","A11yMediaControls","compactControls","fixedHeight","fullscreenButton","nofity","hasCaptions","notify","hideTranscript","hideTranscriptButton","muteUnmute","noPrinting","noTranscriptToggle","responsiveSize","_addResponsiveUtility","sm","md","lg","xl","onfocus","classList","add","onblur","remove","statbar","innerText","set","slice","_testAttribute","__selectedTrack","control","close","A11yMediaHtml5","crossorigin","mediaLang","paused","seekable","start","stop","thumbnailSrc","duration","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","buffered","end","getCurrentTime","currentTime","index","textTracks","parseInt","mode","seek","time","selectedTrackId","A11yMediaTranscriptCue","active","activeCues","cue","text","setAttribute","mediaId","content","enableSearch","_handleTap","includes","order","toString","A11yMediaTranscript","title","_getLocal","filename","replace","track","shadowRoot","querySelector","data","encodeURIComponent","display","click","removeChild","cloneNode","css","h1","innerHTML","open","focus","cues","offset","getAttribute","scrollingTo","to","perTick","scrollTop","setTimeout","notifyPath","render","inner","getElementById","hidden","disableInteractive","selectedTranscript","hideTimestamps","tabIndex","role","A11yMediaTranscriptControls","simplesearch","A11yMediaYoutube","api","onYouTubeIframeAPIReady","event","apiReady","temp","div","vdata","videoId","split","vid","counter","iframe","YT","Player","events","onReady","param","hh","match","mm","ss","h","m","s","startSeconds","endSeconds","cueVideoById","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","min","playVideo","getPlayerState","clearInterval","timeupdate","setInterval","pauseVideo","seekTo","seekupdate","abs","unMute","A11yMediaPlayer","basePath","pathFromUrl","decodeURIComponent","location","ESGlobalBridge","load","_this","_onScreenfullLoaded","bind","__playerAttached","_youTubeRequest","screenfull","id","Date","now","__playerReady","__status","__slider","slider","__volume","__resumePlaying","__duration","setStatus","maxWidth","_setPlayerHeight","_handleTimeUpdate","html5","_addSourcesAndTracks","setMedia","innerplayer","__ytAppended","ytInit","amt","selectTrack","sticky","arr","isArray","JSON","parse","el","__captionHref","src","aspect","paddingTop","outerplayer","audioLabel","hasMediaTitle","videoLabel","querySelectorAll","forEach","tagName","_appendToPlayer","sources","onaddtrack","_getTrackData","disableFullscreen","audioNoThumb","test","navigator","userAgent","loadCueData","selected","keys","map","startTime","seekEnd","endTime","_getHHMMSS","__tracks","language","setTracks","oncuechange","setActiveCues","currentTarget","playbutton","removeAttribute","_setElapsedTime","__elapsed","__seeking","immediateValue","getDuration","_updateCustomTracks","stackedLayout","toggleCC","toggleTranscript","toggleLoop","toggleMute","on","enabled","isFullscreen","elapsed","ytUtil","initYoutubePlayer","youtube","checkApi","caption","customcctxt"],"mappings":"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"}