{"version":3,"file":"a11y-media-player.umd.js","sources":["lib/a11y-media-behaviors.js","lib/a11y-media-state-manager.js","lib/a11y-media-button.js","lib/a11y-media-controls.js","lib/a11y-media-html5.js","lib/a11y-media-transcript-cue.js","lib/a11y-media-transcript.js","lib/a11y-media-transcript-controls.js","lib/a11y-media-youtube.js","a11y-media-player.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColorsPolymer } from \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\n\n/**\n * `a11y-media-behaviors`\n * `A set of properties common to player and transcript a11y-media components.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaBehaviors extends SimpleColorsPolymer {\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-behaviors\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return Object.assign(SimpleColorsPolymer.properties, {\n      /**\n       * Is this an audio file?\n       */\n      audioOnly: {\n        name: \"audioOnly\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * autoplay is an option,\n       * but generally not recommended for a11y\n       */\n      autoplay: {\n        name: \"autoplay\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * show closed captions\n       */\n      cc: {\n        name: \"cc\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript print button\n       */\n      disablePrintButton: {\n        name: \"disablePrintButton\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable transcript search feature\n       */\n      disableSearch: {\n        name: \"disableSearch\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disable autoscrolling as transcript plays\n       */\n      disableScroll: {\n        name: \"disableScroll\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * disables seeking\n       */\n      disableSeek: {\n        name: \"disableSeek\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Does the player have an interactive transcript?\n       */\n      hasTranscript: {\n        name: \"hasTranscript\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * The height of the media player.\n       */\n      height: {\n        name: \"height\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * is YouTube?\n       */\n      isYoutube: {\n        name: \"isYoutube\",\n        type: Boolean,\n        computed: \"_hasAttribute(youtubeId)\"\n      },\n\n      /**\n       * Language\n       */\n      lang: {\n        name: \"lang\",\n        type: String,\n        value: \"en\"\n      },\n\n      /**\n       * has link button\n       */\n      linkable: {\n        name: \"linkable\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * custom localization settings\n       */\n      localization: {\n        name: \"localization\",\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * default localization settings\n       */\n      localizationDefaults: {\n        name: \"localizationDefaults\",\n        type: Object,\n        value: {\n          audio: { label: \"Audio\" },\n          autoScroll: {\n            label: \"Scroll transcript with video.\",\n            icon: \"swap-vert\"\n          },\n          captions: {\n            label: \"Closed Captions\",\n            icon: \"av:closed-caption\",\n            off: \"Off\"\n          },\n          download: {\n            label: \"Download the transcript.\",\n            icon: \"file-download\"\n          },\n          forward: {\n            label: \"Forward\",\n            icon: \"av:fast-forward\"\n          },\n          fullscreen: {\n            label: \"Fullscreen\",\n            icon: \"fullscreen\"\n          },\n          copyLink: {\n            label: \"Copy Media Link\",\n            icon: \"link\"\n          },\n          closeLink: {\n            label: \"Close\",\n            icon: \"close\"\n          },\n          loading: {\n            label: \"Loading...\"\n          },\n          loop: {\n            label: \"Loop Playback\"\n          },\n          mute: {\n            label: \"Mute\",\n            icon: \"av:volume-up\"\n          },\n          nextResult: {\n            label: \"Next\",\n            icon: \"arrow-forward\"\n          },\n          pause: {\n            label: \"Pause\",\n            icon: \"av:pause\"\n          },\n          play: {\n            label: \"Play\",\n            icon: \"av:play-arrow\"\n          },\n          prevResult: {\n            label: \"Previous\",\n            icon: \"arrow-back\"\n          },\n          print: {\n            label: \"Print the transcript.\",\n            icon: \"print\"\n          },\n          restart: {\n            label: \"Restart\",\n            icon: \"av:replay\"\n          },\n          rewind: {\n            label: \"Backward\",\n            icon: \"av:fast-rewind\"\n          },\n          search: {\n            label: \"Search the transcript.\",\n            icon: \"search\"\n          },\n          seekSlider: {\n            label: \"Seek Slider\"\n          },\n          settings: {\n            label: \"Settings\",\n            icon: \"settings\"\n          },\n          speed: {\n            label: \"Speed %\"\n          },\n          transcript: {\n            label: \"Transcript\",\n            icon: \"description\",\n            loading: \"Loading the transcript(s)...\",\n            skip: \"Skip to the transcript.\"\n          },\n          unmute: {\n            label: \"Unmute\",\n            icon: \"av:volume-off\"\n          },\n          video: {\n            label: \"Video\"\n          },\n          volume: {\n            label: \"Volume\"\n          },\n          youTubeLoading: {\n            label: \"Ready.\"\n          },\n          youTubeTranscript: {\n            label: \"Transcript will load once media plays.\"\n          }\n        },\n        readOnly: true\n      },\n\n      /**\n       * Loop the video?\n       */\n      loop: {\n        name: \"loop\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Dash.js manifest source?\n       */\n      manifest: {\n        name: \"manifest\",\n        type: String,\n        value: null\n      },\n\n      /**\n       * the media to be manipulated\n       */\n      media: {\n        name: \"media\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * optional title of media (shows when printed)\n       */\n      mediaTitle: {\n        name: \"mediaTitle\",\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * Is audio muted?\n       */\n      muted: {\n        name: \"muted\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Playback rate where 1 is normal speed, 0.5 is half-speed, and 2 is double speed\n       */\n      playbackRate: {\n        name: \"playbackRate\",\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Is media playing?\n       */\n      playing: {\n        name: \"playing\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * play/pause button\n       */\n      playPause: {\n        name: \"playPause\",\n        type: Object\n      },\n\n      /**\n       * Preload the \"sources\": auto, metadata (default), or none.\n       */\n      preload: {\n        name: \"preload\",\n        type: String,\n        value: \"metadata\"\n      },\n\n      /**\n       * the search tool for the transcript\n       */\n      search: {\n        name: \"search\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * the selected track\n       */\n      selectedTrack: {\n        name: \"selectedTrack\",\n        type: Object,\n        value: null\n      },\n\n      /**\n       * id of the selected track\n       */\n      selectedTrackID: {\n        name: \"selectedTrackID\",\n        type: Number,\n        value: null\n      },\n\n      /**\n       * Is stand-alone player (without transcript)?\n       */\n      standAlone: {\n        name: \"standAlone\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * status\n       */\n      status: {\n        name: \"status\",\n        type: String,\n        value: \"loading...\"\n      },\n\n      /**\n       * target of the controls\n       */\n      target: {\n        name: \"target\",\n        type: Object,\n        value: null\n      },\n      /**\n       * array of tracks and cues\n       */\n      tracks: {\n        name: \"tracks\",\n        type: Array,\n        value: null\n      },\n      /**\n       * Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n       */\n      volume: {\n        name: \"volume\",\n        type: Number,\n        value: 70\n      },\n      /**\n       * The width of the media player.\n       */\n      width: {\n        name: \"width\",\n        type: String,\n        value: null\n      },\n      /**\n       * the id for the video\n       */\n      youtubeId: {\n        name: \"youtubeId\",\n        type: String,\n        value: null\n      },\n      /**\n       * the YouTube player object\n       */\n      youTube: {\n        name: \"youTube\",\n        type: Object,\n        value: {}\n      }\n    });\n  }\n\n  /**\n   * gets behaviors\n   */\n  static get behaviors() {\n    return [ResponsiveUtility];\n  }\n\n  /**\n   * gets the link for sharing the video at a specific timecode\n   * @param {boolean} linkable is the video is linkable\n   */\n  _getShareLink(__elapsed) {\n    let url = window.location.href.split(/[#?]/)[0],\n      id = this.id ? `?id=${this.id}` : ``,\n      elapsed =\n        id !== \"\" && this.__elapsed && this.__elapsed !== 0\n          ? `&t=${this.__elapsed}`\n          : ``;\n    return `${url}${id}${elapsed}`;\n  }\n\n  /**\n   * returns true if an attribute is not null\n   *\n   * @param {object} the attribute to check\n   * @returns {boolean} attr !== undefined && attr !== null\n   */\n  _hasAttribute(attr) {\n    return attr !== undefined && attr !== null;\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {object} the attribute to check\n   * @param {object} the value to check\n   * @returns {boolean} attr === val\n   */\n\n  _testAttribute(attr, val) {\n    return attr === val;\n  }\n\n  /**\n   * calls responsive-utility to get parent's responsive size\n   *\n   * @param {object} a set of responsive for options, eg: `{element: root, attribute: \"responsive-size\", relativeToParent: true}`\n   */\n  _addResponsiveUtility(options) {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail:\n          options !== undefined\n            ? options\n            : {\n                element: root,\n                attribute: \"responsive-size\",\n                relativeToParent: true\n              }\n      })\n    );\n  }\n\n  /**\n   * converts time in millesconds to HH:MM:SS\n   *\n   * @param {float} the elapsed time, in seconds\n   * @param {float} the duration, in seconds\n   * @returns {string} a human-readable string of elapsed time/duration in HH:MM:SS\n   *\n   */\n  _getHHMMSS(val, max) {\n    max = max === undefined ? val : max;\n    let a = val => {\n        return val < 10 ? \"0\" + val : val;\n      },\n      b = (val, i, none) => {\n        return max >= i ? a(Math.floor(val / i)) + \":\" : none;\n      },\n      c = val => {\n        return val < 100 ? val + \"0\" : val;\n      };\n    return (\n      b(val, 3600, \"\") + b(val % 3600, 60, \"00:\") + a(Math.round(val % 60))\n    );\n  }\n  /**\n   * returns time in seconds of a string, such as 00:00:00.0, 0h0m0.0s, or 0hh0mm0.0ss\n   * @param {string} time\n   * @returns {float} seconds\n   */\n  _getSeconds(time = 0) {\n    let units = time\n        .replace(/[hm]{1,2}&?/g, \":0\")\n        .replace(/[s]{1,2}$/g, \"\")\n        .split(/:/),\n      hh = units.length > 2 ? parseInt(units[units.length - 3]) : 0,\n      mm = units.length > 1 ? parseInt(units[units.length - 2]) : 0,\n      ss = units.length > 0 ? parseFloat(units[units.length - 1]) : 0;\n    return hh * 3600 + mm * 60 + ss;\n  }\n\n  /**\n   * gets the localization by compaing the localization set to the defaults\n   *\n   * @param {object} the localization object\n   * @param {string} the key to search for\n   * @param {string} the subkey to search for\n   * @returns {string} the default value for [key][subkey], unless localization[key][subkey] exists\n   */\n  _getLocal(key, subkey) {\n    let local = \"\",\n      localization = this.localization;\n    if (\n      localization !== undefined &&\n      localization[key] !== undefined &&\n      localization[key][subkey] !== undefined\n    ) {\n      local = localization[key][subkey];\n    } else if (\n      this.localizationDefaults !== undefined &&\n      this.localizationDefaults[key] !== undefined &&\n      this.localizationDefaults[key][subkey] !== undefined\n    ) {\n      local = this.localizationDefaults[key][subkey];\n    }\n    return local;\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handlePrintClick(e) {\n    this.dispatchEvent(new CustomEvent(\"print-transcript\", { detail: this }));\n  }\n\n  /**\n   * handles the print transcript button\n   */\n  _handleDownloadClick(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"download-transcript\", { detail: this })\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handleDownload(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"downloading-transcript\", { detail: root })\n    );\n    root.shadowRoot.querySelector(\"#transcript\").download(root.mediaTitle);\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.shadowRoot.querySelector(\"#transcript\").print(root.mediaTitle);\n  }\n}\nwindow.customElements.define(A11yMediaBehaviors.tag, A11yMediaBehaviors);\nexport { A11yMediaBehaviors };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-resizable-behavior/iron-resizable-behavior.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaStateManager = window.A11yMediaStateManager || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.A11yMediaStateManager.requestAvailability = () => {\n  if (!window.A11yMediaStateManager.instance) {\n    window.A11yMediaStateManager.instance = document.createElement(\n      \"a11y-media-state-manager\"\n    );\n    document.body.appendChild(window.A11yMediaStateManager.instance);\n  }\n  return window.A11yMediaStateManager.instance;\n};\n/**\n * `a11y-media-state-manager`\n * `A utility that manages the state of multiple a11y-media-players on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaStateManager extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-state-manager\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Stores an array of all the players on the page.\n       */\n      players: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Is the screenfull library loaded and screenfull constant set.\n       */\n      screenfullLoaded: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Manages which player is sticky.\n       */\n      stickyPlayer: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  constructor() {\n    super();\n    let root = this;\n    root.__playerLoader = function(e) {\n      root.players.push(e.detail);\n    };\n\n    // sets the instance to the current instance\n    if (!window.A11yMediaStateManager.instance) {\n      window.A11yMediaStateManager.instance = this;\n\n      // listen for a players added to the page\n      window.addEventListener(\"a11y-player\", root.__playerLoader);\n    }\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    this.__stickyManager = function(e) {\n      root.setStickyPlayer(e.detail);\n    };\n    this.__scrollChecker = function(e) {\n      root._checkScroll();\n    };\n\n    // listen for a player that starts playing,\n    // make it the player that can be sticky,\n    // and check for concurrent players\n    window.addEventListener(\"a11y-player-playing\", root.__stickyManager);\n\n    // listen for scrolling and find out if a player is off-screen\n    window.addEventListener(\"scroll\", root.__scrollChecker);\n  }\n\n  /**\n   * if a player disallows concurrent players, pauses other players\n   */\n  checkConcurrentPlayers() {\n    let root = this,\n      player = root.stickyPlayer;\n    for (let i = 0; i < root.players.length; i++) {\n      let playeri = root.players[i];\n      if (\n        playeri !== player &&\n        (!player.allowConcurrent || !playeri.allowConcurrent)\n      ) {\n        playeri.pause();\n      }\n    }\n  }\n\n  /**\n   * stops all other players on the page\n   *\n   * @param {object} the player to set stickiness\n   */\n  setStickyPlayer(player) {\n    let root = this,\n      parent = root._getParentNode(player);\n    root.__playerTop = parent.offsetTop;\n    root.__playerUpperMiddle = root.__playerTop + parent.offsetHeight * 0.9;\n    root.__playerLowerMiddle = root.__playerTop + parent.offsetHeight * 0.1;\n    if (\n      player !== root.stickyPlayer &&\n      root.stickyPlayer !== undefined &&\n      root.stickyPlayer !== null\n    ) {\n      root.stickyPlayer.toggleSticky(false);\n      root.__parent.style.height = \"unset\";\n    }\n    parent.style.height = parent.offsetHeight + \"px\";\n    root.__parent = parent;\n    root.stickyPlayer = player;\n    if (!player.allowConcurrent) root.checkConcurrentPlayers();\n    root._checkScroll();\n  }\n\n  /**\n   * checks the wondow's scroll position and compares it to active player to set sticky attribute\n   */\n  _checkScroll() {\n    let root = this,\n      wintop = window.pageYOffset,\n      winbottom = wintop + window.innerHeight;\n    if (root.stickyPlayer !== undefined && root.stickyPlayer !== null) {\n      if (\n        root.stickyPlayer.__playing &&\n        (root.__playerLowerMiddle > winbottom ||\n          root.__playerUpperMiddle < wintop)\n      ) {\n        root.stickyPlayer.toggleSticky(true);\n      } else {\n        root.stickyPlayer.toggleSticky(false);\n      }\n    }\n  }\n\n  /**\n   * gets parent node in light DOM\n   *\n   * @param {object} the node\n   * @returns {object} the parent node\n   */\n  _getParentNode(node) {\n    let parent = node.parentNode;\n    if (\n      parent !== undefined &&\n      parent !== null &&\n      parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parent = parent.host;\n    }\n    return parent;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    window.removeEventListener(\"a11y-player\", root.__playerLoader);\n    window.removeEventListener(\"a11y-player-playing\", root.__stickyManager);\n    window.removeEventListener(\"scroll\", root.__scrollChecker);\n  }\n}\nwindow.customElements.define(A11yMediaStateManager.tag, A11yMediaStateManager);\nexport { A11yMediaStateManager };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\n\nexport { A11yMediaButton };\n/**\n * `a11y-media-button`\n * `A button used in a11y-media-controls and a11y-media-transcript-controls.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaButton extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is button action to send as an event\n       */\n      action: {\n        type: String,\n        value: null\n      },\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it toggled on?\n       */\n      toggle: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /*\n       * Is it disabled?\n       */\n      tooltipPosition: {\n        type: String,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-button\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          margin: 0;\n          padding: 0;\n        }\n        :host #button {\n          margin: 0;\n          padding: 8px;\n          line-height: 1;\n          border: none;\n          transition: color 0.25s;\n          color: var(--a11y-media-button-color);\n          background-color: var(--a11y-media-button-bg-color);\n        }\n        :host([toggle]) #button {\n          color: var(--a11y-media-button-toggle-color);\n          background-color: var(--a11y-media-button-toggle-bg-color);\n        }\n        :host([toggle]:active) #button,\n        :host([toggle]:focus) #button,\n        :host([toggle]:hover) #button,\n        :host(:active) #button,\n        :host(:focus) #button,\n        :host(:hover) #button {\n          cursor: pointer;\n          color: var(--a11y-media-button-hover-color);\n          background-color: var(--a11y-media-button-hover-bg-color);\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host paper-tooltip {\n          z-index: 100;\n        }\n        iron-icon {\n          display: inline-block;\n        }\n      </style>\n      <button\n        id=\"button\"\n        aria-label$=\"[[label]]\"\n        aria-pressed$=\"[[toggle]]\"\n        controls=\"[[controls]]\"\n        disabled$=\"[[disabled]]\"\n        on-click=\"_buttonTap\"\n        role=\"button\"\n        tabindex=\"0\"\n        toggle$=\"[[toggle]]\"\n      >\n        <iron-icon icon=\"[[icon]]\"></iron-icon>\n      </button>\n      <paper-tooltip for=\"button\" position$=\"[[tooltipPosition]]\"\n        >[[label]]</paper-tooltip\n      >\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__target = this.shadowRoot.querySelector(\"#button\");\n  }\n\n  /**\n   * lets player know this button was clicked\n   */\n  _buttonTap() {\n    this.dispatchEvent(new CustomEvent(\"click\", { detail: this }));\n  }\n}\nwindow.customElements.define(A11yMediaButton.tag, A11yMediaButton);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@lrnwebcomponents/dropdown-select/dropdown-select.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./a11y-media-button.js\";\n\nexport { A11yMediaControls };\n/**\n * `a11y-media-controls`\n * `The controls bar for the a11y-media-player.`\n *\n * @microcopy - language worth noting:\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Use compact controls?\n       */\n      compactControls: {\n        name: \"compactControls\",\n        type: Boolean,\n        computed: \"_getCompactControls(responsiveSize)\"\n      },\n      /**\n       * Is the player a fixed height (iframe mode) so that theure is no transcript toggle?\n       */\n      fixedHeight: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Is fullscreen mode?\n       */\n      fullscreen: {\n        name: \"fullscreen\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show the FullscreenButton?\n       */\n      fullscreenButton: {\n        name: \"fullscreenButton\",\n        type: Boolean,\n        value: false,\n        nofity: true\n      },\n\n      /**\n       * Does the player have tracks?\n       */\n      hasCaptions: {\n        name: \"hasCaptions\",\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n\n      /**\n       * initially hide the transcript?\n       */\n      hideTranscript: {\n        name: \"hideTranscript\",\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * hide the transcript toggle menu item?\n       */\n      hideTranscriptButton: {\n        type: Boolean,\n        computed: \"_hideTranscriptButton(noTranscriptToggle,compactControls)\"\n      },\n\n      /**\n       * url for deeplinking\n       */\n      linkUrl: {\n        type: String,\n        value: \"test\"\n      },\n\n      /**\n       * mute/unmute button\n       */\n      muteUnmute: {\n        name: \"muteUnmute\",\n        type: Object\n      },\n      /**\n       * hide the print transcript feature available?\n       */\n      noPrinting: {\n        type: Boolean,\n        computed: \"_noPrinting(standAlone,fixedHeight)\"\n      },\n      /**\n       * Is the transctipt toggle feature available?\n       */\n      noTranscriptToggle: {\n        type: Boolean,\n        computed: \"_noTranscriptToggle(standAlone,fixedHeight,hasTranscript)\"\n      },\n      /**\n       * Size of the a11y media element for responsive styling\n       */\n      responsiveSize: {\n        name: \"responsiveSize\",\n        type: String,\n        notify: true,\n        value: \"xs\",\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-controls\";\n  }\n  //inherit styles from a11y-media-player\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: block;\n          width: 100%;\n          max-width: 100%;\n          height: 44px;\n          max-height: 44px;\n          position: relative;\n          color: var(--a11y-media-color);\n          --primary-text-color: var(--a11y-media-settings-menu-color);\n          --paper-menu-button-dropdown-background: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-background-color: var(--a11y-media-settings-menu-bg-color);\n          --paper-listbox-color: var(--a11y-media-settings-menu-color);\n          --paper-listbox: {\n            padding: 0;\n          };\n          --paper-menu-button: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n          };\n          --paper-menu-button-dropdown: {\n            background-color: var(--a11y-media-settings-menu-bg-color);\n            color: var(--a11y-media-settings-menu-color);\n            margin-top: 0 !important;\n            margin-bottom: 0 !important;\n          };\n          --paper-item-selected: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n          --paper-item-focused: {\n            color: var(--a11y-media-settings-menu-hover-color);\n          };\n        }\n        :host > #controls-left {\n          position: absolute;\n          left: 0;\n          min-width: 200px;\n        }\n        :host > #controls-right {\n          position: absolute;\n          right: 0;\n          top: -2px;\n        }\n        :host paper-menu-button,\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host paper-icon-button {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-icon-button:active,\n        :host paper-icon-button:focus,\n        :host paper-icon-button:hover {\n          background-color: var(--a11y-media-settings-menu-bg-color);\n          color: var(--a11y-media-settings-menu-color);\n        }\n        :host paper-item {\n          min-height: 40;\n        }\n        :host paper-slider {\n          @apply --a11y-media-slider;\n        }\n        :host .play-status,\n        :host paper-icon-button {\n          border: none;\n          position: relative;\n        }\n        :host .play-status {\n          font-size: 85%;\n        }\n        :host .play-status.control-bar {\n          padding: 8px 13px 8px;\n        }\n        :host([hide-play-status]) .play-status {\n          display: none;\n        }\n        :host .setting {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n        :host .setting-text {\n          min-width: 125px;\n        }\n        :host .setting-control {\n          max-width: 100px;\n        }\n        :host .setting-slider {\n          width: 130px;\n          margin-left: -15px;\n          margin-right: -15px;\n          @apply --a11y-media-slider;\n        }\n        :host #speed {\n          --paper-slider-knob-start-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n        }\n        :host #showvolume {\n          display: inline;\n          position: relative;\n        }\n        :host #volume {\n          z-index: 1;\n          position: absolute;\n          left: 30px;\n          top: -5px;\n          width: 0;\n          overflow: hidden;\n          transition: width 0.5s;\n          z-index: 3;\n          background-color: var(--a11y-media-bg-color);\n          --paper-slider-knob-end-color: var(--a11y-media-accent-color);\n          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);\n\n        }\n        :host #volume:active,\n        :host #volume:focus,\n        :host #volume:hover,\n        :host #volume.focus,\n        :host #showvolume:active #volume,\n        :host #showvolume:focus #volume,\n        :host #showvolume:hover #volume {\n          overflow: visible;\n          width: 100px;\n        }\n        :host([responsive-size=\"xs\"]) #volume:active,\n        :host([responsive-size=\"xs\"]) #volume:focus,\n        :host([responsive-size=\"xs\"]) #volume:hover,\n        :host([responsive-size=\"xs\"]) #volume.focus,\n        :host([responsive-size=\"xs\"]) #showvolume:active #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:focus #volume,\n        :host([responsive-size=\"xs\"]) #showvolume:hover #volume {\n          top: -35px\n          border-radius: 4px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div id=\"controls-left\">\n        <a11y-media-button\n          action$=\"[[playPause.action]]\"\n          icon$=\"[[playPause.icon]]\"\n          label$=\"[[playPause.label]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"rewind\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('rewind','icon')]]\"\n          label$=\"[[_getLocal('rewind','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"forward\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('forward','icon')]]\"\n          label$=\"[[_getLocal('forward','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"restart\"\n          disabled$=\"[[disableSeek]]\"\n          hidden$=\"[[compactControls]]\"\n          icon$=\"[[_getLocal('restart','icon')]]\"\n          label$=\"[[_getLocal('restart','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <div id=\"showvolume\">\n          <a11y-media-button\n            id=\"mute\"\n            action$=\"[[muteUnmute.action]]\"\n            icon$=\"[[muteUnmute.icon]]\"\n            label$=\"[[muteUnmute.label]]\"\n            on-click=\"_onButtonTap\"\n          ></a11y-media-button>\n          <paper-slider\n            id=\"volume\"\n            aria-labelledby=\"volume-slider-label\"\n            label$=\"[[volumeLabel]]\"\n            min=\"0\"\n            max=\"100\"\n            on-change=\"_onSettingsChanged\"\n            pin\n            step=\"10\"\n            value$=\"[[volume]]\"\n          ></paper-slider>\n        </div>\n        <span aria-live=\"polite\" class=\"play-status control-bar\">\n          <span id=\"statbar\"></span>\n        </span>\n      </div>\n      <div id=\"controls-right\">\n        <a11y-media-button\n          action=\"captions\"\n          disabled$=\"[[!hasCaptions]]\"\n          hidden$=\"[[!hasCaptions]]\"\n          icon$=\"[[_getLocal('captions','icon')]]\"\n          label$=\"[[_getLocal('captions','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[cc]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"transcript\"\n          controls=\"transcript\"\n          disabled$=\"[[hideTranscriptButton]]\"\n          hidden$=\"[[hideTranscriptButton]]\"\n          icon$=\"[[_getLocal('transcript','icon')]]\"\n          label$=\"[[_getLocal('transcript','label')]]\"\n          on-click=\"_onButtonTap\"\n          toggle$=\"[[hideTranscript]]\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"linkable\"\n          disabled$=\"[[!linkable]]\"\n          hidden$=\"[[!linkable]]\"\n          icon=\"[[_getLocal('copyLink','icon')]]\"\n          label=\"[[_getLocal('copyLink','label')]]\"\n          on-click=\"_onButtonTap\"\n        ></a11y-media-button>\n        <a11y-media-button\n          action=\"print\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('print','icon')]]\"\n          label=\"[[_getLocal('print','label')]]\"\n          on-click=\"_handlePrintClick\"\n        >\n        </a11y-media-button>\n        <a11y-media-button\n          action=\"download\"\n          disabled$=\"[[noPrinting]]\"\n          hidden$=\"[[noPrinting]]\"\n          icon$=\"[[_getLocal('download','icon')]]\"\n          label=\"[[_getLocal('download','label')]]\"\n          on-click=\"_handleDownloadClick\"\n        >\n        </a11y-media-button>\n        <template is=\"dom-if\" if=\"[[fullscreenButton]]\">\n          <a11y-media-button\n            action=\"fullscreen\"\n            hidden$=\"[[audioNoThumb]]\"\n            icon$=\"[[_getLocal('fullscreen','icon')]]\"\n            label$=\"[[_getLocal('fullscreen','label')]]\"\n            on-click=\"_onButtonTap\"\n            toggle$=\"[[fullscreen]]\"\n            step=\"1\"\n          >\n          </a11y-media-button>\n        </template>\n        <paper-menu-button\n          id=\"settings\"\n          allow-outside-scroll\n          horizontal-align=\"right\"\n          ignore-select\n          on-change=\"_onSettingsChanged\"\n          on-iron-activate=\"_handleSettingsActivate\"\n          on-iron-select=\"_handleSettingsSelect\"\n          vertical-align=\"bottom\"\n        >\n          <paper-icon-button\n            action=\"settings\"\n            alt$=\"[[_getLocal('settings','label')]]\"\n            icon$=\"[[_getLocal('settings','icon')]]\"\n            slot=\"dropdown-trigger\"\n          >\n          </paper-icon-button>\n          <paper-listbox id=\"settingslist\" slot=\"dropdown-content\">\n            <paper-item hidden$=\"[[!hasCaptions]]\">\n              <div class=\"setting\">\n                <div class=\"setting-text\">\n                  [[_getLocal('captions','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <dropdown-select\n                    id=\"tracks\"\n                    disabled$=\"[[!hasCaptions]]\"\n                    no-label-float\n                    on-change=\"_handleTrackChange\"\n                    value\n                  >\n                    <paper-item value=\"\"\n                      >[[_getLocal('captions','off')]]</paper-item\n                    >\n                    <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"option\">\n                      <paper-item value$=\"{{option.value}}\"\n                        >{{option.text}}</paper-item\n                      >\n                    </template>\n                  </dropdown-select>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item hidden$=\"[[noTranscriptToggle]]\">\n              <div class=\"setting\">\n                <div id=\"transcript-label\" class=\"setting-text\">\n                  [[_getLocal('transcript','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"transcript-toggle\"\n                    aria-labelledby=\"transcript-label\"\n                    checked$=\"[[!hideTranscript]]\"\n                    controls=\"transcript\"\n                    disabled$=\"[[noTranscriptToggle]]\"\n                  >\n                  </paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"loop-label\" class=\"setting-text\">\n                  [[_getLocal('loop','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-toggle-button\n                    id=\"loop\"\n                    aria-labelledby=\"loop-label\"\n                    checked$=\"[[loop]]\"\n                  ></paper-toggle-button>\n                </div>\n              </div>\n            </paper-item>\n            <paper-item>\n              <div class=\"setting\">\n                <div id=\"speed-label\" class=\"setting-text\">\n                  [[_getLocal('speed','label')]]\n                </div>\n                <div class=\"setting-control\">\n                  <paper-slider\n                    id=\"speed\"\n                    aria-labelledby=\"speed-label\"\n                    class=\"setting-slider\"\n                    min=\"0.5\"\n                    max=\"4\"\n                    pin\n                    step=\"0.5\"\n                    tab-index=\"-1\"\n                    value$=\"[[playbackRate]]\"\n                  ></paper-slider>\n                </div>\n              </div>\n            </paper-item>\n          </paper-listbox>\n        </paper-menu-button>\n        <paper-tooltip for=\"settings\">\n          [[_getLocal('settings','label')]]\n        </paper-tooltip>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root._addResponsiveUtility({\n      element: root,\n      attribute: \"responsive-size\",\n      relativeToParent: true,\n      sm: 300,\n      md: 600,\n      lg: 900,\n      xl: 1200\n    });\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    // when the mute button is in focus,\n    // add focus class to make the volume slider appear\n    root.shadowRoot\n      .querySelector(\"#mute\")\n      .shadowRoot.querySelector(\"#button\").onfocus = function() {\n      root.shadowRoot.querySelector(\"#volume\").classList.add(\"focus\");\n    };\n    // when the mute button is blurred,\n    // remove focus class to make the volume slider disappear\n    root.shadowRoot\n      .querySelector(\"#mute\")\n      .shadowRoot.querySelector(\"#button\").onblur = function() {\n      root.shadowRoot.querySelector(\"#volume\").classList.remove(\"focus\");\n    };\n  }\n\n  /**\n   * updates the play status of the media\n   *\n   * @param {string} the status, eg., `Loading...` or `00:02:01/00:11:43`\n   */\n  setStatus(status) {\n    this.shadowRoot.querySelector(\"#statbar\").innerText = status;\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {object} the tracks of the media\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", []);\n    this.set(\"tracks\", tracks.slice(0));\n  }\n\n  /**\n   * returns true if player is xs or sm and needs to use compact controls\n   *\n   * @param {string} the size of the player: `xs`,`sm`,`md`,`lg`, or `xl`\n   * @returns {boolean} Should the player use compact controls?\n   */\n  _getCompactControls(responsiveSize) {\n    return (\n      this._testAttribute(responsiveSize, \"xs\") ||\n      this._testAttribute(responsiveSize, \"sm\")\n    );\n  }\n\n  /**\n   * handles when the tracks dropdown selection changes\n   * (when the tracks dropdown-select changes, update track and CC button)\n   */\n  _handleTrackChange(e) {\n    let root = this;\n    if (root.__selectedTrack !== null) {\n      if (e.detail.value !== \"\") {\n        root.dispatchEvent(\n          new CustomEvent(\"select-track\", {\n            detail: { control: root, value: e.detail.value }\n          })\n        );\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: true }\n          })\n        );\n      } else {\n        root.dispatchEvent(\n          new CustomEvent(\"toggle-cc\", {\n            detail: { control: root, value: false }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsSelect(e) {\n    //e.preventDefault();\n  }\n\n  /**\n   * prevent settings menu from being closed before action is taken\n   */\n  _handleSettingsActivate(e) {\n    //if (e.target == this.shadowRoot.querySelector('#settingslist')) e.preventDefault();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onButtonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.detail })\n    );\n    this.shadowRoot.querySelector(\"#settings\").close();\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onSettingsChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"controls-change\", { detail: e.target })\n    );\n    this.shadowRoot.querySelector(\"#settings\").close();\n  }\n\n  /**\n   * Determines if the transcript button should be hidden.\n   *\n   * @param {boolean} Is this feature available?\n   * @param {boolean} Is the player too small to fit the extra controls?\n   * @returns {boolean} Show the transcript button?\n   */\n  _hideTranscriptButton(noTranscriptToggle, compactControls) {\n    return noTranscriptToggle || compactControls;\n  }\n\n  /**\n   * Determines if the print transcript feature is available from the controls.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should print transcript be unavailable from controls?\n   */\n  _noPrinting(standAlone, fixedHeight) {\n    return standAlone || !fixedHeight;\n  }\n\n  /**\n   * Determines if the transcript toggle feature is available.\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the player in fixed-height/iframe mode?\n   * @returns {boolean} Should transcript toggle be unavailable?\n   */\n  _noTranscriptToggle(standAlone, fixedHeight, hasTranscript) {\n    return standAlone || fixedHeight || !hasTranscript;\n  }\n}\nwindow.customElements.define(A11yMediaControls.tag, A11yMediaControls);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\n\nexport { A11yMediaHtml5 };\n/**\n * `a11y-media-html5`\n * `Loads HTML5 audio or video. `\n *\n * @microcopy - language worth noting:\n```<a11y-media-html5>                   \n    <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n    <source src=\"/path/to/video.webm\" type=\"video/webm\">\n    <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n    <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n    <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n  </a11y-media-html5>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaHtml5 extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /*\n       * id of element button controls\n       */\n      controls: {\n        type: String,\n        value: \"video\"\n      },\n      /**\n       * crossorigin attribute for <video> and <audio> tags\n       */\n      crossorigin: {\n        type: String,\n        value: null\n      },\n      /*\n       * Is it disabled?\n       */\n      disabled: {\n        type: Boolean,\n        value: null\n      },\n      /*\n       * iron-icon type\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /*\n       * button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * the language of the media (if different from user interface language)\n       */\n      mediaLang: {\n        name: \"mediaLang\",\n        type: String,\n        value: \"en\"\n      },\n      /*\n       * Is it paused?\n       */\n      paused: {\n        type: Boolean,\n        value: true\n      },\n      /*\n       * the seekable range of the media\n       */\n      seekable: {\n        type: Object,\n        value: {\n          length: 0,\n          start: null,\n          stop: null\n        }\n      },\n      /**\n       * Source of optional thumbnail image\n       */\n      thumbnailSrc: {\n        name: \"thumbnailSrc\",\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-html5\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          height: 100%;\n          display: flex;\n          align-items: stretch;\n          position: relative;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #video {\n          width: 100%;\n          max-width: 100%;\n        }\n      </style>\n      <video\n        id=\"video\"\n        aria-hidden$=\"[[isYoutube]]\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        src$=\"[[manifest]]\"\n        preload=\"metadata\"\n      >\n        HTML5 video not supported\n      </video>\n      <audio\n        id=\"audio\"\n        autoplay$=\"[[autoplay]]\"\n        crossorigin$=\"[[crossorigin]]\"\n        hidden$=\"[[!audioOnly]]\"\n        lang$=\"[[mediaLang]]\"\n        on-loadedmetadata=\"_handleMetadata\"\n        poster$=\"[[thumbnailSrc]]\"\n        preload=\"metadata\"\n      >\n        HTML5 audio not supported\n      </audio>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this;\n    root.media =\n      root.shadowRoot.querySelector(\"#video\") !== undefined && !root.audioOnly\n        ? root.shadowRoot.querySelector(\"#video\")\n        : root.shadowRoot.querySelector(\"#audio\");\n  }\n\n  /**\n   * handles the loaded metadata\n   */\n  _handleMetadata() {\n    let root = this;\n    root.duration = root.media.duration > 0 ? root.media.duration : 0;\n    root.tracks = [];\n    root.volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.seekable = root.media.seekable;\n    root.setVolume(root.volume);\n    root.setMute(root.muted);\n    root.setCC(root.cc);\n    root.setLoop(root.loop);\n    root.setPlaybackRate(root.playbackRate);\n\n    // adjusts aspect ratio\n    root.aspectRatio = root.media.videoWidth / root.media.videoHeight;\n    root.dispatchEvent(new CustomEvent(\"media-loaded\", { detail: root }));\n  }\n\n  /**\n   * gets the buffered time\n   */\n  getBufferedTime() {\n    return this.media.buffered.length > 0\n      ? this.media.buffered.end(0)\n      : this.getCurrentTime();\n  }\n\n  /**\n   * gets the current time\n   *\n   * @returns {float} the elapsed time, in seconds\n   */\n  getCurrentTime() {\n    return this.media.currentTime;\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    this.paused = false;\n    this.media.play();\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    this.paused = true;\n    this.media.pause();\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {float} the index of the track\n   */\n  selectTrack(index) {\n    this.selectedTrack = this.media.textTracks[index];\n    for (let i = 0; i < this.media.textTracks.length; i++) {\n      if (parseInt(index) === i) {\n        this.media.textTracks[i].mode = \"showing\";\n      } else if (this.media.textTracks[i] !== null) {\n        this.media.textTracks[i].mode = \"hidden\";\n      }\n    }\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks to a specific time\n   */\n  seek(time) {\n    this.media.currentTime = time;\n  }\n\n  /**\n   * sets captions\n   *\n   * @param {boolean} Turn CC on? `true` is on; `false` or `null` is off.\n   *\n   */\n  setCC(mode) {\n    this.media.cc = mode === true;\n    if (this.selectedTrack !== undefined && mode == true) {\n      this.selectedTrack.mode = \"showing\";\n      this.shadowRoot.querySelector(\n        \"#video\"\n      ).textTracks.value = this.selectedTrackId;\n    } else if (\n      this.selectedTrack !== undefined &&\n      this.selectedTrack !== null\n    ) {\n      this.selectedTrack.mode = \"hidden\";\n      this.shadowRoot.querySelector(\"#video\").textTracks.value = \"\";\n    }\n  }\n\n  /**\n   * sets volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.media.volume = value / 100;\n  }\n\n  /**\n   * sets speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    this.media.playbackRate = value !== null ? value : 1;\n  }\n\n  /**\n   * sets looping\n   *\n   * @param {boolean} Turn looping on? `true` is on; `false` or `null` is off.\n   */\n  setLoop(mode) {\n    this.media.loop = mode === true;\n  }\n\n  /**\n   * sets mute\n   *\n   * @param {boolean} Turn mute on? `true` is on; `false` or `null` is off.\n   */\n  setMute(mode) {\n    this.media.muted = mode;\n  }\n}\nwindow.customElements.define(A11yMediaHtml5.tag, A11yMediaHtml5);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/lib/simple-search-content.js\";\n\nexport { A11yMediaTranscriptCue };\n/**\n * `a11y-media-transcript-cue`\n * `A single cue in a11y-media-transcriptas static text or as an button that controls media.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-cue \n  active-cues$=\"[[activeCues]]\"                   // An array of the currently active cues\n  cue$=\"[[cue]]\"                                  // An array of cue data\n  order$=\"[[cue.order]]\"                          // The index of the current cue\n  disable-interactive$=\"[[disableInteractive]]\"   // Is cue interactive? \n  controls$=\"[[mediaId]]\"                         // The id of the a11y-media-player element\n  hide-timestamps$=\"[[hideTimestamps]]\" >         // Hide cue timestamp?\n</a11y-media-transcript-cue>```\n * \n * Custom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n *   \n * Custom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n *   \n * Custom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptCue extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * is cue active\n       */\n      active: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"_getActiveCue(cue,activeCues)\",\n        notify: true,\n        reflectToAttribute: true\n      },\n      /**\n       * array of currently active cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        notify: true\n      },\n      /**\n       * array of cue data\n       */\n      cue: {\n        type: Array,\n        value: null\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disabled: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * parsed cue text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-transcript-cue\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          cursor: default;\n          display: table-row;\n          width: 100%;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          transition: color 0.25s, background-color 0.25s;\n        }\n        :host([hide-timestamps]) {\n          display: inline;\n        }\n        :host(:not([active]):not([disabled]):active),\n        :host(:not([active]):not([disabled]):focus),\n        :host(:not([active]):not([disabled]):hover) {\n          cursor: pointer;\n          color: var(--a11y-media-transcript-focused-cue-color);\n          background-color: var(--a11y-media-transcript-focused-cue-bg-color);\n          outline: 1px dotted var(--a11y-media-transcript-focused-cue-color);\n          @apply --a11y-media-transcript-focused-cue;\n        }\n        :host([active]) {\n          color: var(--a11y-media-transcript-active-cue-color);\n          background-color: var(--a11y-media-transcript-active-cue-bg-color);\n          @apply --a11y-media-transcript-active-cue;\n        }\n        :host #text {\n          display: table-cell;\n          width: 100%;\n          line-height: 200%;\n        }\n        :host([hide-timestamps]) #text {\n          display: inline;\n        }\n        :host #time {\n          display: table-cell;\n          font-size: 80%;\n          padding: 0 16px 0 0;\n          white-space: nowrap;\n          font-family: monospace;\n        }\n        :host([hide-timestamps]) #time {\n          display: none;\n        }\n        :host simple-search-content {\n          --simple-search-match-text-color: var(\n            --a11y-media-transcript-match-color\n          );\n          --simple-search-match-bg-color: var(\n            --a11y-media-transcript-match-bg-color\n          );\n          --simple-search-match-border-color: var(\n            --a11y-media-transcript-match-border-color\n          );\n          --simple-search-match-border: none;\n          --simple-search-match-border-radius: 4px;\n          --simple-search-match-font-weight: normal;\n        }\n        @media print {\n          :host,\n          :host([active]),\n          :host(:not([active]):not([disabled]):active),\n          :host(:not([active]):not([disabled]):focus),\n          :host(:not([active]):not([disabled]):hover) {\n            color: #000000;\n            background-color: #ffffff;\n          }\n        }\n      </style>\n      <span id=\"time\">[[cue.start]] - [[cue.end]]</span>\n      <span id=\"text\">\n        <simple-search-content id=\"content\">\n          [[cue.text]]\n        </simple-search-content>\n      </span>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      search = root.search;\n    if (!root.disabled) {\n      root.__target = this;\n      root.setAttribute(\"aria-role\", \"button\");\n      root.setAttribute(\"controls\", this.mediaId);\n    }\n    if (\n      !root.disableSearch &&\n      root.search !== undefined &&\n      root.search !== null\n    ) {\n      root.shadowRoot.querySelector(\"#content\").enableSearch(search);\n    }\n    root.addEventListener(\"click\", root._handleTap);\n  }\n\n  /**\n   * gets the active cue for styling\n   *\n   * @param {object} the current cue object\n   * @param {array} an array of all active cues\n   * @returns {boolean} Is the cue active?\n   */\n  _getActiveCue(cue, activeCues) {\n    return activeCues !== null && activeCues.includes(cue.order.toString())\n      ? true\n      : false;\n  }\n\n  /**\n   * handles tap\n   */\n  _handleTap(e) {\n    let root = this;\n    this.dispatchEvent(new CustomEvent(\"cue-seek\", { detail: root.cue.seek }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptCue.tag,\n  A11yMediaTranscriptCue\n);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"./a11y-media-transcript-cue.js\";\n\nexport { A11yMediaTranscript };\n/**\n * `a11y-media-transcript`\n * `A transcript element to pair with a11y-media-player.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-interactive$=\"[[disableInteractive]]\"   // Disable interactive transcript cues?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n  hide-timestamps$=\"[[hideTimestamps]]\"           // Hide cue timestamps?\n  media-id=\"\"                                     // The id of the player\n  selected-transcript$=\"[[selectedTranscript]]\">  // The index of the current track\n</a11y-media-transcript>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscript extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * array of cues\n       */\n      activeCues: {\n        type: Array,\n        value: null,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * disable interactive mode that makes the transcript clickable\n       */\n      disableInteractive: {\n        name: \"disableInteractive\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * show cue's start and end time\n       */\n      hideTimestamps: {\n        name: \"hideTimestamps\",\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Language\n       */\n      lang: {\n        type: String,\n        value: \"en\",\n        reflectToAttribute: true\n      },\n      /**\n       * the id of media\n       */\n      mediaId: {\n        type: String,\n        value: null\n      },\n      /**\n       * tabindex of cues\n       */\n      tabIndex: {\n        type: Number,\n        computed: \"_getTabIndex(disableInteractive)\"\n      },\n      /**\n       * tabindex of cues\n       */\n      role: {\n        type: Number,\n        computed: \"_getRole(disableInteractive)\"\n      },\n      /**\n       * selected transcript track id\n       */\n      selectedTranscript: {\n        type: String,\n        value: \"0\"\n      },\n      /**\n       * the status of the transcript loading\n       */\n      status: {\n        type: String,\n        computed: \"_stampLoadingStatus(disableSeek, __ready)\"\n      },\n      __ready: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * array of cues\n       */\n      tracks: {\n        type: Array,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-transcript\";\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n          border-left: 1px solid var(--a11y-media-transcript-bg-color);\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        :host .transcript-from-track {\n          display: none;\n          width: calc(100% - 30px);\n          padding: 0 15px 15px;\n          color: var(--a11y-media-transcript-cue-color);\n          background-color: var(--a11y-media-transcript-cue-bg-color);\n        }\n        :host .transcript-from-track[active] {\n          display: table;\n        }\n        :host .transcript-from-track[active][hideTimestamps] {\n          display: block;\n        }\n        :host .sr-only:not(:focus) {\n          position: absolute;\n          left: -99999;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        @media print {\n          :host {\n            padding: 0 15px 5px;\n            color: #000;\n            background-color: #ffffff;\n            border-top: 1px solid #aaa;\n          }\n        }\n      </style>\n      <a id=\"transcript-desc\" class=\"sr-only\" href=\"#bottom\">\n        [[_getLocal('transcript','skip')]]\n      </a>\n      <div\n        aria-live=\"polite\"\n        id=\"loading\"\n        active$=\"[[_isLoading(selectedTranscript, tracks)]]\"\n        class=\"transcript-from-track\"\n      >\n        [[status]]\n      </div>\n      <template id=\"tracks\" is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          aria-live=\"polite\"\n          id=\"track\"\n          class=\"transcript-from-track\"\n          lang=\"{{track.language}}\"\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            <a11y-media-transcript-cue\n              accent-color$=\"[[accentColor]]\"\n              active-cues$=\"[[activeCues]]\"\n              controls$=\"[[mediaId]]\"\n              cue$=\"{{cue}}\"\n              disabled$=\"[[disableCue]]\"\n              disable-search$=\"[[disableSearch]]\"\n              hide-timestamps$=\"[[hideTimestamps]]\"\n              on-cue-seek=\"_handleCueSeek\"\n              order$=\"{{cue.order}}\"\n              role=\"button\"\n              search=\"[[search]]\"\n              tabindex=\"0\"\n            >\n            </a11y-media-transcript-cue>\n          </template>\n        </div>\n      </template>\n      <template is=\"dom-repeat\" items=\"{{tracks}}\" as=\"track\">\n        <div\n          id=\"download\"\n          class=\"downloadable-track\"\n          hidden\n          active$=\"[[_isActive(selectedTranscript,index)]]\"\n        >\n          <template is=\"dom-repeat\" items=\"{{track.cues}}\" as=\"cue\">\n            [[cue.start]] - [[cue.end]]: [[cue.text]]\n          </template>\n        </div>\n      </template>\n      <div id=\"bottom\" class=\"sr-only\"></div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * sets target for a11y keys\n   */\n  ready() {\n    super.ready();\n    this.__ready = true;\n  }\n\n  /**\n   * gets download data for the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  download(mediaTitle) {\n    let root = this,\n      a = document.createElement(\"a\"),\n      title =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle\n          : this._getLocal(\"transcript\", \"label\"),\n      filename =\n        mediaTitle !== null && mediaTitle !== \"\"\n          ? mediaTitle.replace(/[^\\w\\d]/g, \"\")\n          : \"Transcript\",\n      track = root.shadowRoot.querySelector(\"#download[active]\"),\n      data = track !== null ? track.innerText : \"\";\n    a.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=UTF-8,\" + encodeURIComponent(title + \"\\n\" + data)\n    );\n    a.setAttribute(\"download\", filename + \".txt\");\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n  /**\n   * prints the active transcript\n   *\n   * @param {string} the title of the media\n   */\n  print(mediaTitle) {\n    let root = this,\n      track = root.shadowRoot.querySelector(\"#track[active]\").cloneNode(true),\n      css = html`\n        <style>\n          a11y-media-transcript-cue {\n            display: table-row;\n            background-color: #fff;\n            color: #000;\n          }\n          a11y-media-transcript-cue[hide-timestamps],\n          a11y-media-transcript-cue[hide-timestamps] #text {\n            display: inline;\n          }\n          a11y-media-transcript-cue #text {\n            display: table-cell;\n            line-height: 200%;\n          }\n          a11y-media-transcript-cue #time {\n            display: table-cell;\n            font-size: 80%;\n            padding: 0 16px;\n            white-space: nowrap;\n            font-family: monospace;\n          }\n          a11y-media-transcript-cue[hide-timestamps] #time {\n            display: none;\n          }\n          a11y-media-transcript-cue [matched] {\n            background-color: #fff;\n            color: #eee;\n            padding: 3px 4px;\n            border-radius: 3px;\n          }\n        </style>\n      `,\n      h1 = html`\n        <h1>Transcript</h1>\n      `;\n    if (mediaTitle !== undefined) h1.innerHTML = mediaTitle;\n    if ((track !== null) & (track !== undefined)) {\n      //From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151\n      let print = window.open(\n        \"\",\n        \"\",\n        \"left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status =0\"\n      );\n      print.document.body.appendChild(css);\n      print.document.body.appendChild(h1);\n      print.document.body.appendChild(track);\n      print.document.close();\n      print.focus();\n      print.print();\n      print.close();\n    }\n  }\n\n  /**\n   * updates activeCues array and scrolls to position\n   *\n   * @param {array} an array of cues\n   */\n  setActiveCues(cues) {\n    let root = this,\n      offset =\n        root.shadowRoot.querySelector(\"#track\") !== null &&\n        root.shadowRoot.querySelector(\"#track\") !== undefined\n          ? root.shadowRoot.querySelector(\"#track\").offsetTop\n          : 0,\n      cue = root.shadowRoot.querySelector(\n        \"#track a11y-media-transcript-cue[active]\"\n      );\n    root.set(\"activeCues\", cues.slice(0));\n    if (\n      !root.disableScroll &&\n      cue !== undefined &&\n      cue !== null &&\n      root.activeCues !== undefined &&\n      cue.getAttribute(\"order\") !== root.activeCues[0]\n    ) {\n      //javascript scrolling from:  https://stackoverflow.com/questions/8917921/cross-browser-javascript-not-jquery-scroll-to-top-animation#answer-8918062\n      let scrollingTo = function(element, to, duration) {\n        if (duration <= 0) return;\n        var difference = to - element.scrollTop;\n        var perTick = (difference / duration) * 10;\n\n        setTimeout(function() {\n          element.scrollTop = element.scrollTop + perTick;\n          if (element.scrollTop === to) return;\n          scrollingTo(element, to, duration - 10);\n        }, 10);\n      };\n      scrollingTo(root, cue.offsetTop - offset, 250);\n    }\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {object} the player\n   */\n  setMedia(player) {\n    this.media = player;\n    this.dispatchEvent(new CustomEvent(\"transcript-ready\", { detail: this }));\n  }\n\n  /**\n   * loads tracks from array\n   *\n   * @param {array} an array of tracks\n   */\n  setTracks(tracks) {\n    this.set(\"tracks\", tracks.slice(0));\n    this.notifyPath(\"tracks\");\n    if (this.tracks !== undefined && this.tracks.length > 0)\n      this.shadowRoot.querySelector(\"#tracks\").render();\n  }\n\n  /**\n   * fires an event when media is associated with the player\n   *\n   * @param {boolean} Hide transcript? `true` is hidden, `false` is visible, and `null` toggles based on current state.\n   */\n  toggleHidden(mode) {\n    let root = this,\n      inner = document.getElementById(\"inner\"),\n      active =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue[active]\")\n          : null,\n      first =\n        inner !== null && inner !== undefined\n          ? inner.querySelector(\"a11y-media-transcript-cue\")\n          : null;\n    mode = mode !== undefined ? mode : this.hidden;\n    this.hidden = mode;\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {integer} the tabindex of the cue\n   */\n  _getTabIndex(disableInteractive) {\n    return disableInteractive ? -1 : 0;\n  }\n\n  /**\n   * gets the role of cues based on whether or not interactive cues are disabled\n   *\n   * @param {boolean} Is the interactive transcript mode disabled?\n   * @returns {string} the role of the cue, `button` or `null`\n   */\n  _getRole(disableInteractive) {\n    return disableInteractive ? null : \"button\";\n  }\n\n  /**\n   * forwards the listener for transcript cue click to seek accordingly\n   */\n  _handleCueSeek(e) {\n    if (!this.disableInteractive) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-seek\", { detail: e.detail })\n      );\n    }\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isActive(selectedTranscript, index) {\n    return (\n      selectedTranscript !== undefined &&\n      selectedTranscript !== null &&\n      parseInt(selectedTranscript) === parseInt(index)\n    );\n  }\n\n  /**\n   * determines if this is the currently selected transcript to show or hide\n   *\n   * @param {integer} the index of the transcript\n   */\n  _isLoading(selectedTranscript, tracks) {\n    return (\n      selectedTranscript === undefined ||\n      selectedTranscript === null ||\n      tracks === undefined ||\n      tracks === null ||\n      tracks.length === 0\n    );\n  }\n\n  _stampLoadingStatus(disableSeek, __ready) {\n    if (__ready) {\n      this.shadowRoot.querySelector(\"#loading\").innerHTML =\n        disableSeek === false\n          ? this._getLocal(\"transcript\", \"label\")\n          : this._getLocal(\"youTubeTranscript\", \"label\");\n      return this.shadowRoot.querySelector(\"#loading\").innerHTML;\n    }\n  }\n}\nwindow.customElements.define(A11yMediaTranscript.tag, A11yMediaTranscript);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { A11yMediaBehaviors } from \"./a11y-media-behaviors.js\";\nimport \"@lrnwebcomponents/simple-search/simple-search.js\";\nimport \"./a11y-media-button.js\";\n\n/**\n * `a11y-media-transcript-controls`\n * `A controls for the transcript element.`\n *\n * @microcopy - language worth noting:\n```<a11y-media-transcript-controls \n  accent-color$=\"[[accentColor]]\"                 // Optional accent color highlighted cues, \n                                                  // using the following materialize colors: \n                                                  // red, pink, purple, deep-purple, indigo, blue, \n                                                  // light blue, cyan, teal, green, light green, lime, \n                                                  // yellow, amber, orange, deep-orange, and brown. \n                                                  // Default is null. \n  custom-microcopy$=\"[[customMicrocopy]]\"         // Optional customization or text and icons\n  disable-print-button$=\"[[disablePrintButton]]\"  // Disable the print button?\n  disable-scroll$=\"[[disableScroll]]\"             // Disable autoscrolling transcript as video plays? \n  disable-search$=\"[[disableSearch]]\"             // Disable transcript search? \n</a11y-media-transcript-controls>```\n *\n * @extends A11yMediaBehaviors\n * @customElement\n * @polymer\n */\nclass A11yMediaTranscriptControls extends A11yMediaBehaviors {\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * target of the controls\n       */\n      target: {\n        type: Object,\n        value: null\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-transcript-controls\";\n  }\n\n  //inherit styles from a11y-media-player or a11y-media-transcript\n  constructor() {\n    super();\n  }\n\n  //render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: flex;\n          height: 44px;\n          max-height: 44px;\n          min-height: 44px;\n          color: var(--a11y-media-color);\n          background-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-bg-color: var(--a11y-media-transcript-bg-color);\n          --a11y-media-button-hover-bg-color: var(\n            --a11y-media-transcript-bg-color\n          );\n          --simple-search-input-text-color: var(--a11y-media-color);\n          --simple-search-input-line-color: var(--a11y-media-accent-color);\n          --simple-search-input-placeholder-color: var(\n            --a11y-media-transcript-color\n          );\n          --simple-search-button-color: var(--a11y-media-accent-color);\n          --simple-search-button-hover-color: var(\n            --a11y-media-faded-accent-color\n          );\n          --simple-search-button-bg-color: var(--a11y-media-bg-color);\n          --simple-search-button-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-hover-border-color: var(--a11y-media-bg-color);\n          --simple-search-button-disabled-color: var(\n            --simple-colors-default-theme-grey-5\n          );\n          --simple-search-button-disabled-bg-color: var(\n            --simple-colors-default-theme-grey-2\n          );\n          --simple-search-button-disabled-border-color: var(\n            --simple-colors-default-theme-grey-3\n          );\n          --paper-input-container-input-color: var(--a11y-media-color);\n          --simple-search-padding: 0 15px;\n        }\n        :host #searchbar {\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          width: 100%;\n        }\n        :host #searching {\n          flex-grow: 2;\n        }\n        :host #autoscroll {\n          padding-right: 8px;\n        }\n        :host #scrolling,\n        :host #printing {\n          display: flex;\n          align-items: center;\n        }\n        @media print {\n          :host {\n            display: none;\n          }\n        }\n      </style>\n      <div id=\"searchbar\">\n        <div id=\"searching\">\n          <simple-search\n            id=\"simplesearch\"\n            controls=\"transcript\"\n            disabled$=\"[[disableSearch]]\"\n            hidden$=\"[[disableSearch]]\"\n            no-label-float\n            next-button-icon$=\"[[_getLocal('nextResult','icon')]]\"\n            next-button-label$=\"[[_getLocal('nextResult','label')]]\"\n            prev-button-icon$=\"[[_getLocal('prevResult','icon')]]\"\n            prev-button-label$=\"[[_getLocal('prevResult','label')]]\"\n            search-input-icon$=\"[[_getLocal('search','icon')]]\"\n            search-input-label$=\"[[_getLocal('search','label')]]\"\n            target=\"[[target]]\"\n          >\n          </simple-search>\n        </div>\n        <div id=\"scrolling\">\n          <a11y-media-button\n            id=\"scroll\"\n            controls=\"transcript\"\n            icon=\"[[_getLocal('autoScroll','icon')]]\"\n            label=\"[[_getLocal('autoScroll','label')]]\"\n            on-tap=\"_handleScrollClick\"\n            toggle$=\"[[!disableScroll]]\"\n          >\n          </a11y-media-button>\n        </div>\n        <div\n          id=\"printing\"\n          hidden$=\"[[disablePrintButton]]\"\n          disabled$=\"[[disablePrintButton]]\"\n        >\n          <a11y-media-button\n            id=\"download\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('download','icon')]]\"\n            label=\"[[_getLocal('download','label')]]\"\n            on-tap=\"_handleDownloadClick\"\n          >\n          </a11y-media-button>\n          <a11y-media-button\n            id=\"print\"\n            controls=\"transcript\"\n            icon$=\"[[_getLocal('print','icon')]]\"\n            label=\"[[_getLocal('print','label')]]\"\n            on-tap=\"_handlePrintClick\"\n          >\n          </a11y-media-button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    root.search = root.shadowRoot.querySelector(\"#simplesearch\");\n    root.dispatchEvent(\n      new CustomEvent(\"searchbar-added\", { detail: root.search })\n    );\n  }\n\n  /**\n   * handles the transcript scroll button toggle\n   */\n  _handleScrollClick(e) {\n    this.dispatchEvent(new CustomEvent(\"toggle-scroll\", { detail: this }));\n  }\n}\nwindow.customElements.define(\n  A11yMediaTranscriptControls.tag,\n  A11yMediaTranscriptControls\n);\n\nexport { A11yMediaTranscriptControls };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\n\n// register globally so we can make sure there is only one\nwindow.A11yMediaYoutube = window.A11yMediaYoutube || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\n\nwindow.A11yMediaYoutube.requestAvailability = () => {\n  if (!window.A11yMediaYoutube.instance) {\n    window.A11yMediaYoutube.instance = document.createElement(\n      \"a11y-media-youtube\"\n    );\n    document.body.appendChild(window.A11yMediaYoutube.instance);\n  }\n  return window.A11yMediaYoutube.instance;\n};\n/**\n * `a11y-media-youtube`\n * `A utility that manages multiple instances of a11y-media-player on a single page.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n */\nclass A11yMediaYoutube extends PolymerElement {\n  /* REQUIRED FOR TOOLING DO NOT TOUCH */\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n\n   */\n  static get tag() {\n    return \"a11y-media-youtube\";\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * whether or not the YouTube API is ready\n       */\n      apiReady: {\n        type: Boolean,\n        value: window.YT !== undefined\n      },\n      /**\n       * a counter for creating unique ideas for each YouTube player container\n       */\n      counter: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   * Makes sure there is a utility ready and listening for elements.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this,\n      api = document.createElement(\"script\");\n    api.setAttribute(\"src\", \"https://www.youtube.com/iframe_api\");\n    api.setAttribute(\"type\", \"text/javascript\");\n    document.body.appendChild(api);\n    window.onYouTubeIframeAPIReady = () => {\n      var event = new CustomEvent(\"youtube-api-ready\");\n      root.apiReady = true;\n      document.dispatchEvent(event);\n    };\n  }\n\n  /**\n   * initializes the youtube player for a given element\n   *\n   * @param {options} the YouTube options object, eg. `{ \"width\": \"100%\", \"height\": \"100%\", \"videoId\": \"NP0mQeLWCCo\" }`\n   * @returns {options} the YouTube player object\n   */\n  initYoutubePlayer(options) {\n    //get unique id for each youtube iframe\n    // function to create and init iframe\n    let temp = \"a11y-media-yt-\",\n      div = document.createElement(\"div\"),\n      vdata = options.videoId.split(/[\\?&]/),\n      vid = vdata[0],\n      start = null,\n      end = null,\n      cue = { videoId: vid };\n    this.counter++;\n    temp += this.counter;\n    document.body.appendChild(div);\n    div.setAttribute(\"id\", temp);\n    let loadVideo = e => {\n        for (let i = 1; i < vdata.length; i++) {\n          let param = vdata[i].split(\"=\");\n          if (param[0] === \"t\") {\n            let hh = param[1].match(/(\\d)+h/),\n              mm = param[1].match(/(\\d)+m/),\n              ss = param[1]\n                .replace(/\\d+h/, \"\")\n                .replace(/\\d+m/, \"\")\n                .replace(/s/, \"\")\n                .match(/(\\d)+/),\n              h = hh !== null && hh.length > 1 ? parseInt(hh[1]) * 360 : 0,\n              m = mm !== null && mm.length > 1 ? parseInt(mm[1]) * 60 : 0,\n              s = ss !== null && ss.length > 1 ? parseInt(ss[1]) : 0;\n            start = parseInt(h + m + s);\n          } else if (param[0] === \"start\") {\n            start = parseInt(param[1]);\n          } else if (param[0] === \"end\") {\n            end = parseInt(param[1]);\n          }\n        }\n        if (start !== null) {\n          start = Math.max(0, start);\n          cue.startSeconds = start;\n        } else {\n          start = 0;\n        }\n        if (end !== null) {\n          end = start !== null ? Math.max(start, end) : Math.max(0, end);\n          cue.endSeconds = end;\n        }\n        e.target.cueVideoById(cue);\n      },\n      iframe = new YT.Player(temp, {\n        width: options.width,\n        height: options.height,\n        events: { onReady: loadVideo },\n        playerVars: {\n          color: \"white\",\n          controls: 0,\n          autoplay: options.autoplay,\n          disablekb: 1,\n          enablejsapi: 1,\n          iv_load_policy: 3,\n          modestbranding: 1,\n          showinfo: 0,\n          rel: 0\n        }\n      });\n\n    // add methods and properties to api so that it matches HTML5 video\n    iframe.tracks = [];\n    iframe.duration = 0;\n    iframe.seekable = {\n      length: 1,\n      start: index => {\n        iframe.seekable.start = index => {\n          return start || 0;\n        };\n      },\n      end: index => {\n        iframe.seekable.end = index => {\n          return end !== null\n            ? Math.min(end, iframe.duration)\n            : iframe.duration;\n        };\n      }\n    };\n    iframe.paused = true;\n    iframe.timeupdate;\n    iframe.play = () => {\n      if (iframe.playVideo !== undefined) iframe.playVideo();\n    };\n    iframe.addEventListener(\"onStateChange\", () => {\n      iframe.paused = iframe.getPlayerState() !== 1;\n      if (iframe.paused) {\n        clearInterval(iframe.timeupdate);\n      } else {\n        iframe.timeupdate = setInterval(() => {\n          document.dispatchEvent(\n            new CustomEvent(\"timeupdate\", { detail: iframe })\n          );\n        }, 1);\n      }\n    });\n    iframe.pause = () => {\n      if (iframe.pauseVideo !== undefined) iframe.pauseVideo();\n    };\n    iframe.seek = (time = 0) => {\n      if (iframe.seekTo !== undefined) {\n        iframe.seekTo(time);\n        if (iframe.paused) {\n          iframe.seekupdate = setInterval(() => {\n            if (Math.abs(iframe.getCurrentTime() - time) < 1) {\n              document.dispatchEvent(\n                new CustomEvent(\"timeupdate\", { detail: iframe })\n              );\n              clearInterval(iframe.seekupdate);\n            }\n          }, 1);\n        }\n      }\n    };\n    iframe.setMute = mode => {\n      if (iframe.mute !== undefined) mode ? iframe.mute() : iframe.unMute();\n    };\n    return iframe;\n  }\n}\nwindow.customElements.define(A11yMediaYoutube.tag, A11yMediaYoutube);\nexport { A11yMediaYoutube };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { A11yMediaBehaviors } from \"./lib/a11y-media-behaviors.js\";\nimport { SimpleColorsPolymer } from \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport \"@lrnwebcomponents/anchor-behaviors/anchor-behaviors.js\";\nimport \"@polymer/paper-toast/paper-toast.js\";\nimport \"./lib/a11y-media-state-manager.js\";\nimport \"./lib/a11y-media-controls.js\";\nimport \"./lib/a11y-media-button.js\";\nimport \"./lib/a11y-media-html5.js\";\nimport \"./lib/a11y-media-transcript.js\";\nimport \"./lib/a11y-media-transcript-controls.js\";\nimport \"./lib/a11y-media-youtube.js\";\n/**\n * `a11y-media-player`\n * An accessible video player\n *\n * @microcopy - the mental model for this element\n * ```\n<a11y-media-player\n  accent-color$=\"[[accentColor]]\"              // Optional accent color for controls,\n                                               // using the following materialize colors:\n                                               // red, pink, purple, deep-purple, indigo, blue,\n                                               // light blue, cyan, teal, green, light green, lime,\n                                              // yellow, amber, orange, deep-orange, and brown.\n                                              // Default is null.\n  audio-only$=\"[[audioOnly]]\"                 // Is media audio only?\n  autoplay$=\"[[autoplay]]\"                    // Is player set to autoplay (not recommended for a11y)?\n  cc$=\"[[cc]]\"                                // Are closed captions toggled?\n  custom-microcopy$=\"[[customMicrocopy]]\"  // Optional customization or text and icons\n  dark$=\"[[dark]]\"  // Is the color scheme dark? Default is light.\n  dark-transcript$=\"[[darkTranscript]]\"  // Use dark theme on transcript? Default is false, even when player is dark.\n  disable-fullscreen$=\"[[disableFullscreen]]\" // Is full screen mode disabled?\n  disable-interactive$=\"[[disableInteractive]]\" // Disable interactive cues?\n  fullscreen$=\"[[fullscreen]]\"  // Is full screen mode toggled on?\n  height$=\"[[height]]\"  // The height of player\n  hide-timestamps$=\"[[hideTimestamps]]\"  // Hide cue timestamps?\n  lang$=\"[[lang]]\"  // The language of the media\n  loop$=\"[[loop]]\"  // Is video on a loop?\n  muted$=\"[[muted]]\"  // Is video muted?\n  media-title$=\"[[mediaTitle]]\"  // The title of the media\n  playback-rate$=\"[[playbackRate]]\"  // The speed that video plays, default is 1 (for 100%)\n  sticky-corner$=\"[[stickyCorner]]\"  // When user scrolls a playing video off-screen,\n  which corner will it stick to? Values are:\n  top-right (default), top-left, bottom-left, bottom-right,\n  and none (to turn sticky off)\n  thumbnail-src$=\"[[thumbnailSrc]]\"  // Optional thumbanil/cover image url\n  volume$=\"[[volume]]\">  // The initial volume of the video\n\n  <!--video sources and tracks-->\n  <source src=\"/path/to/video.mp4\" type=\"video/mp4\">\n  <source src=\"/path/to/video.webm\" type=\"video/webm\">\n  <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"path/to/subtitles/en.vtt\" default>\n  <track label=\"Deutsch\" kind=\"subtitles\" srclang=\"de\" src=\"path/to/subtitles/de.vtt\">\n  <track label=\"Español\" kind=\"subtitles\" srclang=\"es\" src=\"path/to/subtitles/es.vtt\">\n\n</a11y-media-player>```\n *\n * Intermediate customization of player:\n * ```\n--a11y-media-text-color: text color, default is --simple-colors-default-theme-grey-11\n--a11y-media-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-hover-color: text color on hover, default is --simple-colors-default-theme-grey-12\n--a11y-media-hover-bg-color: background color, default is --simple-colors-default-theme-grey-2\n--a11y-media-accent-color: an accent color, default is --simple-colors-default-theme-accent-9\n--a11y-media-faded-accent-color: a subtler version of accent color, default is --simple-colors-default-theme-accent-8\n--a11y-media-outline-color: border-color of group, default is --a11y-media-bg-color```\n *\n * Intermediate customization of transcript:\n * ```\n --a11y-media-transcript-color: transcript color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-bg-color: transcript background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-active-cue-color: transcript active cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-active-cue-bg-color: transcript active cue background color, default is --simple-colors-default-theme-grey-1\n--a11y-media-transcript-focused-cue-color: transcript focused cue color, default is --simple-colors-default-theme-grey-12\n--a11y-media-transcript-focused-cue-br-color: transcript focused cue background color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-color: transcript match color, default is --simple-colors-default-theme-accent-1\n--a11y-media-transcript-match-bg-color: transcript match background color, default is --simple-colors-default-theme-grey-12```\n *\n * Advanced styles for settings menu:\n * ```\n--a11y-media-settings-menu-color: settings menu text color, default is --a11y-media-text-color\n--a11y-media-settings-menu-bg-color: settings menu background color, default is --a11y-media-bg-color\n--a11y-media-settings-menu-hover-color: settings menu text color on hover, default is --a11y-media-hover-color\n--a11y-media-settings-menu-hover-bg-color: settings menu background color on hover, default is --a11y-media-hover-bg-color```\n *\n * Advanced styles for buttons:\n * ```\n--a11y-media-button-color: button text color, default is --a11y-media-text-color\n--a11y-media-button-bg-color: button background color, default is --a11y-media-bg-color\n--a11y-media-button-hover-color: button text color when focused/hovered, default is --a11y-media-hover-color\n--a11y-media-button-hover-bg-color: button background color when focused/hovered, default is --a11y-media-bg-color\n--a11y-media-button-toggle-color: button text color when tggled on, default is --a11y-media-faded-accent-color```\n *\n * Advanced styles for toggles:\n * ```\n--paper-toggle-button-unchecked-bar-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-unchecked-button-color: color of toggle button when off, default is --a11y-media-color\n--paper-toggle-button-checked-bar-color: color of toggle button when on, default is --a11y-media-accent-color\n--paper-toggle-button-checked-button-color: color of toggle button when on, default is --a11y-media-accent-color```\n *\n * Advanced styles for sliders:\n * ```\n--a11y-media-slider-primary-color: primary slider color, default is --a11y-media-accent-color\n--a11y-media-slider-secondary-color: slider buffer color, default is --a11y-media-faded-accent-color\n--a11y-media-slider-pin-color: color of the pin that shows slider value, default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-start-color: color of the pin at start default is --a11y-media-faded-bg-color\n--a11y-media-slider-pin-end-color: color of the pin at end, default is --a11y-media-faded-bg-color\n--a11y-media-slider-knob-color: slider knob color, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-color: slider knob color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-color: slider knob color at end, default is --a11y-media-accent-color\n--a11y-media-slider-knob-border-color: slider knob bordercolor, default is --a11y-media-accent-color\n--a11y-media-slider-knob-start-border-color: slider knob border color at start, default is --a11y-media-accent-color\n--a11y-media-slider-knob-end-border-color: slider knob border color at end, default is --a11y-media-accent-color```\n *\n * @extends A11yMediaBehaviors\n * @extends SimpleColorsPolymer\n * @polymer\n * @customElement\n * @demo ./demo/index.html video demo\n * @demo ./demo/audio.html audio demo\n * @demo ./demo/youtube.html YouTube demo\n *\n */\nclass A11yMediaPlayer extends A11yMediaBehaviors {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  width: calc(100% - 2px);\n  border: 1px solid var(--simple-colors-default-theme-grey-3);\n  --a11y-media-color: var(--simple-colors-default-theme-grey-11);\n  --a11y-media-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-hover-color: var(--simple-colors-default-theme-grey-12);\n  --a11y-media-hover-bg-color: var(--simple-colors-default-theme-grey-2);\n  --a11y-media-accent-color: var(--simple-colors-default-theme-accent-9);\n  --a11y-media-faded-accent-color: var(--simple-colors-default-theme-accent-8);\n  --paper-toast-color: var(--simple-colors-default-theme-grey-11);\n  --paper-toast-background-color: var(--simple-colors-default-theme-grey-2);\n\n  \n  --a11y-media-settings-menu-color: var(--a11y-media-color);\n  --a11y-media-settings-menu-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-settings-menu-hover-color: var(--a11y-media-hover-color);\n  --a11y-media-settings-menu-hover-bg-color: var(--a11y-media-hover-bg-color);\n\n  \n  --a11y-media-button-color: var(--a11y-media-color);\n  --a11y-media-button-bg-color: var(--a11y-media-bg-color);\n  --a11y-media-button-hover-color: var(--a11y-media-accent-color);\n  --a11y-media-button-hover-bg-color: var(--a11y-media-hover-bg-color);\n  --a11y-media-button-toggle-color: var(--a11y-media-faded-accent-color);\n\n  \n  --paper-toggle-button-unchecked-bar-color: var(--a11y-media-color);\n  --paper-toggle-button-unchecked-button-color: var(--a11y-media-color);\n  --paper-toggle-button-checked-bar-color: var(--a11y-media-accent-color);\n  --paper-toggle-button-checked-button-color: var(--a11y-media-accent-color);\n\n  \n  --paper-slider-active-color: var(--a11y-media-accent-color);\n  --paper-slider-secondary-color: var(--a11y-media-faded-accent-color);\n  --paper-slider-pin-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-start-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-pin-end-color: var(--a11y-media-faded-bg-color);\n  --paper-slider-knob-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-border-color: var(--a11y-media-accent-color);\n  --paper-slider-knob-start-border-color: var(--a11y-media-bg-color);\n  --paper-slider-knob-end-border-color: var(--a11y-media-bg-color);\n  \n  \n  --a11y-media-transcript-color: var(--simple-colors-default-theme-grey-7);\n  --a11y-media-transcript-bg-color: var(--simple-colors-default-theme-grey-1);\n  --a11y-media-transcript-accent-color: var(--simple-colors-default-theme-accent-8);\n  --a11y-media-transcript-faded-accent-color: var(--simple-colors-default-theme-accent-10);\n  --a11y-media-transcript-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-fixed-theme-accent-1);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-fixed-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-fixed-theme-grey-2);\n  --a11y-media-transcript-match-color: var(--simple-colors-fixed-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-fixed-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-fixed-theme-accent-12);\n}\n:host([dark]) {\n  border: 1px solid var(--simple-colors-default-theme-grey-1);\n}\n:host([dark-transcript]) {\n  --a11y-media-transcript-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-active-cue-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-active-cue-bg-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-color: var(--simple-colors-dark-theme-grey-1);\n  --a11y-media-transcript-match-bg-color: var(--simple-colors-dark-theme-accent-10);\n  --a11y-media-transcript-match-border-color: var(--simple-colors-dark-theme-accent-12);\n  --a11y-media-transcript-focused-cue-color: var(--simple-colors-dark-theme-grey-12);\n  --a11y-media-transcript-focused-cue-bg-color: var(--simple-colors-dark-theme-grey-2);\n}\n:host,\n:host #outerplayer {\n  color: var(--simple-colors-default-theme-grey-12);\n  background-color: var(--simple-colors-default-theme-grey-2);\n}\n:host > * {\n  transition: all 0.5s;\n}\n:host,\n:host #outerplayer,\n:host #player,\n:host #outertranscript,\n:host #innertranscript {\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n  align-content: stretch;\n} \n:host #captionlink:link {\n  text-decoration: none;\n}\n:host #innerplayer {\n  display: flex;\n}\n:host([hidden]),\n:host *[hidden] {\n  display: none !important;\n}\n:host #innerplayer,\n:host #player, \n:host #player > *,\n:host #customcc,\n:host #customcctxt,\n:host #slider,\n:host #controls,\n:host #outertranscript,\n:host #innertranscript {\n  width: 100%;\n}\n:host #innertranscript > * {\n  width: calc(100% - 1px);\n}\n:host > *,\n:host #innerplayer,\n:host #player,\n:host #player > *,\n:host #customcctxt {\n  flex: 1 1 auto;\n}\n:host #controls,\n:host #tcontrols {\n  flex: 0 0 44px;\n}\n:host #innerplayer {\n  margin: 0 auto;\n}\n:host #player {\n  height: 400px;\n  position: relative;\n}\n:host #player > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n}\n:host #playbutton,\n:host #slider,\n:host #controls {\n  z-index: 2;\n}\n:host([audio-only]) #playbutton {\n  opacity: 0;\n}\n:host #slider {\n  flex: 0 0 32px;\n  height: 32px;\n}\n:host([thumbnail-src]) #youtube {\n  opacity: 0;\n}\n:host #youtube[elapsed] {\n  opacity: 1;\n  transition: opacity 0.5s;\n}\n:host #customcc:not([hidden]) {\n  font-size: 20px;\n  transition: font-size 0.25s;\n  display: flex;\n}\n:host #customcctxt:not(:empty) {\n  align-self: flex-end;\n  font-family: sans-serif;\n  color: white;\n  margin: 4px 10px;\n  padding: 0.15em 4px;\n  background-color: black;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: all 0.5s;\n}\n:host([audio-only]:not([thumbnail-src])) #customcctxt {\n  align-self: center;\n  color: var(--a11y-media-color);\n  background-color: transparent;\n}\n:host #printthumb {\n  width: 100%;\n  margin: 0;\n  display: block;\n  border-top: 1px solid #aaaaaa;\n}\n:host .media-caption:not(:empty) {\n  width: calc(100% - 30px);\n  padding: 5px 15px;\n}\n:host .media-type {\n  font-style: italic;\n}\n:host #outertranscript {\n  padding: 0 1px 0 0;\n}\n:host #innertranscript {\n  flex: 1 0 194px;\n}\n:host #transcript {\n  flex: 1 0 150px;\n  overflow-y: scroll;\n}\n:host .sr-only {\n  position: absolute;\n  left: -9999px;\n  font-size: 0;\n  height: 0;\n  width: 0;\n  overflow: hidden;\n}\n@media screen {\n  :host([flex-layout]:not([responsive-size=\"xs\"])) {\n    flex-flow: row;\n    padding: 0;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) #outerplayer {\n    flex: 1 0 auto;\n  }\n  :host #printthumb,\n  :host([height]) #outertranscript,\n  :host([stand-alone]) #outertranscript,\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    position: fixed;\n    top: 5px;\n    right: 5px;\n    width: 200px;\n    max-width: 200px;\n    z-index: 999999;\n    border: 1px solid var(--a11y-media-bg-color);\n    box-shadow: 1px 1px 20px 1px rgba(125, 125, 125);\n    border-radius: 3.2px;\n  }\n  :host([dark][sticky]:not([sticky-corner=\"none\"])) #outerplayer {\n    border: 1px solid var(--a11y-media-bg-color);\n  }\n  :host([sticky][sticky-corner=\"top-left\"]) #outerplayer {\n    right: unset;\n    left: 5px;\n  }\n  :host([flex-layout]:not([responsive-size=\"xs\"])) > div {\n    width: 50%;\n    flex: 1 1 auto;\n  }\n  :host #innertranscript {\n    position: relative;\n  }\n  :host([hide-transcript]) #outerplayer {\n    min-width: 50%;\n    max-width: 100%;\n  }\n  :host([hide-transcript]) #outertranscript {\n    display: none;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #transcript {\n    position: absolute;\n    top: 44px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow-y: scroll;\n  }\n  :host(:not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #innerplayer.totop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 200px !important;\n    z-index: 9999;\n  }\n  :host([sticky][sticky-corner=\"bottom-left\"]) #innerplayer {\n    top: unset;\n    right: unset;\n    bottom: 5px;\n  }\n  :host([sticky][sticky-corner=\"bottom-right\"]) #innerplayer {\n    top: unset;\n    bottom: 5px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"]):not([no-height]):not([stacked-layout]):not([responsive-size=\"xs\"]))\n    #controls {\n    display: none;\n  }\n  :host([responsive-size=\"lg\"]) #customcc {\n    font-size: 16px;\n  }\n  :host([responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"xl\"]) #customcc {\n    font-size: 14px;\n  }\n  :host([responsive-size=\"sm\"]) #customcc,\n  :host([flex-layout][responsive-size=\"lg\"]) #customcc {\n    font-size: 12px;\n  }\n  :host([responsive-size=\"xs\"]) #customcc,\n  :host([flex-layout][responsive-size=\"md\"]) #customcc,\n  :host([flex-layout][responsive-size=\"sm\"]) #customcc {\n    font-size: 10px;\n  }\n  :host([sticky]:not([sticky-corner=\"none\"])) #customcc {\n    display: none;\n  }\n  :host .media-caption {\n    color: var(--a11y-media-bg-color);\n    background-color: var(--a11y-media-accent-color);\n  }\n  :host #audio-only {\n    text-align: center;\n    font-style: italic;\n    width: 100%;\n    line-height: 160%;\n  }\n  :host .print-only {\n    display: none;\n  }\n}\n\n@media print {\n  :host,\n  :host([dark]) {\n    outline: 1px solid #aaaaaa;\n    background-color: #ffffff;\n  }\n  :host .screen-only,\n  :host #printthumb:not([src]),\n  :host(:not([thumbnail-src])) #player {\n    display: none;\n  }\n  :host #searchbar {\n    display: none;\n  }\n  :host .media-caption {\n    background-color: #cccccc;\n    color: #000000;\n    font-size: 120%;\n  }\n}\n        </style>\n<style include=\"simple-colors-shared-styles-polymer\"></style>\n  <div class=\"sr-only\">\n      <a href$=\"[[__captionHref]]\">[[mediaCaption]]</a>\n  </div>\n  <div id=\"outerplayer\">\n    <div id=\"innerplayer\">\n      <div id=\"player\"\n        style$=\"[[_getThumbnailCSS(thumbnailSrc,isYoutube,audioOnly)]]\">\n        <a11y-media-play-button\n          id=\"playbutton\"\n          action$=\"[[playPause.action]]\"\n          audio-only$=\"[[audioOnly]]\"\n          disabled=\"true\"\n          elapsed$=\"[[_hidePlayButton(thumbnailSrc, isYoutube, __elapsed)]]\"\n          hidden$=\"[[audioNoThumb]]\"\n          disabled$=\"[[audioNoThumb]]\"\n          on-controls-change=\"_onControlsChanged\"\n          localization$=\"[[localization]]\">\n        </a11y-media-play-button>\n        <a11y-media-html5\n          id=\"html5\"\n          audio-only$=\"[[audioOnly]]\"\n          autoplay$=\"[[autoplay]]\"\n          cc$=\"[[cc]]\"\n          crossorigin$=\"[[crossorigin]]\"\n          hidden$=\"[[isYoutube]]\"\n          media-lang$=\"[[mediaLang]]\"\n          loop$=\"[[loop]]\"\n          muted$=\"[[muted]]\"\n          manifest$=\"[[manifest]]\"\n          on-media-loaded=\"_handleMediaLoaded\"\n          ontimeupdate=\"_handleTimeUpdate\"\n          playing$=\"[[__playing]]\"\n          playback-rate$=\"[[playbackRate]]\"\n          thumbnail-src$=\"[[thumbnailSrc]]\"\n          preload$=\"[[preload]]\"\n          volume$=\"[[volume]]\"\n        >\n          <slot></slot>\n        </a11y-media-html5>\n        <div id=\"youtube\" \n          elapsed$=\"[[__elapsed]]\" \n          lang$=\"[[mediaLang]]\"\n          video-id$=\"[[videoId]]\">\n        </div>\n        <div id=\"customcc\" \n          aria-live=\"polite\"\n          class=\"screen-only\" \n          hidden$=\"[[!showCustomCaptions]]\">\n          <div id=\"customcctxt\"></div>\n        </div>\n      </div>\n    </div>\n    <paper-slider id=\"slider\"\n      class=\"screen-only\"\n      disabled$=\"[[disableSeek]]\"\n      label$=\"[[seekSlider.label]]\"\n      min=\"0\"\n      max=\"[[__duration]]\"\n      on-mousedown=\"_handleSliderStart\"\n      on-mouseup=\"_handleSliderStop\"\n      on-keyup=\"_handleSliderStop\"\n      on-keydown=\"_handleSliderStart\"\n      on-blur=\"_handleSliderStop\"\n      secondary-progress=\"[[__buffered]]\"\n      value=\"[[__elapsed]]\"\n    >\n    </paper-slider>\n    <a11y-media-controls id=\"controls\"\n      cc$=\"[[cc]]\"\n      disable-seek$=\"[[disableSeek]]\"\n      fixed-height$=\"[[height]]\"\n      fullscreen$=\"[[fullscreen]]\"\n      fullscreen-button$=\"[[fullscreenButton]]\"\n      has-captions$=\"[[hasCaptions]]\"\n      has-transcript$=\"[[hasTranscript]]\"\n      hide-transcript$=\"[[hideTranscript]]\"\n      linkable$=\"[[linkable]]\"\n      mute-unmute=\"[[muteUnmute]]\"\n      on-controls-change=\"_onControlsChanged\"\n      on-print-transcript=\"_handlePrinting\"\n      on-download-transcript=\"_handleDownload\"\n      responsive-size$=\"[[responsiveSize]]\"\n      play-pause=\"[[playPause]]\"\n      stand-alone$=\"[[standAlone]]\"\n      volume=\"[[__volume]]\">\n    </a11y-media-controls>\n    <a id=\"captionlink\" href$=\"[[__captionHref]]\">\n      <div\n        aria-hidden=\"true\"\n        class=\"screen-only media-caption\"\n        hidden$=\"[[!_hasAttribute(mediaCaption)]]\">\n        [[mediaCaption]]\n      </div>\n    </a>\n    <div class=\"print-only media-caption\">[[printCaption]]</div>\n  </div>\n  <img loading=\"lazy\" id=\"printthumb\" aria-hidden=\"true\" src$=\"[[thumbnailSrc]]\" />\n  <div id=\"outertranscript\" hidden$=\"[[standAlone]]\">\n    <div id=\"innertranscript\" hidden$=\"[[hideTranscript]]\">\n      <a11y-media-transcript-controls id=\"tcontrols\"\n        accent-color$=\"[[accentColor]]\"\n        localization$=\"[[localization]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-print-button$=\"[[disablePrintButton]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        has-transcript$=\"[[hasTranscript]]\"\n        localization$=\"[[localization]]\"\n        on-searchbar-added=\"_handleSearchAdded\"\n        on-toggle-scroll=\"_handleTranscriptScrollToggle\"\n        on-print-transcript=\"_handlePrinting\"\n        on-download-transcript=\"_handleDownload\"\n        stand-alone$=\"[[standAlone]]\">\n      </a11y-media-transcript-controls>\n      <a11y-media-transcript id=\"transcript\" \n        accent-color$=\"[[accentColor]]\"\n        dark$=\"[[darkTranscript]]\"\n        disable-scroll$=\"[[disableScroll]]\"\n        disable-search$=\"[[disableSearch]]\"\n        disable-seek$=\"[[disableSeek]]\"\n        disable-interactive$=\"[[disableInteractive]]\"\n        hide-timestamps$=\"[[hideTimestamps]]\"\n        media-id$=\"[[id]]\"\n        on-transcript-seek=\"_handleTranscriptSeek\"\n        localization$=\"[[localization]]\"\n        search=\"[[search]]\"\n        selected-transcript$=\"[[__selectedTrack]]\">\n      </a11y-media-transcript>\n    </div>\n  </div>\n  <paper-toast id=\"link\" \n    disabled$=\"[[!linkable]]\" \n    hidden$=\"[[!linkable]]\" \n    duration=\"5000\" \n    text=\"Copied to clipboard: [[shareLink]]\">\n    <a11y-media-button\n      action=\"linkable\"\n      icon=\"[[_getLocal('closeLink','icon')]]\"\n      label=\"[[_getLocal('closeLink','label')]]\"\n      on-click=\"_handleCloseLink\"\n      tooltip-position=\"top\"\n    ></a11y-media-button>\n  </paper-toast>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    \n    return {\n  \n  ...super.properties,\n  \n  /**\n   * Allow this media to play concurrently with other a11y-media-players?\n   * Default is to pause this a11y-media-player when other a11y-media-player starts playing.\n   */\n\n  \"allowConcurrent\": {\n    \"name\": \"allowConcurrent\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Is it an audio player with no thumbnail?\n   */\n  \"audioNoThumb\": {\n    \"name\": \"audioNoThumb\",\n    \"type\": Boolean,\n    \"computed\": \"_getAudioNoThumb(audioOnly,thumbnailSrc)\"\n  },\n  /**\n   * Use dark theme on transcript? Default is false, even when player is dark.\n   */\n  \"darkTranscript\": {\n    \"name\": \"darkTranscript\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * crossorigin attribute for <video> and <audio> tags\n   */\n  \"crossorigin\": {\n    \"type\": String,\n    \"value\": null\n  },\n  /**\n   * disable fullscreen option\n   */\n  \"disableFullscreen\": {\n    \"name\": \"disableFullscreen\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * disable interactive mode that makes the transcript clickable\n   */\n  \"disableInteractive\": {\n    \"name\": \"disableInteractive\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Determines if video and transcript are in a flex layout\n   */\n  \"flexLayout\": {\n    \"name\": \"flexLayout\",\n    \"type\": Boolean,\n    \"computed\": \"_isFlexLayout(standAlone,hideTranscript,audioNoThumb,stackedLayout)\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Is fullscreen mode?\n   */\n  \"fullscreen\": {\n    \"name\": \"fullscreen\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * show the FullscreenButton?\n   */\n  \"fullscreenButton\": {\n    \"name\": \"fullscreenButton\",\n    \"type\": Boolean,\n    \"computed\": \"_getFullscreenButton(disableFullscreen,audioNoThumb,screenfullLoaded)\",\n    \"notify\": true\n  },\n  /**\n   * Does the player have tracks?\n   */\n  \"hasCaptions\": {\n    \"name\": \"hasCaptions\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Hide elapsed time?\n   */\n  \"hideElapsedTime\": {\n    \"name\": \"hideElapsedTime\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * show cue's start and end time\n   */\n  \"hideTimestamps\": {\n    \"name\": \"hideTimestamps\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"hideTranscript\": {\n    \"name\": \"hideTranscript\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * initially hide the transcript?\n   */\n  \"id\": {\n    \"name\": \"id\",\n    \"type\": String,\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The default media caption if none is given.\n   */\n  \"mediaCaption\": {\n    \"name\": \"mediaCaption\",\n    \"type\": String,\n    \"computed\": \"_getMediaCaption(audioOnly,localization,mediaTitle)\"\n  },\n  /**\n   * the language of the media (if different from user interface language)\n   */\n  \"mediaLang\": {\n    \"name\": \"mediaLang\",\n    \"type\": String,\n    \"value\": \"en\"\n  },\n  /**\n   * mute/unmute button\n   */\n  \"muteUnmute\": {\n    \"name\": \"muteUnmute\",\n    \"type\": Object,\n    \"computed\": \"_getMuteUnmute(muted)\"\n  },\n  /**\n   * The media caption that displays when the page is printed.\n   */\n  \"printCaption\": {\n    \"name\": \"printCaption\",\n    \"type\": String,\n    \"computed\": \"_getPrintCaption(audioOnly,audioLabel,videoLabel,mediaTitle)\"\n  },\n  /**\n   * Size of the a11y media element for responsive styling\n   */\n  \"responsiveSize\": {\n    \"name\": \"responsiveSize\",\n    \"type\": String,\n    \"notify\": true,\n    \"value\": \"xs\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Has screenfull loaded?\n   */\n  \"screenfullLoaded\": {\n    \"name\": \"screenfullLoaded\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"notify\": true\n  },\n  /**\n   * Has screenfull loaded?\n   */\n  \"shareLink\": {\n    \"name\": \"shareLink\",\n    \"type\": String,\n    \"computed\": \"_getShareLink(__elapsed)\"\n  },\n\n  /**\n   * is YouTube?\n   */\n  \"showCustomCaptions\": {\n    \"name\": \"showCustomCaptions\",\n    \"type\": Boolean,\n    \"computed\": \"_showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc)\"\n  },\n  /**\n   * Optional array ouf sources.\n   */\n  \"sources\": {\n    \"name\": \"sources\",\n    \"type\": Array,\n    \"value\": []\n  },\n  /**\n   * stacked layout instead of side-by-side?\n   */\n  \"stackedLayout\": {\n    \"name\": \"stackedLayout\",\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n   */\n  \"sticky\": {\n    \"name\": \"sticky\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * When playing but scrolled off screen, to which corner does it \"stick\":\n   * top-left, top-right, bottom-left, bottom-right, or none?\n   * Default is \"top-right\". \"None\" disables stickiness.\n   */\n  \"stickyCorner\": {\n    \"name\": \"stickyCorner\",\n    \"type\": String,\n    \"value\": \"top-right\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Source of optional thumbnail image\n   */\n  \"thumbnailSrc\": {\n    \"name\": \"thumbnailSrc\",\n    \"type\": String,\n    \"value\": null,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Optional array ouf tracks.\n   */\n  \"tracks\": {\n    \"name\": \"tracks\",\n    \"type\": Array,\n    \"value\": []\n  },\n  /**\n   * play/pause button\n   */\n  \"playPause\": {\n    \"name\": \"playPause\",\n    \"type\": Object,\n    \"computed\": \"_getPlayPause(__playing)\"\n  },\n  /**\n   * Notice if the elapsed time changes\n   */\n  \"__elapsed\": {\n    \"name\": \"__elapsed\",\n    \"type\": Number,\n    \"value\": null,\n    \"notify\": true\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__playing\": {\n    \"name\": \"__playing\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"notify\": true,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * Notice if the video is playing\n   */\n  \"__captionHref\": {\n    \"name\": \"__captionHref\",\n    \"type\": String,\n    \"value\": null,\n    \"notify\": true\n  }\n}\n;\n  }\n\n  constructor() {\n    super();\n    import(\"@polymer/paper-slider/paper-slider.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/av-icons.js\");\n    import(\"@lrnwebcomponents/a11y-media-player/lib/a11y-media-play-button.js\");\n    const basePath = this.pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/screenfull/dist/screenfull.js`;\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"screenfullLib\", location);\n    window.addEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    this.__playerAttached = true;\n    window.A11yMediaStateManager.requestAvailability();\n  }\n  // simple path from a url modifier\n  pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"a11y-media-player\";\n  }\n\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this._addResponsiveUtility();\n    if (this.id === null) this.id = \"a11y-media-player\" + Date.now();\n    window.dispatchEvent(new CustomEvent(\"a11y-player\", { detail: this }));\n    if (this.isYoutube) {\n      this._youTubeRequest();\n    }\n  }\n\n  /**\n   * sets initial values and loads video or youtube iframe\n   */\n  ready() {\n    super.ready();\n    let root = this,\n      aspect = 16 / 9,\n      tracks = new Array(),\n      tdata = new Array(),\n      selected = 0;\n    if (typeof screenfull === \"object\") root._onScreenfullLoaded.bind(root);\n    root.__playerReady = true;\n    root.target = root.shadowRoot.querySelector(\"#transcript\");\n    root.__status = root._getLocal(\"loading\", \"label\");\n    root.__slider = root.shadowRoot.querySelector(\"#slider\");\n    root.__slider.min = 0;\n    root.__volume = root.muted ? 0 : Math.max(this.volume, 10);\n    root.__resumePlaying = false;\n    root.__duration = 0;\n    root.shadowRoot.querySelector(\"#controls\").setStatus(root.__status);\n    root.width = root.width !== null ? root.width : \"100%\";\n    root.style.maxWidth = root.width !== null ? root.width : \"100%\";\n    root._setPlayerHeight(aspect);\n    if (root.isYoutube) {\n      root._youTubeRequest();\n      document.addEventListener(\"timeupdate\", e => {\n        if (e.detail === root.media) root._handleTimeUpdate(e);\n      });\n    } else {\n      root.media = root.shadowRoot.querySelector(\"#html5\");\n      root.media.media.addEventListener(\"timeupdate\", e => {\n        root._handleTimeUpdate(e);\n      });\n      root._addSourcesAndTracks();\n    }\n    root.shadowRoot\n      .querySelector(\"#transcript\")\n      .setMedia(root.shadowRoot.querySelector(\"#innerplayer\"));\n  }\n\n  /**\n   * plays the media\n   */\n  play() {\n    let root = this,\n      stopped = !(root.__playing === true);\n    if (root.isYoutube && !root.__ytAppended) {\n      ytInit();\n    } else {\n      root.__playing = true;\n      root.media.play();\n      window.dispatchEvent(\n        new CustomEvent(\"a11y-player-playing\", { detail: root })\n      );\n    }\n  }\n\n  /**\n   * pauses the media\n   */\n  pause() {\n    let root = this;\n    root.__playing = false;\n    root.media.pause();\n  }\n\n  /**\n   * stops the media\n   */\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  /**\n   * restarts the media\n   */\n  restart() {\n    this.seek(0);\n    this.play();\n  }\n\n  /**\n   * seeks media backward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  rewind(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() - amt, 0);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks media forward at a set increment\n   *\n   * @param {float} the elepsed time, in seconds\n   */\n  forward(amt) {\n    amt = amt !== undefined ? amt : this.media.duration / 20;\n    this.__resumePlaying = this.__playing;\n    this.seek(this.media.getCurrentTime() + amt);\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * seeks to a specific time\n   *\n   * @param {float} the time, in seconds, to seek\n   */\n  seek(time) {\n    let seekable =\n      this.media !== undefined && this.media !== null\n        ? this.media.seekable\n        : [];\n    if (\n      seekable.length > 0 &&\n      time >= seekable.start(0) &&\n      time <= seekable.end(0)\n    ) {\n      this.media.seek(time);\n    }\n  }\n\n  /**\n   * selects a specific track by index\n   *\n   * @param {integer} the index of the track\n   */\n  selectTrack(index) {\n    this.__selectedTrack = index;\n    this.shadowRoot.querySelector(\"#html5\").selectTrack(index);\n  }\n\n  /**\n   * set volume of media\n   *\n   * @param {integer} the volume level from 0-100\n   */\n  setVolume(value) {\n    this.volume = value !== null ? value : 70;\n    this.media.setVolume(this.volume);\n    this.muted = this.volume === 0;\n  }\n\n  /**\n   * set speed/playback rate of media\n   *\n   * @param {float} the playback rate, where 1 = 100%\n   */\n  setPlaybackRate(value) {\n    value = value !== null ? value : 1;\n    this.media.setPlaybackRate(value);\n  }\n\n  /**\n   * toggles captions\n   *\n   * @param {boolean} Toggle CC on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleCC(mode) {\n    this.cc = mode === undefined ? !this.cc : mode;\n    this.shadowRoot.querySelector(\"#html5\").setCC(this.cc);\n  }\n\n  /**\n   * toggles looping\n   *\n   * @param {boolean} Toggle looping on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleLoop(mode) {\n    if (this.isYoutube) {\n    } else {\n      this.loop = mode === undefined ? !this.loop : mode;\n      this.media.setLoop(this.loop);\n    }\n  }\n\n  /**\n   * toggles mute\n   *\n   * @param {boolean} Toggle mute on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleMute(mode) {\n    this.muted = mode === undefined ? !this.muted : mode;\n    this.__volume = this.muted ? 0 : Math.max(this.volume, 10);\n    this.media.setMute(this.muted);\n  }\n\n  /**\n   * toggles sticky attribute\n   *\n   * @param {boolean} Toggle sticky mode on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleSticky(mode) {\n    mode = mode === undefined ? !this.sticky : mode;\n    this.sticky = mode;\n    this.dispatchEvent(new CustomEvent(\"player-sticky\", { detail: this }));\n  }\n\n  /**\n   * toggles transcript\n   *\n   * @param {boolean} Toggle transcript on? `true` is on, `false` is off, and `null` toggles based on current state.\n   */\n  toggleTranscript(mode) {\n    mode = mode === undefined ? this.hideTranscript : mode;\n    this.hideTranscript = !mode;\n    if (\n      this.shadowRoot.querySelector(\"#transcript\") !== undefined &&\n      this.shadowRoot.querySelector(\"#transcript\") !== null\n    ) {\n      this.dispatchEvent(\n        new CustomEvent(\"transcript-toggle\", { detail: this })\n      );\n    }\n  }\n\n  /**\n   * dynamically adds source and track data\n   * from the sources and tracks properties\n   * (needed for media-player)\n   */\n  _appendToPlayer(data, type) {\n    if (data !== undefined && data !== null && data !== []) {\n      let root = this,\n        arr = Array.isArray(data) ? data : JSON.parse(data);\n      for (let i = 0; i < arr.length; i++) {\n        let el = document.createElement(type);\n        if (!this.__captionHref && type === \"source\")\n          this.__captionHref = arr[i].src;\n        for (let key in arr[i]) {\n          el.setAttribute(key, arr[i][key]);\n        }\n        root.shadowRoot.querySelector(\"#html5\").media.appendChild(el);\n      }\n    }\n  }\n\n  /**\n   * sets the height of the player\n   * @param {Number} the aspect ratio of the media or its poster thumbnail\n   */\n  _setPlayerHeight(aspect) {\n    let root = this;\n    root.shadowRoot.querySelector(\"#player\").style.height = \"unset\";\n    if (root.audioOnly && root.thumbnailSrc === null && root.height === null) {\n      root.shadowRoot.querySelector(\"#player\").style.height = \"60px\";\n    } else if (root.height === null) {\n      root.shadowRoot.querySelector(\"#player\").style.paddingTop =\n        100 / aspect + \"%\";\n      root.shadowRoot.querySelector(\"#innerplayer\").style.maxWidth =\n        \"calc(\" + aspect * 100 + \"vh - \" + aspect * 80 + \"px)\";\n    } else {\n      root.shadowRoot.querySelector(\"#outerplayer\").style.height = root.height;\n    }\n  }\n\n  /**\n   * gets media caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the title of the media\n   * @returns {string} the media caption\n   */\n  _getMediaCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media muted?\n   * @param {string} label if button mutes media\n   * @param {string} icon if button mutes media\n   * @param {string} label if button unmutes media\n   * @param {string} icon if button unmutes media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"mute\", \"icon\": \"av:volume-off\"}`\n   */\n  _getMuteUnmute(muted) {\n    return muted\n      ? {\n          label: this._getLocal(\"unmute\", \"label\"),\n          icon: this._getLocal(\"unmute\", \"icon\"),\n          action: \"unmute\"\n        }\n      : {\n          label: this._getLocal(\"mute\", \"label\"),\n          icon: this._getLocal(\"mute\", \"icon\"),\n          action: \"mute\"\n        };\n  }\n\n  /**\n   * gets print caption\n   *\n   * @param {boolean} Is the player set to audio-only?\n   * @param {string} the text that indicates this player is audio-only\n   * @param {string} the text that indicates this player is for video\n   * @param {string} the title of the media\n   * @returns {string} the media caption when the page is printed\n   */\n  _getPrintCaption(audioOnly, localization, mediaTitle) {\n    let audioLabel = this._getLocal(\"audio\", \"label\"),\n      videoLabel = this._getLocal(\"video\", \"label\"),\n      hasMediaTitle =\n        mediaTitle !== undefined && mediaTitle !== null && mediaTitle !== \"\";\n    if (audioOnly && hasMediaTitle) {\n      return mediaTitle + \" (\" + audioLabel + \")\";\n    } else if (audioOnly) {\n      return audioLabel;\n    } else if (hasMediaTitle) {\n      return mediaTitle + \" (\" + videoLabel + \")\";\n    } else {\n      return videoLabel;\n    }\n  }\n\n  /**\n   * get thumbanail css based on whether or not the video is playing\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _getThumbnailCSS(thumbnailSrc, isYoutube, audioOnly) {\n    return thumbnailSrc != null && (isYoutube || audioOnly)\n      ? \"background-image: url(\" + thumbnailSrc + \"); background-size: cover;\"\n      : null;\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _addSourcesAndTracks() {\n    let root = this,\n      counter = 0;\n    root.audioOnly = root.audioOnly || root.querySelector(\"audio\") !== null;\n    root.querySelectorAll(\"source,track\").forEach(node => {\n      if (!root.__captionHref && node.tagName === \"SOURCE\")\n        root.__captionHref = node.getAttribute(\"src\");\n      root.shadowRoot.querySelector(\"#html5\").media.appendChild(node);\n    });\n    root._appendToPlayer(root.tracks, \"track\");\n    root._appendToPlayer(root.sources, \"source\");\n    root.shadowRoot.querySelector(\"#html5\").media.textTracks.onaddtrack = e => {\n      root.hasCaptions = true;\n      root.hasTranscript = !root.standAlone;\n      root._getTrackData(e.track, counter++);\n    };\n  }\n\n  /**\n   * returns true if an attribute is set to a value\n   *\n   * @param {boolean} Is the media audio only?\n   * @param {string} optional: the source URL of the thumbnail image\n   * @returns {boolean} Should height of video/thumbnail area be set to 0?\n   */\n  _getAudioNoThumb(audioOnly, thumbnailSrc) {\n    return audioOnly && (thumbnailSrc === null || thumbnailSrc === undefined);\n  }\n\n  /**\n   * returns whether or not the fullscreen mode should be disabled\n   *\n   * @param {boolean} Is fullscreen mode set to disabled?\n   * @returns {boolean} Should fullscreen disabled?\n   */\n  _getFullscreenButton(disableFullscreen, audioNoThumb, screenfullLoaded) {\n    let root = this;\n    if (typeof screenfull === \"object\") root._onScreenfullLoaded.bind(root);\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) ||\n      disableFullscreen ||\n      audioNoThumb ||\n      !(typeof screenfull === \"object\")\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * set play/pause button\n   *\n   * @param {boolean} Is the media playing?\n   * @param {string} label if button pauses media\n   * @param {string} icon if button pauses media\n   * @param {string} label if button plays media\n   * @param {string} icon if button plays media\n   * @returns {object} an object containing the current state of the play/pause button, eg., `{\"label\": \"Pause\", \"icon\": \"av:pause\"}`\n   */\n  _getPlayPause(__playing) {\n    return __playing !== false\n      ? {\n          label: this._getLocal(\"pause\", \"label\"),\n          icon: this._getLocal(\"pause\", \"icon\"),\n          action: \"pause\"\n        }\n      : {\n          label: this._getLocal(\"play\", \"label\"),\n          icon: this._getLocal(\"play\", \"icon\"),\n          action: \"play\"\n        };\n  }\n  /**\n   * gets the link for sharing the video at a specific timecode\n   * @param {boolean} linkable is the video is linkable\n   */\n  _getShareLink(__elapsed) {\n    let url = window.location.href.split(/[#?]/)[0],\n      id = this.id ? `?id=${this.id}` : ``,\n      elapsed =\n        id !== \"\" && this.__elapsed && this.__elapsed !== 0\n          ? `&t=${this.__elapsed}`\n          : ``;\n    return `${url}${id}${elapsed}`;\n  }\n\n  /**\n   * loads a track's cue metadata\n   */\n  _getTrackData(track, id) {\n    let root = this,\n      selected = track.default === true || root.__selectedTrack === undefined,\n      loadCueData;\n    if (selected) root.selectTrack(id);\n    track.mode = selected && this.cc === true ? \"showing\" : \"hidden\";\n    loadCueData = setInterval(() => {\n      if (\n        track.cues !== undefined &&\n        track.cues !== null &&\n        track.cues.length > 0\n      ) {\n        clearInterval(loadCueData);\n        let cues = Object.keys(track.cues).map(key => {\n          return {\n            order: track.cues[key].id !== \"\" ? track.cues[key].id : key,\n            seek: track.cues[key].startTime,\n            seekEnd: track.cues[key].endTime,\n            start: root._getHHMMSS(\n              track.cues[key].startTime,\n              root.media.duration\n            ),\n            end: root._getHHMMSS(track.cues[key].endTime, root.media.duration),\n            text: track.cues[key].text\n          };\n        });\n\n        if (root.__tracks === undefined) root.__tracks = [];\n        root.push(\"__tracks\", {\n          value: id,\n          language: track.language,\n          text:\n            track.label !== undefined\n              ? track.label\n              : track.language !== undefined\n              ? track.language\n              : \"Track \" + id,\n          cues: cues\n        });\n        root.shadowRoot.querySelector(\"#controls\").setTracks(root.__tracks);\n        root.shadowRoot.querySelector(\"#transcript\").setTracks(root.__tracks);\n        root.push(\"__tracks\");\n        track.oncuechange = e => {\n          root.shadowRoot.querySelector(\"#transcript\").setActiveCues(\n            Object.keys(e.currentTarget.activeCues).map(key => {\n              return e.currentTarget.activeCues[key].id;\n            })\n          );\n        };\n      }\n    }, 1);\n  }\n  /**\n   * handles closing the share link toast\n   */\n  _handleCloseLink() {\n    this.shadowRoot.querySelector(\"#link\").close();\n    if (this.__resumePlaying) this.play();\n    this.__resumePlaying = false;\n  }\n\n  /**\n   * handles copying the share link\n   */\n  _handleCopyLink() {\n    let el = document.createElement(\"textarea\");\n    this.__resumePlaying = this.__playing;\n    this.pause;\n    el.value = this.shareLink;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    this.shadowRoot.querySelector(\"#link\").open();\n  }\n\n  /**\n   * handles the seek function when a transcript cue is activated\n   */\n  _handleTranscriptSeek(e) {\n    let root = this;\n    if (\n      !root.standAlone &&\n      root.shadowRoot.querySelector(\"#transcript\") !== undefined &&\n      root.shadowRoot.querySelector(\"#transcript\") !== null\n    ) {\n      root.__resumePlaying = root.__playing;\n      root.seek(e.detail);\n    }\n  }\n\n  /**\n   * handles media metadata when media is loaded\n   */\n  _handleMediaLoaded(e) {\n    let root = this,\n      anchor = window.AnchorBehaviors,\n      target = anchor.getTarget(this),\n      params = anchor.params,\n      aspect = root.media.aspectRatio;\n    root._setPlayerHeight(aspect);\n    root.shadowRoot.querySelector(\"#playbutton\").removeAttribute(\"disabled\");\n\n    // gets and converts video duration\n    root._setElapsedTime();\n    root._getTrackData(root.shadowRoot.querySelector(\"#html5\").media);\n\n    //if this video is part of the page's query string or anchor, seek the video\n    if (target === this) this.seek(this._getSeconds(params.t));\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _hidePlayButton(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      (isYoutube && thumbnailSrc === null) ||\n      !(__elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * handles transcript printing\n   */\n  _handlePrinting(e) {\n    let root = this;\n    root.dispatchEvent(\n      new CustomEvent(\"printing-transcript\", { detail: root })\n    );\n    root.shadowRoot.querySelector(\"#transcript\").print(root.mediaTitle);\n  }\n\n  /**\n   * sets search the simple-search element\n   */\n  _handleSearchAdded(e) {\n    this.search = e.detail;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStart(e) {\n    this.__resumePlaying = !this.paused;\n    this.pause();\n    this.__seeking = true;\n  }\n\n  /**\n   * handles duration slider dragging with a mouse\n   */\n  _handleSliderStop(e) {\n    this.seek(this.shadowRoot.querySelector(\"#slider\").immediateValue);\n    this.__seeking = false;\n    if (this.__resumePlaying) {\n      this.play();\n      this.__resumePlaying = null;\n    }\n  }\n\n  /**\n   * handles time updates\n   */\n  _handleTimeUpdate(e) {\n    let root = this;\n    //if play exceeds clip length, stop\n    if (root.isYoutube && root.media.duration !== root.media.getDuration()) {\n      root.__duration = root.media.duration = root.media.getDuration();\n      root.disableSeek = false;\n      root._addSourcesAndTracks();\n      if (\n        root.media.seekable &&\n        root.media.seekable.length > 0 &&\n        root.media.seekable.start(0) !== 0\n      ) {\n        root.shadowRoot.querySelector(\n          \"#slider\"\n        ).min = root.media.seekable.start(0);\n      }\n    }\n    if (\n      root.media.seekable !== undefined &&\n      root.media.seekable.length > 0 &&\n      root.media.seekable.end(0) <= root.media.getCurrentTime()\n    ) {\n      root.stop();\n      root.__playing = false;\n    }\n    //prevent slider and cue updates until finished seeking\n    root._updateCustomTracks();\n    root._setElapsedTime();\n  }\n\n  /**\n   * handles transcript scroll toggle\n   */\n  _handleTranscriptScrollToggle(e) {\n    this.disableScroll = !this.disableScroll;\n  }\n\n  /**\n   * Determines if video and transcript are in a flex layout\n   *\n   * @param {boolean} Is the player in stand-alone mode?\n   * @param {boolean} Is the transcript hidden?\n   * @param {boolean} Does the media no video or thumbnail image?\n   * @param {boolean} Is the layout stacked?\n   * @returns {boolean} Is the video in flex layout mode?\n   */\n  _isFlexLayout(standAlone, hideTranscript, audioNoThumb, stackedLayout) {\n    return !standAlone && !hideTranscript && !audioNoThumb && !stackedLayout;\n  }\n\n  /**\n   * determine which button was clicked and act accordingly\n   */\n  _onControlsChanged(e) {\n    let root = this,\n      action = e.detail.action !== undefined ? e.detail.action : e.detail.id;\n\n    if (action === \"backward\" || action === \"rewind\") {\n      root.rewind();\n    } else if (action === \"captions\") {\n      root.toggleCC();\n    } else if (action === \"transcript\" || action === \"transcript-toggle\") {\n      root.toggleTranscript();\n    } else if (e.detail.id === \"tracks\") {\n      if (e.detail.value === \"\") {\n        root.toggleCC(false);\n      } else {\n        root.toggleCC(true);\n        root.selectTrack(e.detail.value);\n      }\n    } else if (action === \"forward\") {\n      root.forward();\n    } else if (action === \"fullscreen\" && root.fullscreenButton) {\n      root.toggleTranscript(root.fullscreen);\n      screenfull.toggle(root.shadowRoot.querySelector(\"#outerplayer\"));\n    } else if (action === \"loop\") {\n      root.toggleLoop();\n    } else if (action === \"mute\" || action === \"unmute\") {\n      root.toggleMute();\n    } else if (action === \"pause\") {\n      root.pause();\n    } else if (action === \"play\") {\n      root.play();\n    } else if (action === \"restart\") {\n      root.seek(0);\n      root.play();\n    } else if (action === \"speed\") {\n      root.setPlaybackRate(e.detail.value);\n    } else if (action === \"volume\") {\n      root.setVolume(e.detail.value);\n    } else if (action === \"linkable\") {\n      root._handleCopyLink();\n    }\n  }\n\n  /**\n   * sets the element's screenfullLoaded variable to true once screenfull is loaded\n   * and adds an event listener for screenfull\n   */\n  _onScreenfullLoaded() {\n    let root = this;\n    root.screenfullLoaded = true;\n\n    // handles fullscreen\n    if (screenfull) {\n      screenfull.on(\"change\", () => {\n        if (screenfull.enabled) root.fullscreen = screenfull.isFullscreen;\n      });\n    }\n  }\n\n  /**\n   * sets duration, taking into consideration start and stop times\n   *\n   * @param {integer} seek time in seconds, optional\n   * @returns {string} status\n   */\n  _setElapsedTime() {\n    let elapsed =\n        this.__seeking === true\n          ? this.shadowRoot.querySelector(\"#slider\").immediateValue\n          : this.media.getCurrentTime() > 0\n          ? this.media.getCurrentTime()\n          : 0,\n      duration = this.media.duration > 0 ? this.media.duration : 0;\n    this.__elapsed = elapsed;\n    this.__duration = duration;\n    if (this.media.seekable !== undefined && this.media.seekable.length > 0) {\n      if (this.media.seekable.start(0) !== undefined)\n        elapsed -= this.media.seekable.start(0);\n      if (this.media.seekable.end(0) !== undefined)\n        duration =\n          this.media.seekable.end(0) -\n          (this.media.seekable.start(0) !== undefined\n            ? this.media.seekable.start(0)\n            : 0);\n    }\n    this.__status =\n      this._getHHMMSS(elapsed, duration) + \"/\" + this._getHHMMSS(duration);\n    this.shadowRoot.querySelector(\"#controls\").setStatus(this.__status);\n  }\n\n  /**\n   * Show custom CC (for audio and YouTube)?\n   *\n   * @param {boolean} Is the media from YouTube?\n   * @param {boolean} Is the media audio only?\n   * @param {boolean} Does the media have CC tracks?\n   * @param {boolean} Are the CC turned on?\n   * @returns {boolean} Should the player show custom CC?\n   */\n  _showCustomCaptions(isYoutube, audioOnly, hasCaptions, cc) {\n    return (isYoutube || audioOnly) && hasCaptions && cc;\n  }\n\n  /**\n   * determines if there\n   *\n   * @param {string} the url for the thumbnail image\n   * @returns {string} the string for the style attribute\n   */\n  _useYoutubeIframe(thumbnailSrc, isYoutube, __elapsed) {\n    return (\n      isYoutube &&\n      (thumbnailSrc === null || __elapsed === undefined || __elapsed === 0)\n    );\n  }\n\n  /**\n   * gets YouTube iframe\n   */\n  _youTubeRequest() {\n    window.A11yMediaYoutube.requestAvailability();\n    let root = this,\n      ytUtil = window.A11yMediaYoutube.instance;\n    root.disableSeek = true;\n    if (root.__playerAttached && root.__playerReady) {\n      let ytInit = () => {\n          // once metadata is ready on video set it on the media player\n          // initialize the YouTube player\n          root.media = ytUtil.initYoutubePlayer({\n            width: \"100%\",\n            height: \"100%\",\n            videoId: root.youtubeId\n          });\n          root.__status = root._getLocal(\"youTubeLoading\", \"label\");\n          root.shadowRoot.querySelector(\"#controls\").setStatus(root.__status);\n          // move the YouTube iframe to the media player's YouTube container\n          root.shadowRoot.querySelector(\"#youtube\").appendChild(root.media.a);\n          root.__ytAppended = true;\n          root._updateCustomTracks();\n        },\n        checkApi = e => {\n          if (ytUtil.apiReady) {\n            document.removeEventListener(\"youtube-api-ready\", checkApi);\n            if (!root.__ytAppended) {\n              ytInit();\n            }\n          }\n        };\n      if (ytUtil.apiReady) {\n        if (!root.__ytAppended) {\n          ytInit();\n        }\n      } else {\n        document.addEventListener(\"youtube-api-ready\", checkApi);\n      }\n    }\n  }\n\n  /**\n   * updates custom tracks for youTube\n   */\n  _updateCustomTracks() {\n    if ((this.isYoutube || this.audioOnly) && this.__tracks) {\n      let root = this,\n        track =\n          root.__tracks[\n            this.shadowRoot.querySelector(\"#transcript\").selectedTranscript\n          ],\n        active = [],\n        caption = \"\";\n      if (\n        track !== undefined &&\n        track !== null &&\n        track.cues !== undefined &&\n        track.cues !== null\n      ) {\n        for (let i = 0; i < track.cues.length; i++) {\n          if (\n            track.cues[i].seek < root.__elapsed &&\n            track.cues[i].seekEnd > root.__elapsed\n          ) {\n            active.push(track.cues[i].order);\n            caption = caption === \"\" ? track.cues[i].text : caption;\n          }\n        }\n        root.shadowRoot.querySelector(\"#customcctxt\").innerText = caption;\n        root.shadowRoot.querySelector(\"#transcript\").setActiveCues(active);\n      }\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"es-bridge-screenfullLib-loaded\",\n      this._onScreenfullLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(A11yMediaPlayer.tag, A11yMediaPlayer);\nexport { A11yMediaPlayer };\n"],"names":["A11yMediaBehaviors","SimpleColorsPolymer","__elapsed","url","window","location","href","split","id","this","elapsed","attr","val","options","ResponsiveUtility","requestAvailability","dispatchEvent","CustomEvent","detail","undefined","element","attribute","relativeToParent","max","a","b","i","none","Math","floor","round","units","replace","length","parseInt","parseFloat","key","subkey","local","localization","localizationDefaults","e","shadowRoot","querySelector","download","mediaTitle","print","Object","assign","properties","audioOnly","name","type","Boolean","value","reflectToAttribute","autoplay","cc","disablePrintButton","disableSearch","disableScroll","disableSeek","hasTranscript","height","String","isYoutube","computed","lang","linkable","audio","label","autoScroll","icon","captions","off","forward","fullscreen","copyLink","closeLink","loading","loop","mute","nextResult","pause","play","prevResult","restart","rewind","search","seekSlider","settings","speed","transcript","skip","unmute","video","volume","youTubeLoading","youTubeTranscript","readOnly","manifest","media","muted","playbackRate","Number","playing","playPause","preload","selectedTrack","selectedTrackID","standAlone","status","target","tracks","Array","width","youtubeId","youTube","customElements","define","tag","A11yMediaStateManager","instance","document","createElement","body","appendChild","root","__playerLoader","players","push","addEventListener","PolymerElement","screenfullLoaded","stickyPlayer","__stickyManager","setStickyPlayer","__scrollChecker","_checkScroll","player","playeri","allowConcurrent","parent","_getParentNode","__playerTop","offsetTop","__playerUpperMiddle","offsetHeight","__playerLowerMiddle","toggleSticky","__parent","style","checkConcurrentPlayers","wintop","pageYOffset","winbottom","innerHeight","__playing","node","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","removeEventListener","A11yMediaButton","action","controls","toggle","disabled","tooltipPosition","__target","html","A11yMediaControls","compactControls","fixedHeight","fullscreenButton","nofity","hasCaptions","notify","hideTranscript","hideTranscriptButton","linkUrl","muteUnmute","noPrinting","noTranscriptToggle","responsiveSize","_addResponsiveUtility","sm","md","lg","xl","onfocus","classList","add","onblur","remove","innerText","set","slice","_testAttribute","__selectedTrack","control","close","A11yMediaHtml5","crossorigin","mediaLang","paused","seekable","start","stop","thumbnailSrc","duration","setVolume","setMute","setCC","setLoop","setPlaybackRate","aspectRatio","videoWidth","videoHeight","buffered","end","getCurrentTime","currentTime","index","textTracks","mode","seek","time","selectedTrackId","A11yMediaTranscriptCue","active","activeCues","cue","text","setAttribute","mediaId","enableSearch","_handleTap","includes","order","toString","A11yMediaTranscript","__ready","title","_getLocal","filename","track","data","encodeURIComponent","display","click","removeChild","cloneNode","css","h1","innerHTML","open","focus","cues","offset","getAttribute","scrollingTo","to","perTick","scrollTop","setTimeout","notifyPath","render","inner","getElementById","hidden","disableInteractive","selectedTranscript","hideTimestamps","tabIndex","role","A11yMediaTranscriptControls","A11yMediaYoutube","api","onYouTubeIframeAPIReady","event","apiReady","temp","div","vdata","videoId","vid","counter","iframe","YT","Player","events","onReady","param","hh","match","mm","ss","h","m","s","startSeconds","endSeconds","cueVideoById","playerVars","color","disablekb","enablejsapi","iv_load_policy","modestbranding","showinfo","rel","min","playVideo","getPlayerState","clearInterval","timeupdate","setInterval","pauseVideo","seekTo","seekupdate","abs","unMute","A11yMediaPlayer","basePath","_this","pathFromUrl","decodeURIComponent","ESGlobalBridge","load","_onScreenfullLoaded","bind","__playerAttached","substring","lastIndexOf","Date","now","_youTubeRequest","screenfull","__playerReady","__status","__slider","__volume","__resumePlaying","__duration","setStatus","maxWidth","_setPlayerHeight","_handleTimeUpdate","_addSourcesAndTracks","setMedia","__ytAppended","ytInit","amt","selectTrack","sticky","arr","isArray","JSON","parse","el","__captionHref","src","aspect","paddingTop","audioLabel","hasMediaTitle","videoLabel","querySelectorAll","forEach","tagName","_appendToPlayer","sources","onaddtrack","_getTrackData","disableFullscreen","audioNoThumb","test","navigator","userAgent","loadCueData","selected","keys","map","startTime","seekEnd","endTime","_getHHMMSS","__tracks","language","setTracks","oncuechange","setActiveCues","currentTarget","shareLink","select","execCommand","anchor","AnchorBehaviors","getTarget","params","removeAttribute","_setElapsedTime","_getSeconds","t","__seeking","immediateValue","getDuration","_updateCustomTracks","stackedLayout","toggleCC","toggleTranscript","toggleLoop","toggleMute","_handleCopyLink","on","enabled","isFullscreen","ytUtil","initYoutubePlayer","checkApi","caption"],"mappings":"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"}