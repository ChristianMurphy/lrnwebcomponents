{"version":3,"file":"json-editor.umd.js","sources":["json-editor.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-input/paper-textarea.js\";\n\n/**\n * `json-editor`\n * @customElement json-editor\n * `simple JSON blob data binding to a text area`\n *\n * @microcopy - language worth noting:\n *  -\n *\n\n * @polymer\n * @demo demo/index.html\n */\nclass JsonEditor extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  \n}\n\n:host([hidden]) {\n  display: none;\n}\n:host([error]) paper-textarea {\n  --iron-autogrow-textarea: {\n    background-color: #ffeeee;\n  };\n}\npaper-textarea {\n  --iron-autogrow-textarea: {\n    font-family: \"Lucida Console\", Monaco, monospace;\n    font-weight: 600;\n    white-space: pre;\n    line-height: 20px;\n    padding: 9.5px;\n    margin: 0 0 10px;\n    font-size: 13px;\n    color: #000000;\n    word-break: break-all;\n    word-wrap: break-word;\n    background-color: #f5f5f5;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    transition: 0.3s linear all;\n    -webkit-transition: 0.3s linear all;\n    -moz-transition: 0.3s linear all;\n    -ms-transition: 0.3s linear all;\n    -o-transition: 0.3s linear all;\n};\n}\n        </style>\n<paper-textarea \n  label=\"[[label]]\"\n  value=\"{{value}}\"\n  error-message=\"Invalid JSON!\"\n  readonly=\"[[disabled]]\"\n  invalid=\"[[error]]\"\n  max-rows=\"[[maxRows]]\"></paper-textarea>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * label for the text area\n   */\n  \"label\": {\n    \"name\": \"label\",\n    \"type\": String,\n    \"value\": \"JSON data\"\n  },\n  /**\n   * State of being valid JSON object\n   */\n  \"error\": {\n    \"name\": \"error\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * toggling disabled state of the editor\n   */\n  \"disabled\": {\n    \"name\": \"disabled\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * max rows in the textarea\n   */\n  \"maxRows\": {\n    \"name\": \"maxRows\",\n    \"type\": Number,\n    \"value\": 0,\n    \"reflectToAttribute\": true\n  },\n  /**\n   * String based value of the editor, use this to set initial value\n   */\n  \"value\": {\n    \"name\": \"value\",\n    \"type\": String,\n    \"value\": \"\",\n    \"notify\": true,\n    \"reflectToAttribute\": false,\n    \"observer\": \"_valueChanged\"\n  },\n  /**\n   * format test to update value so it's pretty printed\n   */\n  \"formatTest\": {\n    \"name\": \"value\",\n    \"type\": String,\n    \"computed\": \"_computeFormattedValue(value)\"\n  },\n  /**\n   * The current data object\n   */\n  \"currentData\": {\n    \"name\": \"currentData\",\n    \"type\": Object,\n    \"notify\": true,\n    \"computed\": \"_computeCurrentData(value)\"\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"json-editor\";\n  }\n  // Observer value for changes\n  _valueChanged(newValue, oldValue) {\n    // try to evaluate this as json, otherwise return an error\n    try {\n      let v = JSON.parse(newValue);\n      if (v) {\n        this.error = false;\n      }\n    } catch (e) {\n      this.error = true;\n    }\n  }\n  _computeFormattedValue(value) {\n    try {\n      let formatted = JSON.stringify(JSON.parse(formatted), null, 2);\n      if (formatted !== value) {\n        this.value = formatted;\n      }\n    } catch (e) {}\n  }\n  /**\n   * Computed value based on parsing the value in question\n   */\n  _computeCurrentData(value) {\n    try {\n      return JSON.parse(value);\n    } catch (e) {}\n  }\n}\nwindow.customElements.define(JsonEditor.tag, JsonEditor);\nexport { JsonEditor };\n"],"names":["JsonEditor","PolymerElement","html","String","Boolean","Number","Object","newValue","oldValue","JSON","parse","error","e","value","formatted","stringify","window","customElements","define","tag"],"mappings":"o/EAmBMA,gaAAmBC,+DAIdC,6ZAwDA,MACC,aACAC,aACC,mBAKF,MACC,aACAC,eACC,sBACa,YAKZ,MACF,gBACAA,eACC,sBACa,WAKb,MACD,eACAC,aACC,sBACa,SAKf,MACC,aACAF,aACC,WACC,sBACY,WACV,4BAKA,MACJ,aACAA,gBACI,6CAKC,MACL,mBACAG,eACE,WACE,kEAWL,yDAGKC,EAAUC,OAGZC,KAAKC,MAAMH,UAEZI,OAAQ,GAEf,MAAOC,QACFD,OAAQ,kDAGME,WAEfC,EAAYL,KAAKM,UAAUN,KAAKC,MAAMI,GAAY,KAAM,GACxDA,IAAcD,SACXA,MAAQC,GAEf,MAAOF,iDAKSC,cAETJ,KAAKC,MAAMG,GAClB,MAAOD,0CAGbI,OAAOC,eAAeC,OAAOlB,EAAWmB,IAAKnB"}