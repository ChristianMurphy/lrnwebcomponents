{"version":3,"file":"dynamic-import-registry.umd.js","sources":["dynamic-import-registry.umd.js"],"sourcesContent":["/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n// register globally so we can make sure there is only one\nwindow.DynamicImportRegistry = window.DynamicImportRegistry || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same modal\nwindow.DynamicImportRegistry.requestAvailability = () => {\n  if (!window.DynamicImportRegistry.instance) {\n    window.DynamicImportRegistry.instance = document.createElement(\n      \"dynamic-import-registry\"\n    );\n    document.body.appendChild(window.DynamicImportRegistry.instance);\n  }\n  return window.DynamicImportRegistry.instance;\n};\n/**\n * `dynamic-import-registry`\n * `maintain manage the registration and usage of dynamic imports`\n * @demo demo/index.html\n * @element dynamic-import-registry\n */\nclass DynamicImportRegistry extends HTMLElement {\n  static get tag() {\n    return \"dynamic-import-registry\";\n  }\n  constructor(delayRender = false) {\n    super();\n    // object for tracking what the registry is\n    this.list = {};\n    this.__loaded = {};\n    this.basePath =\n      this.pathFromUrl(decodeURIComponent(import.meta.url)) + \"../../\";\n  }\n  connectedCallback() {\n    window.addEventListener(\n      \"dynamic-import-registry--register\",\n      this.registerDefinitionEvent.bind(this)\n    );\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"dynamic-import-registry--register\",\n      this.registerDefinitionEvent.bind(this)\n    );\n  }\n  register(item) {\n    // validate with basic test\n    if (item.tag && item.path) {\n      if (!this.list[item.tag]) {\n        this.list[item.tag] = item.path;\n      }\n    } else {\n      console.warn(\n        \"DynamicImportRegistry: registration requires tag and path be set\"\n      );\n    }\n  }\n  /**\n   * This doesn't actually do the import, it just holds the definition\n   */\n  registerDefinitionEvent(e) {\n    // validate with basic test\n    if (e.detail.tag && e.detail.path) {\n      this.register(e.detail);\n    }\n  }\n  /**\n   * This implements the definition with checks to ensure it need not run\n   */\n  async loadDefinition(tag) {\n    // must be lowercase\n    tag = tag.toLowerCase();\n    // only import if we already had it\n    if (\n      !window.customElements.get(tag) &&\n      this.list[tag] &&\n      !this.__loaded[tag]\n    ) {\n      // let's assume it's there cause we got here\n      // this can help things on polyfill environments\n      this.__loaded[tag] = true;\n      try {\n        await import(`${this.basePath}${this.list[tag]}`).then(module => {\n          // dispatch custom event in case anyone cares\n          this.dispatchEvent(\n            new CustomEvent(\"dynamic-import-registry-loaded\", {\n              detail: {\n                tag: tag,\n                path: this.list[tag],\n                module: module\n              }\n            })\n          );\n        });\n      } catch (e) {\n        console.warn(e);\n        // fire on error too\n        this.dispatchEvent(\n          new CustomEvent(\"dynamic-import-registry-failure\", {\n            detail: {\n              tag: tag,\n              path: this.list[tag],\n              module: null\n            }\n          })\n        );\n      }\n    }\n  }\n  // simple path from a url modifier\n  pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n}\nwindow.customElements.define(DynamicImportRegistry.tag, DynamicImportRegistry);\nexport { DynamicImportRegistry };\n"],"names":["window","DynamicImportRegistry","requestAvailability","instance","document","createElement","body","appendChild","list","__loaded","basePath","_this","pathFromUrl","decodeURIComponent","HTMLElement","addEventListener","this","registerDefinitionEvent","bind","removeEventListener","item","tag","path","console","warn","e","detail","register","toLowerCase","customElements","get","import","then","module","_this2","dispatchEvent","CustomEvent","url","substring","lastIndexOf","define"],"mappings":"22DAKAA,OAAOC,sBAAwBD,OAAOC,uBAAyB,GAI/DD,OAAOC,sBAAsBC,oBAAsB,kBAC5CF,OAAOC,sBAAsBE,WAChCH,OAAOC,sBAAsBE,SAAWC,SAASC,cAC/C,2BAEFD,SAASE,KAAKC,YAAYP,OAAOC,sBAAsBE,WAElDH,OAAOC,sBAAsBE,cAQhCF,yKAOGO,KAAO,KACPC,SAAW,KACXC,SACHC,EAAKC,YAAYC,uNAAuC,yPAV1BC,wDAEzB,6EAWPd,OAAOe,iBACL,oCACAC,KAAKC,wBAAwBC,KAAKF,sDAIpChB,OAAOmB,oBACL,oCACAH,KAAKC,wBAAwBC,KAAKF,wCAG7BI,GAEHA,EAAKC,KAAOD,EAAKE,KACdN,KAAKR,KAAKY,EAAKC,YACbb,KAAKY,EAAKC,KAAOD,EAAKE,MAG7BC,QAAQC,KACN,oHAOkBC,GAElBA,EAAEC,OAAOL,KAAOI,EAAEC,OAAOJ,WACtBK,SAASF,EAAEC,+FAMCL,gGAEnBA,EAAMA,EAAIO,cAGP5B,OAAO6B,eAAeC,IAAIT,KAC3BL,KAAKR,KAAKa,IACTL,KAAKP,SAASY,gCAIVZ,SAASY,IAAO,oBAEbU,iBAAUf,KAAKN,iBAAWM,KAAKR,KAAKa,KAAQW,KAAK,SAAAC,GAErDC,EAAKC,cACH,IAAIC,YAAY,iCAAkC,CAChDV,OAAQ,CACNL,IAAKA,EACLC,KAAMY,EAAK1B,KAAKa,GAChBY,OAAQA,+DAMhBV,QAAQC,gBAEHW,cACH,IAAIC,YAAY,kCAAmC,CACjDV,OAAQ,CACNL,IAAKA,EACLC,KAAMN,KAAKR,KAAKa,GAChBY,OAAQ,qUAQRI,UACHA,EAAIC,UAAU,EAAGD,EAAIE,YAAY,KAAO,YAGnDvC,OAAO6B,eAAeW,OAAOvC,EAAsBoB,IAAKpB"}