{"version":3,"file":"app-editor-hax.umd.js","sources":["app-editor-hax.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-store.js\";\nimport \"@lrnwebcomponents/hax-body/hax-body.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-autoloader.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-manager.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-panel.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-app-picker.js\";\nimport \"@lrnwebcomponents/hax-body/lib/hax-export-dialog.js\";\n/**\n`app-editor-hax`\nstand alone editor intended for use in a larger application\nas the editor. It is like cms-hax in that it's prepackaged\nthe way HAX will be integrated but the connotation is that there\nis no edit state and that it is always editing effectively.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - app - an application desktop or mobile that's deployed this\n - editor - in this case HAX is the editor / authoring tool\n - hax - just to make sure we're aware that it's actually HAX based\n\n*/\nlet AppEditorHax = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        font-size: 16px;\n        box-sizing: content-box;\n      }\n    </style>\n    <hax-store\n      skip-exit-trap=\"\"\n      hidden=\"\"\n      app-store=\"[[appStoreConnection]]\"\n    ></hax-store>\n    <hax-autoloader hidden=\"\"></hax-autoloader>\n    <hax-panel\n      id=\"panel\"\n      hide-panel-ops=\"\"\n      hide-export-button=\"\"\n      hide-preferences-button\\$=\"[[hidePreferencesButton]]\"\n      align=\"right\"\n    ></hax-panel>\n    <hax-body id=\"body\"></hax-body>\n    <hax-manager></hax-manager>\n    <hax-export-dialog></hax-export-dialog>\n    <hax-app-picker></hax-app-picker>\n  `,\n\n  is: \"app-editor-hax\",\n\n  properties: {\n    /**\n     * Establish the app store connection to pull in our JSON\n     */\n    appStoreConnection: {\n      type: Object\n    },\n    /**\n     * Ability to hide the preferences button\n     */\n    hidePreferencesButton: {\n      value: false,\n      type: Boolean\n    }\n  },\n\n  /**\n   * Basic save event to make targetting easier.\n   */\n  save: function() {\n    // convert the body area to content\n    let content = window.HaxStore.instance.activeHaxBody.haxToContent();\n    // fire event so apps can react correctly\n    this.fire(\"app-editor-hax-save\", content);\n  },\n\n  /**\n   * Basic import capability abstraction of hax body's import capabilities\n   */\n  import: function(html) {\n    // import the HTML blob to get going\n    window.HaxStore.instance.activeHaxBody.importContent(html);\n    // fire event just letting things know this happened\n    this.fire(\"app-editor-hax-import\", true);\n  }\n});\nexport { AppEditorHax };\n"],"names":["AppEditorHax","Polymer","_template","html","is","properties","appStoreConnection","type","Object","hidePreferencesButton","value","Boolean","save","content","window","HaxStore","instance","activeHaxBody","haxToContent","fire","importContent"],"mappings":"88EAuBIA,EAAeC,UAAQ,CACzBC,UAAWC,YA2BXC,GAAI,iBAEJC,WAAY,CAIVC,mBAAoB,CAClBC,KAAMC,QAKRC,sBAAuB,CACrBC,OAAO,EACPH,KAAMI,UAOVC,KAAM,eAEAC,EAAUC,OAAOC,SAASC,SAASC,cAAcC,oBAEhDC,KAAK,sBAAuBN,WAM3B,SAASV,GAEfW,OAAOC,SAASC,SAASC,cAAcG,cAAcjB,QAEhDgB,KAAK,yBAAyB"}