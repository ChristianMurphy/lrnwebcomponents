{
  "version": 1,
  "tags": [
    {
      "name": "lrnsys-button",
      "description": "`lrnsys-button`\n\nAttributes:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `show-href` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `button-class` {`string`} - Button class.\n\n  * `icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `inner-class` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `text-color` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperties:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `showHref` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hoverClass` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `buttonClass` {`string`} - Button class.\n\n  * `iconClass` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `innerClass` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `textColor` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focusState` {`boolean`} - Tracks if focus state is applied\n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "href",
          "description": "`href` {`string`} - Standard href pass down\n\nProperty: href\n\nDefault: #"
        },
        {
          "name": "show-href",
          "description": "`show-href` {`string`} - \n\nProperty: showHref\n\nDefault: false"
        },
        {
          "name": "raised",
          "description": "`raised` {`boolean`} - If the button should be visually lifted off the UI.\n\nProperty: raised",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - Label to place in the text area\n\nProperty: label\n\nDefault: "
        },
        {
          "name": "target",
          "description": "`target` {`string`} - Support for target to open in new windows.\n\nProperty: target\n\nDefault: "
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - iron-icon to use (with iconset if needed)\n\nProperty: icon\n\nDefault: false"
        },
        {
          "name": "hover-class",
          "description": "`hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\nProperty: hoverClass"
        },
        {
          "name": "button-class",
          "description": "`button-class` {`string`} - Button class.\n\nProperty: buttonClass"
        },
        {
          "name": "icon-class",
          "description": "`icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\nProperty: iconClass"
        },
        {
          "name": "inner-class",
          "description": "`inner-class` {`string`} - Inner container classes.\n\nProperty: innerClass"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "text-color",
          "description": "`text-color` {`string`} - materializeCSS color class for text\n\nProperty: textColor"
        },
        {
          "name": "prefetch",
          "description": "`prefetch` {`boolean`} - Allow for prefetch data automatically\n\nProperty: prefetch",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "`alt` {`string`} - Alt via tooltip.\n\nProperty: alt"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Disabled state.\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "focus-state",
          "description": "`focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperty: focusState\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "lrnsys-button",
      "description": "`lrnsys-button`\n\nAttributes:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `show-href` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `button-class` {`string`} - Button class.\n\n  * `icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `inner-class` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `text-color` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperties:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `showHref` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hoverClass` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `buttonClass` {`string`} - Button class.\n\n  * `iconClass` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `innerClass` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `textColor` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focusState` {`boolean`} - Tracks if focus state is applied\n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "href",
          "description": "`href` {`string`} - Standard href pass down\n\nProperty: href\n\nDefault: #"
        },
        {
          "name": "show-href",
          "description": "`show-href` {`string`} - \n\nProperty: showHref\n\nDefault: false"
        },
        {
          "name": "raised",
          "description": "`raised` {`boolean`} - If the button should be visually lifted off the UI.\n\nProperty: raised",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - Label to place in the text area\n\nProperty: label\n\nDefault: "
        },
        {
          "name": "target",
          "description": "`target` {`string`} - Support for target to open in new windows.\n\nProperty: target\n\nDefault: "
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - iron-icon to use (with iconset if needed)\n\nProperty: icon\n\nDefault: false"
        },
        {
          "name": "hover-class",
          "description": "`hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\nProperty: hoverClass"
        },
        {
          "name": "button-class",
          "description": "`button-class` {`string`} - Button class.\n\nProperty: buttonClass"
        },
        {
          "name": "icon-class",
          "description": "`icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\nProperty: iconClass"
        },
        {
          "name": "inner-class",
          "description": "`inner-class` {`string`} - Inner container classes.\n\nProperty: innerClass"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "text-color",
          "description": "`text-color` {`string`} - materializeCSS color class for text\n\nProperty: textColor"
        },
        {
          "name": "prefetch",
          "description": "`prefetch` {`boolean`} - Allow for prefetch data automatically\n\nProperty: prefetch",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "`alt` {`string`} - Alt via tooltip.\n\nProperty: alt"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Disabled state.\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "focus-state",
          "description": "`focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperty: focusState\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    },
    {
      "name": "tag",
      "attributes": []
    },
    {
      "name": "lrnsys-button",
      "description": "`lrnsys-button`\n\nAttributes:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `show-href` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `button-class` {`string`} - Button class.\n\n  * `icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `inner-class` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `text-color` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperties:\n\n  * `href` {`string`} - Standard href pass down\n\n  * `showHref` {`string`} - \n\n  * `raised` {`boolean`} - If the button should be visually lifted off the UI.\n\n  * `label` {`string`} - Label to place in the text area\n\n  * `target` {`string`} - Support for target to open in new windows.\n\n  * `icon` {`string`} - iron-icon to use (with iconset if needed)\n\n  * `hoverClass` {`string`} - Classes to add / subtract based on the item being hovered.\n\n  * `buttonClass` {`string`} - Button class.\n\n  * `iconClass` {`string`} - Icon class in the event you want it to look different from the text.\n\n  * `innerClass` {`string`} - Inner container classes.\n\n  * `color` {`string`} - Color class work to apply\n\n  * `textColor` {`string`} - materializeCSS color class for text\n\n  * `prefetch` {`boolean`} - Allow for prefetch data automatically\n\n  * `alt` {`string`} - Alt via tooltip.\n\n  * `disabled` {`boolean`} - Disabled state.\n\n  * `focusState` {`boolean`} - Tracks if focus state is applied\n\n  * `_template` {`HTMLTemplateElement | null`} - \n\n  * `_importPath` {`string`} - \n\n  * `rootPath` {`string`} - \n\n  * `importPath` {`string`} - \n\n  * `root` {`HTMLElement | ShadowRoot | StampedTemplate | null`} - \n\n  * `$` - \n\n  * `PROPERTY_EFFECT_TYPES` - ",
      "attributes": [
        {
          "name": "href",
          "description": "`href` {`string`} - Standard href pass down\n\nProperty: href\n\nDefault: #"
        },
        {
          "name": "show-href",
          "description": "`show-href` {`string`} - \n\nProperty: showHref\n\nDefault: false"
        },
        {
          "name": "raised",
          "description": "`raised` {`boolean`} - If the button should be visually lifted off the UI.\n\nProperty: raised",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - Label to place in the text area\n\nProperty: label\n\nDefault: "
        },
        {
          "name": "target",
          "description": "`target` {`string`} - Support for target to open in new windows.\n\nProperty: target\n\nDefault: "
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - iron-icon to use (with iconset if needed)\n\nProperty: icon\n\nDefault: false"
        },
        {
          "name": "hover-class",
          "description": "`hover-class` {`string`} - Classes to add / subtract based on the item being hovered.\n\nProperty: hoverClass"
        },
        {
          "name": "button-class",
          "description": "`button-class` {`string`} - Button class.\n\nProperty: buttonClass"
        },
        {
          "name": "icon-class",
          "description": "`icon-class` {`string`} - Icon class in the event you want it to look different from the text.\n\nProperty: iconClass"
        },
        {
          "name": "inner-class",
          "description": "`inner-class` {`string`} - Inner container classes.\n\nProperty: innerClass"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "text-color",
          "description": "`text-color` {`string`} - materializeCSS color class for text\n\nProperty: textColor"
        },
        {
          "name": "prefetch",
          "description": "`prefetch` {`boolean`} - Allow for prefetch data automatically\n\nProperty: prefetch",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "`alt` {`string`} - Alt via tooltip.\n\nProperty: alt"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Disabled state.\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "focus-state",
          "description": "`focus-state` {`boolean`} - Tracks if focus state is applied\n\nProperty: focusState\n\nDefault: false",
          "valueSet": "v"
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}
