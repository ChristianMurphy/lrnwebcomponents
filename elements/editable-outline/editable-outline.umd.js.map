{"version":3,"file":"editable-outline.umd.js","sources":["editable-outline.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/**\n * `editable-outline`\n * `a simple outline thats contenteditable in nature`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass EditableOutline extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>\n<div>[[manifest]]</div>\n<div>[[editMode]]</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"manifest\": {\n    \"name\": \"manifest\",\n    \"type\": \"Object\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": \"_manifestChanged\"\n  },\n  \"editMode\": {\n    \"name\": \"editMode\",\n    \"type\": \"Boolean\",\n    \"value\": \"false\",\n    \"reflectToAttribute\": true,\n    \"observer\": \"_editModeChanged\"\n  }\n};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"editable-outline\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n    // Observer manifest for changes\n              _manifestChanged (newValue, oldValue) {\n                if (typeof newValue !== typeof undefined) {\n                  console.log(newValue);\n                }\n              }\n\n  // Observer editMode for changes\n              _editModeChanged (newValue, oldValue) {\n                if (typeof newValue !== typeof undefined) {\n                  console.log(newValue);\n                }\n              }\n\n\n}\nwindow.customElements.define(EditableOutline.tag, EditableOutline);\nexport { EditableOutline };\n"],"names":["EditableOutline","PolymerElement","html","newValue","oldValue","_typeof","console","log","window","customElements","define","tag"],"mappings":"ksDAiBMA,gaAAwBC,+DAInBC,qDAgBA,UACG,MACF,gBACA,eACC,uBACa,WACV,6BAEF,MACF,gBACA,gBACC,4BACa,WACV,uDAUL,mKAcqBC,EAAUC,iBACtBC,EAAOF,IACTG,QAAQC,IAAIJ,4CAKEA,EAAUC,iBACtBC,EAAOF,IACTG,QAAQC,IAAIJ,wCAM9BK,OAAOC,eAAeC,OAAOV,EAAgBW,IAAKX"}