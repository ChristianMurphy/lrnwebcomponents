{"version":3,"file":"editable-outline.umd.js","sources":["editable-outline.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { getRange } from \"@lrnwebcomponents/utils/utils.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@lrnwebcomponents/json-outline-schema/json-outline-schema.js\";\n\n/**\n * `editable-outline`\n * @customElement editable-outline\n * `a simple outline thats contenteditable in nature`\n *\n * @microcopy - language worth noting:\n *  -\n *\n\n * @polymer\n * @demo demo/index.html\n */\nclass EditableOutline extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>\n:host {\n  display: block;\n  font-family: 'Noto Serif', serif;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.button-wrapper {\n  line-height: 36px;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0px;\n  background-color: white;\n  display: block;\n  justify-content: space-evenly;\n  @apply --editable-outline-button-wrapper;\n}\n@media (max-width: 1000px) {\n  .button-wrapper {\n    @apply --editable-outline-button-wrapper-mobile;\n  }\n  button span {\n    opacity: 0;\n    visibility: hidden;\n    position: absolute;\n    left: -9999px;\n  }\n}\nbutton {\n  height: 32px;\n  font-size: 10px;\n  margin: 0;\n  padding: 0 8px;\n}\n\nbutton span {\n  padding-left: 4px;\n  pointer-events: none;\n}\n\n#outline {\n  margin: 0;\n}\nul {\n  font-size: 16px;\n  line-height: 32px;\n  padding-left: 32px;\n  visibility: visible;\n  opacity: 1;\n  overflow: hidden;\n  height: auto;\n  transition: .2s ease-in-out all;\n  @apply --editable-outline-button-list;\n}\nli {\n  font-size: 16px;\n  line-height: 32px;\n  padding: 4px;\n  transition: .2s linear all;\n  @apply --editable-outline-button-list-item;\n}\nul:hover {\n  outline: 1px solid #EEEEEE;\n}\nli.collapsed-title {\n  background-color: #dddddd;\n}\nli.collapsed-title:after {\n  content:\"    ( Double-click to expand )\";\n}\nli:after {\n  transition: .4s ease-in-out all;\n  opacity: 0;\n  font-size: 11px;\n  visibility: hidden;\n}\nli.collapsed-title:hover:after {\n  font-style: italic;\n  opacity: 1;\n  visibility: visible;\n}\nul.collapsed-content {\n  visibility: hidden;\n  opacity: 0;\n  height: 0;\n}\nli:focus,\nli:active,\nli:hover {\n  background-color: #EEEEEE;\n  outline: 1px solid #CCCCCC;\n  @apply --editable-outline-button-list-item-active;\n}\n\niron-icon {\n  pointer-events: none;\n}\n        </style>\n<iron-a11y-keys target=\"[[__outlineNode]]\" keys=\"shift+tab\" on-keys-pressed=\"_tabBackKeyPressed\"\n  stop-keyboard-event-propagation></iron-a11y-keys>\n<iron-a11y-keys target=\"[[__outlineNode]]\" keys=\"tab\" on-keys-pressed=\"_tabKeyPressed\"\n  stop-keyboard-event-propagation></iron-a11y-keys>\n<iron-a11y-keys target=\"[[__outlineNode]]\" keys=\"enter\" on-keys-pressed=\"_enterPressed\"\n  stop-keyboard-event-propagation></iron-a11y-keys>\n<iron-a11y-keys target=\"[[__outlineNode]]\" keys=\"up\" on-keys-pressed=\"_upPressed\"\n  stop-keyboard-event-propagation></iron-a11y-keys>\n<iron-a11y-keys target=\"[[__outlineNode]]\" keys=\"down\" on-keys-pressed=\"_downPressed\"\n  stop-keyboard-event-propagation></iron-a11y-keys>\n<div class=\"button-wrapper\">\n<button on-click=\"buttonEvents\" id=\"add\" title=\"Add a new node\">\n  <iron-icon icon=\"icons:add\"></iron-icon><span>Add</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"collapse\" title=\"Toggle active node collapsed status\">\n  <iron-icon icon=\"icons:swap-vert\"></iron-icon><span>Toggle active</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"collapseall\" title=\"Collapse all nodes\">\n  <iron-icon icon=\"icons:swap-vert\"></iron-icon><span>Collapse all</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"expandall\" title=\"Expand all nodes\">\n  <iron-icon icon=\"icons:swap-vert\"></iron-icon><span>Expand all</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"down\" title=\"Move active node down\">\n  <iron-icon icon=\"icons:arrow-downward\"></iron-icon><span>Move down</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"up\" title=\"Move active node up\">\n  <iron-icon icon=\"icons:arrow-upward\"></iron-icon><span>Move up</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"outdent\" title=\"Outdent active node\">\n  <iron-icon icon=\"editor:format-indent-decrease\"></iron-icon><span>Outdent</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"indent\" title=\"Indent active node\">\n  <iron-icon icon=\"editor:format-indent-increase\"></iron-icon><span>Indent</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"duplicate\" title=\"Duplicate active node tree\">\n  <iron-icon icon=\"icons:content-copy\"></iron-icon><span>Duplicate</span>\n</button>\n<button on-click=\"buttonEvents\" id=\"delete\" title=\"Delete active node\">\n  <iron-icon icon=\"icons:delete\"></iron-icon><span>Delete</span>\n</button>\n</div>\n<ul id=\"outline\"></ul>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * A items list of JSON Outline Schema Items\n   */\n  \"items\": {\n    \"name\": \"items\",\n    \"type\": Array,\n    \"value\": [],\n    \"notify\": true\n  },\n  /**\n   * Edit mode\n   */\n  \"editMode\": {\n    \"name\": \"editMode\",\n    \"type\": Boolean,\n    \"notify\": true,\n    \"observer\": \"_editModeChanged\"\n  },\n  /**\n   * Outline node for keyboard key binding\n   */\n  \"__outlineNode\": {\n    \"name\": \"__outlineNode\",\n    \"type\": Object\n  }\n}\n;\n  }\n  constructor() {\n    super();\n    this.jos = window.JSONOutlineSchema.requestAvailability();\n    this.addEventListener(\"dblclick\", this._collapseClickHandler.bind(this));\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"editable-outline\";\n  }\n  /**\n   * Collapse button callback\n   */\n  _collapse(e) {\n    let node = this.getSelectionNode();\n    if (\n      node &&\n      node.tagName === \"LI\" &&\n      node.nextElementSibling &&\n      node.nextElementSibling.tagName === \"UL\"\n    ) {\n      node.classList.toggle(\"collapsed-title\");\n      node.nextElementSibling.classList.toggle(\"collapsed-content\");\n    }\n  }\n  /**\n   * Expand all items\n   */\n  _expandall(e) {\n    this.shadowRoot.querySelectorAll(\"li\").forEach(el => {\n      el.classList.remove(\"collapsed-title\");\n    });\n    this.shadowRoot.querySelectorAll(\"ul\").forEach(el => {\n      el.classList.remove(\"collapsed-content\");\n    });\n  }\n  /**\n   * Collapse all items\n   */\n  _collapseall(e) {\n    this.shadowRoot.querySelectorAll(\"li\").forEach(el => {\n      if (el.nextElementSibling && el.nextElementSibling.tagName === \"UL\") {\n        el.classList.add(\"collapsed-title\");\n        el.nextElementSibling.classList.add(\"collapsed-content\");\n      }\n    });\n  }\n  /**\n   * Click handler method needs to walk a little different then normal collapse\n   */\n  _collapseClickHandler(e) {\n    let el;\n    let i = 0;\n    let notFound = true;\n    while (notFound && e.path.length > i + 1) {\n      el = e.path[i];\n      if (\n        el.tagName === \"LI\" &&\n        el.nextElementSibling &&\n        el.nextElementSibling.tagName === \"UL\"\n      ) {\n        el.classList.toggle(\"collapsed-title\");\n        el.nextElementSibling.classList.toggle(\"collapsed-content\");\n        notFound = false;\n      }\n      i++;\n    }\n  }\n  /**\n   * delete active\n   */\n  _delete(e) {\n    let node = this.getSelectionNode();\n    if (node) {\n      const parent = node.parentNode;\n      node.remove();\n      if (parent.children.length === 0) {\n        parent.remove();\n      }\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__outlineNode = this.shadowRoot.querySelector(\"#outline\");\n    this._observer = new MutationObserver(this._observer.bind(this));\n    this._observer.observe(this.__outlineNode, {\n      childList: true,\n      subtree: true\n    });\n  }\n  /**\n   * Mutation observer callback\n   * @todo current issue if you copy and paste into the same node\n   */\n  _observer(record) {\n    let reference;\n    for (var index in record) {\n      let info = record[index];\n      // if we've got new nodes to react to that were not imported\n      if (info.addedNodes.length > 0) {\n        // special rules for an outdent event\n        for (let i in info.addedNodes) {\n          if (info.addedNodes[i].tagName) {\n            if (info.addedNodes[i].tagName === \"LI\") {\n              if (this.__blockScrub) {\n                info.addedNodes[i].setAttribute(\"contenteditable\", \"true\");\n              } else {\n                this.jos.scrubElementJOSData(info.addedNodes[i]);\n                info.addedNodes[i].setAttribute(\"contenteditable\", \"true\");\n              }\n            }\n            // we have an unknown hest of items, scrub em all if we are in scrub mode\n            else if (info.addedNodes[i].tagName === \"UL\") {\n              if (!this.__blockScrub) {\n                this.jos.scrubElementJOSData(info.addedNodes[i]);\n              }\n            }\n          }\n        }\n      }\n    }\n    setTimeout(() => {\n      this.__blockScrub = false;\n    }, 100);\n  }\n  /**\n   * Disconnected life cycle\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n\n  // Observer editMode for changes\n  _editModeChanged(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined) {\n    }\n  }\n  /**\n   * Button events internally\n   */\n  buttonEvents(e) {\n    switch (e.target.id) {\n      case \"add\":\n        this._add(e);\n        break;\n      case \"collapse\":\n        this._collapse(e);\n        break;\n      case \"collapseall\":\n        this._collapseall(e);\n        break;\n      case \"expandall\":\n        this._expandall(e);\n        break;\n      case \"indent\":\n        this._indent();\n        break;\n      case \"outdent\":\n        this._outdent();\n        break;\n      case \"up\":\n        this._move(\"up\");\n        break;\n      case \"down\":\n        this._move(\"down\");\n        break;\n      case \"duplicate\":\n        this._duplicate();\n        break;\n      case \"delete\":\n        this._delete();\n        break;\n    }\n  }\n  /**\n   * Duplicate whatever has selection\n   */\n  _duplicate() {\n    // get active item from where cursor is\n    try {\n      this.__blockScrub = false;\n      let activeItem = this.getSelectionNode();\n      if (activeItem && activeItem.tagName === \"LI\") {\n        // clone the item's hierarchy as well\n        if (\n          activeItem.nextElementSibling !== null &&\n          activeItem.nextElementSibling.tagName === \"UL\"\n        ) {\n          // copy the UL and all children and insert it after the UL it's duplicating\n          const clone2 = activeItem.nextElementSibling.cloneNode(true);\n          activeItem.parentNode.insertBefore(\n            clone2,\n            activeItem.nextElementSibling.nextElementSibling\n          );\n          // clone the LI, placing it before the UL we just made\n          const clone = activeItem.cloneNode(true);\n          activeItem.parentNode.insertBefore(\n            clone,\n            activeItem.nextElementSibling.nextElementSibling\n          );\n        } else {\n          const clone = activeItem.cloneNode(true);\n          // insert the clone AFTER the current selection\n          activeItem.parentNode.insertBefore(\n            clone,\n            activeItem.nextElementSibling\n          );\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**\n   * Move whatever has selection up or down\n   */\n  _move(direction) {\n    // get active item from where cursor is\n    try {\n      let activeItem = this.getSelectionNode();\n      let test = activeItem;\n      let valid = false;\n      if (activeItem == null) {\n        return false;\n      }\n      // ensure this operation is executed in scope\n      while (!valid && test.parentNode) {\n        if (test.id === \"outline\") {\n          valid = true;\n        }\n        test = test.parentNode;\n      }\n      // ensure from all that, we have something\n      if (valid && activeItem && activeItem.tagName === \"LI\") {\n        // move the things above us, below us\n        if (direction === \"up\") {\n          // ensure there's something above us\n          if (activeItem.previousElementSibling !== null) {\n            // see if we are moving us, or us and the hierarchy\n            if (\n              activeItem.nextElementSibling &&\n              activeItem.nextElementSibling.tagName === \"UL\"\n            ) {\n              // see if the thing we have to move above has it's own structure\n              if (activeItem.previousElementSibling.tagName === \"UL\") {\n                // ensure we don't lose our metadata\n                this.__blockScrub = true;\n                // insert the element currently above us, just before 2 places back; so behind our UL\n                activeItem.parentNode.insertBefore(\n                  activeItem.previousElementSibling,\n                  activeItem.nextElementSibling.nextElementSibling\n                );\n              }\n              this.__blockScrub = true;\n              // now insert the LI above us, 2 places back so it is in front of the UL\n              activeItem.parentNode.insertBefore(\n                activeItem.previousElementSibling,\n                activeItem.nextElementSibling.nextElementSibling\n              );\n              activeItem.focus();\n            } else {\n              // easier use case, we are moving ourselves only but above us is a UL\n              if (activeItem.previousElementSibling.tagName === \"UL\") {\n                this.__blockScrub = true;\n                // move the UL after us\n                activeItem.parentNode.insertBefore(\n                  activeItem.previousElementSibling,\n                  activeItem.nextElementSibling\n                );\n              }\n              this.__blockScrub = true;\n              // now move the LI after us\n              activeItem.parentNode.insertBefore(\n                activeItem.previousElementSibling,\n                activeItem.nextElementSibling\n              );\n              activeItem.focus();\n            }\n          }\n        } else if (direction === \"down\") {\n          // if nothing after us, we can't move\n          if (activeItem.nextElementSibling !== null) {\n            // account for having to hop over children\n            if (\n              activeItem.nextElementSibling &&\n              activeItem.nextElementSibling.tagName === \"UL\" &&\n              activeItem.nextElementSibling.nextElementSibling !== null\n            ) {\n              // an outline is just below us\n              if (\n                activeItem.nextElementSibling.nextElementSibling.tagName ===\n                  \"LI\" &&\n                activeItem.nextElementSibling.nextElementSibling\n                  .nextElementSibling !== null &&\n                activeItem.nextElementSibling.nextElementSibling\n                  .nextElementSibling.tagName === \"UL\"\n              ) {\n                this.__blockScrub = true;\n                // move the thing 2 down to just before us; so the UL\n                activeItem.parentNode.insertBefore(\n                  activeItem.nextElementSibling.nextElementSibling,\n                  activeItem\n                );\n              }\n              this.__blockScrub = true;\n              // now move the LI that is 2 below us just above us\n              activeItem.parentNode.insertBefore(\n                activeItem.nextElementSibling.nextElementSibling,\n                activeItem\n              );\n              activeItem.focus();\n            } else if (activeItem.nextElementSibling.tagName === \"LI\") {\n              // just moving 1 tag, see if we need to move 2 things about us or 1\n              if (\n                activeItem.nextElementSibling.nextElementSibling !== null &&\n                activeItem.nextElementSibling.nextElementSibling.tagName ===\n                  \"UL\"\n              ) {\n                this.__blockScrub = true;\n                activeItem.parentNode.insertBefore(\n                  activeItem.nextElementSibling,\n                  activeItem\n                );\n              }\n              this.__blockScrub = true;\n              // work on the LI\n              activeItem.parentNode.insertBefore(\n                activeItem.nextElementSibling,\n                activeItem\n              );\n              activeItem.focus();\n            }\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**\n   * Take the current manifest and import it into an HTML outline\n   */\n  importJsonOutlineSchemaItems() {\n    this.__blockScrub = true;\n    // wipe out the outline\n    while (this.__outlineNode.firstChild !== null) {\n      this.__outlineNode.removeChild(this.__outlineNode.firstChild);\n    }\n    if (this.items.length === 0) {\n      // get from JOS items if we have none currently\n      this.set(\"items\", this.jos.items);\n    }\n    let outline = this.jos.itemsToNodes(this.items);\n    // rebuild the outline w/ children we just found\n    while (outline.firstChild !== null) {\n      this.__blockScrub = true;\n      this.__outlineNode.appendChild(outline.firstChild);\n    }\n    this.shadowRoot.querySelectorAll(\"li\").forEach(el => {\n      el.setAttribute(\"contenteditable\", \"true\");\n    });\n    return outline;\n  }\n  /**\n   * Take what's currently in the area and get JSON Outline Schema; optionally save\n   */\n  exportJsonOutlineSchemaItems(save = false) {\n    return this.jos.nodesToItems(this.__outlineNode, save);\n  }\n  _upPressed(e) {\n    let node = this.getSelectionNode();\n    if (node && node.previousSibling && node.previousSibling.tagName === \"LI\") {\n      node.previousSibling.focus();\n    } else if (\n      node &&\n      node.previousSibling &&\n      node.previousSibling.tagName === \"UL\" &&\n      node.previousSibling.firstChild &&\n      node.previousSibling.firstChild.tagName === \"LI\"\n    ) {\n      node.previousSibling.firstChild.focus();\n    } else if (\n      node &&\n      node.previousSibling == null &&\n      node.parentNode.tagName === \"UL\" &&\n      node.parentNode.previousSibling &&\n      node.parentNode.previousSibling.tagName === \"LI\"\n    ) {\n      node.parentNode.previousSibling.focus();\n    }\n  }\n  _downPressed(e) {\n    let node = this.getSelectionNode();\n    if (node && node.nextSibling && node.nextSibling.tagName === \"LI\") {\n      node.nextSibling.focus();\n    } else if (\n      node &&\n      node.nextSibling &&\n      node.nextSibling.tagName === \"UL\" &&\n      node.nextSibling.firstChild &&\n      node.nextSibling.firstChild.tagName === \"LI\"\n    ) {\n      node.nextSibling.firstChild.focus();\n    } else if (\n      node &&\n      node.nextSibling == null &&\n      node.parentNode.tagName === \"UL\" &&\n      node.parentNode.nextSibling &&\n      node.parentNode.nextSibling.tagName === \"LI\"\n    ) {\n      node.parentNode.nextSibling.focus();\n    }\n  }\n  /**\n   * Find the next thing to tab forward to.\n   */\n  _tabKeyPressed(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (e.detail.keyboardEvent) {\n      e.detail.keyboardEvent.preventDefault();\n      e.detail.keyboardEvent.stopPropagation();\n      e.detail.keyboardEvent.stopImmediatePropagation();\n    }\n    try {\n      this._indent();\n    } catch (e) {}\n  }\n  /**\n   * Move back through things when tab back pressed\n   */\n  _tabBackKeyPressed(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (e.detail.keyboardEvent) {\n      e.detail.keyboardEvent.preventDefault();\n      e.detail.keyboardEvent.stopPropagation();\n      e.detail.keyboardEvent.stopImmediatePropagation();\n    }\n    try {\n      this._outdent();\n    } catch (e) {}\n  }\n  _enterPressed(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    // prevent the contenteditable stuff\n    if (e.detail.keyboardEvent) {\n      e.detail.keyboardEvent.preventDefault();\n      e.detail.keyboardEvent.stopPropagation();\n      e.detail.keyboardEvent.stopImmediatePropagation();\n    }\n    this._add();\n  }\n  _add() {\n    let li = document.createElement(\"li\");\n    li.setAttribute(\"contenteditable\", \"true\");\n    let node = this.getSelectionNode();\n    if (\n      this.__outlineNode.querySelector(\"li\") == null ||\n      !node ||\n      (node.tagName && (node.tagName != \"UL\" && node.tagName != \"LI\"))\n    ) {\n      this.__outlineNode.appendChild(li);\n    } else {\n      if ((node.tagName == null || node.tagName != \"LI\") && node.parentNode) {\n        node = node.parentNode;\n      }\n      if (node.nextSibling == null) {\n        node.parentNode.appendChild(li);\n      } else {\n        node.parentNode.insertBefore(li, node.nextSibling);\n      }\n      try {\n        li.focus();\n      } catch (e) {\n        // prevent issue on polyfill browsers potentially\n      }\n    }\n  }\n  _outdent() {\n    this.__blockScrub = true;\n    try {\n      let node = this.getSelectionNode();\n      if (node == null) {\n        return false;\n      }\n      // need to hold this in case it's empty at the end\n      const parent = node.parentNode;\n      if (\n        node.parentNode &&\n        node.parentNode != this.__outlineNode &&\n        node.parentNode.nextSibling != null\n      ) {\n        node.parentNode.parentNode.insertBefore(\n          node,\n          node.parentNode.nextSibling\n        );\n        if (parent.children.length == 0) {\n          parent.remove();\n        }\n      } else if (\n        node.parentNode &&\n        node.parentNode != this.__outlineNode &&\n        node.parentNode.nextSibling == null\n      ) {\n        node.parentNode.parentNode.appendChild(node);\n        if (parent.children.length == 0) {\n          parent.remove();\n        }\n      }\n      node.focus();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  _indent() {\n    this.__blockScrub = true;\n    try {\n      let node = this.getSelectionNode();\n      if (node == null) {\n        return false;\n      }\n      // see if the previous tag is a LI, if so we can indent\n      if (\n        node.previousSibling != null &&\n        node.previousSibling.tagName === \"LI\"\n      ) {\n        let ul;\n        if (node.nextSibling && node.nextSibling.tagName === \"UL\") {\n          ul = node.nextSibling;\n        } else {\n          ul = document.createElement(\"ul\");\n          node.parentNode.insertBefore(ul, node);\n        }\n        // append a new list inside the child before the active node position\n        // now append into that list the node that was active\n        ul.appendChild(node);\n        node.focus();\n      } else if (\n        node.previousSibling != null &&\n        node.previousSibling.tagName === \"UL\"\n      ) {\n        node.previousSibling.appendChild(node);\n        node.focus();\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  getSelectionNode() {\n    let node = this.getDeepSelection().anchorNode;\n    if (\n      node &&\n      (node.tagName == null || node.tagName != \"LI\") &&\n      node.parentNode\n    ) {\n      node = node.parentNode;\n    }\n    return node;\n  }\n  /**\n   * Selection normalizer\n   */\n  getDeepSelection() {\n    // try and obtain the selection from the nearest shadow\n    // which would give us the selection object when running native ShadowDOM\n    // with fallback support for the entire window which would imply Shady\n    // native API\n    if (this.shadowRoot.getSelection) {\n      return this.shadowRoot.getSelection();\n    }\n    // ponyfill from google\n    else if (getRange(this.__outlineNode.parentNode)) {\n      return getRange(this.__outlineNode.parentNode);\n    }\n    // missed on both, hope the normal one will work\n    return window.getSelection();\n  }\n  /**\n   * Get a normalized range based on current selection\n   */\n  getDeepRange() {\n    let sel = this.getDeepSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      return sel.getRangeAt(0);\n    } else if (sel) {\n      return sel;\n    } else false;\n  }\n}\nwindow.customElements.define(EditableOutline.tag, EditableOutline);\nexport { EditableOutline };\n"],"names":["EditableOutline","jos","window","JSONOutlineSchema","requestAvailability","addEventListener","_this","_collapseClickHandler","bind","PolymerElement","html","Array","Boolean","Object","e","node","this","getSelectionNode","tagName","nextElementSibling","classList","toggle","shadowRoot","querySelectorAll","forEach","el","remove","add","i","notFound","path","length","parent","parentNode","children","__outlineNode","querySelector","_observer","MutationObserver","observe","childList","subtree","record","index","info","addedNodes","__blockScrub","setAttribute","scrubElementJOSData","setTimeout","_this2","newValue","oldValue","_typeof","target","id","_add","_collapse","_collapseall","_expandall","_indent","_outdent","_move","_duplicate","_delete","activeItem","clone2","cloneNode","insertBefore","clone","console","log","direction","test","valid","previousElementSibling","focus","firstChild","removeChild","items","set","outline","itemsToNodes","appendChild","save","nodesToItems","previousSibling","nextSibling","preventDefault","stopPropagation","stopImmediatePropagation","detail","keyboardEvent","li","document","createElement","warn","ul","getDeepSelection","anchorNode","getSelection","getRange","sel","getRangeAt","rangeCount","customElements","define","tag"],"mappings":"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"}