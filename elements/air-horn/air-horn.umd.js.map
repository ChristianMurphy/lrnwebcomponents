{"version":3,"file":"air-horn.umd.js","sources":["air-horn.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\"\n/**\n * `air-horn`\n * `demonstrative purposes via meme`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @demo demo/index.html\n */\nclass AirHorn extends HTMLElement {\n  \n  // render function\n  get html() {\n    return `\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Air horn\",\n    \"description\": \"demonstrative purposes via meme\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\n      \"Horn\"\n    ],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"btopro\",\n      \"owner\": \"The Pennsylvania State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"auto\",\n        \"description\": \"\",\n        \"inputMethod\": \"boolean\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n};\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    let props = {\n  \"auto\": {\n    \"name\": \"auto\",\n    \"type\": \"Boolean\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n};\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"air-horn\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n    \n    // set tag for later use\n    this.tag = AirHorn.tag;\n    // map our imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/AirHorn-properties.json\n    let obj = AirHorn.properties;\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        if (this.hasAttribute(p)) {\n          this[p] = this.getAttribute(p);\n        }\n        else {\n          this.setAttribute(p, obj[p].value);\n          this[p] = obj[p].value;\n        }\n      }\n    }\n    // optional queue for future use\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(AirHorn.haxProperties, AirHorn.tag, this);\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = this.shadowRoot.querySelectorAll(to);\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  //static get observedAttributes() {\n  //  return [];\n  //}\n  // disconnectedCallback() {}\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n  \n}\nwindow.customElements.define(AirHorn.tag, AirHorn);\nexport { AirHorn };\n"],"names":["AirHorn","delayRender","tag","obj","properties","p","hasOwnProperty","_this","hasAttribute","getAttribute","setAttribute","value","_queue","template","document","createElement","attachShadow","mode","render","HTMLElement","props","Object","assign","window","ShadyCSS","styleElement","this","HAXWiring","setup","haxProperties","name","to","recipients","shadowRoot","querySelectorAll","fname","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","customElements","define"],"mappings":"ypEAeMA,iCAkFQC,4LAILC,IAAMF,EAAQE,QAIfC,EAAMH,EAAQI,eACb,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,KACjBE,EAAKC,aAAaH,KACfA,GAAKE,EAAKE,aAAaJ,MAGvBK,aAAaL,EAAGF,EAAIE,GAAGM,SACvBN,GAAKF,EAAIE,GAAGM,iBAKlBC,OAAS,KACTC,SAAWC,SAASC,cAAc,cAElCC,aAAa,CAAEC,KAAM,SAErBhB,KACEiB,yPA7GWC,8MAkBX,WACG,eACG,iBACE,QACR,OACE,uBACM,uCACP,sBACC,eACC,CACR,gBAES,CACT,MACU,sCAGJ,QACI,eACD,+CAGD,OACD,aACI,CACX,UACc,mBACG,eACA,oBACH,OACJ,2BAGA,4CAMRC,EAAQ,MACN,MACE,YACA,gBACC,uBACa,YACV,uCAIVA,EAAQC,OAAOC,OAAOF,8BAEjBA,oCAQA,8DAuCHG,OAAOC,UACTD,OAAOC,SAASC,aAAaC,WAG1BC,UAAY,IAAIA,iBAChBA,UAAUC,MAAM5B,EAAQ6B,cAAe7B,EAAQE,IAAKwB,6CAG5CI,EAAMC,OACbC,EAAaN,KAAKO,WAAWC,iBAAiBH,GAC9CpB,EAAQe,KAAKjB,aAAaqB,GAC1BK,EAAiB,MAATxB,EAAgB,kBAAoB,kDAC/BqB,iDAAY,SACxBG,GAAOL,EAAMnB,mIAIPmB,IAAAA,KAAMnB,IAAAA,WACdmB,GAAQnB,wCAIRsB,WAAWG,UAAY,UACvBvB,SAASuB,UAAYV,KAAKW,KAE3Bd,OAAOC,UACTD,OAAOC,SAASc,gBAAgBZ,KAAKb,SAAUa,KAAKxB,UAEjD+B,WAAWM,YAAYb,KAAKb,SAAS2B,QAAQC,WAAU,aAUhElB,OAAOmB,eAAeC,OAAO3C,EAAQE,IAAKF"}