{"version":3,"file":"air-horn.umd.js","sources":["air-horn.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n/**\n * `air-horn`\n * `demonstrative purposes via meme`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @demo demo/index.html\n */\nclass AirHorn extends HTMLElement {\n  \n  // render function\n  get html() {\n    return `\n<style>:host {\n  display: inline-flex;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    let props = {}\n;\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"air-horn\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n    // set tag for later use\n    this.tag = AirHorn.tag;\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    this.addEventListener(\"click\", this._playSound.bind(this));\n  }\n\n  /**\n   * Play the sound effect.\n   */\n  _playSound(e) {\n    let audio = new Audio(\n      decodeURIComponent(import.meta.url) + \"/../lib/airhorn.mp3\"\n    );\n    audio.play();\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n}\nwindow.customElements.define(AirHorn.tag, AirHorn);\nexport { AirHorn };\n"],"names":["AirHorn","delayRender","tag","template","document","createElement","attachShadow","mode","render","HTMLElement","props","Object","assign","addEventListener","this","_playSound","bind","e","Audio","decodeURIComponent","play","shadowRoot","innerHTML","html","window","ShadyCSS","prepareTemplate","appendChild","content","cloneNode","customElements","define"],"mappings":"+gEAcMA,iCAyCQC,kMAGLC,IAAMF,EAAQE,MACdC,SAAWC,SAASC,cAAc,cAElCC,aAAa,CAAEC,KAAM,SAErBN,KACEO,yPAlDWC,oNAkBX,0CAKHC,EAAQ,sCAGVA,EAAQC,OAAOC,OAAOF,8BAEjBA,oCAQA,mEAqBFG,iBAAiB,QAASC,KAAKC,WAAWC,KAAKF,0CAM3CG,GACG,IAAIC,MACdC,mMAAsC,uBAElCC,6CAIDC,WAAWC,UAAY,UACvBnB,SAASmB,UAAYR,KAAKS,KAE3BC,OAAOC,UACTD,OAAOC,SAASC,gBAAgBZ,KAAKX,SAAUW,KAAKZ,UAEjDmB,WAAWM,YAAYb,KAAKX,SAASyB,QAAQC,WAAU,aAGhEL,OAAOM,eAAeC,OAAO/B,EAAQE,IAAKF"}