!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@lrnwebcomponents/simple-tooltip/simple-tooltip.js"),require("@polymer/iron-icons/iron-icons.js"),require("@polymer/iron-icons/editor-icons.js"),require("@polymer/paper-icon-button/paper-icon-button.js"),require("@polymer/paper-card/paper-card.js"),require("@lrnwebcomponents/user-action/user-action.js"),require("lit-element/lit-element.js"),require("@lrnwebcomponents/simple-colors/simple-colors.js"),require("@lrnwebcomponents/schema-behaviors/schema-behaviors.js")):"function"==typeof define&&define.amd?define(["exports","@lrnwebcomponents/simple-tooltip/simple-tooltip.js","@polymer/iron-icons/iron-icons.js","@polymer/iron-icons/editor-icons.js","@polymer/paper-icon-button/paper-icon-button.js","@polymer/paper-card/paper-card.js","@lrnwebcomponents/user-action/user-action.js","lit-element/lit-element.js","@lrnwebcomponents/simple-colors/simple-colors.js","@lrnwebcomponents/schema-behaviors/schema-behaviors.js"],n):n((e=e||self).SelfCheck={},null,null,null,null,null,null,e.litElement_js,e.simpleColors_js,e.schemaBehaviors_js)}(this,function(e,n,t,r,o,i,c,l,s,a){"use strict";function p(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function f(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?f(Object(t),!0).forEach(function(n){u(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,n){return(m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function y(e,n){return!n||"object"!=typeof n&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function b(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var t,r=h(e);if(n){var o=h(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return y(this,t)}}function v(e,n,t){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,n,t){var r=function(e,n){for(;!Object.prototype.hasOwnProperty.call(e,n)&&null!==(e=h(e)););return e}(e,n);if(r){var o=Object.getOwnPropertyDescriptor(r,n);return o.get?o.get.call(t):o.value}})(e,n,t||e)}function g(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}function k(e){return function(e){if(Array.isArray(e))return w(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return w(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return w(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function w(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function x(){var e=g(["\n        :host {\n          display: block;\n          margin: 15px 0;\n        }\n        :host([hidden]),\n        *[hidden] {\n          display: none !important;\n        }\n\n        paper-card {\n          width: 100%;\n          color: var(\n            --self-check-question-text,\n            var(--simple-colors-default-theme-grey-12, #000)\n          );\n          background-color: var(\n            --self-check-question-color,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n          overflow: hidden;\n        }\n\n        paper-icon-button#checkbtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -10px;\n        }\n\n        .check_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        paper-icon-button#closeBtn {\n          width: 50px;\n          height: 50px;\n          position: relative;\n          left: 16px;\n          bottom: -16px;\n        }\n\n        .close_button {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        iron-icon#questionmark {\n          width: 35px;\n          height: 35px;\n          padding: 5px;\n          color: var(\n            --self-check-heading-text,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n        }\n\n        .heading {\n          text-transform: uppercase;\n          font-size: 22px;\n          margin: 10px;\n          color: var(\n            --self-check-heading-text,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n        }\n\n        #header_wrap {\n          color: var(\n            --self-check-heading-text,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n          background-color: var(\n            --self-check-heading-color,\n            var(--simple-colors-default-theme-accent-8, #444)\n          );\n          display: inline-flex;\n          width: 100%;\n          margin: -20px 0 0;\n        }\n\n        #question_wrap {\n          color: var(\n            --self-check-question-text,\n            var(--simple-colors-default-theme-grey-12, #000)\n          );\n          background-color: var(\n            --self-check-question-color,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n          position: relative;\n        }\n\n        .question {\n          font-size: 16px;\n          padding: 15px 15px;\n        }\n\n        :host([correct]) .question {\n          display: none;\n        }\n\n        #answer_wrap {\n          visibility: hidden;\n          opacity: 0;\n          color: var(\n            --self-check-answer-text,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n          background-color: var(\n            --self-check-answer-color,\n            var(--simple-colors-default-theme-light-green-8, #00762e)\n          );\n          border-top: 2px solid\n            var(\n              --self-check-answer-text,\n              var(--simple-colors-default-theme-grey-1, #fff)\n            );\n          width: 100%;\n          top: 0;\n          transition: all 0.2s ease;\n          left: calc(100%);\n          position: absolute;\n        }\n\n        :host([correct]) #answer_wrap {\n          visibility: visible;\n          opacity: 1;\n          position: relative;\n          left: 0;\n        }\n\n        .answer {\n          font-size: 16px;\n          padding: 15px;\n          line-height: 19.2px;\n        }\n\n        #quote_start {\n          display: inline-flex;\n          transform: rotateY(180deg);\n        }\n\n        #quote_end {\n          display: inline-flex;\n        }\n\n        .triangle {\n          width: 0;\n          height: 0;\n          border-left: 20px solid transparent;\n          border-right: 20px solid transparent;\n          border-bottom: 20px solid\n            var(\n              --self-check-heading-color,\n              var(--simple-colors-default-theme-accent-8, #444)\n            );\n          position: relative;\n          top: -20px;\n          left: -1px;\n        }\n\n        .more_info {\n          display: inline;\n        }\n\n        .more_info a {\n          color: var(\n            --self-check-answer-text,\n            var(--simple-colors-default-theme-grey-1, #fff)\n          );\n        }\n\n        .more_info a:hover {\n          text-decoration: none;\n        }\n      "]);return x=function(){return e},e}function j(){var e=g(['\n                    <div class="more_info">\n                      <user-action track="click" every\n                        ><a href="','" target="_blank"\n                          >More info...</a\n                        ></user-action\n                      >\n                    </div>\n                  ']);return j=function(){return e},e}function O(){var e=g(['\n      <paper-card\n        image="','"\n        alt="','"\n        aria-describedby="','"\n      >\n        <div class="triangle"></div>\n        <div id="header_wrap">\n          <iron-icon id="questionmark" icon="icons:help"></iron-icon>\n          <div class="heading">','</div>\n        </div>\n        <div id="question_wrap">\n          <div class="question" aria-hidden="','">\n            <slot name="question"></slot>\n            <div class="check_button">\n              <paper-icon-button\n                controls="answer_wrap"\n                aria-label="Reveal Answer"\n                id="checkBtn"\n                icon="icons:check-circle"\n                noink\n                @click="','"\n              ></paper-icon-button>\n              <simple-tooltip aria-hidden="true" for="checkBtn" position="left">\n                Reveal Answer\n              </simple-tooltip>\n            </div>\n          </div>\n          <div\n            id="answer_wrap"\n            aria-hidden="','"\n            aria-live="polite"\n          >\n            <div class="answer">\n              <user-action track="visibility">\n                <slot></slot>\n              </user-action>\n              ','\n              <div class="close_button">\n                <paper-icon-button\n                  aria-label="Close"\n                  id="closeBtn"\n                  icon="icons:close"\n                  @click="','"\n                  noink\n                >\n                </paper-icon-button>\n                <simple-tooltip\n                  aria-hidden="true"\n                  for="closeBtn"\n                  position="left"\n                >\n                  Close\n                </simple-tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      </paper-card>\n    ']);return O=function(){return e},e}var q=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&m(e,n)}(i,a.SchemaBehaviors(s.SimpleColors));var n,t,r,o=b(i);function i(){var e;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,i),(e=o.call(this)).correct=!1,e.alt="",e.image="",e.question="",e.title="Self-Check",e}return n=i,r=[{key:"styles",get:function(){return[].concat(k(v(h(i),"styles",this)),[l.css(x())])}},{key:"tag",get:function(){return"self-check"}},{key:"properties",get:function(){return d(d({},v(h(i),"properties",this)),{},{title:{type:String},question:{type:String},image:{type:String,reflect:!0},alt:{type:String,reflect:!0},describedBy:{type:String,attribute:"described-by"},link:{type:String,reflect:!0},correct:{type:Boolean,reflect:!0}})}},{key:"haxProperties",get:function(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Self-Check",description:"The user will be able to complete a self-check.",icon:"icons:check-circle",color:"orange",groups:["Image","Assessment"],handles:[{type:"image",source:"image",title:"question",description:"answer",ariaDescribedby:"describedBy"}],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield",icon:"editor:title"},{property:"image",title:"Image",description:"The image of the element",inputMethod:"textfield",icon:"editor:insert-photo"},{property:"link",title:"More link",description:"Link to additional information",inputMethod:"textfield",validationType:"url",icon:"icons:link"}],configure:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield"},{property:"accentColor",title:"Accent Color",description:"The accent color of the self-check",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{property:"dark",title:"Dark Theme",description:"Enable Dark Theme",inputMethod:"boolean",icon:"icons:invert-colors"},{property:"image",title:"Image",description:"The image of the element",inputMethod:"haxupload",validationType:"url"},{property:"link",title:"More link",description:"Link to additional information",inputMethod:"haxupload",validationType:"url"},{property:"alt",title:"Alt Text",description:"Add alt text to the image",inputMethod:"alt"},{slot:"question",title:"Question to ask",description:"This is where you enter a question for the self-check.",inputMethod:"code-editor",required:!0},{slot:"",title:"Answer",description:"This is where you enter a question for the self-check.",inputMethod:"code-editor",required:!0}],advanced:[{property:"describedBy",title:"aria-describedby",description:"Space-separated list of IDs for elements that describe the image.",inputMethod:"textfield"}]},saveOptions:{unsetAttributes:["colors"]}}}}],(t=[{key:"render",value:function(){return l.html(O(),this.image,this.alt,this.describedBy||"",this.title,this.correct,this.openAnswer,this.correct?"false":"true",this.link?l.html(j(),this.link):"",this.openAnswer)}},{key:"openAnswer",value:function(e){this.correct=!this.correct}}])&&p(n.prototype,t),r&&p(n,r),i}();window.customElements.define(q.tag,q),e.SelfCheck=q,Object.defineProperty(e,"__esModule",{value:!0})});
