{"version":3,"file":"jwt-login.umd.js","sources":["jwt-login.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `jwt-login`\n * `a simple element to check for and fetch JWTs`\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n * - jwt - a json web token which is an encrypted security token to talk\n */\nclass JwtLogin extends PolymerElement {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        visibility: hidden;\n      }\n    </style>\n    <iron-ajax\n      id=\"loginrequest\"\n      method=\"GET\"\n      url=\"[[url]]\"\n      handle-as=\"json\"\n      on-response=\"loginResponse\"\n    >\n    </iron-ajax>`;\n  }\n\n  static get tag() {\n    return \"jwt-login\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * url\n       */\n      url: {\n        type: String\n      },\n      /**\n       * Key that contains the token in local storage\n       */\n      key: {\n        type: String,\n        value: \"jwt\"\n      },\n      /**\n       * JSON Web token to securely pass around\n       */\n      jwt: {\n        type: String,\n        notify: true\n      }\n    };\n  }\n  /**\n   * Ready life cycle\n   */\n  ready() {\n    super.ready();\n    // set jwt from local storage bin\n    this.jwt = localStorage.getItem(this.key);\n    this.dispatchEvent(new CustomEvent(\"jwt-token\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  this.jwt\n    }));\n  }\n  /**\n   * Request a user login if we need one or log out\n   */\n  toggleLogin() {\n    // null is default, if we don't have anything go get one\n    if (this.jwt == null) {\n      this.$.loginrequest.generateRequest();\n    } else {\n      localStorage.removeItem(this.key);\n      this.jwt = null;\n      this.dispatchEvent(new CustomEvent(\"jwt-logged-in\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  false\n    }));\n    }\n  }\n  /**\n   * Login bridge to get a JWT and hang onto it\n   */\n  loginResponse(e) {\n    this.jwt = e.detail.response;\n    if (this.jwt == null || this.jwt == \"\") {\n      this.dispatchEvent(new CustomEvent(\"jwt-logged-in\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  false\n    }));\n    } else {\n      // set the jwt into local storage so we can reference later\n      localStorage.setItem(this.key, this.jwt);\n      this.dispatchEvent(new CustomEvent(\"jwt-token\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  this.jwt\n    }));\n      this.dispatchEvent(new CustomEvent(\"jwt-logged-in\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail:  true\n    }));\n    }\n  }\n}\nwindow.customElements.define(JwtLogin.tag, JwtLogin);\nexport { JwtLogin };\n"],"names":["JwtLogin","PolymerElement","html","url","type","String","key","value","jwt","notify","localStorage","getItem","this","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","$","loginrequest","generateRequest","removeItem","e","response","setItem","window","customElements","define","tag"],"mappings":"8nDASMA,gaAAiBC,+DAEZC,8CAiBA,qDAIA,CAILC,IAAK,CACHC,KAAMC,QAKRC,IAAK,CACHF,KAAMC,OACNE,MAAO,OAKTC,IAAK,CACHJ,KAAMC,OACNI,QAAQ,wFAUPD,IAAME,aAAaC,QAAQC,KAAKN,UAChCO,cAAc,IAAIC,YAAY,YAAa,CAC9CC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAASN,KAAKJ,6CAQA,MAAZI,KAAKJ,SACFW,EAAEC,aAAaC,mBAEpBX,aAAaY,WAAWV,KAAKN,UACxBE,IAAM,UACNK,cAAc,IAAIC,YAAY,gBAAiB,CACpDC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,QAAS,4CAOCK,QACPf,IAAMe,EAAEL,OAAOM,SACJ,MAAZZ,KAAKJ,KAA2B,IAAZI,KAAKJ,SACtBK,cAAc,IAAIC,YAAY,gBAAiB,CACpDC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,QAAS,MAITR,aAAae,QAAQb,KAAKN,IAAKM,KAAKJ,UAC/BK,cAAc,IAAIC,YAAY,YAAa,CAChDC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAASN,KAAKJ,YAETK,cAAc,IAAIC,YAAY,gBAAiB,CACpDC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,QAAS,2CAKfQ,OAAOC,eAAeC,OAAO5B,EAAS6B,IAAK7B"}