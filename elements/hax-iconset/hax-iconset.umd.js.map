{"version":3,"file":"hax-iconset.umd.js","sources":["hax-iconset.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\n// register globally so we can make sure there is only one\nwindow.HaxIconset = window.HaxIconset || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same hax-iconset element, making it a singleton.\nwindow.HaxIconset.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.HaxIconset.instance) {\n    window.HaxIconset.instance = document.createElement(\"hax-iconset\");\n    document.body.appendChild(window.HaxIconset.instance);\n  }\n  return window.HaxIconset.instance;\n};\n\n/**\n * `hax-iconset`\n * `HAX-specific icons`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass HaxIconset extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"hax-iconset\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n    window.addEventListener(\"hax-iconset-hide\", this.hideHaxIconset.bind(this));\n    window.addEventListener(\"hax-iconset-show\", this.showHaxIconset.bind(this));\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.connectedCallback();\n    window.removeEventListener(\"hax-iconset-hide\", this.hideHaxIconset.bind(this));\n    window.removeEventListener(\"hax-iconset-show\", this.showHaxIconset.bind(this));\n  }\n  /**\n   * Hide callback\n   */\n  hideHaxIconset (e) {\n    // add your code to run when the singleton hides\n  }\n  /**\n   * Show / available callback\n   */\n  showHaxIconset (e) {\n    // add your code to run when the singleton is called for\n  }\n\n  \n}\nwindow.customElements.define(HaxIconset.tag, HaxIconset);\nexport { HaxIconset };\n"],"names":["window","HaxIconset","requestAvailability","instance","document","createElement","body","appendChild","PolymerElement","html","addEventListener","this","hideHaxIconset","bind","showHaxIconset","removeEventListener","e","customElements","define","tag"],"mappings":"k6CAMAA,OAAOC,WAAaD,OAAOC,YAAc,GAIzCD,OAAOC,WAAWC,oBAAsB,kBAEjCF,OAAOC,WAAWE,WACrBH,OAAOC,WAAWE,SAAWC,SAASC,cAAc,eACpDD,SAASE,KAAKC,YAAYP,OAAOC,WAAWE,WAEvCH,OAAOC,WAAWE,cAcrBF,gaAAmBO,+DAIdC,qDAcA,qCAQA,qHAQPT,OAAOU,iBAAiB,mBAAoBC,KAAKC,eAAeC,KAAKF,OACrEX,OAAOU,iBAAiB,mBAAoBC,KAAKG,eAAeD,KAAKF,4GAOrEX,OAAOe,oBAAoB,mBAAoBJ,KAAKC,eAAeC,KAAKF,OACxEX,OAAOe,oBAAoB,mBAAoBJ,KAAKG,eAAeD,KAAKF,8CAK1DK,2CAMAA,yCAMlBhB,OAAOiB,eAAeC,OAAOjB,EAAWkB,IAAKlB"}