{"version":3,"file":"csv-render.umd.js","sources":["csv-render.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { SimpleColors } from \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\n/**\n * `csv-render`\n * `Remote render a CSV file in place as an accessible table.`\n *\n * @microcopy - language worth noting:\n *  - CSV is comma separated values\n *\n * @customElement\n * @polymer\n * @polymerLegacy\n * @demo demo/index.html\n */\nclass CsvRender extends SimpleColors {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/hexagon-loader/hexagon-loader.js\");\n    import(\"@polymer/iron-ajax/iron-ajax.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icon/iron-icon.js\");\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      import(\"@polymer/paper-button/paper-button.js\");\n      import(\"@polymer/paper-tooltip/paper-tooltip.js\");\n    });\n  }\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles\">\n        :host {\n          display: block;\n        }\n        .table {\n          width: 100%;\n          border: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-collapse: collapse;\n          white-space: nowrap;\n          font-size: 16px;\n          background-color: var(--simple-colors-default-theme-grey-1);\n        }\n        .table thead {\n          padding-bottom: 0.16px;\n          position: sticky;\n        }\n        .table caption {\n          background-color: var(--simple-colors-default-theme-accent-1);\n          font-weight: bold;\n          padding: 8px;\n          border: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-bottom: none;\n        }\n        :host(:not([accent-color])) .table caption,\n        :host([accent-color=\"grey\"]) .table caption {\n          background-color: var(--simple-colors-default-theme-accent-2);\n        }\n        .table tbody tr {\n          position: relative;\n          height: 48px;\n          -webkit-transition-duration: 0.28s;\n          transition-duration: 0.28s;\n          -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n          -webkit-transition-property: background-color;\n          transition-property: background-color;\n        }\n        .table tbody tr:hover {\n          background-color: var(--simple-colors-default-theme-accent-1);\n        }\n        :host(:not([accent-color])) .table tbody tr:hover,\n        :host([accent-color=\"grey\"]) .table tbody tr:hover {\n          background-color: var(--simple-colors-default-theme-accent-2);\n        }\n        .table td,\n        .table thead th,\n        .table th {\n          padding: 0 1.125em;\n          text-align: left;\n        }\n        .table td {\n          border-top: 1px solid var(--simple-colors-default-theme-accent-6);\n          border-bottom: 1px solid var(--simple-colors-default-theme-accent-6);\n        }\n        .table th {\n          position: relative;\n          vertical-align: bottom;\n          text-overflow: ellipsis;\n          font-size: 16px;\n          font-weight: bold;\n          line-height: 24px;\n          letter-spacing: 0;\n          color: rgba(0, 0, 0, 0.54);\n          height: 48px;\n          padding-bottom: 8px;\n          box-sizing: border-box;\n        }\n        #loading {\n          position: absolute;\n        }\n        #download paper-button {\n          color: var(--simple-colors-default-theme-accent-6);\n          border-radius: 36px;\n          width: 36px;\n          height: 36px;\n          min-width: unset;\n          padding: 0;\n          margin: 0;\n          display: inline-flex;\n        }\n        iron-icon {\n          display: inline-flex;\n          margin: 0;\n          padding: 0;\n        }\n        #download paper-button:hover,\n        #download paper-button:focus,\n        #download paper-button:active {\n          color: var(--simple-colors-default-theme-accent-8);\n          outline: 2px solid var(--simple-colors-default-theme-accent-6);\n        }\n      </style>\n      <iron-ajax\n        auto\n        url=\"[[dataSource]]\"\n        handle-as=\"text\"\n        debounce-duration=\"500\"\n        last-response=\"{{tableData}}\"\n        on-response=\"handleResponse\"\n      ></iron-ajax>\n      <hexagon-loader\n        id=\"loading\"\n        accent-color=\"[[accentColor]]\"\n        loading\n        item-count=\"4\"\n        size=\"small\"\n      ></hexagon-loader>\n      <a href=\"[[dataSource]]\" id=\"download\" tabindex=\"-1\">\n        <paper-button\n          ><iron-icon icon=\"file-download\"></iron-icon\n        ></paper-button>\n      </a>\n      <paper-tooltip for=\"download\" animation-delay=\"200\" offset=\"14\"\n        >Download table data</paper-tooltip\n      >\n      <table class=\"table\" summary=\"[[summary]]\">\n        <template is=\"dom-if\" if=\"[[caption]]\">\n          <caption>\n            [[caption]]\n          </caption>\n        </template>\n        <thead>\n          <tr>\n            <template is=\"dom-repeat\" items=\"[[tableHeadings]]\" as=\"heading\">\n              <th scope=\"col\">[[heading]]</th>\n            </template>\n          </tr>\n        </thead>\n        <tbody>\n          <template is=\"dom-repeat\" items=\"[[table]]\" as=\"row\">\n            <tr>\n              <template is=\"dom-repeat\" items=\"[[row]]\" as=\"col\">\n                <td>[[col]]</td>\n              </template>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    `;\n  }\n\n  static get tag() {\n    return \"csv-render\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Location of the CSV file.\n       */\n      dataSource: {\n        type: String\n      },\n\n      /**\n       * Caption for the table to improve accessibility and readability.\n       */\n      caption: {\n        type: String\n      },\n      /**\n       * Summary to improve accessibility for screen readers.\n       */\n      summary: {\n        type: String\n      },\n      /**\n       * Table busted out as an array.\n       */\n      table: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Headings from the first row of the csv\n       */\n      tableHeadings: {\n        type: Array,\n        value: []\n      },\n      /**\n       * Raw data pulled in from the csv file.\n       */\n      tableData: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Color class work to apply\n       */\n      color: {\n        type: String,\n        observer: \"_getAccentColor\"\n      }\n    };\n  }\n  /**\n   * Convert from csv text to an array in the table function\n   */\n  handleResponse(e) {\n    this.table = this.CSVtoArray(this.tableData);\n    this.tableHeadings = this.table.shift();\n    this.shadowRoot.querySelector(\"#loading\").loading = false;\n  }\n  /**\n   * Mix of solutions from https://stackoverflow.com/questions/8493195/how-can-i-parse-a-csv-string-with-javascript-which-contains-comma-in-data\n   */\n  CSVtoArray(text) {\n    let p = \"\",\n      row = [\"\"],\n      ret = [row],\n      i = 0,\n      r = 0,\n      s = !0,\n      l;\n    for (l in text) {\n      l = text[l];\n      if ('\"' === l) {\n        if (s && l === p) row[i] += l;\n        s = !s;\n      } else if (\",\" === l && s) l = row[++i] = \"\";\n      else if (\"\\n\" === l && s) {\n        if (\"\\r\" === p) row[i] = row[i].slice(0, -1);\n        row = ret[++r] = [(l = \"\")];\n        i = 0;\n      } else row[i] += l;\n      p = l;\n    }\n    return ret;\n  }\n\n  _getAccentColor(color) {\n    color = color.replace(\"-text\", \"\");\n    if (\n      (!this.accentColor || this.accentColor === \"grey\") &&\n      this.colors[color]\n    ) {\n      this.accentColor = color;\n    }\n  }\n}\nwindow.customElements.define(CsvRender.tag, CsvRender);\nexport { CsvRender };\n"],"names":["CsvRender","SimpleColors","html","dataSource","type","String","caption","summary","table","Array","value","tableHeadings","tableData","color","observer","afterNextRender","this","e","CSVtoArray","shift","shadowRoot","querySelector","loading","text","l","p","row","ret","i","r","s","slice","replace","accentColor","colors","window","customElements","define","tag"],"mappings":"yvMAqBMA,8KAGK,6DACA,0CACA,4CACA,2RANaC,6DAgBbC,8CA+IA,sDAGA,CAILC,WAAY,CACVC,KAAMC,QAMRC,QAAS,CACPF,KAAMC,QAKRE,QAAS,CACPH,KAAMC,QAKRG,MAAO,CACLJ,KAAMK,MACNC,MAAO,IAKTC,cAAe,CACbP,KAAMK,MACNC,MAAO,IAKTE,UAAW,CACTR,KAAMC,OACNK,MAAO,IAKTG,MAAO,CACLT,KAAMC,OACNS,SAAU,2HAtMdC,kBAAgBC,KAAM,kBACb,gDACA,oFA2MIC,QACRT,MAAQQ,KAAKE,WAAWF,KAAKJ,gBAC7BD,cAAgBK,KAAKR,MAAMW,aAC3BC,WAAWC,cAAc,YAAYC,SAAU,qCAK3CC,OAOPC,EANEC,EAAI,GACNC,EAAM,CAAC,IACPC,EAAM,CAACD,GACPE,EAAI,EACJC,EAAI,EACJC,GAAI,MAEDN,KAAKD,EAEJ,OADJC,EAAID,EAAKC,KAEHM,GAAKN,IAAMC,IAAGC,EAAIE,IAAMJ,GAC5BM,GAAKA,GACI,MAAQN,GAAKM,EAAGN,EAAIE,IAAME,GAAK,GACjC,OAASJ,GAAKM,GACjB,OAASL,IAAGC,EAAIE,GAAKF,EAAIE,GAAGG,MAAM,GAAI,IAC1CL,EAAMC,IAAME,GAAK,CAAEL,EAAI,IACvBI,EAAI,GACCF,EAAIE,IAAMJ,EACjBC,EAAID,SAECG,0CAGOd,GACdA,EAAQA,EAAMmB,QAAQ,QAAS,IAE3BhB,KAAKiB,aAAoC,SAArBjB,KAAKiB,cAC3BjB,KAAKkB,OAAOrB,UAEPoB,YAAcpB,wCAIzBsB,OAAOC,eAAeC,OAAOrC,EAAUsC,IAAKtC"}