{"version":3,"file":"simple-search.umd.js","sources":["lib/simple-search-content.js","lib/simple-search-match.js","simple-search.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n\n/**\n * `simple-search-content`\n * @customElement simple-search-content\n * content that can be searched with simple-search\n *\n *\n\n * @demo ./demo/index.html\n */\nclass SimpleSearchContent extends LitElement {\n  static get tag() {\n    return \"simple-search-content\";\n  }\n\n  /**\n   * associates simple-search-content with a simple-search\n   *\n   * @param {object} the simple-search element\n   */\n  enableSearch(searchObject) {\n    searchObject.addEventListener(\"simple-search\", e =>\n      this._searchContent(searchObject)\n    );\n    searchObject.addEventListener(\"goto-result\", e => this.focus(e.detail));\n  }\n\n  /**\n   * sets focus on a matched result based on match number\n   */\n  _searchContent(searchObject) {\n    let html = this.innerHTML;\n    this.innerHTML = searchObject.findMatches(html);\n  }\n\n  /**\n   * sets focus on a matched result based on match number\n   *\n   * @param {number} the number of a search result\n   */\n  focus(matchNumber) {\n    let result = this.querySelector('[match-number=\"' + matchNumber + '\"]');\n    if (result !== undefined && result !== null) result.focus();\n  }\n\n  render() {\n    return html`\n      <slot></slot>\n    `;\n  }\n}\ncustomElements.define(SimpleSearchContent.tag, SimpleSearchContent);\n\nexport { SimpleSearchContent };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n\n/**\n * `simple-search-match`\n * @customElement simple-search-match\n * matched term that can be searched with simple-search\n * \n### Styling\n\n`<simple-search-match>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-search-match-font-family` | font-family for matched content | unset\n`--simple-search-match-font-weight` | font-weight for matched content | bold\n`--simple-search-match-text-color` | text color for matched content | #000\n`--simple-search-match-bg-color` | background-color for matched content | #f0f0f0\n`--simple-search-match-border-color` | border-color for matched content | #ddd\n`--simple-search-match-border` | border for matched content | 1px solid\n`--simple-search-match-border-radius` | border-radius for matched content | 0.16px\n`--simple-search-match-padding` | padding for matched conten | 0.16px 4px\n *\n\n * @demo ./demo/index.html\n */\nclass SimpleSearchMatch extends LitElement {\n  static get tag() {\n    return \"simple-search-match\";\n  }\n\n  static get properties() {\n    return {\n      ...super.properties,\n\n      matchNumber: {\n        type: Number,\n        reflect: true,\n        attribute: \"match-number\"\n      }\n    };\n  }\n\n  // render function\n  static get styles() {\n    return [\n      css`\n        :host {\n          margin-right: 4px;\n          font-family: var(--simple-search-match-font-family, unset);\n          color: var(--simple-search-match-text-color, #000);\n          background-color: var(--simple-search-match-bg-color, #f0f0f0);\n          border: var(--simple-search-match-border, 1px solid);\n          border-color: var(--simple-search-match-border-color, #ddd);\n          padding: var(--simple-search-match-padding, 0.16px 0px 0.16px 4px);\n          border-radius: var(--simple-search-match-border-radius, 0.16px);\n          font-weight: var(--simple-search-match-font-weight, bold);\n        }\n      `\n    ];\n  }\n\n  render() {\n    return html`\n      <slot></slot>\n    `;\n  }\n}\ncustomElements.define(SimpleSearchMatch.tag, SimpleSearchMatch);\n\nexport { SimpleSearchMatch };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./lib/simple-search-content.js\";\nimport \"./lib/simple-search-match.js\";\n/**\n * `simple-search`\n * @customElement simple-search\n * a button used in simple-search\n * \n### Styling\n\n`<simple-search>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-search-button-color` | text color for button | #111\n`--simple-search-button-bg-color` | background-color for button | #eee\n`--simple-search-button-border-color` | border-color for button | #ccc\n`--simple-search-button-disabled-color` | background-color for disabled seach button | #999\n`--simple-search-button-disabled-bg-color` | text color for disabled seach button | #eee\n`--simple-search-button-disabled-border-color` | border-color for disabled seach button | #ccc\n`--simple-search-button-hover-color` | text color for button when hovered or focused | #000\n`--simple-search-button-hover-bg-color` | background-color for button when hovered or focused | #fff\n`--simple-search-button-hover-border-color` | border-color for button when hovered or focused | #ddd\n`--simple-search-input-placeholder-color` | text-color for search input's placeholder | #222\n`--simple-search-container-padding` | search input's padding | unset\n`--simple-search-margin` | search input's margin | unset\n *\n\n * @demo ./demo/index.html\n *\n */\nclass SimpleSearch extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  width: 100%;\n}\n#input {\n  flex-grow: 2;\n  margin-right: 4px;\n  padding: var(--simple-search-padding, unset);\n  margin: var(--simple-search-margin, unset);\n  --paper-input-container-input-color: var(\n    --simple-search-input-text-color,\n    #000\n  );\n  --paper-input-container-shared-input-style_-_color: var(\n    --simple-search-input-text-color,\n    #000\n  );\n  --paper-input-container-focus-color: var(\n    --simple-search-input-line-color,\n    #000\n  );\n  --paper-input-container-color: var(\n    --simple-search-input-placeholder-color,\n    #222\n  );\n  color: var(--simple-search-input-placeholder-color, #222);\n}\n#xofy {\n  margin: 8px;\n}\nbutton {\n  margin: 8px 0 8px;\n  color: var(--simple-search-button-color, #111);\n  background-color: var(--simple-search-button-bg-color, #eee);\n  border-color: var(--simple-search-button-border-color, #ccc);\n}\nbutton:not([disabled]):focus,\nbutton:not([disabled]):hover {\n  cursor: pointer;\n  color: var(--simple-search-button-hover-color, #000);\n  background-color: var(--simple-search-button-hover-bg-color, #fff);\n  border-color: var(--simple-search-button-hover-border-color, #ddd);\n}\nbutton[disabled] {\n  cursor: not-allowed;\n  color: var(--simple-search-button-disabled-color, #999);\n  background-color: var(--simple-search-button-disabled-bg-color, #eee);\n  border-color: var(--simple-search-button-disabled-border-color, #ccc);\n}\nbutton:not([controls]) {\n  display: none;\n}\n*[shrink-hide] {\n  display: none;\n}\n      `\n    ];\n  }\n  // render function\n  render() {\n    return html`\n\n<paper-input\n    id=\"input\"\n    label=\"${this.searchInputLabel}\"\n    ?always-float-label=\"${this.alwaysFloatLabel}\"\n    ?no-label-float=\"${this.noLabelFloat}\"\n    @change=\"${this._handleChange}\"\n  >\n    <iron-icon icon=\"${this.searchInputIcon}\" slot=\"prefix\"></iron-icon>\n  </paper-input>\n  <div id=\"xofy\" ?shrink-hide=\"${this._hasNoSearch(this.searchTerms)}\">\n    ${this._getResultsSpan(this.resultPointer, this.resultCount)}\n  </div>\n  <div ?shrink-hide=\"${this._hasNoResults(this.resultCount)}\">\n    <button\n      id=\"prev\"\n      aria-label=\"${this.prevButtonLabel}\"\n      aria-role=\"button\"\n      controls=\"${this.controls}\"\n      tabindex=\"0\"\n      ?disabled=\"${this.__hidePrev}\"\n      @click=\"${this._navigateResults}\"\n    >\n      <iron-icon icon=\"${this.prevButtonIcon}\"></iron-icon>\n    </button>\n    <paper-tooltip for=\"prev\">${this.prevButtonLabel}</paper-tooltip>\n    <button\n      id=\"next\"\n      aria-label=\"${this.nextButtonLabel}\"\n      aria-role=\"button\"\n      controls=\"${this.controls}\"\n      tabindex=\"0\"\n      ?disabled=\"${this.__hideNext}\"\n      @click=\"${this._navigateResults}\"\n    >\n      <iron-icon icon=\"${this.nextButtonIcon}\"></iron-icon>\n    </button>\n    <paper-tooltip for=\"next\">${this.nextButtonLabel}</paper-tooltip>\n  </div>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    return {\n  \n  ...super.properties,\n  \n  /**\n   * always float the label\n   */\n  \"alwaysFloatLabel\": {\n    \"attribute\": \"always-float-label\",\n    \"type\": Boolean\n  },\n  /**\n   * Is the search case-sensitive\n   */\n  \"caseSensitive\": {\n    \"attribute\": \"case-sensitive\",\n    \"type\": Boolean\n  },\n  /**\n   * The id of the container element that the navigation buttons control\n   */\n  \"controls\": {\n    \"attribute\": \"controls\",\n    \"type\": String\n  },\n  /**\n   * label for next result icon\n   */\n  \"nextButtonIcon\": {\n    \"attribute\": \"next-button-icon\",\n    \"type\": String\n  },\n  /**\n   * label for next result button\n   */\n  \"nextButtonLabel\": {\n    \"attribute\": \"next-button-label\",\n    \"type\": String\n  },\n  /**\n   * never float the label\n   */\n  \"noLabelFloat\": {\n    \"attribute\": \"no-label-float\",\n    \"type\": Boolean\n  },\n  /**\n   * label for previous result icon\n   */\n  \"prevButtonIcon\": {\n    \"attribute\": \"prev-button-icon\",\n    \"type\": String\n  },\n  /**\n   * label for previous result button\n   */\n  \"prevButtonLabel\": {\n    \"attribute\": \"prev-button-label\",\n    \"type\": String\n  },\n  /**\n   * Number of results.\n   */\n\n  \"resultCount\": {\n    \"attribute\": \"result-count\",\n    \"type\": Number\n  },\n  /**\n   * Which result are we currently on?\n   */\n  \"resultPointer\": {\n    \"attribute\": \"result-pointer\",\n    \"type\": Number\n  },\n  /**\n   * label for search icon\n   */\n  \"searchInputIcon\": {\n    \"attribute\": \"search-input-icon\",\n    \"type\": String\n  },\n  /**\n   * label for search input\n   */\n  \"searchInputLabel\": {\n    \"attribute\": \"search-input-label\",\n    \"type\": String\n  },\n  /**\n   * an array of search terms\n   */\n  \"searchTerms\": {\n    \"attribute\": \"search-terms\",\n    \"type\": Array\n  },\n  /**\n   * The container element that the navigation buttons control\n   */\n  \"target\": {\n    \"type\": Object\n  },\n  /**\n   * Hide next button\n   */\n  \"__hideNext\": {\n    \"type\": Boolean\n  },\n  /**\n   * Hide prev button\n   */\n  \"__hidePrev\": {\n    \"type\": Boolean\n  }\n}\n;\n  }\n\n  static get tag() {\n    return \"simple-search\";\n  }\n  constructor() {\n    super();\n    this.alwaysFloatLabel = false;\n    this.caseSensitive = null;\n    this.controls = null;\n    this.nextButtonIcon = \"arrow-forward\";\n    this.nextButtonLabel = \"next result\";\n    this.noLabelFloat = false;\n    this.prevButtonIcon = \"arrow-back\";\n    this.prevButtonLabel = \"previous result\";\n    this.resultCount = 0;\n    this.resultPointer = 0;\n    this.searchInputIcon = \"search\";\n    this.searchInputLabel = \"search\";\n    this.searchTerms = [];\n    this.target = null;\n    this.__hideNext = true;\n    this.__hidePrev = true;\n  }\n\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName === \"resultPointer\" || propName === \"resultCount\")\n        this._getNavDisabled(this.resultPointer, this.resultCount);\n    });\n  }\n\n  /**\n   * are there any results to navigate?\n   */\n  _handleChange(e) {\n    this._getSearchText();\n    this.resultCount = 0;\n    this.resultPointer = 0;\n\n    /**\n     * Fires when search changes (detail = { search: this, content: event })\n     *\n     * @event simple-search\n     */\n    this.dispatchEvent(\n      new CustomEvent(\"simple-search\", { detail: { search: this, content: e } })\n    );\n  }\n\n  /**\n   * are there any results to navigate?\n   *\n   * @param {number} total number of results\n   * @returns {boolean} whether or not there are results\n   */\n  _hasNoResults(count) {\n    return count < 1;\n  }\n\n  /**\n   * are there any results to navigate?\n   *\n   * @param {array} array of search terms\n   * @returns {boolean} whether or not there are search terms\n   */\n  _hasNoSearch(terms) {\n    return terms.length < 1;\n  }\n\n  /**\n   * get results span text\n   *\n   * @param {boolean} whether or not there are search terms\n   * @param {number} the current search result's position\n   * @param {number} the total number of search results\n   * @returns {string} \"y results\" or \"x/y\" text\n   */\n  _getResultsSpan(pointer, count) {\n    return count > 0 && pointer > 0\n      ? pointer + \"/\" + count\n      : count > 0\n      ? count\n      : \"\";\n  }\n\n  /**\n   * navigate results\n   */\n  _navigateResults(e) {\n    let increment = e.currentTarget.id === \"next\" ? 1 : -1;\n    if (\n      this.resultPointer + increment > 0 &&\n      this.resultPointer + increment <= this.resultCount\n    ) {\n      this.resultPointer += increment;\n      this.dispatchEvent(\n        new CustomEvent(\"goto-result\", { detail: this.resultPointer })\n      );\n    }\n  }\n  _getNavDisabled(pointer, count) {\n    this.__hidePrev = this._isNavButtonDisabled(pointer, count, -1);\n    this.__hideNext = this._isNavButtonDisabled(pointer, count);\n  }\n\n  /**\n   * navigate results\n   */\n  _isNavButtonDisabled(pointer, count, inc = 1) {\n    return !count || count === 0 || pointer + inc <= 0 || pointer + inc > count;\n  }\n\n  /**\n   * gets the tab-index of cues based on whether or not interactive cues are disabled\n   *\n   * @param {string} a string of search text\n   */\n  _getSearchText() {\n    let find = this.shadowRoot.querySelector(\"#input\").value,\n      temp = new Array();\n    if (find !== undefined && find !== null) {\n      temp = find.split(/[\\\"\\']/gm);\n      for (let i = 0; i < temp.length; i++) {\n        temp[i] = temp[i].trim();\n        if (temp[i] === \"\") temp.splice(i, 1);\n      }\n    }\n    //this.searchTerms = [];\n    this.searchTerms = temp.slice(0);\n  }\n\n  /**\n   * search a string of content for any terms and return an array of results.\n   * For example if I searched for the with\n   * `findMatches(\"The quick brown fox jumps over the lazy dog.\")`,\n   * the array would be:\n   * ```[\n   *   {\n   *     \"matched\": true,\n   *     \"matchNumber\": 1,\n   *     \"text\": \"The\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" quick brown fox jumps over \",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": true,\n   *     \"matchNumber\": 2,\n   *     \"text\": \"the\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" lazy dog.\",\n   *     \"searchObject\": root\n   *   }\n   * ]```\n   *\n   * or `findMatches(\"The quick brown fox jumps over the lazy dog.\",true)`,\n   * the array would be:\n   * ```[\n   *   {\n   *     \"matched\": false,\n   *     \"text\": \"The quick brown fox jumps over \",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": true,\n   *     \"matchNumber\": 1,\n   *     \"text\": \"the\",\n   *     \"searchObject\": root\n   *   },{\n   *     \"matched\": false,\n   *     \"text\": \" lazy dog.\",\n   *     \"searchObject\": root\n   *   }\n   * ]```\n   *\n   * @param {array} an array of search terms\n   * @returns {array} an array of search results\n   */\n  findMatches(results) {\n    this.resultPointer = 0;\n    results = results.replace(/<\\/?simple-search-match[^>]*>/g, \"\");\n    this.searchTerms.forEach(term => {\n      let modifier = this.caseSensitive ? \"gm\" : \"gim\",\n        regex = new RegExp(\"\\\\b(\" + term + \")\\\\b\", modifier),\n        replacer = match => {\n          this.resultCount++;\n          return `<simple-search-match tabindex=\"0\" match-number=\"${\n            this.resultCount\n          }\">${match}</simple-search-match>`;\n        };\n      results = results.replace(regex, replacer);\n    });\n    return results;\n  }\n}\ncustomElements.define(SimpleSearch.tag, SimpleSearch);\n\nexport { SimpleSearch };\n"],"names":["SimpleSearchContent","LitElement","searchObject","addEventListener","e","_this","_searchContent","focus","detail","html","this","innerHTML","findMatches","matchNumber","result","querySelector","customElements","define","tag","SimpleSearchMatch","type","Number","reflect","attribute","css","SimpleSearch","alwaysFloatLabel","caseSensitive","controls","nextButtonIcon","nextButtonLabel","noLabelFloat","prevButtonIcon","prevButtonLabel","resultCount","resultPointer","searchInputIcon","searchInputLabel","searchTerms","target","__hideNext","__hidePrev","_handleChange","_hasNoSearch","_getResultsSpan","_hasNoResults","_navigateResults","Boolean","String","Array","Object","changedProperties","forEach","oldValue","propName","_this2","_getNavDisabled","_getSearchText","dispatchEvent","CustomEvent","search","content","count","terms","length","pointer","increment","currentTarget","id","_isNavButtonDisabled","inc","find","shadowRoot","value","temp","split","i","trim","splice","slice","results","replace","term","modifier","_this3","regex","RegExp","match"],"mappings":"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"}