{"version":3,"file":"cms-hax.umd.js","sources":["cms-hax.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@lrnwebcomponents/h-a-x/h-a-x.js\";\n/**\n * `cms-hax`\n * @customElement cms-hax\n * @demo ../../demo/index.html\n */\nclass CmsHax extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <iron-ajax\n        id=\"pageupdateajax\"\n        url=\"${this.endPoint}\"\n        method=\"${this.method}\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"${this._handleUpdateResponse}\"\n      ></iron-ajax>\n      <h-a-x app-store=\"${this.__appStore}\"></h-a-x>\n    `;\n  }\n\n  static get tag() {\n    return \"cms-hax\";\n  }\n\n  decodeHTMLEntities(text) {\n    var entities = [\n      [\"amp\", \"&\"],\n      [\"apos\", \"'\"],\n      [\"#x27\", \"'\"],\n      [\"#x2F\", \"/\"],\n      [\"#39\", \"'\"],\n      [\"#47\", \"/\"],\n      [\"lt\", \"<\"],\n      [\"gt\", \">\"],\n      [\"nbsp\", \" \"],\n      [\"quot\", '\"']\n    ];\n\n    for (var i = 0, max = entities.length; i < max; ++i)\n      text = text.replace(\n        new RegExp(\"&\" + entities[i][0] + \";\", \"g\"),\n        entities[i][1]\n      );\n\n    return text;\n  }\n  static get properties() {\n    return {\n      __ready: {\n        type: Boolean\n      },\n      /**\n       * Default the panel to open\n       */\n      openDefault: {\n        type: Boolean,\n        reflect: true,\n        attribute: \"open-default\"\n      },\n      /**\n       * Hide the panel operations (save and cancel),\n       */\n      hidePanelOps: {\n        type: Boolean,\n        attribute: \"hide-panel-ops\"\n      },\n      /**\n       * Hide preferences button\n       */\n      hidePreferencesButton: {\n        type: Boolean,\n        attribute: \"hide-preferences-button\"\n      },\n      /**\n       * Direction to align the hax edit panel\n       */\n      align: {\n        type: String\n      },\n      /**\n       * allowed Tags, usually as dictated by the input filtering\n       * layer of the backend system that HAX is riding on.\n       * While not fullproof, this at least will enforce front-end\n       * filtering to match what actually is going to be allowed\n       * to be saved in the first place.\n       */\n      allowedTags: {\n        type: Array\n      },\n      /**\n       * Location to save content to.\n       */\n      endPoint: {\n        type: String,\n        attribute: \"end-point\"\n      },\n      /**\n       * Method to save content.\n       */\n      method: {\n        type: String\n      },\n      /**\n       * Connection object for talking to an app store.\n       */\n      appStoreConnection: {\n        type: String,\n        attribute: \"app-store-connection\"\n      },\n      __appStore: {\n        type: String\n      },\n      /**\n       * State of the panel\n       */\n      editMode: {\n        type: Boolean,\n        reflect: true,\n        attribute: \"edit-mode\"\n      },\n      /**\n       * syncBody\n       */\n      syncBody: {\n        type: Boolean,\n        attribute: \"sync-body\"\n      },\n      /**\n       * Only available if syncBody is true; this allows data binding to the value being worked on in hax-body tag\n       */\n      bodyValue: {\n        type: String,\n        attribute: \"body-value\"\n      },\n      /**\n       * Flag to hide the toast.\n       */\n      hideMessage: {\n        type: Boolean,\n        attribute: \"hide-message\"\n      },\n      /**\n       * Optional URL to redirect to once we save.\n       */\n      redirectLocation: {\n        type: String,\n        attribute: \"redirect-location\"\n      },\n      /**\n       * Option to redirect once we save successfully\n       */\n      redirectOnSave: {\n        type: Boolean,\n        attribute: \"redirect-on-save\"\n      },\n      /**\n       * Reference to activeBody.\n       */\n      activeHaxBody: {\n        type: Object\n      },\n      __imported: {\n        type: Boolean\n      }\n    };\n  }\n\n  /**\n   * Ensure we've imported our content on initial setup\n   */\n  _activeHaxBodyUpdated(bodyElement, ready) {\n    // ensure we import our content once we get an initial registration of active body\n    if (bodyElement != null && ready && !this.__imported) {\n      this.__imported = true;\n      // see what's inside of this, in a template tag\n      let children = this.querySelector(\"template\");\n      // convert this template content into the real thing\n      // this helps with correctly preserving everything on the way down\n      if (children != null) {\n        bodyElement.importContent(children.innerHTML);\n      }\n    }\n  }\n\n  /**\n   * Calculate if we have anywhere to redirect to.\n   */\n  _computeRedirectOnSave(redirectLocation) {\n    if (typeof redirectLocation !== typeof undefined) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set certain data bound values to the store once it's ready\n   */\n  _noticeTagChanges(\n    openDefault,\n    allowedTags,\n    hidePanelOps,\n    hidePreferencesButton,\n    align\n  ) {\n    if (window.HaxStore.ready) {\n      // double check because this can cause issues\n      if (allowedTags) {\n        window.HaxStore.instance.validTagList = allowedTags;\n      }\n      window.HaxStore.instance.haxTray.hidePanelOps = hidePanelOps;\n      window.HaxStore.instance.haxTray.hidePreferencesButton = hidePreferencesButton;\n      window.HaxStore.instance.haxTray.elementAlign = align;\n      if (openDefault) {\n        window.HaxStore.write(\"editMode\", openDefault, this);\n      }\n    }\n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated() {\n    this.__applyMO();\n    this.__ready = true;\n  }\n  /**\n   * Set certain data bound values to the store once it's ready\n   */\n  _storeReady(e) {\n    // delay as there can be some timing issues with attributes in CMSs\n    setTimeout(() => {\n      // trigger the update of different parts of the global state\n      this._noticeTagChanges(\n        this.openDefault,\n        this.allowedTags,\n        this.hidePanelOps,\n        this.hidePreferencesButton,\n        this.align\n      );\n      this.__applyMO();\n    }, 0);\n  }\n  /**\n   * Created life cycle\n   */\n  constructor() {\n    super();\n    window.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    window.addEventListener(\"hax-store-ready\", this._storeReady.bind(this));\n    window.addEventListener(\"hax-save\", this._saveFired.bind(this));\n    this.__lock = false;\n    this.openDefault = false;\n    this.hidePanelOps = false;\n    this.hidePreferencesButton = false;\n    this.align = \"right\";\n    this.method = \"PUT\";\n    this.syncBody = false;\n    this.bodyValue = \"\";\n    this.hideMessage = false;\n    this.__imported = false;\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-token.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-block.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-views.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-entity.js\");\n    import(\"@lrnwebcomponents/simple-toast/simple-toast.js\").then(() => {\n      window.SimpleToast.requestAvailability();\n    });\n  }\n  _makeAppStore(val) {\n    this.__appStore = this.decodeHTMLEntities(val);\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"redirectLocation\") {\n        this.redirectOnSave = this._computeRedirectOnSave(this[propName]);\n      }\n      if (propName == \"activeHaxBody\" || propName == \"__ready\") {\n        this._activeHaxBodyUpdated(this.activeHaxBody, this.__ready);\n      }\n      if (propName == \"appStoreConnection\") {\n        this._makeAppStore(this[propName]);\n      }\n      if (\n        [\n          \"openDefault\",\n          \"allowedTags\",\n          \"hidePanelOps\",\n          \"hidePreferencesButton\",\n          \"align\"\n        ].includes(propName)\n      ) {\n        this._noticeTagChanges(\n          this.openDefault,\n          this.allowedTags,\n          this.hidePanelOps,\n          this.hidePreferencesButton,\n          this.align\n        );\n      }\n    });\n  }\n  /**\n   * detached life cycle\n   */\n  disconnectedCallback() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n    super.disconnectedCallback();\n  }\n  /**\n   * Attached to the DOM; now we can fire event to the store that\n   * we exist and are the thing being edited.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__applyMO();\n  }\n  __applyMO() {\n    // notice ANY change to body and bubble up, only when we are attached though\n    if (\n      !this._observer &&\n      this.syncBody &&\n      window.HaxStore &&\n      window.HaxStore.instance &&\n      window.HaxStore.instance.activeHaxBody\n    ) {\n      this._observer = new MutationObserver(mutations => {\n        if (!this.__lock) {\n          this.__lock = true;\n          this.dispatchEvent(\n            new CustomEvent(\"hax-body-content-changed\", {\n              bubbles: true,\n              cancelable: true,\n              composed: true,\n              detail: window.HaxStore.instance.activeHaxBody.haxToContent()\n            })\n          );\n          setTimeout(() => {\n            this.__lock = false;\n          }, 100);\n        }\n      });\n      this._observer.observe(window.HaxStore.instance.activeHaxBody, {\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this[e.detail.property] = {};\n      }\n      this[e.detail.property] = e.detail.value;\n    }\n  }\n\n  /**\n   * _saveFired\n   */\n  _saveFired(e) {\n    // generate sanitized content\n    this.shadowRoot.querySelector(\n      \"#pageupdateajax\"\n    ).body = window.HaxStore.instance.activeHaxBody.haxToContent();\n    // send the request\n    this.shadowRoot.querySelector(\"#pageupdateajax\").generateRequest();\n  }\n\n  /**\n   * _handleUpdateResponse\n   */\n  _handleUpdateResponse(e) {\n    if (!this.hideMessage) {\n      const evt = new CustomEvent(\"simple-toast-show\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          text: \"Saved!\",\n          duration: 3000\n        }\n      });\n      this.dispatchEvent(evt);\n      // support auto redirecting on save if that's been requested\n      // in the integration point\n      if (this.redirectOnSave) {\n        setTimeout(() => {\n          // trigger redirect\n          window.location = this.redirectLocation;\n        }, 500);\n      }\n    }\n  }\n}\nwindow.customElements.define(CmsHax.tag, CmsHax);\nexport { CmsHax };\n"],"names":["CmsHax","window","addEventListener","_this","_haxStorePropertyUpdated","bind","_storeReady","_saveFired","__lock","openDefault","hidePanelOps","hidePreferencesButton","align","method","syncBody","bodyValue","hideMessage","__imported","then","SimpleToast","requestAvailability","LitElement","html","this","endPoint","_handleUpdateResponse","__appStore","text","entities","i","max","length","replace","RegExp","bodyElement","ready","children","querySelector","importContent","innerHTML","redirectLocation","_typeof","allowedTags","HaxStore","instance","validTagList","haxTray","elementAlign","write","__applyMO","__ready","e","setTimeout","_this2","_noticeTagChanges","css","type","Boolean","reflect","attribute","String","Array","appStoreConnection","editMode","redirectOnSave","activeHaxBody","Object","val","decodeHTMLEntities","changedProperties","forEach","oldValue","propName","_this3","_computeRedirectOnSave","_activeHaxBodyUpdated","_makeAppStore","includes","_observer","disconnect","MutationObserver","mutations","_this4","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","haxToContent","observe","childList","subtree","value","property","shadowRoot","body","generateRequest","evt","duration","location","_this5","customElements","define","tag"],"mappings":"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"}