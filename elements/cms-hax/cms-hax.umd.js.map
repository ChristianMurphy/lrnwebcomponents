{"version":3,"file":"cms-hax.umd.js","sources":["cms-hax.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\nimport \"@lrnwebcomponents/h-a-x/h-a-x.js\";\nimport \"@lrnwebcomponents/simple-toast/simple-toast.js\";\n/**\n * `cms-hax`\n * @customElement cms-hax\n * @demo ../../demo/index.html\n */\nclass CmsHax extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      </style>\n      <iron-ajax\n        id=\"pageupdateajax\"\n        url=\"[[endPoint]]\"\n        method=\"[[method]]\"\n        body=\"[[updatePageData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleUpdateResponse\"\n      ></iron-ajax>\n      <h-a-x app-store$=\"[[appStoreConnection]]\"></h-a-x>\n    `;\n  }\n\n  static get tag() {\n    return \"cms-hax\";\n  }\n  static get observers() {\n    return [\n      \"_noticeTagChanges(openDefault, allowedTags, hideExportButton, hidePanelOps, hidePreferencesButton, align)\"\n    ];\n  }\n  static get properties() {\n    return {\n      /**\n       * Default the panel to open\n       */\n      openDefault: {\n        type: Boolean,\n        reflectToAttribute: true,\n        value: false\n      },\n      /**\n       * Hide the export button, showing it is good for developers\n       * or those doing QA testing of new elements.\n       */\n      hideExportButton: {\n        type: Boolean,\n        value: true\n      },\n      /**\n       * Hide the panel operations (save and cancel),\n       */\n      hidePanelOps: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide preferences button\n       */\n      hidePreferencesButton: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Direction to align the hax edit panel\n       */\n      align: {\n        type: String,\n        value: \"right\"\n      },\n      /**\n       * allowed Tags, usually as dictated by the input filtering\n       * layer of the backend system that HAX is riding on.\n       * While not fullproof, this at least will enforce front-end\n       * filtering to match what actually is going to be allowed\n       * to be saved in the first place.\n       */\n      allowedTags: {\n        type: Array\n      },\n      /**\n       * Location to save content to.\n       */\n      endPoint: {\n        type: String\n      },\n      /**\n       * Method to save content.\n       */\n      method: {\n        type: String,\n        value: \"PUT\"\n      },\n      /**\n       * Page data, body of text as a string.\n       */\n      updatePageData: {\n        type: String\n      },\n      /**\n       * Connection object for talking to an app store.\n       */\n      appStoreConnection: {\n        type: Object\n      },\n      /**\n       * State of the panel\n       */\n      editMode: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * syncBody\n       */\n      syncBody: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Only available if syncBody is true; this allows data binding to the value being worked on in hax-body tag\n       */\n      bodyValue: {\n        type: String,\n        value: \"\"\n      },\n      /**\n       * Flag to hide the toast.\n       */\n      hideMessage: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Optional URL to redirect to once we save.\n       */\n      redirectLocation: {\n        type: String\n      },\n      /**\n       * Option to redirect once we save successfully\n       */\n      redirectOnSave: {\n        type: Boolean,\n        computed: \"_computeRedirectOnSave(redirectLocation)\"\n      },\n      /**\n       * Reference to activeBody.\n       */\n      activeHaxBody: {\n        type: Object,\n        observer: \"_activeHaxBodyUpdated\"\n      },\n      __imported: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Ensure we've imported our content on initial setup\n   */\n  _activeHaxBodyUpdated(newValue, oldValue) {\n    // ensure we import our content once we get an initial registration of active body\n    if (newValue != null && !this.__imported) {\n      this.__imported = true;\n      // see what's inside of this, in a template tag\n      let children = this.querySelector(\"template\");\n      // convert this template content into the real thing\n      // this helps with correctly preserving everything on the way down\n      if (children != null) {\n        newValue.importContent(children.innerHTML);\n      }\n    }\n  }\n\n  /**\n   * Calculate if we have anywhere to redirect to.\n   */\n  _computeRedirectOnSave(redirectLocation) {\n    if (typeof redirectLocation !== typeof undefined) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Break the shadow root for this element (by design)\n   */\n  _attachDom(dom) {\n    this.appendChild(dom);\n  }\n  /**\n   * Set certain data bound values to the store once it's ready\n   */\n  _noticeTagChanges(\n    openDefault,\n    allowedTags,\n    hideExportButton,\n    hidePanelOps,\n    hidePreferencesButton,\n    align\n  ) {\n    if (window.HaxStore.ready) {\n      // double check because this can cause issues\n      if (allowedTags) {\n        window.HaxStore.instance.validTagList = allowedTags;\n      }\n      window.HaxStore.instance.haxPanel.hideExportButton = hideExportButton;\n      window.HaxStore.instance.haxPanel.hidePanelOps = hidePanelOps;\n      window.HaxStore.instance.haxPanel.hidePreferencesButton = hidePreferencesButton;\n      window.HaxStore.instance.haxPanel.align = align;\n      if (openDefault) {\n        window.HaxStore.write(\"editMode\", openDefault, this);\n      }\n    }\n  }\n  /**\n   * Set certain data bound values to the store once it's ready\n   */\n  _storeReady(e) {\n    // delay as there can be some timing issues with attributes in CMSs\n    setTimeout(() => {\n      // trigger the update of different parts of the global state\n      this._noticeTagChanges(\n        this.openDefault,\n        this.allowedTags,\n        this.hideExportButton,\n        this.hidePanelOps,\n        this.hidePreferencesButton,\n        this.align\n      );\n    }, 250);\n  }\n  /**\n   * Created life cycle\n   */\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-token.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-block.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-views.js\");\n    import(\"@lrnwebcomponents/cms-hax/lib/cms-entity.js\");\n  }\n  /**\n   * detached life cycle\n   */\n  disconnectedCallback() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n    window.removeEventListener(\"hax-store-ready\", this._storeReady.bind(this));\n    window.removeEventListener(\"hax-save\", this._saveFired.bind(this));\n    super.disconnectedCallback();\n  }\n  /**\n   * Attached to the DOM; now we can fire event to the store that\n   * we exist and are the thing being edited.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    window.addEventListener(\"hax-store-ready\", this._storeReady.bind(this));\n    window.SimpleToast.requestAvailability();\n    this.__lock = false;\n    window.addEventListener(\"hax-save\", this._saveFired.bind(this));\n    // notice ANY change to body and bubble up, only when we are attached though\n    if (this.syncBody) {\n      this._observer = FlattenedNodesObserver(\n        window.HaxStore.instance.activeHaxBody,\n        info => {\n          if (!this.__lock) {\n            this.__lock = true;\n            this.dispatchEvent(\n              new CustomEvent(\"hax-body-content-changed\", {\n                bubbles: true,\n                cancelable: true,\n                composed: true,\n                detail: window.HaxStore.instance.activeHaxBody.haxToContent()\n              })\n            );\n            setTimeout(() => {\n              this.__lock = false;\n            }, 100);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this.set(e.detail.property, null);\n      }\n      this.set(e.detail.property, e.detail.value);\n      this.notifyPath(e.detail.property);\n    }\n  }\n\n  /**\n   * _saveFired\n   */\n  _saveFired(e) {\n    // generate sanitized content\n    this.updatePageData = window.HaxStore.instance.activeHaxBody.haxToContent();\n    // send the request\n    this.shadowRoot.querySelector(\"#pageupdateajax\").generateRequest();\n  }\n\n  /**\n   * _handleUpdateResponse\n   */\n  _handleUpdateResponse(e) {\n    if (!this.hideMessage) {\n      const evt = new CustomEvent(\"simple-toast-show\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          text: \"Saved!\",\n          duration: 3000\n        }\n      });\n      this.dispatchEvent(evt);\n      // support auto redirecting on save if that's been requested\n      // in the integration point\n      if (this.redirectOnSave) {\n        setTimeout(() => {\n          // trigger redirect\n          window.location = this.redirectLocation;\n        }, 500);\n      }\n    }\n  }\n}\nwindow.customElements.define(CmsHax.tag, CmsHax);\nexport { CmsHax };\n"],"names":["CmsHax","PolymerElement","newValue","oldValue","this","__imported","children","querySelector","importContent","innerHTML","redirectLocation","_typeof","dom","appendChild","openDefault","allowedTags","hideExportButton","hidePanelOps","hidePreferencesButton","align","window","HaxStore","ready","instance","validTagList","haxPanel","write","e","setTimeout","_this2","_noticeTagChanges","html","type","Boolean","reflectToAttribute","value","String","Array","endPoint","method","updatePageData","appStoreConnection","Object","editMode","syncBody","bodyValue","hideMessage","redirectOnSave","computed","activeHaxBody","observer","_observer","disconnect","removeEventListener","_storeReady","bind","_saveFired","addEventListener","_haxStorePropertyUpdated","SimpleToast","requestAvailability","__lock","FlattenedNodesObserver","info","_this3","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","haxToContent","property","set","notifyPath","shadowRoot","generateRequest","evt","text","duration","location","_this4","customElements","define","tag"],"mappings":"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"}