{"version":3,"file":"lrndesign-avatar.umd.js","sources":["lrndesign-avatar.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SimpleColorsPolymer } from \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\n/**\n * `lrndesign-avatar`\n * `Visualize a user account eitehr with an image, a label, or as abstract art.`\n * @demo demo/index.html\n */\nclass LrndesignAvatar extends SimpleColorsPolymer {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/paper-avatar/paper-avatar.js\");\n  }\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: block;\n        }\n        paper-avatar {\n          color: var(--simple-colors-default-theme-grey-1);\n          background-color: var(--simple-colors-default-theme-accent-8);\n          --paper-avatar-width: var(--lrndesign-avatar-width, 40px);\n          --paper-avatar-height: var(--lrndesign-avatar-height, 40px);\n          --paper-avatar-text-color: var(--simple-colors-default-theme-grey-1);\n        }\n      </style>\n      <paper-avatar\n        label=\"[[label]]\"\n        src=\"[[src]]\"\n        two-chars=\"[[twoChars]]\"\n        style$=\"background-color:[[hexColor]];\"\n        jdenticon=\"[[jdenticon]]\"\n      ></paper-avatar>\n    `;\n  }\n\n  static get tag() {\n    return \"lrndesign-avatar\";\n  }\n\n  _getAccentColor(color) {\n    color = color.replace(\"-text\", \"\");\n    if (\n      (!this.accentColor || this.accentColor === \"grey\") &&\n      this.colors[color]\n    ) {\n      this.accentColor = color;\n    }\n  }\n\n  static get properties() {\n    return {\n      /**\n       * text to use for avatar\n       */\n      label: {\n        type: String,\n        value: \"lrndesign-avatar\"\n      },\n      /**\n       * link to an image, optional\n       */\n      src: {\n        type: String\n      },\n      /**\n       * Mode for presenting 1st two letters\n       */\n      twoChars: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Color class work to apply\n       */\n      color: {\n        type: String,\n        value: \"blue\",\n        reflectToAttribute: true,\n        observer: \"_getAccentColor\"\n      },\n      /**\n       * Form abstract art from hash of label\n       */\n      jdenticon: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n}\nwindow.customElements.define(LrndesignAvatar.tag, LrndesignAvatar);\nexport { LrndesignAvatar };\n"],"names":["LrndesignAvatar","SimpleColorsPolymer","html","label","type","String","value","src","twoChars","Boolean","color","reflectToAttribute","observer","jdenticon","replace","this","accentColor","colors","window","customElements","define","tag"],"mappings":"q6DAOMA,8KAGK,0SAHmBC,oEAMnBC,8CAwBA,4DAcA,CAILC,MAAO,CACLC,KAAMC,OACNC,MAAO,oBAKTC,IAAK,CACHH,KAAMC,QAKRG,SAAU,CACRJ,KAAMK,QACNH,OAAO,GAKTI,MAAO,CACLN,KAAMC,OACNC,MAAO,OACPK,oBAAoB,EACpBC,SAAU,mBAKZC,UAAW,CACTT,KAAMK,QACNH,OAAO,iDA9CGI,GACdA,EAAQA,EAAMI,QAAQ,QAAS,IAE3BC,KAAKC,aAAoC,SAArBD,KAAKC,cAC3BD,KAAKE,OAAOP,UAEPM,YAAcN,wCA6CzBQ,OAAOC,eAAeC,OAAOpB,EAAgBqB,IAAKrB"}