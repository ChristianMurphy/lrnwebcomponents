{"version":3,"file":"progress-donut.umd.js","sources":["progress-donut.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { SchemaBehaviors } from \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport { SimpleColorsPolymer } from \"@lrnwebcomponents/simple-colors/lib/simple-colors-polymer.js\";\nimport \"@lrnwebcomponents/chartist-render/chartist-render.js\";\n/**\n * `progress-donut`\n * `Showing progression in a circle shape w/ hollow middle`\n *\n * @demo demo/index.html\n *\n * @microcopy - the mental model for this element\n *  -\n */\nclass ProgressDonut extends SchemaBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          background-color: var(--simple-colors-background1, #ffffff);\n          overflow: visible;\n          display: block;\n        }\n        :host #wrapper {\n          margin: 0 auto;\n          position: relative;\n        }\n        :host #wrapper > * {\n          position: absolute;\n        }\n        :host #wrapper #chart {\n          left: 0;\n          top: 0;\n        }\n        :host #wrapper,\n        :host #wrapper #chart {\n          width: 250px;\n          height: 250px;\n        }\n        :host([size=\"xs\"]) #wrapper,\n        :host([size=\"xs\"]) #wrapper #chart {\n          width: 150px;\n          height: 150px;\n        }\n        :host([size=\"sm\"]) #wrapper,\n        :host([size=\"sm\"]) #wrapper #chart {\n          width: 200px;\n          height: 200px;\n        }\n        :host([size=\"lg\"]) #wrapper,\n        :host([size=\"lg\"]) #wrapper #chart {\n          width: 300px;\n          height: 300px;\n        }\n        :host([size=\"xl\"]) #wrapper,\n        :host([size=\"xl\"]) #wrapper #chart {\n          width: 400px;\n          height: 400px;\n        }\n        :host #wrapper > #image {\n          left: 20%;\n          top: 20%;\n          width: 60%;\n          height: 60%;\n          -webkit-clip-path: circle(50% at 50% 50%);\n          clip-path: circle(50% at 50% 50%);\n        }\n      </style>\n      <div id=\"wrapper\">\n        <img\n          id=\"image\"\n          alt\\$=\"[[imageAlt]]\"\n          aria-hidden=\"true\"\n          hidden\\$=\"[[!imageSrc]]\"\n          src\\$=\"[[imageSrc]]\"\n          style\\$=\"[[imageStyle]]\"\n        />\n        <chartist-render\n          id=\"chart\"\n          data\\$=\"[[data]]\"\n          chart-desc\\$=\"[[desc]]\"\n          chart-title=\"[[title]]\"\n          scale=\"ct-square\"\n          options\\$=\"[[options]]\"\n          title\\$=\"[[title]]\"\n          type=\"pie\"\n        >\n        </chartist-render>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"progress-donut\";\n  }\n  static get properties() {\n    let props = {\n      /**\n       * An array of completed values\n       */\n      complete: {\n        type: Array,\n        value: []\n      },\n      /**\n       * The thickness of the donut from 0-100\n       */\n      donutThickness: {\n        type: Number\n      },\n      /**\n       * An array of hex codes to use as colors for each section.\n       * If null, colors are determined by accentColor & dark properties\n       */\n      colors: {\n        type: Array,\n        value: null\n      },\n      /**\n       * An array of data for the donut chart\n       */\n      data: {\n        type: Array,\n        computed: \"_getData(complete)\"\n      },\n      /**\n       * Accessible long description\n       */\n      desc: {\n        type: String,\n        value: null\n      },\n      /**\n       * An array of data for the donut chart\n       */\n      options: {\n        type: Array,\n        computed: \"_getOptions(complete,total,size,colors,accentColor,dark)\"\n      },\n      /**\n       * The source of the image in the center of the object.\n       */\n      imageSrc: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * The alt text for the image.\n       */\n      imageAlt: {\n        type: String,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * The style for the image based on the size of the donut\n       */\n      imageStyle: {\n        type: String,\n        computed: \"_getImageStyle(size)\"\n      },\n      /**\n       * The size of the progress-donut: sx, sm, md, lg, or xl. Default is md\n       */\n      size: {\n        type: String,\n        value: \"md\",\n        reflectToAttribute: true\n      },\n      /**\n       * Title\n       */\n      title: {\n        type: String\n      },\n      /**\n       * a selected accent-color: grey, red, pink, purple, etc.\n       */\n      accentColor: {\n        type: String,\n        value: \"grey\",\n        reflectToAttribute: true\n      },\n      /**\n       * An array of incomplete values\n       */\n      total: {\n        type: Number,\n        value: 100\n      }\n    };\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Sample gizmo\",\n        description: \"The user will be able to see this for selection in a UI.\",\n        icon: \"av:play-circle-filled\",\n        color: \"grey\",\n        groups: [\"Video\", \"Media\"],\n        handles: [\n          {\n            type: \"video\",\n            url: \"source\"\n          }\n        ],\n        meta: {\n          author: \"Your organization on github\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        advanced: []\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener(\"chartist-render-draw\", this._onCreated.bind(this));\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"chartist-render-draw\",\n      this._onCreated.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n  /**\n   * Makes chart and returns the chart object.\n   */\n  _getData(complete) {\n    return { series: complete };\n  }\n\n  /**\n   * Makes chart and returns the chart object.\n   */\n  _getImageStyle(size) {\n    let offset = \"22%\",\n      diameter = \"56%\";\n    if (this.size === \"xs\") {\n      offset = \"32%\";\n      diameter = \"36%\";\n    } else if (this.size === \"sm\") {\n      offset = \"26%\";\n      diameter = \"48%\";\n    } else if (this.size === \"lg\") {\n      offset = \"20%\";\n      diameter = \"60%\";\n    } else if (this.size === \"xl\") {\n      offset = \"17%\";\n      diameter = \"66%\";\n    }\n    return (\n      \"left: \" +\n      offset +\n      \"; top: \" +\n      offset +\n      \"; width: \" +\n      diameter +\n      \"; height: \" +\n      diameter +\n      \";\"\n    );\n  }\n\n  /**\n   * Makes chart and returns the chart object.\n   */\n  _getOptions(complete, total, size, colors, accentColor, dark) {\n    let sum = 0;\n    for (let i = 0; i < complete.length; i++) {\n      sum += parseFloat(complete[i]);\n    }\n    return {\n      donut: true,\n      showLabel: false,\n      startAngle: 0,\n      total: Math.max(sum, total)\n    };\n  }\n\n  /**\n   * Handles chart creation event.\n   */\n  _onCreated(e) {\n    this.__chart = e.detail;\n    this.makeChart(this.__chart);\n  }\n\n  /**\n   * Makes chart and returns the chart object.\n   */\n  makeChart(chart) {\n    if (chart !== undefined) {\n      let colors = this.colors,\n        strokeWidth = \"10%\",\n        hex = SimpleColorsPolymer.colors,\n        accent =\n          this.accentColor !== null\n            ? this.accentColor.replace(/-([a-z])/g, function(g) {\n                return g[1].toUpperCase();\n              })\n            : null;\n      if (colors === undefined || colors === null || colors.length === 0) {\n        if (accent !== null && hex[accent] !== null) {\n          colors = this.dark\n            ? [\n                hex[accent][9],\n                hex[accent][6],\n                hex[accent][3],\n                hex[accent][7],\n                hex[accent][4]\n              ]\n            : [\n                hex[accent][0],\n                hex[accent][3],\n                hex[accent][5],\n                hex[accent][2],\n                hex[accent][4]\n              ];\n        } else {\n          colors = this.dark\n            ? [\n                hex.orange[6],\n                hex.pink[4],\n                hex.purple[5],\n                hex.cyan[6],\n                hex.lime[5]\n              ]\n            : [\n                hex.pink[5],\n                hex.deepPurple[4],\n                hex.blue[3],\n                hex.teal[4],\n                hex.yellow[5]\n              ];\n        }\n      }\n\n      if (this.size === \"xs\") {\n        strokeWidth = \"8%\";\n      } else if (this.size === \"sm\") {\n        strokeWidth = \"9%\";\n      } else if (this.size === \"lg\") {\n        strokeWidth = \"11%\";\n      } else if (this.size === \"xl\") {\n        strokeWidth = \"12%\";\n      }\n      // From chartist.js docs:\n      chart.on(\"draw\", function(data) {\n        data.element._node.style.strokeWidth = strokeWidth;\n        data.element._node.style.stroke = colors[data.index % colors.length];\n        if (data.type === \"slice\") {\n          var pathLength = data.element._node.getTotalLength();\n          data.element.attr({\n            \"stroke-dasharray\": pathLength + \"px \" + pathLength + \"px\"\n          });\n          var animationDefinition = {\n            \"stroke-dashoffset\": {\n              id: \"anim\" + data.index,\n              dur: 500,\n              from: -pathLength + \"px\",\n              to: \"0px\",\n              easing: Chartist.Svg.Easing.easeOutQuint,\n              fill: \"freeze\"\n            }\n          };\n          if (data.index !== 0) {\n            animationDefinition[\"stroke-dashoffset\"].begin =\n              \"anim\" + (data.index - 1) + \".end\";\n          }\n          data.element.attr({ \"stroke-dashoffset\": -pathLength + \"px\" });\n          data.element.animate(animationDefinition, false);\n        }\n      });\n      return chart;\n    }\n  }\n}\nwindow.customElements.define(ProgressDonut.tag, ProgressDonut);\nexport { ProgressDonut };\n"],"names":["ProgressDonut","SchemaBehaviors","PolymerElement","html","props","complete","type","Array","value","donutThickness","Number","colors","data","computed","desc","String","options","imageSrc","reflectToAttribute","imageAlt","imageStyle","size","title","accentColor","total","Object","assign","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","url","meta","author","settings","quick","property","inputMethod","configure","advanced","addEventListener","this","_onCreated","bind","removeEventListener","series","offset","diameter","dark","sum","i","length","parseFloat","donut","showLabel","startAngle","Math","max","e","__chart","detail","makeChart","chart","undefined","strokeWidth","hex","SimpleColorsPolymer","accent","replace","g","toUpperCase","orange","pink","purple","cyan","lime","deepPurple","blue","teal","yellow","on","element","_node","style","stroke","index","pathLength","getTotalLength","attr","animationDefinition","id","dur","from","to","easing","Chartist","Svg","Easing","easeOutQuint","fill","begin","animate","window","customElements","define","tag"],"mappings":"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"}