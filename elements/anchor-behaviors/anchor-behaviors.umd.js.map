{"version":3,"file":"anchor-behaviors.umd.js","sources":["anchor-behaviors.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\n// register globally so we can make sure there is only one\nwindow.AnchorBehaviors = window.AnchorBehaviors || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same anchor-behaviors element, making it a singleton.\nwindow.AnchorBehaviors.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.AnchorBehaviors.instance) {\n    window.AnchorBehaviors.instance = document.createElement(\"anchor-behaviors\");\n    document.body.appendChild(window.AnchorBehaviors.instance);\n  }\n  return window.AnchorBehaviors.instance;\n};\n\n/**\n * `anchor-behaviors`\n * `handles anchors and params in the url`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass AnchorBehaviors extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"anchor-behaviors\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n    window.addEventListener(\"anchor-behaviors-hide\", this.hideAnchorBehaviors.bind(this));\n    window.addEventListener(\"anchor-behaviors-show\", this.showAnchorBehaviors.bind(this));\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    super.connectedCallback();\n    window.removeEventListener(\"anchor-behaviors-hide\", this.hideAnchorBehaviors.bind(this));\n    window.removeEventListener(\"anchor-behaviors-show\", this.showAnchorBehaviors.bind(this));\n  }\n  /**\n   * Hide callback\n   */\n  hideAnchorBehaviors (e) {\n    // add your code to run when the singleton hides\n  }\n  /**\n   * Show / available callback\n   */\n  showAnchorBehaviors (e) {\n    // add your code to run when the singleton is called for\n  }\n\n  \n}\nwindow.customElements.define(AnchorBehaviors.tag, AnchorBehaviors);\nexport { AnchorBehaviors };\n"],"names":["window","AnchorBehaviors","requestAvailability","instance","document","createElement","body","appendChild","PolymerElement","html","addEventListener","this","hideAnchorBehaviors","bind","showAnchorBehaviors","removeEventListener","e","customElements","define","tag"],"mappings":"u6CAMAA,OAAOC,gBAAkBD,OAAOC,iBAAmB,GAInDD,OAAOC,gBAAgBC,oBAAsB,kBAEtCF,OAAOC,gBAAgBE,WAC1BH,OAAOC,gBAAgBE,SAAWC,SAASC,cAAc,oBACzDD,SAASE,KAAKC,YAAYP,OAAOC,gBAAgBE,WAE5CH,OAAOC,gBAAgBE,cAc1BF,gaAAwBO,+DAInBC,qDAcA,qCAQA,0HAQPT,OAAOU,iBAAiB,wBAAyBC,KAAKC,oBAAoBC,KAAKF,OAC/EX,OAAOU,iBAAiB,wBAAyBC,KAAKG,oBAAoBD,KAAKF,4GAO/EX,OAAOe,oBAAoB,wBAAyBJ,KAAKC,oBAAoBC,KAAKF,OAClFX,OAAOe,oBAAoB,wBAAyBJ,KAAKG,oBAAoBD,KAAKF,mDAK/DK,gDAMAA,yCAMvBhB,OAAOiB,eAAeC,OAAOjB,EAAgBkB,IAAKlB"}