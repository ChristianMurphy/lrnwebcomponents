{"version":3,"file":"wikipedia-query.umd.js","sources":["wikipedia-query.umd.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `wikipedia-query`\n * `Query and present information from wikipedia.`\n *\n * @demo demo/index.html\n */\nclass WikipediaQuery extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/citation-element/citation-element.js\");\n    afterNextRender(this, function() {\n      this.HAXWiring = new HAXWiring();\n      this.HAXWiring.setup(\n        WikipediaQuery.haxProperties,\n        WikipediaQuery.tag,\n        this\n      );\n    });\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"wikipedia-query\";\n  }\n  // render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          --wikipedia-query-body-height: 160px;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        #result {\n          height: var(--wikipedia-query-body-height);\n          overflow: scroll;\n          border: 1px grey solid;\n          padding: 8px 16px;\n        }\n        citation-element {\n          background-color: #f8f8f8;\n          padding: 16px 8px;\n          font-size: 12px;\n        }\n      </style>\n      <iron-ajax\n        auto\n        url$=\"https://en.wikipedia.org/w/api.php?origin=*&amp;action=query&amp;titles=[[search]]&amp;prop=extracts&amp;format=json\"\n        handle-as=\"json\"\n        on-response=\"handleResponse\"\n        debounce-duration=\"250\"\n        last-response=\"{{searchResponse}}\"\n      ></iron-ajax>\n      <h3 hidden$=\"[[!showTitle]]\">[[search]] Wikipedia article</h3>\n      <div id=\"result\" hidden$=\"[[!__rendercontent]]\"></div>\n      <citation-element\n        hidden$=\"[[!__rendercontent]]\"\n        creator=\"{Wikipedia contributors}\"\n        scope=\"sibling\"\n        license=\"by-sa\"\n        title=\"[[search]] --- {Wikipedia}{,} The Free Encyclopedia\"\n        source=\"https://en.wikipedia.org/w/index.php?title=[[search]]\"\n        date=\"[[__now]]\"\n      ></citation-element>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * ShowTitle\n       */\n      showTitle: {\n        type: Boolean,\n        value: true\n      },\n      /**\n       * Search string.\n       */\n      search: {\n        type: String,\n        value: \"Polymer (library)\"\n      },\n      /**\n       * Render the response as..\n       */\n      renderAs: {\n        type: String,\n        value: \"content\",\n        observer: \"_renderAsUpdated\"\n      },\n      /**\n       * Response to parse.\n       */\n      searchResponse: {\n        type: Object\n      }\n    };\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Wikipedia article\",\n        description:\n          \"This can display a wikipedia article in context in a variety of formats.\",\n        icon: \"book\",\n        color: \"green\",\n        groups: [\"Content\", \"Creative Commons\"],\n        handles: [\n          {\n            type: \"content\",\n            title: \"search\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          },\n          {\n            property: \"showTitle\",\n            title: \"Show title\",\n            description: \"Whether or not to render the title of the article.\",\n            inputMethod: \"boolean\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          }\n        ]\n      },\n      saveOptions: {\n        wipeSlot: true\n      }\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    let date = new Date(Date.now());\n    this.__now =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n  }\n  /**\n   * Convert renderas into a variable.\n   */\n  _renderAsUpdated(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined) {\n      this._resetRenderMethods();\n    }\n  }\n  /**\n   * Validate input method.\n   */\n  _validRenderMethods() {\n    var methods = [\"content\"];\n    return methods;\n  }\n  /**\n   * Reset all our meta attributes.\n   */\n  _resetRenderMethods() {\n    let methods = this._validRenderMethods();\n    for (var i = 0; i < methods.length; i++) {\n      this[\"__render\" + methods[i]] = false;\n    }\n  }\n\n  /**\n   * Process response from wikipedia.\n   */\n  handleResponse(response) {\n    // the key of pages is a number so need to look for it\n    if (\n      typeof this.searchResponse !== typeof undefined &&\n      this.searchResponse.query\n    ) {\n      this[`__render${this.renderAs}`] = true;\n      for (var key in this.searchResponse.query.pages) {\n        // skip anything that's prototype object\n        if (!this.searchResponse.query.pages.hasOwnProperty(key)) continue;\n        // load object response, double check we have an extract\n        if (this.searchResponse.query.pages[key].extract) {\n          let html = this.searchResponse.query.pages[key].extract;\n          html = html.replace(/<script[\\s\\S]*?>/gi, \"&lt;script&gt;\");\n          html = html.replace(/<\\/script>/gi, \"&lt;/script&gt;\");\n          html = html.replace(/<style[\\s\\S]*?>/gi, \"&lt;style&gt;\");\n          html = html.replace(/<\\/style>/gi, \"&lt;/style&gt;\");\n          // need to innerHTML this or it won't set\n          this.shadowRoot.querySelector(\"#result\").innerHTML = html;\n        }\n      }\n    }\n  }\n}\nwindow.customElements.define(WikipediaQuery.tag, WikipediaQuery);\nexport { WikipediaQuery };\n"],"names":["WikipediaQuery","afterNextRender","HAXWiring","setup","haxProperties","tag","this","PolymerElement","html","showTitle","type","Boolean","value","search","String","renderAs","observer","searchResponse","Object","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","required","configure","saveOptions","wipeSlot","date","Date","now","__now","getDate","getMonth","getFullYear","newValue","oldValue","_typeof","_resetRenderMethods","methods","_validRenderMethods","i","length","response","query","key","pages","hasOwnProperty","extract","replace","shadowRoot","querySelector","innerHTML","window","customElements","define"],"mappings":"kmGAUMA,uOAGK,0DACPC,uBAAsB,gBACfC,UAAY,IAAIA,iBAChBA,UAAUC,MACbH,EAAeI,cACfJ,EAAeK,IACfC,gQATqBC,yDAkBlB,0DAIAC,qDA2CA,CAILC,UAAW,CACTC,KAAMC,QACNC,OAAO,GAKTC,OAAQ,CACNH,KAAMI,OACNF,MAAO,qBAKTG,SAAU,CACRL,KAAMI,OACNF,MAAO,UACPI,SAAU,oBAKZC,eAAgB,CACdP,KAAMQ,qDAKH,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,oBACPC,YACE,2EACFC,KAAM,OACNC,MAAO,QACPC,OAAQ,CAAC,UAAW,oBACpBC,QAAS,CACP,CACElB,KAAM,UACNa,MAAO,WAGXM,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,SACVV,MAAO,cACPC,YAAa,gCACbU,YAAa,YACbT,KAAM,eACNU,UAAU,GAEZ,CACEF,SAAU,YACVV,MAAO,aACPC,YAAa,qDACbU,YAAa,UACbT,KAAM,iBAGVW,UAAW,CACT,CACEH,SAAU,SACVV,MAAO,cACPC,YAAa,gCACbU,YAAa,YACbT,KAAM,eACNU,UAAU,KAIhBE,YAAa,CACXC,UAAU,+GAMVC,EAAO,IAAIC,KAAKA,KAAKC,YACpBC,MACHH,EAAKI,UAAY,KAAOJ,EAAKK,WAAa,GAAK,IAAML,EAAKM,uDAK7CC,EAAUC,iBACrBC,EAAOF,SACJG,0EAOO,CAAC,iEAOXC,EAAU5C,KAAK6C,sBACVC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,SAC7B,WAAaF,EAAQE,KAAM,yCAOrBE,oBAGXN,EAAO1C,KAAKW,iBACZX,KAAKW,eAAesC,UAGf,IAAIC,4BADOlD,KAAKS,YAAc,EACnBT,KAAKW,eAAesC,MAAME,SAEnCnD,KAAKW,eAAesC,MAAME,MAAMC,eAAeF,IAEhDlD,KAAKW,eAAesC,MAAME,MAAMD,GAAKG,QAAS,KAC5CnD,EAAOF,KAAKW,eAAesC,MAAME,MAAMD,GAAKG,QAIhDnD,GADAA,GADAA,GADAA,EAAOA,EAAKoD,QAAQ,qBAAsB,mBAC9BA,QAAQ,eAAgB,oBACxBA,QAAQ,oBAAqB,kBAC7BA,QAAQ,cAAe,uBAE9BC,WAAWC,cAAc,WAAWC,UAAYvD,wCAM/DwD,OAAOC,eAAeC,OAAOlE,EAAeK,IAAKL"}