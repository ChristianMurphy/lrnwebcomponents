{"version":3,"file":"wikipedia-query.umd.js","sources":["wikipedia-query.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n * `wikipedia-query`\n * @customElement wikipedia-query\n * `Query and present information from wikipedia.`\n *\n * @demo demo/index.html\n */\nclass WikipediaQuery extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          --wikipedia-query-body-height: 160px;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        #result {\n          height: var(--wikipedia-query-body-height);\n          overflow: scroll;\n          border: 1px grey solid;\n          padding: 8px 16px;\n        }\n        citation-element {\n          background-color: #f8f8f8;\n          padding: 16px 8px;\n          font-size: 12px;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/citation-element/citation-element.js\");\n    this.hideTitle = false;\n    this.search = \"Web_Components\";\n    this.renderAs = \"content\";\n    let date = new Date(Date.now());\n    this.__now =\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"wikipedia-query\";\n  }\n  // LitElement render function\n  render() {\n    return html`\n      <iron-ajax\n        auto\n        url=\"https://en.wikipedia.org/w/api.php?origin=*&amp;action=query&amp;titles=${this\n          .search}&amp;prop=extracts&amp;format=json\"\n        handle-as=\"json\"\n        @response=\"${this.handleResponse}\"\n        debounce-duration=\"25\"\n        @last-response-changed=\"${this.searchResponseChanged}\"\n      ></iron-ajax>\n      <h3 .hidden=\"${this.hideTitle}\">${this._title}</h3>\n      <div id=\"result\" .hidden=\"${!this.__rendercontent}\"></div>\n      <citation-element\n        .hidden=\"${!this.__rendercontent}\"\n        creator=\"{Wikipedia contributors}\"\n        scope=\"sibling\"\n        license=\"by-sa\"\n        title=\"${this.search} --- {Wikipedia}{,} The Free Encyclopedia\"\n        source=\"https://en.wikipedia.org/w/index.php?title=${this.search}\"\n        date=\"${this.__now}\"\n      ></citation-element>\n    `;\n  }\n  searchResponseChanged(e) {\n    this.searchResponse = e.detail.value;\n  }\n  /**\n   * LitElement properties updated\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"search\") {\n        if (this.title) {\n          this._title = this.title;\n        } else {\n          this._title = this[propName].replace(\"_\", \" \") + \" Wikipedia article\";\n        }\n      }\n      if (propName == \"title\") {\n        if (this.title) {\n          this._title = this.title;\n        }\n      }\n      if (propName == \"renderAs\") {\n        // observer\n        this._renderAsUpdated(this[propName], oldValue);\n      }\n    });\n  }\n  static get properties() {\n    return {\n      title: {\n        type: String\n      },\n      __now: {\n        type: String\n      },\n      _title: {\n        type: String\n      },\n      __rendercontent: {\n        type: String\n      },\n      /**\n       * hideTitle\n       */\n      hideTitle: {\n        type: Boolean,\n        attribute: \"hide-title\"\n      },\n      /**\n       * Search string.\n       */\n      search: {\n        type: String\n      },\n      /**\n       * Render the response as..\n       */\n      renderAs: {\n        type: String,\n        attribute: \"render-as\"\n      },\n      /**\n       * Response to parse.\n       */\n      searchResponse: {\n        type: Object\n      }\n    };\n  }\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Wikipedia article\",\n        description:\n          \"This can display a wikipedia article in context in a variety of formats.\",\n        icon: \"book\",\n        color: \"green\",\n        groups: [\"Content\", \"Creative Commons\"],\n        handles: [\n          {\n            type: \"content\",\n            title: \"search\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          },\n          {\n            property: \"hideTitle\",\n            title: \"Hide title\",\n            description: \"Whether or not to render the title of the article.\",\n            inputMethod: \"boolean\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"search\",\n            title: \"Search term\",\n            description: \"Word to search wikipedia for.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\",\n            required: true\n          }\n        ]\n      },\n      saveOptions: {\n        wipeSlot: true\n      }\n    };\n  }\n  /**\n   * Convert renderas into a variable.\n   */\n  _renderAsUpdated(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined) {\n      this._resetRenderMethods();\n    }\n  }\n  /**\n   * Validate input method.\n   */\n  _validRenderMethods() {\n    var methods = [\"content\"];\n    return methods;\n  }\n  /**\n   * Reset all our meta attributes.\n   */\n  _resetRenderMethods() {\n    let methods = this._validRenderMethods();\n    for (var i = 0; i < methods.length; i++) {\n      this[\"__render\" + methods[i]] = false;\n    }\n  }\n\n  /**\n   * Process response from wikipedia.\n   */\n  handleResponse(response) {\n    // the key of pages is a number so need to look for it\n    if (\n      typeof this.searchResponse !== typeof undefined &&\n      this.searchResponse.query\n    ) {\n      this[`__render${this.renderAs}`] = true;\n      for (var key in this.searchResponse.query.pages) {\n        // skip anything that's prototype object\n        if (!this.searchResponse.query.pages.hasOwnProperty(key)) continue;\n        // load object response, double check we have an extract\n        if (this.searchResponse.query.pages[key].extract) {\n          let html = this.searchResponse.query.pages[key].extract;\n          html = html.replace(/<script[\\s\\S]*?>/gi, \"&lt;script&gt;\");\n          html = html.replace(/<\\/script>/gi, \"&lt;/script&gt;\");\n          html = html.replace(/<style[\\s\\S]*?>/gi, \"&lt;style&gt;\");\n          html = html.replace(/<\\/style>/gi, \"&lt;/style&gt;\");\n          // need to innerHTML this or it won't set\n          this.shadowRoot.querySelector(\"#result\").innerHTML = html;\n        }\n      }\n    }\n  }\n}\nwindow.customElements.define(WikipediaQuery.tag, WikipediaQuery);\nexport { WikipediaQuery };\n"],"names":["WikipediaQuery","hideTitle","search","renderAs","date","Date","now","__now","getDate","getMonth","getFullYear","LitElement","css","html","this","handleResponse","searchResponseChanged","_title","__rendercontent","e","searchResponse","detail","value","changedProperties","forEach","oldValue","propName","_this2","title","replace","_renderAsUpdated","newValue","_typeof","_resetRenderMethods","methods","_validRenderMethods","i","length","response","query","key","pages","hasOwnProperty","extract","shadowRoot","querySelector","innerHTML","type","String","Boolean","attribute","Object","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","required","configure","saveOptions","wipeSlot","window","customElements","define","tag"],"mappings":"kmFASMA,wKA8BK,4DACFC,WAAY,IACZC,OAAS,mBACTC,SAAW,cACZC,EAAO,IAAIC,KAAKA,KAAKC,gBACpBC,MACHH,EAAKI,UAAY,KAAOJ,EAAKK,WAAa,GAAK,IAAML,EAAKM,4PApCnCC,2DAKlB,CACLC,2DAyCKC,WAG4EC,KAC5EZ,OAEUY,KAAKC,eAEQD,KAAKE,sBAElBF,KAAKb,UAAca,KAAKG,QACVH,KAAKI,iBAEpBJ,KAAKI,gBAIRJ,KAAKZ,OACuCY,KAAKZ,OAClDY,KAAKP,qDAIGY,QACfC,eAAiBD,EAAEE,OAAOC,sCAKzBC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,UAAZA,IACEC,EAAKC,MACPD,EAAKV,OAASU,EAAKC,MAEnBD,EAAKV,OAASU,EAAKD,GAAUG,QAAQ,IAAK,KAAO,sBAGrC,SAAZH,GACEC,EAAKC,QACPD,EAAKV,OAASU,EAAKC,OAGP,YAAZF,GAEFC,EAAKG,iBAAiBH,EAAKD,GAAWD,8CAyG3BM,EAAUN,iBACrBO,EAAOD,SACJE,0EAOO,CAAC,iEAOXC,EAAUpB,KAAKqB,sBACVC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,SAC7B,WAAaF,EAAQE,KAAM,yCAOrBE,oBAGXN,EAAOlB,KAAKM,iBACZN,KAAKM,eAAemB,UAGf,IAAIC,4BADO1B,KAAKX,YAAc,EACnBW,KAAKM,eAAemB,MAAME,SAEnC3B,KAAKM,eAAemB,MAAME,MAAMC,eAAeF,IAEhD1B,KAAKM,eAAemB,MAAME,MAAMD,GAAKG,QAAS,KAC5C9B,EAAOC,KAAKM,eAAemB,MAAME,MAAMD,GAAKG,QAIhD9B,GADAA,GADAA,GADAA,EAAOA,EAAKgB,QAAQ,qBAAsB,mBAC9BA,QAAQ,eAAgB,oBACxBA,QAAQ,oBAAqB,kBAC7BA,QAAQ,cAAe,uBAE9Be,WAAWC,cAAc,WAAWC,UAAYjC,uCArMpD,2DAsDA,CACLe,MAAO,CACLmB,KAAMC,QAERzC,MAAO,CACLwC,KAAMC,QAER/B,OAAQ,CACN8B,KAAMC,QAER9B,gBAAiB,CACf6B,KAAMC,QAKR/C,UAAW,CACT8C,KAAME,QACNC,UAAW,cAKbhD,OAAQ,CACN6C,KAAMC,QAKR7C,SAAU,CACR4C,KAAMC,OACNE,UAAW,aAKb9B,eAAgB,CACd2B,KAAMI,qDAKH,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACL3B,MAAO,oBACP4B,YACE,2EACFC,KAAM,OACNC,MAAO,QACPC,OAAQ,CAAC,UAAW,oBACpBC,QAAS,CACP,CACEb,KAAM,UACNnB,MAAO,WAGXiC,KAAM,CACJC,OAAQ,YAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,SACVrC,MAAO,cACP4B,YAAa,gCACbU,YAAa,YACbT,KAAM,eACNU,UAAU,GAEZ,CACEF,SAAU,YACVrC,MAAO,aACP4B,YAAa,qDACbU,YAAa,UACbT,KAAM,iBAGVW,UAAW,CACT,CACEH,SAAU,SACVrC,MAAO,cACP4B,YAAa,gCACbU,YAAa,YACbT,KAAM,eACNU,UAAU,KAIhBE,YAAa,CACXC,UAAU,aAwDlBC,OAAOC,eAAeC,OAAOzE,EAAe0E,IAAK1E"}