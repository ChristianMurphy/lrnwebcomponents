{"version":3,"file":"rich-text-editor.umd.js","sources":["lib/rich-text-editor-button.js","lib/rich-text-editor-styles.js","rich-text-editor.umd.js"],"sourcesContent":["/**\n * Copyright 2019 Penn State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n * `rich-text-editor-button`\n * `a standalone rich text editor`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass RichTextEditorButton extends PolymerElement {\n  // render function\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex: 0 0 auto;\n          align-items: stretch;\n          margin: 3px;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        :host #button {\n          text-transform: unset;\n          color: var(--rich-text-editor-button-color, #444);\n          border-color: var(--rich-text-editor-button-border, transparent);\n          padding: 0;\n          transition: all 0.5s;\n          min-width: 24px;\n          height: 24px;\n          @apply --rich-text-editor-button;\n        }\n        :host([disabled]) #button {\n          cursor: not-allowed;\n          color: var(--rich-text-editor-button-disabled-color, #666);\n          background-color: var(--rich-text-editor-button-disabled-bg, transparent);\n          @apply --rich-text-editor-button-disabled;\n        }\n        :host([toggled]) #button {\n          color: var(--rich-text-editor-button-toggled-color, #222);\n          background-color: var(--rich-text-editor-button-toggled-bg, #e0e0e0);\n          @apply --rich-text-editor-button-toggled;\n        }\n        :host #button:focus,\n        :host #button:hover {\n          color: var(--rich-text-editor-button-hover-color, #000);\n          background-color: var(--rich-text-editor-button-hover-bg, #f0f0f0);\n        }\n        :host #icon:not([icon]) {\n          display:none;\n        }\n        :host #label.offscreen {\n          position: absolute;\n          left: -999999px;\n          top: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n      </style>\n      <iron-a11y-keys\n        id=\"a11y\"\n        target=\"[[__a11y]]\"\n        keys=\"enter\"\n        on-keys-pressed=\"_buttonTap\">\n      </iron-a11y-keys>\n      <paper-button id=\"button\"\n        disabled$=\"[[disabled]]\" \n        controls=\"[[controls]]\"\n        on-tap=\"_buttonTap\"\n        tabindex=\"0\"\n        toggled$=\"[[toggled]]\">\n        <iron-icon id=\"icon\" \n          aria-hidden\n          icon$=\"[[icon]]\">\n        </iron-icon>\n        <span id=\"label\" class$=\"[[labelStyle]]\">[[label]]</span>\n      </paper-button>\n      <paper-tooltip id=\"tooltip\" \n        for=\"button\">\n        [[label]]\n      </paper-button>\n    `;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * Is the button disabled? Default is false.\n       */\n      disabled: {\n        name: \"disabled\",\n        type: \"Boolean\",\n        value: false\n      },\n\n      /**\n       * Event that this button fires.\n       */\n      command: {\n        name: \"command\",\n        type: \"String\",\n        value: null\n      },\n\n      /**\n       * Event that this button fires.\n       */\n      event: {\n        name: \"event\",\n        type: \"String\",\n        value: null\n      },\n\n      /**\n       * Optional iron icon name for the button.\n       */\n      icon: {\n        name: \"icon\",\n        type: \"String\",\n        value: null\n      },\n\n      /**\n       * Label for the icon.\n       */\n      label: {\n        name: \"label\",\n        type: \"String\",\n        value: null\n      },\n\n      /**\n       * Hide the label offscreen?\n       */\n      labelStyle: {\n        name: \"labelStyle\",\n        type: \"String\",\n        computed: \"_labelStyle(icon,showTextLabel)\",\n        readOnly: true\n      },\n\n      /**\n       * Show text label even if an icon is named?\n       */\n      showTextLabel: {\n        name: \"showTextLabel\",\n        type: \"Boolean\",\n        value: false\n      },\n\n      /**\n       * Is the button toggled on? Default is false.\n       */\n      toggled: {\n        name: \"toggled\",\n        type: \"Boolean\",\n        value: false\n      },\n\n      /**\n       * Can this button toggle?\n       */\n      toggles: {\n        name: \"toggles\",\n        type: \"Boolean\",\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"rich-text-editor-button\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__a11y = this.$.button;\n  }\n\n  /**\n   * Determines if an iron icon has been named for the button.\n   *\n   * @param {string} the name of the icon\n   * @returns {boolean} if an icon is named\n   */\n  _buttonTap(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"rich-text-button-tap\", { detail: this })\n    );\n  }\n\n  /**\n   * Determines if an iron icon has been named for the button.\n   *\n   * @param {string} the name of the icon\n   * @returns {boolean} if an icon is named\n   */\n  _labelStyle(icon, showTextLabel) {\n    return icon !== undefined &&\n      icon !== null &&\n      icon !== \"\" &&\n      showTextLabel === false\n      ? \"offscreen\"\n      : null;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(RichTextEditorButton.tag, RichTextEditorButton);\nexport { RichTextEditorButton };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `rich-text-editor-styles`\n * `a shared set of styles for rich-text-editor`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @pseudoElement\n * @polymer\n * @demo demo/index.html\n * @see lib/rich-text-editor-styles-demo.js\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nconst styleElement = document.createElement(\"dom-module\");\n\nconst css = html`\n  <style>\n    :host {\n      --rich-text-editor-bg: #fafafa;\n      --rich-text-editor-border: 1px solid #ddd;\n    }\n  </style>\n`;\nstyleElement.appendChild(css);\n\nstyleElement.register(\"rich-text-editor-styles\");\n","/**\n * Copyright 2019 Penn State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { ResponsiveUtility } from \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@lrnwebcomponents/md-extra-icons/md-extra-icons.js\";\nimport { RichTextEditorButton } from \"./lib/rich-text-editor-button.js\";\nimport \"./lib/rich-text-editor-styles.js\";\n/**\n * `rich-text-editor`\n * `a standalone rich text editor`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html demo\n * @demo demo/content.html simple method\n */\nclass RichTextEditor extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  @apply --rich-text-editor;\n}\n:host([sticky]) {\n  position: sticky;\n  top: 0;\n}\n:host([hidden]) {\n  display: none;\n}\n:host #toolbar {\n  display: flex;\n  opacity: 1;\n  margin: 0;\n  align-items: stretch;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  background-color: var(--rich-text-editor-bg);\n  border: var(--rich-text-editor-border);\n  font-size: 12px;\n  transition: all 0.5s;\n  @apply --rich-text-editor-toolbar;\n} \n:host #toolbar[aria-hidden]{\n  visibility: hidden;\n  opacity: 0;\n  height: 0;\n}\n:host #toolbar .group {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n  align-items: stretch;\n  padding: 0 3px;\n  @apply --rich-text-editor-toolbar-group;\n}\n:host #toolbar .group:not(:last-of-type) {\n  margin-right: 3px;\n  border-right: var(--rich-text-editor-border);\n  @apply --rich-text-editor-toolbar-divider;\n}\n:host #toolbar .more-button {\n  flex: 1 0 auto;\n  justify-content: flex-end;\n}\n:host .more-button[display-max=\"xs\"],\n:host(:not([responsive-size=\"xs\"])) .more-button[display-max=\"sm\"],\n:host(:not([responsive-size*=\"s\"])) .more-button[display-max=\"md\"],\n:host([responsive-size*=\"l\"]) .more-button[display-max=\"lg\"],\n:host([responsive-size=\"xl\"]) .more-button[display-max=\"xl\"],\n:host([responsive-size=\"xs\"]) #toolbar[collapsed] .group:not([minimum-size=\"xs\"]),\n:host([responsive-size=\"sm\"]) #toolbar[collapsed] .group:not([minimum-size*=\"s\"]),\n:host([responsive-size=\"md\"]) #toolbar[collapsed] .group[minimum-size*=\"l\"],\n:host([responsive-size=\"lg\"]) #toolbar[collapsed] .group[minimum-size=\"xl\"] {\n  display: none;\n}\n</style>\n<style include=\"rich-text-editor-styles\"></style>\n<div id=\"toolbar\" aria-hidden$=\"[[!controls]]\" collapsed$=\"[[collapsed]]\">\n  <template is=\"dom-repeat\" items=\"[[buttons]]\" as=\"size\">\n    <template is=\"dom-repeat\" items=\"[[size.groups]]\" as=\"group\">\n      <div class=\"group\" minimum-size$=\"[[size.size]]\">\n        <template is=\"dom-repeat\" items=\"[[group.buttons]]\" as=\"button\">\n          <rich-text-editor-button\n            controls$=\"[[controls]]\"\n            command$=\"[[button.command]]\"\n            event$=\"[[button.event]]\"\n            icon$=\"[[button.icon]]\"\n            label$=\"[[button.label]]\"\n            toggled$=\"[[_toggledButton(button,__trigger)]]\"\n            on-rich-text-button-tap=\"_handleTextOperation\">\n          </rich-text-editor-button> \n        </template>\n      </div>\n    </template>\n  </template>\n  <rich-text-editor-button\n    class=\"more-button\"\n    display-max$=\"[[_getMax(buttons)]]\"\n    controls=\"toolbar\"\n    icon=\"more-vert\"\n    label=\"Toggle More Buttons\"\n    toggled$=\"[[!collapsed]]\"\n    on-rich-text-button-tap=\"_toggleMore\">\n  </rich-text-editor-button>  \n</div>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Rich text-editor\",\n    \"description\": \"a standalone rich text editor\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\"Text\"],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"nikkimk\",\n      \"owner\": \"Penn State University\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"title\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * The editor buttons.\n   */\n  \"buttons\": {\n    \"name\": \"buttons\",\n    \"type\": \"Array\",\n    \"computed\": \"_getButtons(config)\"\n  },\n  /**\n   * Is the menu collapsed.\n   */\n  \"collapsed\": {\n    \"name\": \"collapsed\",\n    \"type\": \"Boolean\",\n    \"value\": true\n  },\n  /**\n   * The button config on the toolbar.\n   */\n  \"config\": {\n    \"name\": \"config\",\n    \"type\": \"Object\",\n    \"value\": {\n      \"xs\": [\n        {\n          \"group\": \"History\",\n          \"buttons\": [\n            {\n              \"label\": \"Undo\",\n              \"icon\": \"icons:undo\",\n              \"event\": \"history-undo\",\n              \"command\": \"undo\"\n            },\n            {\n              \"label\": \"Redo\",\n              \"icon\": \"icons:redo\",\n              \"event\": \"history-redo\",\n              \"command\": \"redo\"\n            }\n          ]\n        },\n        {\n          \"group\": \"Basic Inline Operations\",\n          \"buttons\": [\n            {\n              \"label\": \"Bold\",\n              \"icon\": \"editor:format-bold\",\n              \"event\": \"text-bold\",\n              \"command\": \"bold\",\n              \"toggles\": true\n            },\n            {\n              \"label\": \"Italics\",\n              \"icon\": \"editor:format-italic\",\n              \"event\": \"text-italic\",\n              \"command\": \"italic\",\n              \"toggles\": true\n            },\n            {\n              \"label\": \"Erase Format\",\n              \"icon\": \"editor:format-clear\",\n              \"event\": \"text-remove-format\",\n              \"command\": \"removeFormat\"\n            }\n          ]\n        },\n        {\n          \"group\": \"Links\",\n          \"buttons\": [\n            {\n              \"label\": \"Link\",\n              \"icon\": \"link\",\n              \"command\": \"link\",\n              \"toggles\": true\n            }\n          ]\n        },\n        {\n          \"group\": \"Clipboard Operations\",\n          \"buttons\": [\n            {\n              \"label\": \"Cut\",\n              \"icon\": \"icons:content-cut\",\n              \"event\": \"clipboard-cut\",\n              \"command\": \"cut\"\n            },\n            {\n              \"label\": \"Copy\",\n              \"icon\": \"icons:content-copy\",\n              \"event\": \"clipboard-copy\",\n              \"command\": \"copy\"\n            },\n            {\n              \"label\": \"Paste\",\n              \"icon\": \"icons:content-paste\",\n              \"event\": \"clipboard-paste\",\n              \"command\": \"paste\"\n            }\n          ]\n        }\n      ],\n      \"sm\": [\n        {\n          \"group\": \"Subscript and Superscript\",\n          \"buttons\": [\n            {\n              \"label\": \"Subscript\",\n              \"icon\": \"mdextra:subscript\",\n              \"event\": \"text-subscript\",\n              \"command\": \"subscript\",\n              \"toggles\": true\n            },\n            {\n              \"label\": \"Superscript\",\n              \"icon\": \"mdextra:superscript\",\n              \"event\": \"text-superscript\",\n              \"command\": \"superscript\",\n              \"toggles\": true\n            }\n          ]\n        }\n      ],\n      \"md\": [\n        {\n          \"group\": \"Lists and Indents\",\n          \"buttons\": [\n            {\n              \"label\": \"Ordered List\",\n              \"icon\": \"editor:format-list-numbered\",\n              \"event\": \"text-list-numbered\",\n              \"command\": \"insertOrderedList\",\n              \"toggles\": true\n            },\n            {\n              \"label\": \"Unordered List\",\n              \"icon\": \"editor:format-list-bulleted\",\n              \"event\": \"text-list-bulleted\",\n              \"command\": \"insertUnorderedList\",\n              \"toggles\": true\n            },\n            { \"label\": \"Blockquote\", \"icon\": \"editor:format-quote\" },\n            {\n              \"label\": \"Increase Indent\",\n              \"icon\": \"editor:format-indent-increase\",\n              \"event\": \"text-indent\",\n              \"command\": \"indent\"\n            },\n            {\n              \"label\": \"Decrease Indent\",\n              \"icon\": \"editor:format-indent-decrease\",\n              \"event\": \"text-outdent\",\n              \"command\": \"outdent\"\n            }\n          ]\n        }\n      ],\n      \"lg\": [\n        {\n          \"group\": \"Insertions\",\n          \"buttons\": [\n            {\n              \"label\": \"Insert Inline Image\",\n              \"icon\": \"editor:insert-photo\",\n              \"command\": \"insertImage\"\n            },\n            { \"label\": \"Insert Symbol\", \"icon\": \"editor:functions\" },\n            { \"label\": \"Insert Emoji\", \"icon\": \"image:tag-faces\" }\n          ]\n        }\n      ]\n    }\n  },\n  /**\n   * The target element's id attribute.\n   */\n  \"controls\": {\n    \"name\": \"controls\",\n    \"type\": \"String\",\n    \"value\": null\n  },\n  /**\n   * The editableElement element for the editor.\n   */\n  \"editableElements\": {\n    \"name\": \"editableElements\",\n    \"type\": \"Array\",\n    \"value\": []\n  },\n  /**\n   * The editableElement element for the editor.\n   */\n  \"editableElement\": {\n    \"name\": \"editableElement\",\n    \"type\": \"Object\",\n    \"value\": null\n  },\n  /**\n   * The the size of the editor.\n   */\n  \"responsiveSize\": {\n    \"name\": \"responsiveSize\",\n    \"type\": \"String\",\n    \"value\": \"xs\",\n    \"reflectToAttribute\": true\n  },\n  /**\n   * The current text selection.\n   */\n  \"selection\": {\n    \"name\": \"selection\",\n    \"type\": \"Object\",\n    \"value\": null\n  },\n  /**\n   * Should the toolbar stick to the top so that it is always visible.\n   */\n  \"sticky\": {\n    \"name\": \"sticky\",\n    \"type\": \"Boolean\",\n    \"value\": false,\n    \"reflectToAttribute\": true\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"rich-text-editor\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    let root = this;\n    document.designMode = \"on\";\n    window.ResponsiveUtility.requestAvailability();\n    window.dispatchEvent(\n      new CustomEvent(\"responsive-element\", {\n        detail: {\n          element: root,\n          attribute: \"responsive-size\",\n          relativeToParent: true\n        }\n      })\n    );\n    document.addEventListener(\"selectionchange\", function() {\n      root._updateToggleButtons();\n    });\n  }\n  /**\n   * life cycle, element is removed to the DOM\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    let root = this;\n    document.removeEventListener(\"selectionchange\", function() {\n      root._updateToggleButtons();\n    });\n  }\n  /**\n   * makes a editableElement editable\n   *\n   * @param {object} an HTML object that can be edited\n   */\n  editTarget(editableElement) {\n    let root = this,\n      test = document.createElement(\"RichTextEditorButton\");\n    console.log(RichTextEditorButton.properties, test);\n    if (\n      editableElement.getAttribute(\"id\") === undefined ||\n      editableElement.getAttribute(\"id\") === null\n    )\n      editableElement.setAttribute(\"id\", root._generateUUID());\n\n    if (root.editableElement !== editableElement) {\n      //save changes to previous editableElement\n      if (root.editableElement !== null) {\n        root.editableElement.contentEditable = false;\n        root.editableElement = null;\n      }\n      //activate the editableElement\n      editableElement.parentNode.insertBefore(root, editableElement);\n      root.editableElement = editableElement;\n      root.editableElement.contentEditable = true;\n      root._updateToggleButtons();\n      root.controls = editableElement.getAttribute(\"id\");\n    }\n  }\n\n  /**\n   * removes an editable region to the list of editableElements\n   *\n   * @param {object} an HTML object that can be edited\n   */\n  removeEditableRegion(editableElement) {\n    let root = this;\n    for (let i = 0; i < this.editableElements.length; i++) {\n      let item = this.editableElements[i];\n      if (item[0] === editableElement) {\n        item[0].removeEventListener(\"click\", function(e) {\n          root.editTarget(editableElement);\n        });\n        item[1].disconnect();\n        this.set(\"editableElements\", this.editableElements.splice(i, 1));\n      }\n    }\n  }\n\n  /**\n   * adds an editable region to the list of editableElements\n   *\n   * @param {object} an HTML object that can be edited\n   */\n  addEditableRegion(editableElement) {\n    let root = this,\n      observer = new MutationObserver(function() {\n        root._updateToggleButtons();\n      });\n    editableElement.addEventListener(\"click\", function(e) {\n      root.editTarget(editableElement);\n    });\n    observer.observe(editableElement, {\n      attributes: false,\n      childList: true,\n      subtree: true,\n      characterData: false\n    });\n    root.push(\"editableElements\", [editableElement, observer]);\n  }\n\n  /**\n   * Generate a UUID\n   */\n  _generateUUID() {\n    return \"ss-s-s-s-sss\".replace(/s/g, this._uuidPart);\n  }\n  /**\n   * Gets the groups array for the dom-repeat.\n   *\n   * @param {object} the toolbar buttons config object\n   * @param {array} an array the buttons grouped by size\n   */\n  _getButtons(config) {\n    let buttons = [],\n      sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\n    sizes.forEach(function(size) {\n      if (config[size] !== undefined && config[size] !== null)\n        buttons.push({ size: size, groups: config[size] });\n    });\n    return buttons;\n  }\n\n  /**\n   * Determines the maximum responsive size where the more button is needed.\n   *\n   * @param {array} an array the buttons grouped by size\n   * @returns {string} the largest size in the array\n   */\n  _getMax(buttons) {\n    return buttons !== undefined && buttons !== null\n      ? buttons[buttons.length - 1].size\n      : null;\n  }\n\n  /**\n   * Respond to simple modifications.\n   */\n  _getRange() {\n    let sel = window.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      return sel.getRangeAt(0);\n    } else if (sel) {\n      return sel;\n    } else false;\n  }\n\n  /**\n   * Respond to simple modifications.\n   */\n  _handleTextOperation(e) {\n    this.selection = this.editableElement.getSelection\n      ? this.editableElement.getSelection()\n      : this._getRange();\n    //refresh buttons\n    // support a simple insert event to bubble up or everything else\n    if (e.detail.command !== undefined && e.detail.command !== null) {\n      document.execCommand(e.detail.command);\n    } else {\n      this.dispatchEvent(\n        new CustomEvent(\"rich-text-event\", {\n          detail: { button: e.detail, selection: this.selection }\n        })\n      );\n    }\n    this._updateToggleButtons();\n    /*switch (detail.event) {\n      case \"text-link\":\n        var href = \"\";\n        if (typeof selection.focusNode.parentNode.href !== typeof undefined) {\n          href = selection.focusNode.parentNode.href;\n        }\n        // @todo put in a dialog instead of this\n        let url = prompt(\"Enter a URL:\", href);\n        if (url) {\n          document.execCommand(\"createLink\", false, url);\n        }\n        break;\n      case \"text-unlink\":\n        document.execCommand(\"unlink\");\n        break;*/\n    /**\n       * Our bad actors when it comes to polyfill'ed shadowDOM.\n       * Naughty, naughty shadyDOM. Fortunately this is only IE11/Edge\n       * /\n      //catch-all for custom buttons\n      default:\n    }*/\n  }\n\n  /**\n   * Is button toggled?\n   */\n  _toggledButton(button = null, trigger) {\n    let sel = window.getSelection(),\n      state =\n        button.command !== null && button.toggles === true\n          ? document.queryCommandState(button.command)\n          : false;\n    return state;\n  }\n\n  /**\n   * Toggles collapsed mode\n   */\n  _toggleMore(e) {\n    this.collapsed = !this.collapsed;\n  }\n\n  /**\n   * Updates toggled buttons based on selection.\n   */\n  _updateToggleButtons() {\n    this.__trigger = this.__trigger === false;\n  }\n\n  _uuidPart() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n}\nwindow.customElements.define(RichTextEditor.tag, RichTextEditor);\nexport { RichTextEditor };\n"],"names":["RichTextEditorButton","PolymerElement","__a11y","this","$","button","e","dispatchEvent","CustomEvent","detail","icon","showTextLabel","html","disabled","name","type","value","command","event","label","labelStyle","computed","readOnly","toggled","toggles","window","customElements","define","tag","styleElement","document","createElement","css","appendChild","register","RichTextEditor","root","designMode","ResponsiveUtility","requestAvailability","element","attribute","relativeToParent","addEventListener","_updateToggleButtons","removeEventListener","editableElement","test","console","log","properties","undefined","getAttribute","setAttribute","_generateUUID","contentEditable","parentNode","insertBefore","controls","i","editableElements","length","item","editTarget","disconnect","set","splice","observer","MutationObserver","observe","attributes","childList","subtree","characterData","push","replace","_uuidPart","config","buttons","forEach","size","groups","sel","getSelection","getRangeAt","rangeCount","selection","_getRange","execCommand","queryCommandState","collapsed","__trigger","Math","floor","random","toString","substring"],"mappings":"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F,mBAI7C1C,oEA4BQvC,yDAAS,KACZoB,OAAO0D,sBAEM,OAAnB9E,EAAOY,UAAuC,IAAnBZ,EAAOmB,SAC9BM,SAAS2D,kBAAkBpF,EAAOY,6CAQhCX,QACLoF,WAAavF,KAAKuF,8DAOlBC,WAA+B,IAAnBxF,KAAKwF,qDAIfC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACzBC,SAAS,IACTC,UAAU,6CA3kBNpF,wDA+FA,WACG,eACG,iBACE,QACR,OACE,+BACM,qCACP,sBACC,eACC,CAAC,gBACA,CACT,MACU,sCAGJ,QACI,gBACD,mCAGD,OACD,aACI,CACX,UACc,oBACG,eACA,sBACH,OACJ,2BAGA,8CAOL,SAIE,MACD,eACA,iBACI,iCAKD,MACH,iBACA,iBACC,UAKD,MACA,cACA,eACC,IACD,CACJ,OACW,kBACE,CACT,OACW,YACD,mBACC,uBACE,QAEb,OACW,YACD,mBACC,uBACE,UAIjB,OACW,kCACE,CACT,OACW,YACD,2BACC,oBACE,gBACA,GAEb,OACW,eACD,6BACC,sBACE,kBACA,GAEb,OACW,oBACD,4BACC,6BACE,kBAIjB,OACW,gBACE,CACT,OACW,YACD,eACG,gBACA,KAIjB,OACW,+BACE,CACT,OACW,WACD,0BACC,wBACE,OAEb,OACW,YACD,2BACC,yBACE,QAEb,OACW,aACD,4BACC,0BACE,eAKb,CACJ,OACW,oCACE,CACT,OACW,iBACD,0BACC,yBACE,qBACA,GAEb,OACW,mBACD,4BACC,2BACE,uBACA,SAKb,CACJ,OACW,4BACE,CACT,OACW,oBACD,oCACC,6BACE,6BACA,GAEb,OACW,sBACD,oCACC,6BACE,+BACA,GAEb,OAAW,kBAAsB,uBACjC,OACW,uBACD,sCACC,sBACE,UAEb,OACW,uBACD,sCACC,uBACE,iBAKb,CACJ,OACW,qBACE,CACT,OACW,2BACD,8BACG,eAEb,OAAW,qBAAyB,oBACpC,OAAW,oBAAwB,iCASjC,MACF,gBACA,eACC,uBAKS,MACV,wBACA,cACC,oBAKQ,MACT,uBACA,eACC,qBAKO,MACR,sBACA,eACC,yBACa,aAKX,MACH,iBACA,eACC,aAKD,MACA,cACA,iBACC,sBACa,sCAWf,4BAiOXa,OAAOC,eAAeC,OAAOQ,EAAeP,IAAKO"}