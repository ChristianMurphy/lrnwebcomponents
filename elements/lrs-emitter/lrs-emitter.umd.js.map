{"version":3,"file":"lrs-emitter.umd.js","sources":["lrs-emitter.umd.js"],"sourcesContent":["/**\n * Copyright 2019 PSU\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\"\nexport { LrsEmitter };\n/**\n * `lrs-emitter`\n * `Emit learning statements occuring in your app.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass LrsEmitter extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>\n<div>[[verb]]</div>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {\n  \"canScale\": true,\n  \"canPosition\": true,\n  \"canEditSource\": false,\n  \"gizmo\": {\n    \"title\": \"Lrs emitter\",\n    \"description\": \"Emit learning statements occuring in your app.\",\n    \"icon\": \"icons:android\",\n    \"color\": \"green\",\n    \"groups\": [\n      \"Emitter\"\n    ],\n    \"handles\": [\n      {\n        \"type\": \"todo:read-the-docs-for-usage\"\n      }\n    ],\n    \"meta\": {\n      \"author\": \"heyMP\",\n      \"owner\": \"PSU\"\n    }\n  },\n  \"settings\": {\n    \"quick\": [],\n    \"configure\": [\n      {\n        \"property\": \"verb\",\n        \"description\": \"\",\n        \"inputMethod\": \"textfield\",\n        \"required\": false,\n        \"icon\": \"icons:android\"\n      }\n    ],\n    \"advanced\": []\n  }\n};\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"verb\": {\n    \"name\": \"verb\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"lrs-emitter\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(LrsEmitter.haxProperties, LrsEmitter.tag, this);\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n  \n}\nwindow.customElements.define(LrsEmitter.tag, LrsEmitter);\n"],"names":["LrsEmitter","PolymerElement","html","HAXWiring","setup","haxProperties","tag","this","window","customElements","define"],"mappings":"qkDAkBMA,gaAAmBC,+DAIdC,wDAeA,WACG,eACG,iBACE,QACR,OACE,0BACM,sDACP,sBACC,eACC,CACR,mBAES,CACT,MACU,sCAGJ,QACI,cACD,iBAGD,OACD,aACI,CACX,UACc,mBACG,eACA,sBACH,OACJ,2BAGA,8CAML,MACD,MACE,YACA,eACC,uBACa,YACV,sCAUL,0HAOFC,UAAY,IAAIA,iBAChBA,UAAUC,MAAMJ,EAAWK,cAAeL,EAAWM,IAAKC,2CAQnEC,OAAOC,eAAeC,OAAOV,EAAWM,IAAKN"}