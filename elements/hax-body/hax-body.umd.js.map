{"version":3,"file":"hax-body.umd.js","sources":["lib/hax-toolbar-item.js","lib/hax-toolbar-menu.js","lib/hax-context-item-menu.js","lib/hax-context-item.js","lib/hax-context-item-textop.js","lib/hax-toolbar.js","lib/hax-text-context.js","lib/simple-colors-picker-swatch.js","lib/simple-colors-picker.js","lib/hax-ce-context.js","lib/hax-plate-context.js","lib/hax-input-mixer.js","hax-body.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@lrnwebcomponents/materializecss-styles/lib/colors.js\";\nPolymer({\n  _template: html`\n    <style include=\"materializecss-styles-colors\">\n      :host {\n        display: flex;\n        --hax-item-color: #e5e5e5;\n        --hax-item-background: #2e2e2e;\n        box-sizing: border-box;\n      }\n      :host([menu]) {\n        width: 100%;\n        position: relative;\n        height: 32px;\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        font-family: \"Roboto\", \"Noto\", sans-serif;\n        -webkit-font-smoothing: antialiased;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 24px;\n        --hax-item-color: #2e2e2e;\n        --hax-item-background: #ffffff;\n      }\n      :host([menu]) paper-button {\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      }\n      #label {\n        padding-left: 5px;\n      }\n      paper-button {\n        display: flex;\n        align-items: center;\n        background-color: var(--hax-item-background);\n        color: var(--hax-item-color);\n        min-width: 0;\n        margin: 0;\n        text-transform: none;\n        padding: 8px;\n        border-radius: 0;\n        font-size: 12px;\n        height: 32px;\n        transition: 0.3s all;\n        @apply --hax-toolbar-item-container;\n      }\n      paper-button:hover {\n        background-color: var(--hax-item-color);\n        color: var(--hax-item-background);\n      }\n      paper-button:active {\n        background: var(--hax-item-color);\n        color: var(--hax-item-background);\n      }\n      :host([default]) paper-button {\n        background: black;\n      }\n      :host([light]) paper-button {\n        background-color: var(--hax-item-color);\n        color: var(--hax-item-background);\n      }\n      :host([light]) paper-button:hover {\n        background-color: var(--hax-item-background);\n        color: var(--hax-item-color);\n      }\n      :host([light]) paper-button:active {\n        background: var(--hax-item-background);\n        color: var(--hax-item-color);\n      }\n      :host([mini]) iron-icon {\n        width: 16px;\n        height: 16px;\n      }\n      :host([mini]) paper-button {\n        border-radius: 50%;\n        width: 18px;\n        height: 18px;\n        padding: 2px;\n      }\n      :host([menu]) paper-button {\n        padding: 0 8px;\n        width: 100%;\n        height: 32px;\n      }\n      :host([menu]) paper-button:hover {\n        background-color: #d3d3d3;\n        color: #000000;\n      }\n      :host([corner=\"left\"]) paper-button {\n        border-top-left-radius: 25%;\n      }\n      :host([corner=\"right\"]) paper-button {\n        border-top-right-radius: 25%;\n      }\n      .flip-icon {\n        transform: rotateY(180deg);\n      }\n    </style>\n\n    <paper-button\n      disabled=\"[[disabled]]\"\n      id=\"buttoncontainer\"\n      tabindex=\"0\"\n      title\\$=\"[[tooltip]]\"\n    >\n      <iron-icon\n        id=\"button\"\n        icon=\"[[icon]]\"\n        class\\$=\"[[iconClass]]\"\n      ></iron-icon>\n      <span id=\"label\" hidden\\$=\"[[!label]]\">[[label]]</span> <slot></slot>\n    </paper-button>\n    <paper-tooltip\n      id=\"tooltip\"\n      for\\$=\"[[this]]\"\n      offset=\"14\"\n      position=\"[[tooltipDirection]]\"\n      animation-delay=\"100\"\n    >\n      [[tooltip]]\n    </paper-tooltip>\n  `,\n\n  is: \"hax-toolbar-item\",\n\n  properties: {\n    /**\n     * corner\n     */\n    corner: {\n      type: String,\n      reflectToAttribute: true,\n      value: \"\"\n    },\n    /**\n     * disabled state\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Inverted display mode\n     */\n    light: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false\n    },\n    /**\n     * Style to be presented in a menu\n     */\n    menu: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Present smaller the normal but consistent\n     */\n    mini: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false\n    },\n    /**\n     * Icon to represent this button, required.\n     */\n    icon: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Text applied to the button\n     */\n    label: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Hover tip text\n     */\n    tooltip: {\n      type: String,\n      value: \"\",\n      observer: \"_tooltipChanged\"\n    },\n    /**\n     * Direction that the tooltip should flow\n     */\n    tooltipDirection: {\n      type: String,\n      value: \"top\"\n    },\n    default: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Icon for the button.\n     */\n    iconClass: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    }\n  },\n\n  /**\n   * Keep accessibility inline with tooltip\n   */\n  _tooltipChanged: function(newValue, oldValue) {\n    if (newValue == \"\" || newValue == null) {\n      this.$.tooltip.setAttribute(\"aria-hidden\", \"true\");\n    } else {\n      this.$.tooltip.setAttribute(\"aria-hidden\", \"false\");\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-icons/device-icons.js\";\nimport \"@polymer/iron-icons/hardware-icons.js\";\nimport \"@polymer/iron-icons/social-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/iron-icons/maps-icons.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"./hax-toolbar-item.js\";\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        box-sizing: border-box;\n      }\n      paper-menu-button {\n        color: rgba(0, 0, 0, 0.66);\n        margin: 0;\n        padding: 0;\n        text-transform: none;\n        background-color: #ffffff;\n        display: flex;\n        min-width: 24px;\n      }\n\n      paper-menu-button .label {\n        font-size: 12px;\n        margin-top: 4px;\n      }\n\n      paper-menu-button .button-inner {\n        padding-top: 8px;\n        text-align: center;\n      }\n\n      paper-icon-button {\n        color: rgba(0, 0, 0, 0.66);\n        margin: 0;\n        text-transform: none;\n        background-color: #ffffff;\n        min-width: 24px;\n        display: flex;\n        padding: 0;\n        border-radius: 0;\n      }\n\n      paper-icon-button {\n        padding: 8px;\n        margin: 0;\n        box-sizing: border-box;\n      }\n\n      paper-icon-button:hover {\n        background-color: var(--paper-grey-300, grey);\n      }\n\n      .flip-icon {\n        transform: rotateY(180deg);\n      }\n\n      paper-tooltip {\n        pointer-events: none;\n      }\n      paper-listbox {\n        padding: 0;\n      }\n    </style>\n    <paper-menu-button>\n      <hax-toolbar-item\n        corner=\"[[corner]]\"\n        id=\"button\"\n        slot=\"dropdown-trigger\"\n        icon=\"[[icon]]\"\n        hidden\\$=\"[[!icon]]\"\n        class\\$=\"[[iconClass]]\"\n        tooltip=\"[[tooltip]]\"\n      ></hax-toolbar-item>\n      <paper-listbox\n        id=\"listbox\"\n        slot=\"dropdown-content\"\n        selected=\"{{selected}}\"\n      >\n        <slot></slot>\n      </paper-listbox>\n    </paper-menu-button>\n  `,\n\n  is: \"hax-toolbar-menu\",\n\n  listeners: {\n    tap: \"_menubuttonTap\"\n  },\n\n  properties: {\n    /**\n     * corner\n     */\n    corner: {\n      type: String,\n      reflectToAttribute: true,\n      value: \"\"\n    },\n    /**\n     * Should we reset the selection after it is made\n     */\n    resetOnSelect: {\n      type: Boolean,\n      value: false\n    },\n    tooltip: {\n      type: String,\n      value: \"\"\n    },\n    tooltipDirection: {\n      type: String,\n      value: \"\"\n    },\n    selected: {\n      type: String,\n      value: \"\",\n      notify: true,\n      observer: \"_selectChanged\"\n    }\n  },\n\n  /**\n   * Select changed to trip button.\n   */\n  _selectChanged: function(e) {\n    this.$.button.focus();\n  },\n\n  /**\n   * Ensure menu is visible / default'ed.\n   */\n  _menubuttonTap: function(e) {\n    this.$.listbox.style.display = \"inherit\";\n    if (this.resetOnSelect) {\n      this.selected = \"\";\n    }\n  },\n\n  /**\n   * Ensure menu is hidden.\n   */\n  hideMenu: function() {\n    this.$.listbox.style.display = \"none\";\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"./hax-toolbar-menu.js\";\n/**\n`hax-context-item-menu`\nAn icon / button that has support for multiple options via drop down.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - panel - the flyout from left or right side that has elements that can be placed\n - button - an item that expresses what interaction you will have with the content.\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-flex;\n        height: 32px;\n        box-sizing: border-box;\n      }\n      :host hax-toolbar-menu ::slotted(*):hover {\n        background-color: #cccccc;\n      }\n      :host hax-toolbar-menu ::slotted(*) {\n        height: 32px;\n      }\n    </style>\n    <hax-toolbar-menu\n      corner=\"[[corner]]\"\n      id=\"menu\"\n      icon=\"[[icon]]\"\n      tooltip=\"[[label]]\"\n      tooltip-direction=\"[[direction]]\"\n      selected=\"{{selectedValue}}\"\n      reset-on-select=\"[[resetOnSelect]]\"\n    >\n      <slot></slot>\n    </hax-toolbar-menu>\n  `,\n\n  is: \"hax-context-item-menu\",\n\n  properties: {\n    /**\n     * corner\n     */\n    corner: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Internal flag to allow blocking the event firing if machine selects tag.\n     */\n    _blockEvent: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Should we reset the selection after it is made\n     */\n    resetOnSelect: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Value.\n     */\n    selectedValue: {\n      type: Number,\n      reflectToAttribute: true,\n      notify: true,\n      value: 0,\n      observer: \"_selectedUpdated\"\n    },\n    /**\n     * Direction for the tooltip\n     */\n    direction: {\n      type: String,\n      value: \"top\"\n    },\n    /**\n     * Icon for the button.\n     */\n    icon: {\n      type: String,\n      value: \"editor:text-fields\",\n      reflectToAttribute: true\n    },\n    /**\n     * Icon for the button.\n     */\n    iconClass: {\n      type: String,\n      value: \"black-text\",\n      reflectToAttribute: true\n    },\n    /**\n     * Label for the button.\n     */\n    label: {\n      type: String,\n      value: \"editor:text-fields\",\n      reflectToAttribute: true\n    },\n    /**\n     * Name of the event to bubble up as being tapped.\n     * This can be used to tell other elements what was\n     * clicked so it can take action appropriately.\n     */\n    eventName: {\n      type: String,\n      value: \"button\",\n      reflectToAttribute: true\n    }\n  },\n\n  /**\n   * Notice the selected value has changed.\n   */\n  _selectedUpdated: function(newValue, oldValue) {\n    if (\n      typeof newValue !== typeof null &&\n      typeof oldValue !== typeof undefined &&\n      typeof oldValue !== typeof null\n    ) {\n      let children = dom(this).children;\n      var item = new Object();\n      var j = 0;\n      // check for tag match since we have to filter out text nodes\n      for (var i = 0, len = children.length; i < len; i++) {\n        if (children[i].tagName === \"PAPER-ITEM\") {\n          if (j === newValue) {\n            item = children[i];\n            len = i;\n            continue;\n          }\n          j++;\n        }\n      }\n      // ensure we have a value; if so, this becomes the event to look for\n      // also use our flag to ensure machine setting the tag default doesn't\n      // equate to firing off a selected event.\n      if (\n        !this._blockEvent &&\n        typeof item.attributes !== typeof undefined &&\n        typeof item.attributes.value !== typeof undefined &&\n        typeof item.attributes.value.value !== typeof undefined\n      ) {\n        // weird but this makes the menu close when we fire up an event\n        // that indicates something higher should do something. This\n        // avoids an annoying UX error where the menu stays open for\n        // no reason.\n        this.$.menu.hideMenu();\n        this.fire(\"hax-context-item-selected\", {\n          target: item,\n          eventName: item.attributes.value.value\n        });\n      }\n      // we only block 1 time if it's available\n      if (this._blockEvent) {\n        this._blockEvent = false;\n      }\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-icons/device-icons.js\";\nimport \"@polymer/iron-icons/hardware-icons.js\";\nimport \"@polymer/iron-icons/social-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/maps-icons.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"./hax-toolbar-item.js\";\n/**\n`hax-context-item`\nA single button in the hax context menu for consistency.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context - menu in the page the user can select an item from, this being 1 option in that list\n - button - an item that expresses what interaction you will have with the content.\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-flex;\n      }\n      :host([menu]) {\n        display: flex;\n        width: 100%;\n      }\n    </style>\n    <hax-toolbar-item\n      disabled=\"[[disabled]]\"\n      light=\"[[light]]\"\n      mini=\"[[mini]]\"\n      id=\"button\"\n      icon=\"[[icon]]\"\n      hidden\\$=\"[[!icon]]\"\n      icon-class=\"[[iconClass]]\"\n      on-mousedown=\"_storeSelection\"\n      on-click=\"_fireEvent\"\n      tooltip=\"[[label]]\"\n      tooltip-direction=\"[[direction]]\"\n      default=\"[[default]]\"\n      menu=\"[[menu]]\"\n    >\n      <slot></slot>\n    </hax-toolbar-item>\n  `,\n\n  is: \"hax-context-item\",\n\n  properties: {\n    /**\n     * Light theme for toolbar item.\n     */\n    light: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * disabled state\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Mini theme for making things small and round.\n     */\n    mini: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Style to be presented in a menu\n     */\n    menu: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Direction for the tooltip\n     */\n    direction: {\n      type: String,\n      value: \"top\"\n    },\n    /**\n     * Icon for the button.\n     */\n    icon: {\n      type: String,\n      value: \"editor:text-fields\",\n      reflectToAttribute: true\n    },\n    /**\n     * Icon for the button.\n     */\n    iconClass: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Label for the button.\n     */\n    label: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Name of the event to bubble up as being tapped.\n     * This can be used to tell other elements what was\n     * clicked so it can take action appropriately.\n     */\n    eventName: {\n      type: String,\n      value: \"button\",\n      reflectToAttribute: true\n    },\n    /**\n     * Method of input to display when activated. This is\n     * only used when triggered as part of haxProperties\n     */\n    inputMethod: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional slot to bind this value to.\n     */\n    propertyToBind: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional slot to bind this value to.\n     */\n    slotToBind: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional description for this item.\n     */\n    description: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Is this button concidered a primary interaction\n     */\n    default: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * an optional value to send along in the press. Allows for\n     * reusing events more easily\n     */\n    value: {\n      type: String,\n      value: \"\"\n    }\n  },\n  /**\n   * Store the selection object. This helps fix issues with safari\n   * and holding focus on non-text elements actually stealing\n   * the selection priority, making it impossible to know what's\n   * been selected if clicking a button to try and apply something to.\n   */\n  _storeSelection: function(e) {\n    window.HaxStore._tmpSelection = window.HaxStore.getSelection();\n  },\n  /**\n   * Fire an event that includes the eventName of what was just pressed.\n   */\n  _fireEvent: function(e) {\n    this.fire(\"hax-context-item-selected\", {\n      target: this,\n      eventName: this.eventName,\n      value: this.value\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-icons/device-icons.js\";\nimport \"@polymer/iron-icons/hardware-icons.js\";\nimport \"@polymer/iron-icons/social-icons.js\";\nimport \"@polymer/iron-icons/av-icons.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/maps-icons.js\";\nimport \"@lrnwebcomponents/materializecss-styles/lib/colors.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"./hax-toolbar-item.js\";\n/**\n`hax-context-item-textop`\nA single button in the hax context menus for consistency. This one uses the mousedown event becasue tap won't work in safari / firefox / IE while maintaining focus inside the contenteditable area (stupid, I know)\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context - menu in the page the user can select an item from, this being 1 option in that list\n - button - an item that expresses what interaction you will have with the content.\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"materializecss-styles-colors\">\n      :host {\n        display: inline-flex;\n        box-sizing: border-box;\n      }\n      :host([menu]) {\n        display: flex;\n        width: 100%;\n      }\n    </style>\n    <iron-a11y-keys\n      id=\"a11y\"\n      target=\"[[target]]\"\n      keys=\"enter\"\n      on-keys-pressed=\"_fireEvent\"\n    ></iron-a11y-keys>\n    <hax-toolbar-item\n      corner=\"[[corner]]\"\n      id=\"button\"\n      icon=\"[[icon]]\"\n      hidden\\$=\"[[!icon]]\"\n      tooltip-direction=\"[[direction]]\"\n      tooltip=\"[[label]]\"\n      class\\$=\"[[iconClass]]\"\n      on-mousedown=\"_fireEvent\"\n      icon-class=\"[[iconClass]]\"\n      mini=\"[[mini]]\"\n      menu=\"[[menu]]\"\n      light=\"[[light]]\"\n    >\n      <slot></slot>\n    </hax-toolbar-item>\n  `,\n\n  is: \"hax-context-item-textop\",\n  properties: {\n    /**\n     * corner\n     */\n    corner: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * target for the iron-a11y-keys element.\n     */\n    target: {\n      type: Object\n    },\n    /**\n     * Light theme for toolbar item.\n     */\n    light: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Mini theme for making things small and round.\n     */\n    mini: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Style to be presented in a menu\n     */\n    menu: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Direction for the tooltip\n     */\n    direction: {\n      type: String,\n      value: \"top\"\n    },\n    /**\n     * Icon for the button.\n     */\n    icon: {\n      type: String,\n      value: \"editor:text-fields\",\n      reflectToAttribute: true\n    },\n    /**\n     * Icon for the button.\n     */\n    iconClass: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Label for the button.\n     */\n    label: {\n      type: String,\n      value: \"editor:text-fields\",\n      reflectToAttribute: true\n    },\n    /**\n     * Name of the event to bubble up as being tapped.\n     * This can be used to tell other elements what was\n     * clicked so it can take action appropriately.\n     */\n    eventName: {\n      type: String,\n      value: \"button\",\n      reflectToAttribute: true\n    },\n    /**\n     * Method of input to display when activated. This is\n     * only used when triggered as part of haxProperties\n     */\n    inputMethod: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional slot to bind this value to.\n     */\n    propertyToBind: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional slot to bind this value to.\n     */\n    slotToBind: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional description for this item.\n     */\n    description: {\n      type: String,\n      reflectToAttribute: true\n    }\n  },\n\n  /**\n   * attached life cycle\n   */\n  attached: function() {\n    // bind keyboard to button press\n    this.target = this.$.button;\n  },\n  /**\n   * Fire an event that includes the eventName of what was just pressed.\n   */\n  _fireEvent: function(e) {\n    this.fire(\"hax-context-item-selected\", {\n      target: this,\n      eventName: this.eventName\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@lrnwebcomponents/materializecss-styles/lib/colors.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./hax-toolbar-item.js\";\nimport \"./hax-toolbar-menu.js\";\nimport \"./hax-context-item.js\";\nimport \"./hax-context-item-menu.js\";\nPolymer({\n  _template: html`\n    <style\n      is=\"custom-style\"\n      include=\"materializecss-styles-colors simple-colors\"\n    >\n      :host {\n        display: flex;\n        font-family: \"Roboto\", sans-serif;\n        justify-content: flex-start;\n        opacity: 0.4;\n        visibility: visible;\n        transition: 0.3s all ease;\n        box-sizing: border-box;\n        height: 32px;\n        pointer-events: all;\n      }\n      :host *[hidden] {\n        display: none;\n      }\n      .wrapper {\n        display: flex;\n      }\n      :host .wrapper ::slotted(*) {\n        font-family: \"Roboto\", sans-serif;\n        pointer-events: all;\n      }\n      :host(:hover),\n      :host([selected]) {\n        opacity: 1;\n      }\n      .close-cap {\n        margin: 8px;\n        padding: 0;\n      }\n      paper-item {\n        height: 32px;\n        min-height: 32px;\n        padding: 0 8px;\n        width: 100px;\n      }\n      paper-item:hover {\n        background-color: #d3d3d3;\n        cursor: pointer;\n      }\n      paper-slider {\n        background-color: #3e3e3e;\n        color: #000000;\n        height: 32px;\n        min-width: 100px;\n        --paper-slider-font-color: #000000;\n        --paper-slider-active-color: var(\n          --simple-colors-default-theme-light-green-1\n        );\n        --paper-slider-knob-color: var(\n          --simple-colors-default-theme-light-green-1\n        );\n        --paper-slider-pin-color: var(\n          --simple-colors-default-theme-light-green-1\n        );\n      }\n      .convert-button {\n        border-top: 1px solid #d3d3d3;\n      }\n    </style>\n    <div class=\"wrapper\">\n      <hax-context-item\n        hidden$=\"[[inline]]\"\n        mini=\"\"\n        light=\"\"\n        icon=\"close\"\n        label=\"Close\"\n        event-name=\"close-menu\"\n        class=\"close-cap\"\n        direction=\"left\"\n      ></hax-context-item>\n      <hax-context-item-menu\n        hidden$=\"[[!haxProperties.canPosition]]\"\n        selected-value=\"{{justifyValue}}\"\n        id=\"justify\"\n        icon=\"[[justifyIcon]]\"\n        label=\"Alignment\"\n      >\n        <hax-context-item\n          menu\n          icon=\"editor:format-align-left\"\n          event-name=\"hax-align-left\"\n          >Left</hax-context-item\n        >\n        <hax-context-item\n          menu\n          icon=\"editor:format-align-center\"\n          event-name=\"hax-align-center\"\n          >Center</hax-context-item\n        >\n      </hax-context-item-menu>\n      <paper-slider\n        hidden$=\"[[!haxProperties.canScale]]\"\n        id=\"slider\"\n        pin=\"\"\n        min=\"25\"\n        step=\"25\"\n        max=\"100\"\n        value=\"{{size}}\"\n      ></paper-slider>\n      <paper-tooltip\n        hidden$=\"[[inline]]\"\n        for=\"slider\"\n        position=\"top\"\n        offset=\"10\"\n      >\n        Resize\n      </paper-tooltip>\n      <slot name=\"primary\"></slot>\n      <hax-context-item\n        hidden$=\"[[inline]]\"\n        icon=\"delete\"\n        icon-class=\"red-text text-darken-1\"\n        label=\"Remove\"\n        event-name=\"grid-plate-delete\"\n      ></hax-context-item>\n      <hax-context-item-menu\n        corner=\"right\"\n        hidden$=\"[[hideMore]]\"\n        icon=\"more-vert\"\n        label=\"More\"\n        id=\"moremenu\"\n        event-name=\"grid-plate-op\"\n        reset-on-select=\"\"\n      >\n        <paper-item value=\"\" hidden></paper-item>\n        <slot name=\"more\"></slot>\n        <hax-context-item\n          menu\n          icon=\"icons:content-copy\"\n          icon-class=\"green-text\"\n          event-name=\"grid-plate-duplicate\"\n          >Duplicate</hax-context-item\n        >\n        <hax-context-item\n          hidden$=\"[[hideTransform]]\"\n          menu\n          icon=\"image:transform\"\n          class=\"convert-button\"\n          icon-class=\"orange-text\"\n          event-name=\"grid-plate-convert\"\n          >Transform to..</hax-context-item\n        >\n      </hax-context-item-menu>\n    </div>\n  `,\n\n  is: \"hax-toolbar\",\n\n  listeners: {\n    \"hax-context-item-selected\": \"_haxContextOperation\"\n  },\n\n  properties: {\n    /**\n     * Hide the transform button as its not supported\n     */\n    hideTransform: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * See what's selected\n     */\n    selected: {\n      type: Boolean,\n      value: false,\n      reflectToAttritue: true\n    },\n    /**\n     * Selected value to match ce direction currently.\n     */\n    haxProperties: {\n      type: Object,\n      value: {},\n      observer: \"_haxPropertiesChanged\"\n    },\n    /**\n     * Hide the more menu.\n     */\n    hideMore: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * size of the slider if it exists.\n     */\n    size: {\n      type: Number,\n      value: 100,\n      notify: true\n    },\n    /**\n     * Justify icon to reflect state.\n     */\n    justifyIcon: {\n      type: String,\n      value: \"editor:format-align-left\"\n    },\n    /**\n     * This is an inline context menu\n     */\n    inline: {\n      type: Boolean,\n      value: false,\n      reflectToAttritue: true\n    },\n    /**\n     * Selected value to match ce direction currently.\n     */\n    justifyValue: {\n      type: String,\n      value: \"\",\n      notify: true\n    }\n  },\n\n  /**\n   * If hax properties changes, let's see what the initial state\n   * of the buttons should be.\n   */\n  _haxPropertiesChanged: function(newValue, oldValue) {\n    // value doesn't matter, just look at what's active\n    if (typeof window.HaxStore.instance.activeNode !== typeof undefined) {\n      if (window.HaxStore.instance.activeNode.style.width != \"\") {\n        this.size = window.HaxStore.instance.activeNode.style.width.replace(\n          \"%\",\n          \"\"\n        );\n      } else {\n        this.size = 100;\n      }\n\n      if (\n        window.HaxStore.instance.activeNode.style.margin == \"0px auto\" &&\n        window.HaxStore.instance.activeNode.style.display == \"block\"\n      ) {\n        this.justifyValue = \"hax-align-center\";\n        this.justifyIcon = \"editor:format-align-center\";\n      } else {\n        this.justifyValue = \"hax-align-left\";\n        this.justifyIcon = \"editor:format-align-left\";\n      }\n    }\n  },\n\n  /**\n   * Respond to simple modifications.\n   */\n  _haxContextOperation: function(e) {\n    let detail = e.detail;\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      case \"hax-align-left\":\n      case \"hax-align-center\":\n        this.justifyIcon = detail.target.icon;\n        break;\n      case \"close-menu\":\n        this.$.moremenu.$.menu.hideMenu();\n        this.$.justify.$.menu.hideMenu();\n        break;\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@lrnwebcomponents/materializecss-styles/lib/colors.js\";\nimport \"@lrnwebcomponents/md-extra-icons/md-extra-icons.js\";\nimport \"./hax-context-item-menu.js\";\nimport \"./hax-context-item.js\";\nimport \"./hax-context-item-textop.js\";\nimport \"./hax-toolbar.js\";\n/**\n`hax-text-context`\nA context menu that provides common text based authoring options.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context menu - this is a menu of text based buttons and events for use in a larger solution.\n*/\nPolymer({\n  _template: html`\n    <style include=\"materializecss-styles-colors\">\n      :host {\n        display: block;\n        pointer-events: none;\n        background-color: white;\n      }\n      :host [hidden] {\n        display: none;\n      }\n      paper-item {\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        height: 32px;\n        padding: 0 8px;\n        min-height: 32px;\n      }\n      paper-item:hover {\n        background-color: #d3d3d3;\n        cursor: pointer;\n      }\n      iron-icon {\n        padding: 8px;\n      }\n      paper-item strong {\n        padding: 8px;\n        font-size: 12px;\n      }\n      :host(.hax-context-pin-top) hax-toolbar {\n        position: fixed;\n        top: 64px;\n        opacity: 0.95;\n      }\n      :host(.hax-context-pin-bottom) hax-toolbar {\n        position: fixed;\n        bottom: 0;\n        opacity: 0.95;\n      }\n    </style>\n    <hax-toolbar selected=\"[[selection]]\" hide-transform=\"\" id=\"toolbar\">\n      <hax-context-item-menu\n        corner=\"left\"\n        slot=\"primary\"\n        selected-value=\"{{selectedValue}}\"\n        id=\"formatsize\"\n        icon=\"text-format\"\n        label=\"Format\"\n        event-name=\"text-tag\"\n      >\n        <paper-item value=\"p\"\n          ><iron-icon icon=\"editor:format-textdirection-l-to-r\"></iron-icon\n          >Normal text <strong>&lt;P&gt;</strong></paper-item\n        >\n        <paper-item value=\"h2\"\n          ><iron-icon icon=\"editor:title\"></iron-icon>Title\n          <strong>&lt;H2&gt;</strong></paper-item\n        >\n        <paper-item value=\"h3\"\n          ><iron-icon icon=\"editor:title\"></iron-icon>Content heading\n          <strong>&lt;H3&gt;</strong></paper-item\n        >\n        <paper-item value=\"h4\"\n          ><iron-icon icon=\"editor:text-fields\"></iron-icon>Subheading\n          <strong>&lt;H4&gt;</strong></paper-item\n        >\n        <paper-item value=\"h5\"\n          ><iron-icon icon=\"editor:text-fields\"></iron-icon>Deeper subheading\n          <strong>&lt;H5&gt;</strong></paper-item\n        >\n        <paper-item value=\"blockquote\"\n          ><iron-icon icon=\"editor:format-quote\"></iron-icon>Quote<strong\n            >&lt;blockquote&gt;</strong\n          ></paper-item\n        >\n        <paper-item value=\"code\"\n          ><iron-icon icon=\"icons:code\"></iron-icon>Code block<strong\n            >&lt;code&gt;</strong\n          ></paper-item\n        >\n      </hax-context-item-menu>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-bold\"\n        label=\"Bold\"\n        event-name=\"text-bold\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-italic\"\n        label=\"Italic\"\n        event-name=\"text-italic\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:insert-link\"\n        label=\"Link\"\n        event-name=\"text-link\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-list-numbered\"\n        label=\"Numbered list\"\n        event-name=\"text-list-numbered\"\n        hidden\\$=\"[[!polyfillSafe]]\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-list-bulleted\"\n        label=\"Bulleted list\"\n        event-name=\"text-list-bulleted\"\n        hidden\\$=\"[[!polyfillSafe]]\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-indent-increase\"\n        label=\"Indent\"\n        event-name=\"text-indent\"\n        hidden\\$=\"[[!polyfillSafe]]\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-indent-decrease\"\n        label=\"Outdent\"\n        event-name=\"text-outdent\"\n        hidden\\$=\"[[!polyfillSafe]]\"\n      ></hax-context-item-textop>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"editor:format-clear\"\n        label=\"Remove format\"\n        event-name=\"text-remove-format\"\n      ></hax-context-item-textop>\n      <hax-context-item\n        slot=\"primary\"\n        icon=\"device:graphic-eq\"\n        label=\"Advanced item\"\n        event-name=\"insert-inline-gizmo\"\n        hidden$=\"[[isSafari]]\"\n      ></hax-context-item>\n      <hax-context-item-textop\n        slot=\"primary\"\n        icon=\"device:graphic-eq\"\n        label=\"Advanced item\"\n        event-name=\"insert-inline-gizmo\"\n        hidden$=\"[[!isSafari]]\"\n      ></hax-context-item-textop>\n\n      <hax-context-item-textop\n        menu=\"\"\n        slot=\"more\"\n        icon=\"mdextra:unlink\"\n        event-name=\"text-unlink\"\n        >Remove link</hax-context-item-textop\n      >\n      <hax-context-item-textop\n        menu=\"\"\n        slot=\"more\"\n        icon=\"mdextra:subscript\"\n        event-name=\"text-subscript\"\n        >Subscript</hax-context-item-textop\n      >\n      <hax-context-item-textop\n        menu=\"\"\n        slot=\"more\"\n        icon=\"mdextra:superscript\"\n        event-name=\"text-superscript\"\n        >Superscript</hax-context-item-textop\n      >\n      <hax-context-item-textop\n        menu=\"\"\n        slot=\"more\"\n        icon=\"editor:format-strikethrough\"\n        event-name=\"text-strikethrough\"\n        >Cross out</hax-context-item-textop\n      >\n    </hax-toolbar>\n  `,\n\n  is: \"hax-text-context\",\n\n  listeners: {\n    \"hax-context-item-selected\": \"_haxContextOperation\"\n  },\n\n  properties: {\n    /**\n     * Polyfill safe; this helps remove options from polyfilled platforms\n     * as far as text manipulation operations.\n     */\n    polyfillSafe: {\n      type: Boolean\n    },\n    /**\n     * Selected value to match format of the tag currently.\n     */\n    selectedValue: {\n      type: String,\n      value: \"p\",\n      notify: true\n    },\n    /**\n     * Selection tracking\n     */\n    selection: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Is this safari\n     */\n    isSafari: {\n      type: Boolean,\n      notify: true,\n      computed: \"_isSafari()\"\n    }\n  },\n\n  /**\n   * Ready, figure out polyfill\n   */\n  ready: function() {\n    this.polyfillSafe = window.HaxStore.instance.computePolyfillSafe();\n  },\n\n  /**\n   * Respond to simple modifications.\n   */\n  _haxContextOperation: function(e) {\n    let detail = e.detail;\n    let selection = window.HaxStore.getSelection();\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      case \"close-menu\":\n        this.$.formatsize.$.menu.hideMenu();\n        break;\n      case \"insert-inline-gizmo\":\n        if (\n          window.HaxStore._tmpSelection &&\n          window.HaxStore.instance.editMode\n        ) {\n          try {\n            // @todo this doesn't work in safari\n            if (\n              window.HaxStore._tmpRange.startContainer.parentNode.parentNode\n                .tagName === \"HAX-BODY\" ||\n              window.HaxStore._tmpRange.startContainer.parentNode.parentNode\n                .parentNode.tagName === \"HAX-BODY\"\n            ) {\n              window.HaxStore.write(\n                \"activePlaceHolder\",\n                window.HaxStore._tmpRange,\n                this\n              );\n            }\n          } catch (err) {}\n        }\n        if (window.HaxStore.instance.activePlaceHolder != null) {\n          // store placeholder because if this all goes through we'll want\n          // to kill the originating text\n          let values = {\n            text: window.HaxStore.instance.activePlaceHolder.toString()\n          };\n          let type = \"inline\";\n          let haxElements = window.HaxStore.guessGizmo(type, values);\n          // see if we got anything\n          if (haxElements.length > 0) {\n            // hand off to hax-app-picker to deal with the rest of this\n            window.HaxStore.instance.haxAppPicker.presentOptions(\n              haxElements,\n              type,\n              \"Transform selected text to..\",\n              \"gizmo\"\n            );\n          }\n        }\n        break;\n      // wow these are way too easy\n      case \"text-bold\":\n        document.execCommand(\"bold\");\n        break;\n      case \"text-italic\":\n        document.execCommand(\"italic\");\n        break;\n      case \"text-underline\":\n        document.execCommand(\"underline\");\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.$.toolbar.$.moremenu.$.menu.hideMenu();\n        break;\n      case \"text-subscript\":\n        document.execCommand(\"subscript\");\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.$.toolbar.$.moremenu.$.menu.hideMenu();\n        break;\n      case \"text-superscript\":\n        document.execCommand(\"superscript\");\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.$.toolbar.$.moremenu.$.menu.hideMenu();\n        break;\n      case \"text-remove-format\":\n        document.execCommand(\"removeFormat\");\n        break;\n      case \"text-strikethrough\":\n        document.execCommand(\"strikeThrough\");\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.$.toolbar.$.moremenu.$.menu.hideMenu();\n        break;\n      case \"text-link\":\n        var href = \"\";\n        if (typeof selection.focusNode.parentNode.href !== typeof undefined) {\n          href = selection.focusNode.parentNode.href;\n        }\n        // @todo put in a dialog instead of this\n        let url = prompt(\"Enter a URL:\", href);\n        if (url) {\n          document.execCommand(\"createLink\", false, url);\n        }\n        break;\n      case \"text-unlink\":\n        document.execCommand(\"unlink\");\n        break;\n      /**\n       * Our bad actors when it comes to polyfill'ed shadowDOM.\n       * Naughty, naughty shadyDOM. Fortunately this is only IE11/Edge\n       */\n      case \"text-indent\":\n        document.execCommand(\"indent\");\n        break;\n      case \"text-outdent\":\n        document.execCommand(\"outdent\");\n        break;\n      case \"text-list-numbered\":\n        document.execCommand(\"insertOrderedList\");\n        break;\n      case \"text-list-bulleted\":\n        document.execCommand(\"insertUnorderedList\");\n        break;\n    }\n  },\n\n  /**\n   * Test for safari, if it is don't place things in the menu\n   */\n  _isSafari: function() {\n    let ua = navigator.userAgent.toLowerCase();\n    // test to find safari to account for it's handling\n    // of what's been selected. This isn't great UX but\n    // there's literally nothing we can do for Safari\n    // because of https://github.com/LRNWebComponents/hax-body/issues/38\n    if (ua.indexOf(\"safari\") != -1) {\n      if (ua.indexOf(\"chrome\") > -1) {\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        padding: 0;\n        margin: 0;\n        border-radius: 0;\n        box-sizing: content-box;\n      }\n      :host([disabled]) {\n        opacity: 0.5;\n      }\n      :host(:not([disabled]):focus),\n      :host(:not([disabled]):hover) {\n        cursor: pointer;\n      }\n      :host([disabled]:focus),\n      :host([disabled]:hover) {\n        cursor: not-allowed;\n      }\n      :host([selected]) {\n        outline: 1px solid white;\n      }\n      :host([dark][selected]) {\n        outline: 1px solid black;\n      }\n      :host(:focus),\n      :host(:hover) {\n        outline: 1px dotted white;\n      }\n      :host([dark]:focus),\n      :host([dark]:hover) {\n        outline: 1px dotted black;\n      }\n    </style>\n  `,\n\n  is: \"simple-colors-picker-swatch\",\n\n  properties: {\n    /**\n     * is the swatch disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * The hex code of the color\n     */\n    hex: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * The name of the color\n     */\n    label: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * The level of the color\n     */\n    level: {\n      type: Number,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * The order of the color\n     */\n    order: {\n      type: Number,\n      value: null,\n      reflectToAttribute: true\n    },\n    /**\n     * is the swatch selected?\n     */\n    selected: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    }\n  },\n\n  /**\n   * sets event listeners\n   */\n  ready: function() {\n    let root = this;\n    if (root.level > 5) root.setAttribute(\"dark\", \"dark\");\n    root.style.backgroundColor = root.hex;\n    root.addEventListener(\"click\", function(e) {\n      root.fire(\"click-swatch\", root);\n    });\n    root.addEventListener(\"keyup\", function(e) {\n      if (e.keyCode === 13 || e.keyCode === 32) {\n        root.fire(\"click-swatch\", root);\n      } else if (e.keyCode === 37) {\n        root.fire(\"previous-swatch\", root);\n      } else if (e.keyCode === 39) {\n        root.fire(\"next-swatch\", root);\n      } else if (e.keyCode === 38) {\n        root.fire(\"next-level\", root);\n      } else if (e.keyCode === 40) {\n        root.fire(\"previous-level\", root);\n      }\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"./simple-colors-picker-swatch.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n\nPolymer({\n  _template: html`\n    <custom-style>\n      <style is=\"custom-style\">\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n        :host,\n        :host #button,\n        :host #palette {\n          margin: 0;\n          padding: 0;\n        }\n        :host #collapse {\n          position: absolute;\n          top: var(--simple-colors-picker-preview-size, 20px);\n          margin-top: 12px;\n        }\n        :host([disabled]) #collapse,\n        :host([collapsed]) #collapse {\n          height: 0;\n          overflow: hidden;\n          transition: all 0.3s;\n          transition-delay: 0.3s;\n        }\n        :host #palette {\n          position: absolute;\n          left: 0;\n          right: 0;\n          display: table;\n          border-collapse: collapse;\n          z-index: 1000;\n          border: 1px solid;\n          border-color: var(\n            --simple-colors-picker-button-border-color,\n            --simple-colors-background3\n          );\n        }\n        :host .row {\n          display: table-row;\n        }\n        :host simple-colors-picker-swatch {\n          display: table-cell;\n          padding-top: var(--simple-colors-picker-swatch-size, 20px);\n          padding-left: var(--simple-colors-picker-swatch-size, 20px);\n        }\n        :host simple-colors-picker-swatch[disabled] {\n          display: none;\n        }\n        :host .sr-only {\n          display: table-cell;\n          font-size: 0;\n        }\n        :host #button {\n          display: flex;\n          align-items: center;\n          border: 1px solid;\n          border-radius: 4px;\n          color: var(\n            --simple-colors-picker-button-color,\n            --simple-colors-foreground2\n          );\n          border-color: var(\n            --simple-colors-picker-button-border-color,\n            --simple-colors-background3\n          );\n          background-color: var(\n            --simple-colors-picker-button-bg-color,\n            --simple-colors-background2\n          );\n        }\n        :host([disabled]) #button,\n        :host #button[disabled] {\n          color: var(\n            --simple-colors-picker-button-disabled-color,\n            --simple-colors-foreground4\n          );\n          border-color: var(\n            --simple-colors-picker-button-disabled-border-color,\n            --simple-colors-background5\n          );\n          background-color: var(\n            --simple-colors-picker-button-disabled-bg-color,\n            --simple-colors-background4\n          );\n          cursor: not-allowed;\n        }\n        :host(:not([disabled])) #button:focus,\n        :host(:not([disabled])) #button:hover {\n          color: var(\n            --simple-colors-picker-button-hover-color,\n            --simple-colors-foreground1\n          );\n          border-color: var(\n            --simple-colors-picker-button-hover-color,\n            --simple-colors-background5\n          );\n          background-color: var(\n            --simple-colors-picker-button-hover-bg-color,\n            --simple-colors-background1\n          );\n        }\n        :host #button > div {\n          margin: 5px;\n          border: 1px solid;\n          flex-grow: 1;\n          border-color: var(\n            --simple-colors-picker-button-hover-color,\n            --simple-colors-background5\n          );\n          display: inline-block;\n        }\n        :host #button > div,\n        :host #button > div iron-icon {\n          width: var(--simple-colors-picker-preview-size, 20px);\n          height: var(--simple-colors-picker-preview-size, 20px);\n        }\n        :host(:not([collapsed])) #icon {\n          transform: rotate(-90deg);\n          transition: transform 0.25s;\n        }\n        :host #empty {\n          padding: 15px;\n        }\n        @media screen and (max-width: 600px) {\n          :host {\n            position: static;\n          }\n          :host #collapse {\n            top: 0;\n            margin-top: 0;\n            position: relative;\n          }\n          :host #palette {\n            position: sticky;\n          }\n        }\n      </style>\n    </custom-style>\n    <button id=\"button\" label=\"[[label]]\" disabled\\$=\"[[disabled]]\">\n      <div id=\"swatch\" style=\"[[selectedStyle]]\">\n        <iron-icon id=\"texture\" icon=\"image:texture\"></iron-icon>\n      </div>\n      <span id=\"icon\"><iron-icon icon=\"arrow-drop-down\"></iron-icon></span>\n    </button>\n    <div id=\"collapse\" aria-collapsed=\"[[collapse]]\">\n      <div id=\"palette\">\n        <div id=\"empty\">No colors available.</div>\n        <template\n          id=\"rows\"\n          is=\"dom-repeat\"\n          items=\"[[swatches]]\"\n          as=\"row\"\n          index-as=\"level\"\n        >\n          <div class=\"row\">\n            <span id=\"level\" class=\"sr-only\">lightness level [[level]]</span>\n            <template\n              id=\"swatches\"\n              is=\"dom-repeat\"\n              items=\"[[row]]\"\n              as=\"swatch\"\n              index-as=\"order\"\n            >\n              <simple-colors-picker-swatch\n                aria-describedby=\"level\"\n                disabled=\"[[disabled]]\"\n                hex=\"[[swatch.hex]]\"\n                label=\"[[swatch.label]]\"\n                level=\"[[swatch.level]]\"\n                order=\"[[order]]\"\n                role=\"button\"\n                selected=\"[[swatch.selected]]\"\n                tabindex=\"0\"\n              >\n              </simple-colors-picker-swatch>\n            </template>\n          </div>\n        </template>\n      </div>\n    </div>\n  `,\n\n  is: \"simple-colors-picker\",\n\n  listeners: {\n    \"click-swatch\": \"_onClickSwatch\",\n    \"previous-swatch\": \"_onPreviousSwatch\",\n    \"next-swatch\": \"_onNextSwatch\",\n    \"previous-level\": \"_onPreviousLevel\",\n    \"next-level\": \"_onNextLevel\"\n  },\n\n  properties: {\n    /**\n     * The theme for the color variables\n     */\n    theme: {\n      type: String,\n      value: null\n    },\n    /**\n     * Only show colors that contrast with supplied color variable?\n     */\n    contrast: {\n      type: String,\n      value: null\n    },\n    /**\n     * Expand contrasting colors to WCAG 2.0 AA for large text?\n     * Default is WCAG 2.0 AA small text.\n     */\n    contrastLargeText: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * is the picker disabled?\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * is the picker collapsed?\n     */\n    collapsed: {\n      type: Boolean,\n      value: true,\n      reflectToAttribute: true\n    },\n    /**\n     * The label for the color picker input\n     */\n    label: {\n      type: String,\n      value: \"Pick a color.\"\n    },\n    /**\n     * The swatches for the color picker\n     */\n    swatches: {\n      type: Array,\n      value: []\n    },\n    /**\n     * An object with the variable and hex code for the selected color\n     */\n    value: {\n      type: Object,\n      value: null\n    },\n    /**\n     * CSS to preview selected swatch\n     */\n    selectedStyle: {\n      type: String,\n      computed: \"_setSelectedStyle(value)\"\n    }\n  },\n\n  /**\n   * Load swatches and listen for button click\n   */\n  ready: function() {\n    let root = this;\n    root.updateSwatches(root.contrast, root.contrastLargeText);\n\n    // click button to expand swatches\n    root.$.button.addEventListener(\"click\", function() {\n      root.toggleCollapse();\n    });\n\n    // use spacebar or enter keys on button to expand swatches\n    root.$.button.addEventListener(\"keyup\", function(e) {\n      if (e.keyCode === 13 || e.keyCode === 32) root.toggleCollapse(false);\n    });\n  },\n\n  /**\n   * updates swatches\n   */\n  updateSwatches: function(contrast, contrastLargeText) {\n    contrast = contrast !== null ? contrast : this.contrast;\n    contrastLargeText =\n      contrastLargeText !== null ? contrastLargeText : this.contrastLargeText;\n    this.contrast = contrast;\n    this.contrastLargeText = contrastLargeText;\n    let root = this,\n      hasContrast = contrast !== undefined && contrast !== null,\n      isColor = false,\n      level = 1,\n      isForeground = true,\n      rows = [],\n      count = 0;\n    if (root.__hexCodes !== undefined && root.__hexCodes !== null) {\n      if (hasContrast) {\n        let cssVariable = contrast\n            .replace(\"--simple-colors-\", \"\")\n            .split(\"-theme-\"),\n          theme = cssVariable.length > 1 ? cssVariable[0] : \"\",\n          colorLevelFg = cssVariable[cssVariable.length - 1].split(\"-\");\n        isColor = colorLevelFg[0].length > 1;\n        let levelFg = colorLevelFg[colorLevelFg.length - 1];\n        (isForeground = levelFg.indexOf(\"foreground\") > -1),\n          (size = !contrastLargeText);\n        level = levelFg[levelFg.length - 1];\n      }\n      for (let i = 0; i < root.__hexCodes.colorLevels.length; i++) {\n        let swatches = [];\n        for (let property in root.__hexCodes) {\n          let temp =\n              isColor || property !== \"grey\"\n                ? root.__wcagaa.colors\n                : root.__wcagaa.greys,\n            highestLevel = contrastLargeText\n              ? temp.large[parseInt(level) - 1]\n              : temp.small[parseInt(level) - 1];\n          if (\n            property !== \"colorLevels\" &&\n            property !== \"accent\" &&\n            root.__hexCodes.hasOwnProperty(property)\n          ) {\n            let disabledColor = isColor && property !== \"grey\",\n              disabledLevel = false,\n              lightFg =\n                (root.theme === \"light\" && isForeground) ||\n                (root.theme === \"dark\" && !isForeground);\n            if (!lightFg && (i < 5 || 10 - i > highestLevel)) {\n              disabledLevel = true;\n            } else if (lightFg && (i > 4 || i + 1 > highestLevel)) {\n              disabledLevel = true;\n            }\n            if (!hasContrast || (!disabledColor && !disabledLevel)) {\n              swatches.push({\n                label: property,\n                level: i + 1,\n                hex: root.__hexCodes[property][i],\n                selected: false\n              });\n              count++;\n            }\n          }\n        }\n        rows.push(swatches);\n      }\n    }\n    root.$.empty.style.display = count > 0 ? \"none\" : \"block\";\n    root.$.rows.style.display = count === 0 ? \"none\" : \"block\";\n    root._updateSelection(rows);\n  },\n\n  /**\n   * action for when a swatch was selected\n   */\n  _onClickSwatch: function(e) {\n    console.log(\"_onClickSwatch\", e);\n    let dark = this.theme === \"dark\",\n      theme = this.theme === null ? \"\" : \"-\" + this.theme + \"-theme\",\n      color = e.detail.label.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase(),\n      isForeground,\n      suffix,\n      level = parseInt(e.detail.level),\n      hex = e.detail.hex;\n    if (!dark) {\n      if (e.detail.level < 6) {\n        isForeground = true;\n      } else {\n        isForeground = false;\n        level = 11 - level;\n      }\n    } else {\n      if (e.detail.level < 6) {\n        isForeground = false;\n      } else {\n        isForeground = true;\n        level = 11 - level;\n      }\n    }\n    if (theme === \"dark\") isForeground = !isForeground;\n    color = color === \"grey\" ? \"\" : color;\n    //close swatches, set value and fire event\n    suffix = isForeground ? \"foreground\" : \"background\";\n    this.value = {\n      cssVariable:\n        \"--simple-colors\" + theme + \"-\" + color + \"-\" + suffix + level,\n      hexCode: hex\n    };\n    this._updateSelection(this.swatches);\n    this.toggleCollapse(true);\n  },\n\n  /**\n   * navigate swatch cursor to left\n   */\n  _updateSelection: function(swatches) {\n    let root = this,\n      hasHex =\n        root.value !== undefined &&\n        root.value !== null &&\n        root.value.hexCode !== undefined;\n    if (swatches !== undefined && swatches.length > 0) {\n      let rows = [];\n      for (let i = 0; i < swatches.length; i++) {\n        let row = [];\n        for (let j = 0; j < swatches[i].length; j++) {\n          let swatch = swatches[i][j];\n          swatch.selected = hasHex && root.value.hexCode === swatch.hex;\n          row.push(swatch);\n        }\n        rows.push(row);\n      }\n      root.set(\"swatches\", []);\n      root.$.rows.render();\n      root.set(\"swatches\", rows);\n      root.$.rows.render();\n    }\n  },\n\n  /**\n   * navigate swatch cursor to left\n   */\n  _onPreviousSwatch: function(e) {\n    let target = this.shadowRoot.querySelector(\n      'simple-colors-picker-swatch[order=\"' +\n        (e.detail.order - 1) +\n        '\"][level=\"' +\n        e.detail.level +\n        '\"]'\n    );\n    if (target !== null) target.focus();\n  },\n\n  /**\n   * navigate swatch cursor to right\n   */\n  _onNextSwatch: function(e) {\n    let target = this.shadowRoot.querySelector(\n      'simple-colors-picker-swatch[order=\"' +\n        (e.detail.order + 1) +\n        '\"][level=\"' +\n        e.detail.level +\n        '\"]'\n    );\n    if (target !== null) target.focus();\n  },\n\n  /**\n   * navigate swatch cursor down\n   */\n  _onPreviousLevel: function(e) {\n    let target = this.shadowRoot.querySelector(\n      'simple-colors-picker-swatch[order=\"' +\n        e.detail.order +\n        '\"][level=\"' +\n        (e.detail.level + 1) +\n        '\"]'\n    );\n    if (target !== null) target.focus();\n  },\n\n  /**\n   * navigate swatch cursor up\n   */\n  _onNextLevel: function(e) {\n    let target = this.shadowRoot.querySelector(\n      'simple-colors-picker-swatch[order=\"' +\n        e.detail.order +\n        '\"][level=\"' +\n        (e.detail.level - 1) +\n        '\"]'\n    );\n    if (target !== null) target.focus();\n  },\n\n  /**\n   * update selected swatch preview's background color\n   */\n  _setSelectedStyle: function(value) {\n    let hex = value !== null ? value.hexCode : \"transparent\";\n    this.$.texture.style.display = value !== null ? \"none\" : \"block\";\n    if (this.__init !== undefined) {\n      this.__init = true;\n    } else {\n      this.fire(\"change\", this.value);\n    }\n    return \"background: \" + hex + \";\";\n  },\n\n  /**\n   * toggle the collapse\n   */\n  toggleCollapse: function(collapse) {\n    collapse = collapse !== undefined ? collapse : !this.collapsed;\n    this.collapsed = collapse;\n    this.fire(\"toggleCollapse\", this);\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-input/paper-textarea.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nimport \"./simple-colors-picker.js\";\nimport \"./hax-context-item-menu.js\";\nimport \"./hax-context-item.js\";\nimport \"./hax-toolbar.js\";\n/**\n`hax-ce-context`\nA context menu that provides common custom-element based authoring options. While\ntrying to call for haxProperties which can automatically generate the buttons\nrequired for populating input.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context menu - this is a menu of custom-element based buttons and events for use in a larger solution.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host *[hidden] {\n        display: none;\n      }\n      :host {\n        display: block;\n        height: 32px;\n        background-color: white;\n      }\n      hax-context-item {\n        margin: 0;\n        height: 32px;\n      }\n      .human-name {\n        font-size: 16px;\n        border-top-left-radius: 25%;\n        border-top-right-radius: 25%;\n        line-height: 16px;\n        font-family: sans-serif;\n        width: -webkit-fit-content;\n        width: -moz-max-content;\n        width: fit-content;\n        background-color: white;\n      }\n      .human-name-inner {\n        font-size: 16px;\n        border-top-left-radius: 25%;\n        border-top-right-radius: 25%;\n        margin: -32px 0px 0 34px;\n        line-height: 16px;\n        padding: 8px 16px 8px 8px;\n        font-family: sans-serif;\n        width: -webkit-fit-content;\n        width: -moz-max-content;\n        width: fit-content;\n        background-color: black;\n        color: white;\n        opacity: 0.4;\n        transition: 0.6s all ease;\n      }\n      :host(:hover) .human-name-inner {\n        opacity: 1;\n      }\n      :host(.hax-context-pin-top) hax-toolbar {\n        position: fixed;\n        top: 64px;\n        opacity: 0.95;\n      }\n      :host(.hax-context-pin-bottom) hax-toolbar {\n        position: fixed;\n        bottom: 0;\n        opacity: 0.95;\n      }\n    </style>\n    <div class=\"human-name\">\n      <div class=\"human-name-inner\">[[humanName]]</div>\n    </div>\n    <hax-toolbar hax-properties=\"[[haxProperties]]\" size=\"{{ceSize}}\">\n      <slot slot=\"primary\"></slot>\n      <hax-context-item\n        slot=\"primary\"\n        icon=\"icons:settings\"\n        label=\"Settings\"\n        event-name=\"hax-manager-configure\"\n        hidden$=\"[[!__hasSettingsForm]]\"\n      ></hax-context-item>\n      <hax-context-item\n        slot=\"primary\"\n        icon=\"icons:view-quilt\"\n        label=\"[[__parentName]]\"\n        event-name=\"hax-manager-configure-container\"\n        hidden$=\"[[!__hasParentSettingsForm]]\"\n      ></hax-context-item>\n    </hax-toolbar>\n  `,\n\n  is: \"hax-ce-context\",\n\n  properties: {\n    /**\n     * ce size.\n     */\n    ceSize: {\n      type: Number,\n      value: 100,\n      observer: \"_ceSizeChanged\"\n    },\n    /**\n     * Selected value to match ce direction currently.\n     */\n    haxProperties: {\n      type: Object,\n      value: {},\n      observer: \"_haxPropertiesChanged\"\n    },\n    /**\n     * Active Name from the properties\n     */\n    humanName: {\n      type: String\n    }\n  },\n\n  /**\n   * Set haxProperties.\n   */\n  setHaxProperties: function(props) {\n    // be aggressive w/ reset\n    this.set(\"haxProperties\", {});\n    this.set(\"haxProperties\", props);\n  },\n\n  /**\n   * ce size changed.\n   */\n  _ceSizeChanged: function(newValue, oldValue) {\n    if (\n      typeof newValue !== typeof undefined &&\n      typeof oldValue !== typeof undefined\n    ) {\n      this.fire(\"hax-context-item-selected\", {\n        eventName: \"hax-size-change\",\n        value: newValue\n      });\n    }\n  },\n\n  /**\n   * HAX properties changed, update buttons available.\n   */\n  _haxPropertiesChanged: function(newValue, oldValue) {\n    if (\n      typeof oldValue !== typeof undefined &&\n      typeof newValue.settings !== typeof undefined\n    ) {\n      // clear current slot for the tag\n      let slot = dom(this);\n      while (slot.firstChild !== null) {\n        slot.removeChild(slot.firstChild);\n      }\n      let settings = newValue.settings.quick;\n      let configure = newValue.settings.configure;\n      let advanced = newValue.settings.advanced;\n      // support things that could technically have no configuration\n      // or advanced form but have quick settings\n      // This doesn't make a ton of sense but it is possible\n      if (\n        (configure.length || advanced.length) &&\n        newValue.element.tagName !== \"HR\"\n      ) {\n        this.__hasSettingsForm = true;\n      } else {\n        this.__hasSettingsForm = false;\n      }\n      this.__hasParentSettingsForm = false;\n      // test for parent being different from child\n      if (\n        window.HaxStore.instance.activeContainerNode !==\n        window.HaxStore.instance.activeNode\n      ) {\n        this.__hasParentSettingsForm = true;\n        switch (window.HaxStore.instance.activeContainerNode.tagName) {\n          case \"P\":\n          case \"UL\":\n          case \"OL\":\n          case \"DIV\":\n            this.__parentName = \"Text block settings\";\n            break;\n          case \"GRID-PLATE\":\n            this.__parentName = \"Layout settings\";\n            break;\n          default:\n            this.__parentName = window.HaxStore.instance.activeContainerNode.tagName\n              .replace(\"-\", \" \")\n              .toLowerCase();\n            +\" settings\";\n            break;\n        }\n      }\n      // generate a human name for this\n      if (typeof newValue.gizmo.title === typeof undefined) {\n        this.humanName = window.HaxStore.instance.activeNode.tagName\n          .replace(\"-\", \" \")\n          .toLowerCase();\n      } else {\n        this.humanName = newValue.gizmo.title;\n      }\n      var item;\n      // @todo kick stuff into the local dom as options\n      for (var i = 0; i < settings.length; i++) {\n        let setting = settings[i];\n        // create a new context item for the quick\n        item = document.createElement(\"hax-context-item\");\n        item.eventName = \"hax-edit-property\";\n        item.label = setting.title;\n        item.options = setting.options;\n        item.icon = setting.icon;\n        item.inputMethod = setting.inputMethod;\n        item.required = setting.required;\n        item.options = setting.options;\n        item.validation = setting.validation;\n        item.validationType = setting.validationType;\n        item.description = setting.description;\n        // property or slot if it doesn't exist\n        if (typeof setting.property !== typeof undefined) {\n          item.propertyToBind = setting.property;\n        } else if (typeof setting.attribute !== typeof undefined) {\n          item.propertyToBind = setting.attribute;\n        } else {\n          item.slotToBind = setting.slot;\n        }\n        slot.appendChild(item);\n      }\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"./hax-context-item-menu.js\";\nimport \"./hax-context-item.js\";\n/**\n`hax-plate-context`\nA context menu that provides common grid plate based authoring options.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context menu - this is a menu of text based buttons and events for use in a larger solution.\n - grid plate - the container / full HTML tag which can have operations applied to it.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        width: 32px;\n      }\n      :host(:hover) {\n        opacity: 1;\n      }\n      hax-context-item {\n        display: block;\n        margin: 6px 0;\n        width: 32px;\n      }\n      .area {\n        width: 32px;\n        float: left;\n        opacity: 0.5;\n        visibility: visible;\n        transition: 0.3s all ease;\n      }\n      .area:hover {\n        opacity: 1;\n      }\n    </style>\n    <div class=\"area\">\n      <hax-context-item\n        light=\"\"\n        mini=\"\"\n        icon=\"arrow-upward\"\n        label=\"Move up\"\n        event-name=\"grid-plate-up\"\n        direction=\"left\"\n      ></hax-context-item>\n      <hax-context-item\n        light=\"\"\n        mini=\"\"\n        icon=\"arrow-downward\"\n        label=\"Move down\"\n        event-name=\"grid-plate-down\"\n        direction=\"left\"\n      ></hax-context-item>\n    </div>\n  `,\n\n  is: \"hax-plate-context\"\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-input/paper-textarea.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nimport \"@polymer/paper-slider/paper-slider.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./simple-colors-picker.js\";\nimport \"./hax-context-item-menu.js\";\nimport \"./hax-context-item.js\";\n/**\n`hax-input-mixer`\nA context menu that provides common custom-element based authoring options. While\ntrying to call for haxProperties which can automatically generate the buttons\nrequired for populating input.\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n - context menu - this is a menu of custom-element based buttons and events for use in a larger solution.\n*/\nPolymer({\n  _template: html`\n    <custom-style>\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          color: #ffffff;\n        }\n        app-toolbar {\n          background-color: #3e3e3e;\n          color: white;\n          padding: 0 0 0 16px;\n        }\n        hax-context-item {\n          margin: 0;\n          width: 40px;\n          height: 40px;\n        }\n        #elementoptions {\n          height: inherit;\n        }\n        #input {\n          color: #ffffff;\n        }\n        paper-checkbox {\n          --paper-checkbox-label-color: #ffffff;\n        }\n        .input-mixer-label {\n          padding-left: 4px;\n        }\n        paper-textarea,\n        paper-input {\n          --paper-input-container-color: #bbbbff;\n          --paper-input-container-focus-color: #ffffff;\n          --paper-input-container-invalid-color: #ffaaaa;\n          --paper-input-container-input-color: #ffffff;\n          --paper-input-container-shared-input-style: {\n            color: #ffffff;\n            background: transparent;\n            margin: 0;\n            padding: 0;\n            min-width: 320px;\n            line-height: 16px;\n            font-size: 16px;\n            margin-top: -8px;\n            margin-bottom: 8px;\n            outline: none;\n            border: none;\n          }\n        }\n        .input-method {\n          color: #ffffff;\n        }\n      </style>\n    </custom-style>\n    <app-toolbar>\n      <template is=\"dom-if\" if=\"[[__inputselect]]\">\n        <span class=\"input-mixer-label\">[[label]]</span>\n        <hax-context-item-menu\n          selected-value=\"{{__selectedValue}}\"\n          icon=\"[[icon]]\"\n          id=\"input\"\n        >\n          <slot></slot>\n        </hax-context-item-menu>\n      </template>\n      <span class=\"input-method\">\n        <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n          <paper-textarea\n            id=\"input\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-textarea>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n          <paper-input\n            id=\"input\"\n            type=\"[[validationType]]\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n          <span>[[label]]</span>\n          <simple-colors-picker\n            id=\"input\"\n            value=\"{{value}}\"\n          ></simple-colors-picker>\n        </template>\n      </span>\n      <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n        [[description]]\n      </paper-tooltip>\n      <hax-context-item\n        id=\"updatebutton\"\n        icon=\"subdirectory-arrow-right\"\n        label\\$=\"Update [[label]]\"\n        event-name=\"hax-update-tap\"\n      ></hax-context-item>\n    </app-toolbar>\n  `,\n\n  is: \"hax-input-mixer\",\n\n  listeners: {\n    \"hax-context-item-selected\": \"_haxContextOperation\"\n  },\n\n  properties: {\n    /**\n     * value, where the magic happens.\n     */\n    value: {\n      type: String,\n      value: null\n    },\n    /**\n     * Label for the input\n     */\n    label: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional regex Validation for input and textarea fields\n     */\n    validation: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Optional input type validation; use on input field\n     */\n    validationType: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Required; used on input and textarea fields\n     */\n    required: {\n      type: Boolean,\n      reflectToAttribute: true\n    },\n    /**\n     * Options for the input if it's a select of some form\n     */\n    options: {\n      type: Object,\n      value: {},\n      reflectToAttribute: true\n    },\n    /**\n     * Optional icon that represents the item mixing.\n     */\n    icon: {\n      type: String,\n      value: \"android\",\n      reflectToAttribute: true\n    },\n    /**\n     * longer description for the input\n     */\n    description: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * longer description for the input\n     */\n    inputMethod: {\n      type: String,\n      value: null,\n      reflectToAttribute: true,\n      observer: \"_inputMethodChanged\"\n    },\n    /**\n     * longer description for the input\n     */\n    propertyToBind: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * slot to bind input back to\n     */\n    slotToBind: {\n      type: String,\n      reflectToAttribute: true\n    }\n  },\n\n  /**\n   * Ensure our weird data binding for templates is set initially.\n   */\n  ready: function() {\n    // prime methods even though invisible most likely\n    this._resetInputMethods();\n  },\n\n  /**\n   * Input method changes, allow our templates to rebind correctly.\n   */\n  _inputMethodChanged: function(newValue, oldValue) {\n    if (newValue != null && typeof oldValue !== typeof undefined) {\n      let method = newValue;\n      let methods = this.validInputMethods();\n      // ensure this is a valid method of input\n      if (methods.includes(method)) {\n        // set everything false to force a correct rebind of template tags\n        this._resetInputMethods();\n        // this is weird looking, I know...\n        this[\"__input\" + method] = true;\n        // hide the menu if it was open previously\n        // need to paint into the slot so clean it out and repaint\n        let slot = dom(this);\n        while (slot.firstChild !== null) {\n          slot.removeChild(slot.firstChild);\n        }\n        // select needs to inject settings into the slot\n        if (method === \"select\" && typeof this.options !== typeof undefined) {\n          // this hits the key => value relationship correctly\n          var item;\n          for (var val in this.options) {\n            item = document.createElement(\"paper-item\");\n            item.attributes.value = val;\n            item.innerHTML = this.options[val];\n            slot.appendChild(item.cloneNode(true));\n          }\n        }\n        // try and force cursor to focus on this element\n        setTimeout(() => {\n          if (\n            typeof this.shadowRoot.querySelector(\"#input\").hideMenu ===\n            \"function\"\n          ) {\n            this.shadowRoot.querySelector(\"#input\").hideMenu();\n          }\n          this.shadowRoot.querySelector(\"#input\").focus();\n        }, 200);\n      }\n    }\n  },\n\n  /**\n   * Validate input method.\n   */\n  validInputMethods: function() {\n    var methods = [\n      \"flipboolean\",\n      \"boolean\",\n      \"select\",\n      \"confirm\",\n      \"textfield\",\n      \"textarea\",\n      \"datepicker\",\n      \"colorpicker\",\n      \"number\"\n    ];\n    return methods;\n  },\n\n  /**\n   * Reset all our meta attributes.\n   */\n  _resetInputMethods: function() {\n    let methods = this.validInputMethods();\n    for (var i = 0; i < methods.length; i++) {\n      this[\"__input\" + methods[i]] = false;\n    }\n  },\n\n  /**\n   * Respond to simple modifications.\n   */\n  _haxContextOperation: function(e) {\n    let detail = e.detail;\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      case \"hax-update-tap\":\n        // minor dataType conversion for boolean\n        if (this.inputMethod == \"boolean\") {\n          this.value = this.value;\n        }\n        // opposite value for a flip-boolean\n        else if (this.inputMethod == \"flipboolean\") {\n          this.value = !this.value;\n        } else if (this.inputMethod == \"select\") {\n          var count = 0;\n          // convert value into key value\n          for (var val in this.options) {\n            if (count == this.__selectedValue) {\n              this.value = val;\n            }\n            count++;\n          }\n        }\n        let mixer = {\n          value: this.value,\n          propertyToBind: this.propertyToBind,\n          slotToBind: this.slotToBind\n        };\n        // retarget event with all the guts of this item\n        // this way we can do whatever we want in hax-body which is\n        // basically notice that we got asked to do some data binding\n        // and then actually do it and hide this item!!!!\n        this.fire(\"hax-input-mixer-update\", { inputMixer: mixer });\n        break;\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport { flush } from \"@polymer/polymer/lib/utils/flush.js\";\nimport * as async from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@lrnwebcomponents/grid-plate/grid-plate.js\";\nimport \"./lib/hax-text-context.js\";\nimport \"./lib/hax-ce-context.js\";\nimport \"./lib/hax-plate-context.js\";\nimport \"./lib/hax-input-mixer.js\";\n/**\n * `hax-body`\n * `Manager of the body area that can be modified`\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n *  - body is effectively a body of content that can be manipulated in the browser. This is for other HAX elements ultimately to interface with and reside in. It is the controller of input and output for all of HAX as it exists in a document. body is not the <body> tag but we need a similar mental model container for all our other elements.\n *  - text-context - the context menu that shows up when an item is active so it can have text based operations performed to it.\n *  - plate/grid plate - a plate or grid plate is a container that we can operate on in HAX. it can also have layout / \"global\" type of body operations performed on it such as delete, duplicate and higher level format styling.\n */\nlet HaxBody = Polymer({\n  is: \"hax-body\",\n  _template: html`\n    <style include=\"simple-colors\">\n      :host {\n        display: block;\n        min-height: 32px;\n        min-width: 32px;\n        /*font-family: sans-serif;*/\n      }\n      :host #bodycontainer ::slotted(.hax-context-menu) {\n        padding: 0;\n        margin: 0;\n        position: absolute;\n        visibility: hidden;\n        opacity: 0;\n        transition: all 0.3s ease;\n        z-index: 100;\n        float: left;\n        display: block;\n      }\n      :host #bodycontainer ::slotted(#haxinputmixer) {\n        z-index: 10000000;\n      }\n      :host #bodycontainer ::slotted(.hax-context-visible) {\n        visibility: visible;\n        opacity: 1;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]) {\n        outline: none;\n        transition: 0.6s width ease-in-out, 0.6s height ease-in-out,\n          0.6s margin ease-in-out;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(p):empty {\n        background: #f8f8f8;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]):hover {\n        outline: 1px dotted #d3d3d3;\n        outline-offset: 2px;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(* [data-editable]):hover {\n        outline: 1px dotted #d3d3d3;\n        outline-offset: 2px;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]):before {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 32px;\n        transition: 0.3s all ease;\n      }\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*[data-editable]):hover:before {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 32px;\n        transition: 0.3s all ease;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(*.hax-active[data-editable]) {\n        cursor: text !important;\n        outline: 1px dashed #c3c3c3 !important;\n        outline-offset: 4px;\n      }\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*[data-editable] .hax-active) {\n        cursor: text !important;\n        outline: 1px dashed #c3c3c3 !important;\n        outline-offset: 4px;\n      }\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*.hax-active[data-editable]):before {\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 32px;\n        transition: 0.3s all ease;\n      }\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(code.hax-active[data-editable]) {\n        display: block;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(hr[data-editable]) {\n        height: 4px;\n        background-color: #eeeeee;\n        padding-top: 8px;\n        padding-bottom: 8px;\n      }\n      /** Fix to support safari as it defaults to none */\n      :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]) {\n        -webkit-user-select: text;\n        cursor: pointer;\n      }\n\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*[data-editable]::-moz-selection),\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*[data-editable] *::-moz-selection) {\n        background-color: var(--hax-body-highlight, --paper-yellow-300);\n        color: black;\n      }\n      :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]::selection),\n      :host([edit-mode])\n        #bodycontainer\n        ::slotted(*[data-editable] *::selection) {\n        background-color: var(--hax-body-highlight, --paper-yellow-300);\n        color: black;\n      }\n      #bodycontainer {\n        -webkit-user-select: text;\n        user-select: text;\n      }\n\n      #contextcontainer {\n        display: none;\n      }\n      :host([edit-mode][hax-ray-mode])\n        #bodycontainer\n        ::slotted(*[data-editable]) {\n        outline: 1px dashed #d3d3d3;\n        outline-offset: 4px;\n      }\n      :host([edit-mode][hax-ray-mode])\n        #bodycontainer\n        ::slotted(*[data-editable]):before {\n        content: attr(data-hax-ray) \" \" attr(resource) \" \" attr(typeof) \" \"\n          attr(property) \" \" attr(content);\n        font-size: 10px;\n        font-style: italic;\n        left: unset;\n        right: unset;\n        top: unset;\n        background-color: #d3d3d3;\n        color: #000000;\n        bottom: unset;\n        width: auto;\n        padding: 8px;\n        margin: 0;\n        z-index: 1;\n        margin: -16px 0 0 0;\n        float: left;\n        line-height: 2;\n      }\n    </style>\n    <div id=\"bodycontainer\" class=\"ignore-activation\">\n      <slot id=\"body\"></slot>\n    </div>\n    <div id=\"contextcontainer\">\n      <hax-text-context\n        id=\"textcontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-text-context>\n      <hax-ce-context\n        id=\"cecontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-ce-context>\n      <hax-plate-context\n        id=\"platecontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-plate-context>\n      <hax-input-mixer\n        id=\"haxinputmixer\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-input-mixer>\n    </div>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"esc\"\n      on-keys-pressed=\"_escKeyPressed\"\n      stop-keyboard-event-propagation=\"\"\n    ></iron-a11y-keys>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"del backspace\"\n      on-keys-pressed=\"_delKeyPressed\"\n    ></iron-a11y-keys>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"shift+tab\"\n      on-keys-pressed=\"_tabBackKeyPressed\"\n      stop-keyboard-event-propagation=\"\"\n    ></iron-a11y-keys>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"tab\"\n      on-keys-pressed=\"_tabKeyPressed\"\n      stop-keyboard-event-propagation=\"\"\n    ></iron-a11y-keys>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"up\"\n      on-keys-pressed=\"_upKeyPressed\"\n      stop-keyboard-event-propagation=\"\"\n    ></iron-a11y-keys>\n    <iron-a11y-keys\n      target=\"[[activeContainerNode]]\"\n      keys=\"down\"\n      on-keys-pressed=\"_downKeyPressed\"\n      stop-keyboard-event-propagation=\"\"\n    ></iron-a11y-keys>\n  `,\n  listeners: {\n    focusin: \"_focusIn\",\n    mousedown: \"_focusIn\",\n    \"hax-context-item-selected\": \"_haxContextOperation\",\n    \"hax-input-mixer-update\": \"_haxInputMixerOperation\",\n    \"place-holder-replace\": \"replacePlaceholder\"\n  },\n  properties: {\n    /**\n     * State of if we are editing or not.\n     */\n    editMode: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      observer: \"_editModeChanged\"\n    },\n    /**\n     * Access to the global properties object.\n     */\n    globalPreferences: {\n      type: Object,\n      value: {},\n      observer: \"_globalPreferencesUpdated\"\n    },\n    /**\n     * Bust out the HAX Ray mode\n     */\n    haxRayMode: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * A reference to the active node in the slot.\n     */\n    activeNode: {\n      type: Object,\n      value: null,\n      notify: true,\n      observer: \"_activeNodeChanged\"\n    },\n    /**\n     * A reference to the active node in the slot.\n     */\n    activeContainerNode: {\n      type: Object,\n      value: null,\n      notify: true,\n      observer: \"_activeContainerNodeChanged\"\n    }\n  },\n  /**\n   * Ready state to tee everything up.\n   */\n  ready: function() {\n    this.polyfillSafe = window.HaxStore.instance.computePolyfillSafe();\n    // mutation observer that ensures state of hax applied correctly\n    this._observer = new FlattenedNodesObserver(this, info => {\n      // MAKE SURE WE KNOW WHAT JUST GOT ADDED HERE\n      flush();\n      // if we've got new nodes, we have to react to that\n      if (info.addedNodes.length > 0) {\n        info.addedNodes.map(node => {\n          if (this._haxElementTest(node)) {\n            if (this._HTMLPrimativeTest(node)) {\n              node.contentEditable = this.editMode;\n            }\n            // this does the real targetting\n            node.setAttribute(\"data-editable\", this.editMode);\n            node.setAttribute(\"data-hax-ray\", node.tagName);\n            this.fire(\"hax-body-tag-added\", { node: node });\n          }\n        });\n      }\n      // if we dropped nodes via the UI (delete event basically)\n      if (info.removedNodes.length > 0) {\n        // handle removing items... not sure we need to do anything here\n        info.removedNodes.map(node => {\n          if (\n            this._haxElementTest(node) &&\n            !node.classList.contains(\"hax-active\")\n          ) {\n            this.fire(\"hax-body-tag-removed\", { node: node });\n          }\n        });\n      }\n    });\n  },\n  /**\n   * Attached to the DOM; now we can fire event to the store that\n   * we exist and are the thing being edited.\n   */\n  attached: function() {\n    this.shadowRoot.querySelector(\"slot\").addEventListener(\"mouseup\", e => {\n      const tmp = window.HaxStore.getSelection();\n      window.HaxStore._tmpSelection = tmp;\n      try {\n        let range = window.HaxStore._tmpSelection.getRangeAt(0);\n        window.HaxStore._tmpRange = range.cloneRange();\n      } catch (e) {}\n    });\n    this.shadowRoot.querySelector(\"slot\").addEventListener(\"paste\", e => {\n      // only perform this on a text element that is active\n      if (\n        window.HaxStore.instance.isTextElement(\n          window.HaxStore.instance.activeNode\n        ) &&\n        !window.HaxStore.instance.haxManager.opened\n      ) {\n        e.preventDefault();\n        let text = \"\";\n        // intercept paste event\n        if (e.clipboardData || e.originalEvent.clipboardData) {\n          text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n        } else if (window.clipboardData) {\n          text = window.clipboardData.getData(\"Text\");\n        }\n        let sel, range, html;\n        if (window.HaxStore.instance.activeHaxBody.shadowRoot.getSelection) {\n          sel = window.HaxStore.instance.activeHaxBody.shadowRoot.getSelection();\n          if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n            range.insertNode(document.createTextNode(text));\n          }\n        } else if (document.selection && document.selection.createRange) {\n          document.selection.createRange().text = text;\n        }\n      }\n    });\n    this.__tabTrap = false;\n    this.fire(\"hax-register-body\", this);\n    document.body.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    window.addEventListener(\"scroll\", this._keepContextVisible.bind(this));\n  },\n  /**\n   * Detached life cycle\n   */\n  detached: function() {\n    this.shadowRoot.querySelector(\"slot\").removeEventListener(\"mouseup\", e => {\n      window.HaxStore._tmpSelection = window.HaxStore.getSelection();\n    });\n    this.shadowRoot.querySelector(\"slot\").removeEventListener(\"paste\", e => {\n      // only perform this on a text element that is active\n      if (\n        window.HaxStore.instance.isTextElement(\n          window.HaxStore.instance.activeNode\n        ) &&\n        !window.HaxStore.instance.haxManager.opened\n      ) {\n        e.preventDefault();\n        let text = \"\";\n        // intercept paste event\n        if (e.clipboardData || e.originalEvent.clipboardData) {\n          text = (e.originalEvent || e).clipboardData.getData(\"text/plain\");\n        } else if (window.clipboardData) {\n          text = window.clipboardData.getData(\"Text\");\n        }\n        let sel, range, html;\n        if (window.HaxStore.instance.activeHaxBody.shadowRoot.getSelection) {\n          sel = window.HaxStore.instance.activeHaxBody.shadowRoot.getSelection();\n          if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n            range.insertNode(document.createTextNode(text));\n          }\n        } else if (document.selection && document.selection.createRange) {\n          document.selection.createRange().text = text;\n        }\n      }\n    });\n    document.body.removeEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    window.removeEventListener(\"scroll\", this._keepContextVisible.bind(this));\n  },\n  /**\n   * Keep the context menu visible if needed\n   */\n  _keepContextVisible: function(e) {\n    // see if the text context menu is visible\n    let el = false;\n    if (this.$.textcontextmenu.classList.contains(\"hax-context-visible\")) {\n      el = this.$.textcontextmenu;\n    } else if (this.$.cecontextmenu.classList.contains(\"hax-context-visible\")) {\n      el = this.$.cecontextmenu;\n    }\n    // if we see it, ensure we don't have the pin\n    if (el) {\n      if (this.elementInViewport(el)) {\n        el.classList.remove(\"hax-context-pin-bottom\");\n        el.classList.remove(\"hax-context-pin-top\");\n      } else {\n        if (this.__OffBottom) {\n          el.classList.add(\"hax-context-pin-top\");\n        } else {\n          el.classList.add(\"hax-context-pin-bottom\");\n        }\n      }\n    }\n  },\n  /**\n   * Check if part of the passed element is int he viewport\n   */\n  elementInViewport: function(el) {\n    let top =\n      el.offsetTop -\n      32 -\n      window.HaxStore.instance.haxPanel.$.drawer.offsetHeight;\n    let left = el.offsetLeft;\n    let width = el.offsetWidth;\n    let height = el.offsetHeight;\n    while (el.offsetParent) {\n      el = el.offsetParent;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n    this.__OffBottom = top < window.pageYOffset + window.innerHeight;\n    return (\n      top < window.pageYOffset + window.innerHeight &&\n      left < window.pageXOffset + window.innerWidth &&\n      top + height > window.pageYOffset &&\n      left + width > window.pageXOffset\n    );\n  },\n  /**\n   * Replace place holder after an event has called for it in the element itself\n   */\n  replacePlaceholder: function(e) {\n    // generate a paragraph of text here on click\n    if (e.detail === \"text\") {\n      // make sure text just escalates to a paragraph tag\n      let p = document.createElement(\"p\");\n      this.haxReplaceNode(this.activeNode, p, dom(this.activeNode).parentNode);\n      // allow swap out to happen\n      setTimeout(() => {\n        // set active to this p tag\n        window.HaxStore.write(\"activeNode\", p, this);\n        // focus on it\n        p.focus();\n      }, 100);\n    } else {\n      this.replaceElementWorkflow();\n    }\n  },\n  /**\n   * Whole workflow of replacing something in place contextually.\n   * This can fire for things like events needing this workflow to\n   * invoke whether it's a \"convert\" event or a \"replace placeholder\" event\n   */\n  replaceElementWorkflow: function() {\n    let element = window.HaxStore.nodeToHaxElement(this.activeNode, null);\n    let type = \"*\";\n    let skipPropMatch = false;\n    // special support for place holder which defines exactly\n    // what the user wants this replaced with\n    if (\n      element.tag === \"place-holder\" &&\n      typeof element.properties[\"type\"] !== typeof undefined\n    ) {\n      type = element.properties[\"type\"];\n      skipPropMatch = true;\n    }\n    var props = {};\n    // see if we have a gizmo as it's not a requirement to registration\n    // as well as having handlers since mapping is not required either\n    if (\n      typeof window.HaxStore.instance.elementList[element.tag] !==\n        typeof undefined &&\n      window.HaxStore.instance.elementList[element.tag].gizmo !== false &&\n      typeof window.HaxStore.instance.elementList[element.tag].gizmo.handles !==\n        typeof undefined &&\n      window.HaxStore.instance.elementList[element.tag].gizmo.handles.length > 0\n    ) {\n      // get the haxProperties for this item\n      let gizmo = window.HaxStore.instance.elementList[element.tag].gizmo;\n      // walk through each handler\n      for (var i = 0; i < gizmo.handles.length; i++) {\n        // walk the properties defined as they would be to the\n        // left side of the ledger and tell us which property to\n        // mesh with. This effectively rehydrates / inverts that\n        // relationship where we have an element and want to say\n        // \"oh ya, but what could have handled this\" so that we\n        // can use that translation to offer up convertion to a\n        // new element. This is insane.\n        for (var prop in gizmo.handles[i]) {\n          // type is a reserved handler but any other property\n          // which we actually have in our element let's go for it\n          if (\n            prop !== \"type\" &&\n            typeof element.properties[gizmo.handles[i][prop]] !==\n              typeof undefined\n          ) {\n            // The cake is a lie... oh wait... no it's not.\n            // This will completely bend your mind when it comes to\n            // what HTML is, how it should operate and what universe\n            // we can now contort as a result. This effectively allows\n            // reverse engineering any element on the page into any\n            // other compatible element based on the properties in\n            // each element claiming to be compatible.\n            props[prop] = element.properties[gizmo.handles[i][prop]];\n          }\n        }\n      }\n    }\n    let haxElements = window.HaxStore.guessGizmo(type, props, skipPropMatch);\n    // see if we got anything\n    if (haxElements.length > 0) {\n      // hand off to hax-app-picker to deal with the rest of this\n      let tag = this.activeNode.tagName.toLowerCase();\n      let humanName = tag.replace(\"-\", \" \");\n      if (\n        typeof window.HaxStore.instance.elementList[tag] !== typeof undefined &&\n        window.HaxStore.instance.elementList[tag].gizmo !== false\n      ) {\n        humanName = window.HaxStore.instance.elementList[tag].gizmo.title;\n      }\n      window.HaxStore.instance.haxAppPicker.presentOptions(\n        haxElements,\n        \"__convert\",\n        `Transform ${humanName} to..`,\n        \"gizmo\"\n      );\n    } else {\n      window.HaxStore.toast(\"Sorry, this can not be transformed!\", 5000);\n    }\n  },\n  /**\n   * Global prefs updated, let's visualize stuff from hax-ray\n   */\n  _globalPreferencesUpdated: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      this.haxRayMode = newValue.haxRayMode;\n    }\n  },\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated: function(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this.set(e.detail.property, null);\n      }\n      this.set(e.detail.property, e.detail.value);\n    }\n  },\n  /**\n   * Clear area.\n   */\n  haxClearBody: function(confirm = true) {\n    let status = true;\n    // only confirm if asked so we can support wipes without it\n    if (confirm) {\n      status = prompt(\"Are you sure you want to delete all content?\");\n    }\n    // ensure they said yes\n    if (status) {\n      window.HaxStore.wipeSlot(this);\n    }\n  },\n  /**\n   * Insert new tag + content into the local DOM as a node.\n   */\n  haxInsert: function(tag, content, properties = {}, waitForLock = true) {\n    var tags = window.HaxStore.instance.validTagList;\n    // verify this tag is a valid one\n    if (tags.includes(tag)) {\n      // create a new element fragment w/ content in it\n      // if this is a custom-element it won't expand though\n      var frag = document.createElement(tag);\n      frag.innerHTML = content;\n      // clone the fragment which will force an escalation to full node\n      var newNode = frag.cloneNode(true);\n      // support for properties if they exist\n      for (var property in properties) {\n        let attributeName = window.HaxStore.camelToDash(property);\n        if (properties.hasOwnProperty(property)) {\n          // special supporting for boolean because html is weird :p\n          if (properties[property] === true) {\n            newNode.setAttribute(attributeName, properties[property]);\n          } else if (properties[property] === false) {\n            newNode.removeAttribute(attributeName);\n          } else if (\n            properties[property] != null &&\n            properties[property].constructor === Array &&\n            !newNode.properties[property].readOnly\n          ) {\n            newNode.set(attributeName, properties[property]);\n          } else if (\n            properties[property] != null &&\n            properties[property].constructor === Object &&\n            !newNode.properties[property].readOnly\n          ) {\n            newNode.set(attributeName, properties[property]);\n          } else {\n            newNode.setAttribute(attributeName, properties[property]);\n          }\n        }\n      }\n      // special support for a drag and drop into a place-holder tag\n      // as this is a more aggressive operation then the others\n      if (\n        window.HaxStore.instance.activePlaceHolder !== null &&\n        typeof window.HaxStore.instance.activePlaceHolder.style !==\n          typeof undefined\n      ) {\n        // replicate styles so that it doesn't jar the UI\n        newNode.style.width =\n          window.HaxStore.instance.activePlaceHolder.style.width;\n        newNode.style.float =\n          window.HaxStore.instance.activePlaceHolder.style.float;\n        newNode.style.margin =\n          window.HaxStore.instance.activePlaceHolder.style.margin;\n        newNode.style.display =\n          window.HaxStore.instance.activePlaceHolder.style.display;\n        this.haxReplaceNode(\n          window.HaxStore.instance.activePlaceHolder,\n          newNode,\n          dom(window.HaxStore.instance.activePlaceHolder).parentNode\n        );\n        window.HaxStore.instance.activePlaceHolder = null;\n      }\n      // insert at active insert point if we have one\n      else if (this.activeContainerNode !== null) {\n        // allow for inserting things into things but not grid plate\n        if (\n          newNode.tagName !== \"GRID-PLATE\" &&\n          this.activeContainerNode.tagName === \"GRID-PLATE\" &&\n          this.activeContainerNode !== this.activeNode\n        ) {\n          newNode.setAttribute(\"slot\", this.activeNode.getAttribute(\"slot\"));\n          dom(this.activeContainerNode).insertBefore(newNode, this.activeNode);\n        } else {\n          dom(this).insertBefore(\n            newNode,\n            this.activeContainerNode.nextElementSibling\n          );\n        }\n      } else {\n        // send this into the root, which should filter it back down into the slot\n        dom(this).appendChild(newNode);\n      }\n      this.$.textcontextmenu.highlightOps = false;\n      this.__updateLockFocus = newNode;\n      // wait so that the DOM can have the node to then attach to\n      if (waitForLock) {\n        setTimeout(() => {\n          this.breakUpdateLock();\n        }, 300);\n      }\n      return true;\n    }\n    return false;\n  },\n\n  breakUpdateLock: function() {\n    window.HaxStore.write(\"activeContainerNode\", this.__updateLockFocus, this);\n    window.HaxStore.write(\"activeNode\", this.__updateLockFocus, this);\n    // attempt to focus on the new node, may not always work\n    this.__updateLockFocus.focus();\n    // scroll to it\n    if (typeof this.__updateLockFocus.scrollIntoViewIfNeeded === \"function\") {\n      this.__updateLockFocus.scrollIntoViewIfNeeded(true);\n    } else {\n      this.__updateLockFocus.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\"\n      });\n    }\n  },\n  /**\n   * Return the current hax content area as text that could be\n   * inserted into something.\n   */\n  haxToContent: function() {\n    // remove from the body area so we can generate a legit html structure\n    this.hideContextMenus();\n    var __active = this.activeNode;\n    // null this to drop hax based classes\n    window.HaxStore.write(\"activeNode\", null, this);\n    window.HaxStore.write(\"activeContainerNode\", null, this);\n    let children = dom(this.$.body).getDistributedNodes();\n    if (this.globalPreferences.haxDeveloperMode) {\n      console.log(children);\n    }\n    var content = \"\";\n    for (var i = 0, len = children.length; i < len; i++) {\n      // see if this is a valid element or not, providing\n      // some mild front-end sanitization\n      if (this._haxElementTest(children[i])) {\n        children[i].removeAttribute(\"data-editable\");\n        children[i].removeAttribute(\"data-hax-ray\");\n        children[i].contentEditable = false;\n        content += window.HaxStore.haxNodeToContent(children[i]);\n        if (children[i].tagName.toLowerCase() === \"grid-plate\") {\n          this._applyContentEditable(this.editMode, children[i]);\n        }\n      }\n      // keep comments with a special case since they need wrapped\n      else if (children[i].nodeType === 8) {\n        content += \"<!-- \" + children[i].textContent + \" -->\";\n      }\n      // keep everything NOT an element at this point, this helps\n      // preserve whitespace because we're crazy about accuracy\n      else if (\n        children[i].nodeType !== 1 &&\n        typeof children[i].textContent !== typeof undefined &&\n        children[i].textContent !== \"undefined\"\n      ) {\n        content += children[i].textContent;\n      }\n    }\n    // remove the contenteditable attribute\n    content = content.replace(/\\scontenteditable=\\\"false\\\"/g, \"\");\n    // remove the data-editable attribute\n    content = content.replace(/\\sdata-editable=\\\"true\\\"/g, \"\");\n    content = content.replace(/\\sdata-editable=\\\"false\\\"/g, \"\");\n    content = content.replace(/\\sdata-editable=\\\"\"/g, \"\");\n    // remove other attributes that can linger in slots\n    content = content.replace(/\\sdata-editable/g, \"\");\n    content = content.replace(/\\scontenteditable/g, \"\");\n    content = content.replace(/\\sdraggable/g, \"\");\n    content = content.replace(/\\sdata-draggable/g, \"\");\n    // clean up stray hax-ray leftovers\n    content = content.replace(/\\sdata-hax-ray=\\\".*?\\\"/g, \"\");\n    // remove HAX specific classes / scoping classes\n    if (this.parentNode.tagName) {\n      let parentTag = this.parentNode.tagName.toLowerCase();\n      let string = \"style-scope \" + parentTag + \" x-scope\";\n      let re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // remove without the deeeper scope as well for primitives\n      string = \"style-scope \" + parentTag;\n      re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // remove the last common one unpacked\n      string = \"x-scope \" + parentTag + \"-0\";\n      re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // now all tags we have defined as valid\n      let tags = window.HaxStore.instance.validTagList;\n      tags.push(\"hax-preview\");\n      for (var i in tags) {\n        string = \"style-scope \" + tags[i];\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n        string = \"x-scope \" + tags[i] + \"-0 \";\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n        string = \"x-scope \" + tags[i] + \"-0\";\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n      }\n    }\n    // remove empty class structures\n    content = content.replace(/\\sclass=\\\"\\\"/g, \"\");\n    content = content.replace(/\\sclass=\\\"\\s\\\"/g, \"\");\n    // re-apply contenteditable if needed\n    this._applyContentEditable(this.editMode);\n    // set active again\n    window.HaxStore.write(\"activeNode\", __active, this);\n    window.HaxStore.write(\"activeContainerNode\", __active, this);\n    // oh one last thing. escape all script/style tags\n    content = window.HaxStore.encapScript(content);\n    if (this.globalPreferences.haxDeveloperMode) {\n      console.log(content);\n    }\n    return content;\n  },\n  /**\n   * Duplicate node into the local DOM below the current item if we can.\n   */\n  haxDuplicateNode: function(node, parent = this) {\n    // move the context menu before duplicating!!!!\n    this.hideContextMenus();\n    var nodeClone = dom(node).cloneNode(true);\n    if (\n      nodeClone.tagName.toLowerCase() === \"webview\" &&\n      window.HaxStore.instance._isSandboxed &&\n      typeof nodeClone.guestinstance !== typeof undefined\n    ) {\n      delete nodeClone.guestinstance;\n    }\n    // shouldn't be possible but might as well check\n    if (node !== null) {\n      dom(parent).insertBefore(nodeClone, dom(node).nextSibling);\n    } else {\n      dom(parent).appendChild(nodeClone);\n    }\n    setTimeout(() => {\n      // test for a grid plate clone\n      if (parent === this) {\n        window.HaxStore.write(\"activeContainerNode\", nodeClone, this);\n      }\n      window.HaxStore.write(\"activeNode\", nodeClone, this);\n    }, 100);\n    return true;\n  },\n  /**\n   * Hide all context menus.\n   */\n  hideContextMenus: function() {\n    // primary context menus\n    this._hideContextMenu(this.$.textcontextmenu);\n    this._hideContextMenu(this.$.cecontextmenu);\n    // secondary menus and clean up areas\n    this._hideContextMenu(this.$.platecontextmenu);\n    this._hideContextMenu(this.$.haxinputmixer);\n    // force context menu state to closed\n    this.$.textcontextmenu.highlightOps = false;\n  },\n  /**\n   * Reposition context menus to match an element.\n   */\n  positionContextMenus: function(node, container) {\n    let tag = node.tagName.toLowerCase();\n    if (window.HaxStore.instance._isSandboxed && tag === \"webview\") {\n      tag = \"iframe\";\n    }\n    let props = window.HaxStore.instance.elementList[tag];\n    // get width from window size and do very minor responsive inline support\n    let w = Math.max(\n      document.documentElement.clientWidth,\n      window.innerWidth || 0\n    );\n    let offsetmenu = -39;\n    let offsetplate = -31;\n    // if we go below 800 break point, change menu positioning\n    if (w < 800) {\n      offsetmenu = 0;\n      offsetplate = 0;\n    }\n    // try and work against anything NOT a P tag\n    if (typeof props !== typeof undefined && node.tagName !== \"P\") {\n      this.__activeContextType = this.$.cecontextmenu;\n      props.element = node;\n      this.__activeContextType.setHaxProperties(props);\n    } else {\n      // @todo test if this is a custom element, then if it is\n      // try and guess what the properties are based on what's\n      // currently been set. it's by no means perfect but it'll\n      // be a really good start\n      this.__activeContextType = this.$.textcontextmenu;\n    }\n    this._positionContextMenu(\n      this.__activeContextType,\n      container,\n      offsetmenu,\n      -37\n    );\n    this._positionContextMenu(\n      this.$.platecontextmenu,\n      container,\n      offsetplate,\n      0,\n      false\n    );\n    // special case for node not matching container\n    if (!this._HTMLPrimativeTest(node) && node !== container) {\n      container.contentEditable = false;\n    } else if (this._HTMLPrimativeTest(container)) {\n      container.contentEditable = true;\n    }\n  },\n  /**\n   * Move grid plate around\n   */\n  haxMoveGridPlate: function(direction, node, container) {\n    // menu is actually in the element for render purposes\n    this.hideContextMenus();\n    // support moving things multiple directions\n    switch (direction) {\n      case \"first\":\n        // ensure we can go up, first being a mode of up\n        if (container.previousElementSibling !== null) {\n          dom(this).insertBefore(container, dom(this).firstChild);\n        }\n        break;\n      case \"up\":\n        // ensure we can go up\n        if (container.previousElementSibling !== null) {\n          dom(this).insertBefore(container, container.previousElementSibling);\n        }\n        break;\n      case \"down\":\n        if (container.nextElementSibling !== null) {\n          dom(this).insertBefore(container.nextElementSibling, container);\n        }\n        break;\n      case \"last\":\n        if (container.nextElementSibling !== null) {\n          dom(this).appendChild(container);\n        }\n        break;\n      // @todo support other directions for when inside of an element\n    }\n    this.positionContextMenus(node, container);\n    setTimeout(() => {\n      if (typeof container.scrollIntoViewIfNeeded === \"function\") {\n        container.scrollIntoViewIfNeeded(true);\n      } else {\n        container.scrollIntoView({ behavior: \"smooth\", inline: \"center\" });\n      }\n    }, 100);\n    return true;\n  },\n  /**\n   * Convert an element from one tag to another.\n   */\n  haxReplaceNode: function(node, replacement, parent = this) {\n    // ensure we're not in the document tree for the replaced node\n    this.hideContextMenus();\n    // Switch, try loop in case we screwed up elsewhere\n    try {\n      // test for slots to match\n      if (node.getAttribute(\"slot\") != null) {\n        replacement.setAttribute(\"slot\", node.getAttribute(\"slot\"));\n      }\n      dom(parent).replaceChild(replacement, node);\n    } catch (e) {\n      console.log(e);\n    }\n    return replacement;\n  },\n  /**\n   * Convert an element from one tag to another.\n   */\n  haxChangeTagName: function(node, tagName, newNode) {\n    // ensure we're not in the document tree for the replaced node\n    this.hideContextMenus();\n    // Create a replacement tag of the desired type\n    var replacement = document.createElement(tagName);\n    // Grab all of the original's attributes, and pass them to the replacement\n    for (var i = 0, l = node.attributes.length; i < l; ++i) {\n      var nodeName = node.attributes.item(i).nodeName;\n      var value = node.attributes.item(i).value;\n      replacement.setAttribute(nodeName, value);\n    }\n    // Persist contents\n    replacement.innerHTML = node.innerHTML;\n    // Switch!\n    dom(this).replaceChild(replacement, node);\n    return replacement;\n  },\n  /**\n   * Delete the node passed in\n   */\n  haxDeleteNode: function(node, parent = this) {\n    // move the context menu before deleting!!!!\n    this.hideContextMenus();\n    // shift active to a viable replacement\n    if (\n      this.activeContainerNode != null &&\n      this.activeContainerNode.previousElementSibling !== null\n    ) {\n      this.activeContainerNode.previousElementSibling.focus();\n      // cursor at the END of the element assuming not empty\n      if (\n        this.activeContainerNode != null &&\n        window.HaxStore.instance.isTextElement(this.activeContainerNode) &&\n        dom(this.activeContainerNode).textContent !== \"\"\n      ) {\n        try {\n          var range = document.createRange();\n          var sel = window.HaxStore.getSelection();\n          range.setStart(this.activeContainerNode, 1);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n          this.activeContainerNode.focus();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    } else if (\n      this.activeContainerNode != null &&\n      this.activeContainerNode.nextElementSibling !== null\n    ) {\n      this.activeContainerNode.nextElementSibling.focus();\n    } else {\n      window.HaxStore.write(\"activeContainerNode\", null, this);\n      window.HaxStore.write(\"activeNode\", null, this);\n    }\n    // @todo figure out why this is complaining\n    try {\n      return dom(parent).removeChild(node);\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  /**\n   * Bulk import HTML with option to clear what is currently\n   * in the slot of this tag. This also validates tags\n   * that are being inserted for security based on the\n   * internal whitelist.\n   */\n  importContent: function(html, clear = true) {\n    // kill the slot of the active body, all of it\n    if (clear) {\n      window.HaxStore.wipeSlot(this, \"*\");\n    }\n    // pause quickly to ensure wipe goes through successfully\n    setTimeout(() => {\n      html = window.HaxStore.encapScript(html);\n      const validTags = window.HaxStore.instance.validTagList;\n      let fragment = document.createElement(\"div\");\n      fragment.insertAdjacentHTML(\"beforeend\", html);\n      while (fragment.firstChild !== null) {\n        if (\n          typeof fragment.firstChild.tagName !== typeof undefined &&\n          validTags.includes(fragment.firstChild.tagName.toLowerCase())\n        ) {\n          // ensure import doesn't import non-sandbox safe things!\n          if (\n            window.HaxStore.instance._isSandboxed &&\n            fragment.firstChild.tagName.toLowerCase() === \"iframe\"\n          ) {\n            // Create a replacement tag of the desired type\n            var replacement = document.createElement(\"webview\");\n            // Grab all of the original's attributes, and pass them to the replacement\n            for (\n              var j = 0, l = fragment.firstChild.attributes.length;\n              j < l;\n              ++j\n            ) {\n              var nodeName = fragment.firstChild.attributes.item(j).nodeName;\n              var value = fragment.firstChild.attributes.item(j).value;\n              if (nodeName === \"height\" || nodeName === \"width\") {\n                replacement.style[nodeName] == value;\n              }\n              replacement.setAttribute(nodeName, value);\n            }\n            dom(this).appendChild(replacement);\n          } else {\n            dom(this).appendChild(fragment.firstChild);\n          }\n        } else {\n          // this tag didn't pass the test, get rid of it\n          fragment.removeChild(fragment.firstChild);\n        }\n      }\n    }, 100);\n  },\n  /**\n   * Respond to hax operations.\n   */\n  _haxContextOperation: function(e) {\n    let detail = e.detail;\n    var haxElement;\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      // text based operations for primatives\n      case \"p\":\n      case \"h2\":\n      case \"h3\":\n      case \"h4\":\n      case \"h5\":\n      case \"h6\":\n      case \"code\":\n      case \"blockquote\":\n        // trigger the default selected value in context menu to match\n        this.$.textcontextmenu.selectedValue = detail.eventName;\n        window.HaxStore.write(\n          \"activeContainerNode\",\n          this.haxChangeTagName(this.activeContainerNode, detail.eventName),\n          this\n        );\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      case \"text-align-left\":\n        this.activeNode.style.textAlign = null;\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      // grid plate based operations\n      // allow for transforming this haxElement into another one\n      case \"grid-plate-convert\":\n        this.replaceElementWorkflow();\n        break;\n      // duplicate the active item or container\n      case \"grid-plate-duplicate\":\n        if (this.activeNode === this.activeContainerNode) {\n          this.haxDuplicateNode(this.activeNode);\n        } else {\n          this.haxDuplicateNode(this.activeNode, this.activeContainerNode);\n        }\n        break;\n      case \"grid-plate-delete\":\n        let options = [\n          {\n            icon: \"thumb-up\",\n            color: \"green\",\n            title: \"Yes\"\n          },\n          {\n            icon: \"thumb-down\",\n            color: \"red\",\n            title: \"No\"\n          }\n        ];\n        let tag = this.activeNode.tagName.toLowerCase();\n        let humanName = tag.replace(\"-\", \" \");\n        if (\n          typeof window.HaxStore.instance.elementList[tag] !==\n            typeof undefined &&\n          window.HaxStore.instance.elementList[tag].gizmo !== false\n        ) {\n          humanName = window.HaxStore.instance.elementList[tag].gizmo.title;\n        }\n        window.HaxStore.instance.haxAppPicker.presentOptions(\n          options,\n          \"\",\n          `Remove this \\`${humanName}\\`?`,\n          \"delete\"\n        );\n        break;\n      case \"grid-plate-first\":\n        this.haxMoveGridPlate(\n          \"first\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"grid-plate-up\":\n        this.haxMoveGridPlate(\"up\", this.activeNode, this.activeContainerNode);\n        break;\n      case \"hax-manager-open\":\n        window.HaxStore.write(\"activeHaxElement\", {}, this);\n        window.HaxStore.instance.haxManager.resetManager(\n          parseInt(detail.value)\n        );\n        window.HaxStore.instance.haxManager.toggleDialog();\n        break;\n      case \"grid-plate-down\":\n        this.haxMoveGridPlate(\n          \"down\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"grid-plate-last\":\n        this.haxMoveGridPlate(\n          \"last\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"close-menu\":\n        // this is the equivalent of hiding menus and resetting the board\n        window.HaxStore.write(\"activeContainerNode\", null, this);\n        window.HaxStore.write(\"activeNode\", null, this);\n        break;\n      case \"hax-edit-property\":\n        let haxInputMixer = this.$.haxinputmixer;\n        haxInputMixer.label = detail.target.label;\n        haxInputMixer.options = detail.target.options;\n        haxInputMixer.icon = detail.target.icon;\n        haxInputMixer.description = detail.target.description;\n        haxInputMixer.required = detail.target.required;\n        haxInputMixer.validation = detail.target.validation;\n        haxInputMixer.validationType = detail.target.validationType;\n        haxInputMixer.inputMethod = detail.target.inputMethod;\n        haxInputMixer.value = \"\";\n        // see if response should bind to the slot or property\n        if (\n          typeof detail.target.propertyToBind !== typeof undefined &&\n          detail.target.propertyToBind != null &&\n          detail.target.propertyToBind != false\n        ) {\n          haxInputMixer.propertyToBind = detail.target.propertyToBind;\n          if (\n            typeof this.activeNode[detail.target.propertyToBind] !==\n            typeof undefined\n          ) {\n            haxInputMixer.value = this.activeNode[detail.target.propertyToBind];\n          }\n          // try to get an attribute bind\n          else {\n            haxInputMixer.value = this.activeNode.getAttribute(\n              detail.target.propertyToBind\n            );\n          }\n          // @todo need to be able to support slot binding\n        }\n        // make input mixer show up\n        this._positionContextMenu(\n          haxInputMixer,\n          this.$.cecontextmenu,\n          -6,\n          -116\n        );\n        haxInputMixer.style.width = null;\n        break;\n      // directional / proportion operations\n      case \"hax-align-left\":\n        this.activeNode.style.float = null;\n        this.activeNode.style.margin = null;\n        this.activeNode.style.display = null;\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      case \"hax-align-center\":\n        this.activeNode.style.float = null;\n        this.activeNode.style.margin = \"0 auto\";\n        this.activeNode.style.display = \"block\";\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      case \"hax-size-change\":\n        this.activeNode.style.width = detail.value + \"%\";\n        setTimeout(() => {\n          this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        }, 500);\n        break;\n      // settings button selected from hax-ce-context bar\n      // which means we should skip to the settings page after\n      // we set the thing selected as the active element to work\n      // on in the manager\n      case \"hax-manager-configure\":\n        // make sure input mixer is closed\n        this._hideContextMenu(this.$.haxinputmixer);\n        // reset the manager\n        window.HaxStore.instance.haxManager.resetManager();\n        // write activeElement updated so it'll go into the preview\n        haxElement = window.HaxStore.nodeToHaxElement(\n          window.HaxStore.instance.activeNode\n        );\n        window.HaxStore.write(\"activeHaxElement\", haxElement, this);\n        // clean up the manager before opening\n        window.HaxStore.instance.haxManager.editExistingNode = true;\n        window.HaxStore.instance.haxManager.selectStep(\"configure\");\n        window.HaxStore.instance.haxManager.toggleDialog();\n        // accessibility enhancement to keyboard focus configure button\n        setTimeout(() => {\n          window.HaxStore.instance.haxManager.$.preview.$.configurebutton.focus();\n        }, 325);\n        break;\n      // container / layout settings button has been activated\n      case \"hax-manager-configure-container\":\n        window.HaxStore.write(\n          \"activeNode\",\n          window.HaxStore.instance.activeContainerNode,\n          this\n        );\n        // make sure input mixer is closed\n        this._hideContextMenu(this.$.haxinputmixer);\n        // reset the manager\n        window.HaxStore.instance.haxManager.resetManager();\n        // write activeElement updated so it'll go into the preview\n        haxElement = window.HaxStore.nodeToHaxElement(\n          window.HaxStore.instance.activeNode\n        );\n        window.HaxStore.write(\"activeHaxElement\", haxElement, this);\n        // clean up the manager before opening\n        window.HaxStore.instance.haxManager.editExistingNode = true;\n        window.HaxStore.instance.haxManager.selectStep(\"configure\");\n        window.HaxStore.instance.haxManager.toggleDialog();\n        // accessibility enhancement to keyboard focus configure button\n        setTimeout(() => {\n          window.HaxStore.instance.haxManager.$.preview.$.configurebutton.focus();\n        }, 325);\n        break;\n    }\n  },\n  /**\n   * Respond to an input mixer call.\n   */\n  _haxInputMixerOperation: function(e) {\n    // this is a big deal how simple this part is in the end\n    let mixer = e.detail.inputMixer;\n    // if we have a property to bind, set that value from the\n    // widget that was dictated by the element itself\n    if (mixer.propertyToBind != null) {\n      this.activeNode[mixer.propertyToBind] = mixer.value;\n    }\n    // if we're told instead to do a slot bind, make a span tag\n    // with height same as parent and then mix in the innerHTML\n    else if (mixer.slotToBind != null) {\n      item = document.createElement(\"span\");\n      item.style.height = \"inherit\";\n      item.innerHTML = mixer.value;\n      //item.attribute.slot = mixer.slotToBind;\n      item.slot = mixer.slotToBind;\n      this.activeNode.appendChild(item);\n    }\n    // hide mixer\n    this._hideContextMenu(this.$.haxinputmixer);\n  },\n  /**\n   * Item has gained focus, change active element to match\n   */\n  _focusIn: function(e) {\n    // only worry about these when we are in edit mode\n    if (this.editMode && !this.__tabTrap) {\n      var normalizedEvent = dom(e);\n      var local = normalizedEvent.localTarget;\n      var tags = window.HaxStore.instance.validTagList;\n      let containerNode = local;\n      let activeNode = null;\n      // ensure this is valid\n      if (\n        this._haxElementTest(containerNode) &&\n        containerNode.parentNode != null\n      ) {\n        // keep looking til we are juuuust below the container\n        // @todo this is where we force a selection on highest level\n        // of the document\n        while (containerNode.parentNode.tagName != \"HAX-BODY\") {\n          // make sure active is set after closest legit element\n          if (\n            activeNode === null &&\n            tags.includes(containerNode.tagName.toLowerCase()) &&\n            containerNode.tagName !== \"LI\" &&\n            containerNode.tagName !== \"B\" &&\n            containerNode.tagName !== \"I\" &&\n            containerNode.tagName !== \"STRONG\" &&\n            containerNode.tagName !== \"EM\"\n          ) {\n            activeNode = containerNode;\n          }\n          containerNode = containerNode.parentNode;\n        }\n        // case with simple element\n        if (activeNode === null) {\n          activeNode = containerNode;\n        }\n        // we only allow disconnected node from container when\n        // the container is a grid plate\n        else if (!window.HaxStore.instance.isGridPlateElement(containerNode)) {\n          activeNode = containerNode;\n        }\n        // won't deal with lists inside of p tags\n        else if (\n          [\"UL\", \"OL\", \"LI\", \"P\", \"GRID-PLATE\"].includes(\n            containerNode.tagName\n          ) &&\n          [\"UL\", \"OL\", \"LI\"].includes(activeNode.tagName)\n        ) {\n          activeNode = containerNode;\n        }\n        // ensure this is a tag we care about / have support for and\n        // that it is a new value\n        if (\n          this.activeContainerNode !== containerNode &&\n          tags.includes(containerNode.tagName.toLowerCase()) &&\n          !containerNode.classList.contains(\"ignore-activation\")\n        ) {\n          window.HaxStore.write(\"activeContainerNode\", containerNode, this);\n          e.stopPropagation();\n        } else if (containerNode.classList.contains(\"ignore-activation\")) {\n          e.stopPropagation();\n        }\n        // test for active node changing\n        if (\n          this.activeNode !== activeNode &&\n          tags.includes(containerNode.tagName.toLowerCase()) &&\n          !activeNode.classList.contains(\"ignore-activation\")\n        ) {\n          setTimeout(() => {\n            window.HaxStore.write(\"activeNode\", activeNode, this);\n          }, 50);\n          e.stopPropagation();\n        }\n      }\n    } else {\n      this.__tabTrap = false;\n    }\n  },\n  /**\n   * Notice the change between states for editing.\n   */\n  _editModeChanged: function(newValue, oldValue) {\n    // fire above that we have changed states so things can react if needed\n    if (typeof oldValue !== typeof undefined) {\n      this._applyContentEditable(newValue);\n      if (\n        newValue !== false &&\n        typeof this.activeNode !== typeof undefined &&\n        this.activeNode !== null\n      ) {\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n      }\n    }\n    // hide menus when state changes\n    if (newValue === false) {\n      this.hideContextMenus();\n    }\n  },\n  /**\n   * Test if this is a HAX element or not\n   */\n  _haxResolvePreviousElement: function(node) {\n    node = dom(node).previousElementSibling;\n    while (\n      node != null &&\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.substring(0, 4) === \"HAX-\"\n    ) {\n      node = dom(node).previousElementSibling;\n    }\n    return node;\n  },\n  /**\n   * Test if this is a HAX element or not\n   */\n  _haxElementTest: function(node) {\n    if (\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.substring(0, 4) !== \"HAX-\"\n    ) {\n      return true;\n    }\n    return false;\n  },\n  /**\n   * Test if this is an HTML primative\n   */\n  _HTMLPrimativeTest: function(node) {\n    if (\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.indexOf(\"-\") == -1\n    ) {\n      return true;\n    }\n    return false;\n  },\n  /**\n   * Walk everything we find and either enable or disable editable state.\n   */\n  _applyContentEditable: function(status, target = this.$.body) {\n    let children = dom(target).getDistributedNodes();\n    // fallback for content nodes if not polymer managed nodes above\n    if (children.length === 0) {\n      children = dom(target).getEffectiveChildNodes();\n    }\n    for (var i = 0, len = children.length; i < len; i++) {\n      // we have to tell the browser that primatives are editable\n      if (this._HTMLPrimativeTest(children[i])) {\n        children[i].contentEditable = status;\n      }\n      // this does the real targetting\n      if (this._haxElementTest(children[i])) {\n        if (status) {\n          children[i].setAttribute(\"data-editable\", status);\n          children[i].setAttribute(\"data-hax-ray\", children[i].tagName);\n        } else {\n          children[i].removeAttribute(\"data-editable\");\n          children[i].removeAttribute(\"data-hax-ray\");\n        }\n      }\n    }\n  },\n  /**\n   * Container has changed\n   */\n  _activeContainerNodeChanged: function(newValue, oldValue) {\n    if (\n      this.editMode &&\n      typeof newValue !== typeof undefined &&\n      newValue !== null\n    ) {\n      let tag = newValue.tagName.toLowerCase();\n      // special case for the grid plate since it brings in dom nodes\n      // nested in it and needs to be put into an editMode\n      if (tag === \"grid-plate\") {\n        newValue.editMode = this.editMode;\n        this._applyContentEditable(this.editMode, newValue);\n      }\n    }\n  },\n  /**\n   * React to a new node being set to active.\n   */\n  _activeNodeChanged: function(newValue, oldValue) {\n    // clean up the older one\n    if (typeof oldValue !== typeof undefined && oldValue != null) {\n      oldValue.classList.remove(\"hax-active\");\n    }\n    if (\n      this.editMode &&\n      typeof newValue !== typeof undefined &&\n      newValue !== null\n    ) {\n      let tag = newValue.tagName.toLowerCase();\n      // remove the menu, establish the new active, then reapply\n      // this is nessecary because the context menu gets appended into\n      // the document\n      // only hide if we change containers\n      newValue.classList.add(\"hax-active\");\n      this.$.textcontextmenu.selectedValue = tag;\n      // position the operations / in context element\n      setTimeout(() => {\n        this.positionContextMenus(\n          newValue,\n          window.HaxStore.instance.activeContainerNode\n        );\n      }, 25);\n      if (newValue.style.textAlign == \"left\") {\n        this.$.textcontextmenu.justifyIcon = \"editor:format-align-left\";\n        this.$.textcontextmenu.justifyValue = \"text-align-left\";\n      } else if (newValue.style.float == \"left\") {\n        this.$.cecontextmenu.justifyIcon = \"editor:format-align-left\";\n        this.$.cecontextmenu.justifyValue = \"hax-align-left\";\n      } else if (newValue.style.margin == \"0 auto\") {\n        this.$.cecontextmenu.justifyIcon = \"editor:format-align-center\";\n        this.$.cecontextmenu.justifyValue = \"hax-align-center\";\n      }\n    }\n    // just hide menus if we don't have an active item\n    else if (newValue === null) {\n      this.hideContextMenus();\n      this.$.textcontextmenu.justifyIcon = \"editor:format-align-left\";\n      this.$.textcontextmenu.justifyValue = \"text-align-left\";\n    }\n  },\n  /**\n   * Handle display and position of the context menu\n   */\n  _positionContextMenu: function(\n    menu,\n    target,\n    xoffset,\n    yoffset,\n    matchStyle = true\n  ) {\n    try {\n      dom(this).insertBefore(menu, target);\n    } catch (err) {\n      try {\n        dom(target.parentNode).insertBefore(menu, target);\n      } catch (err2) {}\n    }\n    // account for the target using these layout busters\n    if (matchStyle) {\n      menu.style.width = target.style.width;\n    }\n    // make it account for the offset if it's floated over to one side\n    // or inside of something that's over that way\n    let style = target.currentStyle || window.getComputedStyle(target);\n    if (parseInt(style.marginLeft) != 0) {\n      xoffset = xoffset + parseInt(style.marginLeft);\n    } else {\n      xoffset = xoffset + parseInt(target.offsetLeft) - this.offsetLeft;\n    }\n    if (xoffset != null) {\n      menu.style[\"margin-left\"] = xoffset + \"px\";\n    }\n    if (yoffset != null) {\n      menu.style[\"margin-top\"] = yoffset + \"px\";\n    }\n    menu.classList.add(\"hax-context-visible\");\n    async.microTask.run(this._keepContextVisible());\n  },\n  /**\n   * Simple hide / reset of whatever menu it's handed.\n   */\n  _hideContextMenu: function(menu) {\n    menu.classList.remove(\"hax-context-visible\");\n    menu.classList.remove(\"hax-context-pin-top\");\n    menu.classList.remove(\"hax-context-pin-bottom\");\n    dom(this.$.contextcontainer).appendChild(menu);\n  },\n  /**\n   * When the user hits escape key, let's deselect what we have now\n   */\n  _escKeyPressed: function(e) {\n    if (this.editMode) {\n      e.preventDefault();\n      e.stopPropagation();\n      // support 1st press only closing the inline context menu\n      if (this.$.textcontextmenu.highlightOps) {\n        this.$.textcontextmenu.highlightOps = false;\n        // ensure these are the same\n        window.HaxStore.write(\"activeNode\", this.activeContainerNode, this);\n        this.activeContainerNode.focus();\n      } else if (this.activeNode === this.activeContainerNode) {\n        window.HaxStore.write(\"activeContainerNode\", null, this);\n        window.HaxStore.write(\"activeNode\", null, this);\n        document.body.focus();\n      } else {\n        window.HaxStore.write(\"activeNode\", this.activeContainerNode, this);\n        this.activeContainerNode.focus();\n      }\n    }\n  },\n  /**\n   * When the user hits delete, test if there's any content\n   * left in this container. If thre isn't then delete the\n   * container itself\n   */\n  _delKeyPressed: function(e) {\n    if (this.editMode) {\n      const activeNodeTextContent = dom(this.activeContainerNode).textContent;\n      if (activeNodeTextContent === \"\") {\n        e.preventDefault();\n        e.stopPropagation();\n        this.haxDeleteNode(this.activeContainerNode);\n      } else if (\n        window.HaxStore.instance.isTextElement(\n          this._haxResolvePreviousElement(this.activeContainerNode)\n        )\n      ) {\n        // test selection to see if we are at beginning of\n        // whatever element this is\n        var selection = window.HaxStore.getSelection();\n        let range = selection.getRangeAt(0).cloneRange();\n        // ensure our range is not inside of a list item\n        let tagTest = range.commonAncestorContainer.tagName;\n        if (typeof tagTest === typeof undefined) {\n          tagTest = range.commonAncestorContainer.parentNode.tagName;\n        }\n        // must strictly be single placement cursor at start of tag\n        if (\n          range.startOffset === 0 &&\n          range.endOffset === 0 &&\n          ![\"UL\", \"OL\", \"LI\"].includes(tagTest)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          while (this.activeContainerNode.firstChild) {\n            this._haxResolvePreviousElement(\n              this.activeContainerNode\n            ).appendChild(this.activeContainerNode.firstChild);\n          }\n          setTimeout(() => {\n            this.haxDeleteNode(this.activeContainerNode);\n          }, 100);\n        }\n      }\n    }\n  },\n  /**\n   * Move between things pressing up and down if empty\n   */\n  _upKeyPressed: function(e) {\n    if (this.editMode && dom(this.activeContainerNode).textContent === \"\") {\n      let node = this._haxResolvePreviousElement(this.activeContainerNode);\n      // see if we can focus it otherwise we were at the top\n      try {\n        node.focus();\n      } catch (e) {\n        // if an error then we are at the top anyway\n      }\n    }\n  },\n  /**\n   * Move between things pressing up and down if empty\n   */\n  _downKeyPressed: function(e) {\n    if (this.editMode && dom(this.activeContainerNode).textContent === \"\") {\n      let node = dom(this.activeContainerNode);\n      // try and focus on the next thing\n      try {\n        node.nextElementSibling.focus();\n      } catch (e) {\n        // do nothing, at bottom\n      }\n    }\n  },\n  /**\n   * Find the next thing to tab forward to.\n   */\n  _tabKeyPressed: function(e) {\n    if (this.editMode) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      let focus = false;\n      let node = this.activeContainerNode;\n      const activeNodeTagName = this.activeContainerNode.tagName;\n      // try selection / tab block since range can cause issues\n      try {\n        var selection = window.HaxStore.getSelection();\n        let range = selection.getRangeAt(0).cloneRange();\n        var tagTest = range.commonAncestorContainer.tagName;\n        if (typeof tagTest === typeof undefined) {\n          tagTest = range.commonAncestorContainer.parentNode.tagName;\n        }\n        if (\n          [\"UL\", \"OL\", \"LI\"].includes(activeNodeTagName) ||\n          [\"UL\", \"OL\", \"LI\"].includes(tagTest)\n        ) {\n          if (this.polyfillSafe) {\n            document.execCommand(\"indent\");\n            this.__tabTrap = true;\n          }\n        } else {\n          while (!focus) {\n            // do nothing\n            if (dom(node).nextSibling == null) {\n              focus = true;\n            } else if (dom(node).nextSibling.focus === \"function\") {\n              dom(node).nextSibling.focus();\n              focus = true;\n            } else {\n              node = dom(node).nextSibling;\n            }\n          }\n        }\n      } catch (e) {}\n    }\n  },\n  /**\n   * Move back through things when tab back pressed\n   */\n  _tabBackKeyPressed: function(e) {\n    if (this.editMode) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      let node = dom(this.activeContainerNode).previousSibling;\n      const activeNodeTagName = this.activeContainerNode.tagName;\n      var selection = window.HaxStore.getSelection();\n      try {\n        let range = selection.getRangeAt(0).cloneRange();\n        if (\n          [\"UL\", \"OL\", \"LI\"].includes(activeNodeTagName) ||\n          [\"UL\", \"OL\", \"LI\"].includes(\n            range.commonAncestorContainer.parentElement.tagName\n          )\n        ) {\n          if (this.polyfillSafe) {\n            document.execCommand(\"outdent\");\n            this.__tabTrap = true;\n          }\n        } else {\n          if (node != null) {\n            // step back ignoring hax- prefixed elements\n            while (node != null && !this._haxElementTest(node)) {\n              node = dom(node).previousSibling;\n            }\n          }\n          if (node != null) {\n            setTimeout(() => {\n              node.focus();\n            }, 100);\n          }\n        }\n      } catch (e) {}\n    }\n  }\n});\nexport { HaxBody };\n"],"names":["_template","html","is","properties","corner","type","String","reflectToAttribute","value","disabled","Boolean","light","menu","mini","icon","label","tooltip","observer","tooltipDirection","default","iconClass","_tooltipChanged","newValue","oldValue","$","setAttribute","listeners","tap","resetOnSelect","selected","notify","_selectChanged","e","button","focus","_menubuttonTap","listbox","style","display","this","hideMenu","_blockEvent","selectedValue","Number","direction","eventName","_selectedUpdated","_typeof","children","dom","item","Object","j","i","len","length","tagName","attributes","fire","target","inputMethod","propertyToBind","slotToBind","description","_storeSelection","window","HaxStore","_tmpSelection","getSelection","_fireEvent","attached","hideTransform","reflectToAttritue","haxProperties","hideMore","size","justifyIcon","inline","justifyValue","_haxPropertiesChanged","instance","activeNode","width","replace","margin","_haxContextOperation","detail","moremenu","justify","polyfillSafe","selection","isSafari","computed","ready","computePolyfillSafe","formatsize","editMode","_tmpRange","startContainer","parentNode","write","err","activePlaceHolder","values","text","toString","haxElements","guessGizmo","haxAppPicker","presentOptions","document","execCommand","toolbar","href","focusNode","url","prompt","_isSafari","ua","navigator","userAgent","toLowerCase","indexOf","hex","level","order","root","backgroundColor","addEventListener","keyCode","theme","contrast","contrastLargeText","collapsed","swatches","Array","selectedStyle","updateSwatches","toggleCollapse","hasContrast","isColor","isForeground","rows","count","undefined","__hexCodes","cssVariable","split","colorLevelFg","levelFg","colorLevels","property","temp","__wcagaa","colors","greys","highestLevel","large","parseInt","small","hasOwnProperty","disabledColor","disabledLevel","lightFg","push","empty","_updateSelection","_onClickSwatch","console","log","suffix","dark","color","hexCode","hasHex","row","swatch","set","render","_onPreviousSwatch","shadowRoot","querySelector","_onNextSwatch","_onPreviousLevel","_onNextLevel","_setSelectedStyle","texture","__init","collapse","ceSize","humanName","setHaxProperties","props","_ceSizeChanged","settings","slot","firstChild","removeChild","quick","configure","advanced","element","__hasSettingsForm","__hasParentSettingsForm","activeContainerNode","__parentName","gizmo","title","setting","createElement","options","required","validation","validationType","attribute","appendChild","_resetInputMethods","_inputMethodChanged","method","validInputMethods","includes","val","innerHTML","cloneNode","setTimeout","_this","methods","__selectedValue","mixer","inputMixer","HaxBody","Polymer","focusin","mousedown","globalPreferences","haxRayMode","_observer","FlattenedNodesObserver","info","flush","addedNodes","map","node","_haxElementTest","_HTMLPrimativeTest","contentEditable","removedNodes","classList","contains","tmp","range","getRangeAt","cloneRange","isTextElement","haxManager","opened","preventDefault","sel","clipboardData","originalEvent","getData","activeHaxBody","rangeCount","deleteContents","insertNode","createTextNode","createRange","__tabTrap","body","_haxStorePropertyUpdated","bind","_keepContextVisible","detached","removeEventListener","el","textcontextmenu","cecontextmenu","elementInViewport","remove","__OffBottom","add","top","offsetTop","haxPanel","drawer","offsetHeight","left","offsetLeft","offsetWidth","height","offsetParent","pageYOffset","innerHeight","pageXOffset","innerWidth","replacePlaceholder","p","haxReplaceNode","_this2","replaceElementWorkflow","nodeToHaxElement","skipPropMatch","tag","elementList","handles","prop","toast","_globalPreferencesUpdated","haxClearBody","status","wipeSlot","haxInsert","content","waitForLock","validTagList","frag","newNode","attributeName","camelToDash","removeAttribute","constructor","readOnly","float","getAttribute","insertBefore","nextElementSibling","highlightOps","__updateLockFocus","_this3","breakUpdateLock","scrollIntoViewIfNeeded","scrollIntoView","behavior","haxToContent","hideContextMenus","__active","getDistributedNodes","haxDeveloperMode","haxNodeToContent","_applyContentEditable","nodeType","textContent","parentTag","string","re","RegExp","tags","encapScript","haxDuplicateNode","parent","nodeClone","_isSandboxed","guestinstance","nextSibling","_this4","_hideContextMenu","platecontextmenu","haxinputmixer","positionContextMenus","container","offsetmenu","offsetplate","Math","max","documentElement","clientWidth","__activeContextType","_positionContextMenu","haxMoveGridPlate","previousElementSibling","replacement","replaceChild","haxChangeTagName","l","nodeName","haxDeleteNode","setStart","removeAllRanges","addRange","importContent","validTags","fragment","insertAdjacentHTML","_this5","haxElement","textAlign","resetManager","toggleDialog","haxInputMixer","_this6","editExistingNode","selectStep","preview","configurebutton","_haxInputMixerOperation","_focusIn","local","localTarget","containerNode","isGridPlateElement","stopPropagation","_this7","_editModeChanged","_haxResolvePreviousElement","substring","getEffectiveChildNodes","_activeContainerNodeChanged","_activeNodeChanged","_this8","xoffset","yoffset","matchStyle","err2","currentStyle","getComputedStyle","marginLeft","async","run","contextcontainer","_escKeyPressed","_delKeyPressed","tagTest","commonAncestorContainer","startOffset","endOffset","_this9","_upKeyPressed","_downKeyPressed","_tabKeyPressed","stopImmediatePropagation","activeNodeTagName","_tabBackKeyPressed","previousSibling","parentElement"],"mappings":"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"}