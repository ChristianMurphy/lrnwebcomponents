{"version":3,"file":"hax-body.umd.js","sources":["lib/hax-text-context.js","lib/hax-ce-context.js","lib/hax-plate-context.js","lib/hax-input-mixer.js","lib/hax-shared-styles.js","hax-body.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**\n * `hax-text-context`\n * `A context menu that provides common text based authoring options.`\n * @microcopy - the mental model for this element\n * - context menu - this is a menu of text based buttons and events for use in a larger solution.\n */\nclass HaxTextContext extends LitElement {\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          pointer-events: none;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        paper-item {\n          -webkit-justify-content: flex-start;\n          justify-content: flex-start;\n          height: 36px;\n          padding: 0 8px;\n          min-height: 36px;\n        }\n        paper-item:hover {\n          background-color: #d3d3d3;\n          cursor: pointer;\n        }\n        iron-icon {\n          padding: 8px;\n        }\n        paper-item strong {\n          padding: 8px;\n          font-size: 12px;\n        }\n        :host(.hax-context-pin-top) hax-toolbar {\n          position: fixed;\n          top: 64px;\n          opacity: 0.95;\n        }\n        :host(.hax-context-pin-bottom) hax-toolbar {\n          position: fixed;\n          bottom: 0;\n          opacity: 0.95;\n        }\n      `\n    ];\n  }\n  constructor() {\n    super();\n    import(\"@polymer/paper-item/paper-item.js\");\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icon/iron-icon.js\");\n    import(\"@lrnwebcomponents/md-extra-icons/md-extra-icons.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item-menu.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item-textop.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-toolbar.js\");\n    this.addEventListener(\n      \"hax-context-item-selected\",\n      this._haxContextOperation.bind(this)\n    );\n    this.selectedValue = \"p\";\n    this.selection = false;\n    this.isSafari = this._isSafari();\n    this.polyfillSafe = window.HaxStore.instance.computePolyfillSafe();\n    // fire an event that this is a core piece of the system\n    this.dispatchEvent(\n      new CustomEvent(\"is-safari-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this.isSafari\n      })\n    );\n  }\n  render() {\n    return html`\n      <hax-toolbar .selected=\"${this.selection}\" hide-transform id=\"toolbar\">\n        <hax-context-item-menu\n          slot=\"primary\"\n          @selected-value-changed=\"${this.selectedValueChanged}\"\n          id=\"formatsize\"\n          icon=\"text-format\"\n          label=\"Format\"\n          event-name=\"text-tag\"\n        >\n          <paper-item value=\"p\"\n            ><iron-icon icon=\"editor:format-textdirection-l-to-r\"></iron-icon\n            >Normal text <strong>&lt;P&gt;</strong></paper-item\n          >\n          <paper-item value=\"ul\"\n            ><iron-icon icon=\"editor:format-list-bulleted\"></iron-icon>Bulleted\n            list <strong>&lt;UL&gt;</strong></paper-item\n          >\n          <paper-item value=\"ol\"\n            ><iron-icon icon=\"editor:format-list-numbered\"></iron-icon>Numbered\n            list <strong>&lt;OL&gt;</strong></paper-item\n          >\n          <paper-item value=\"h2\"\n            ><iron-icon icon=\"editor:title\"></iron-icon>Title\n            <strong>&lt;H2&gt;</strong></paper-item\n          >\n          <paper-item value=\"h3\"\n            ><iron-icon icon=\"editor:title\"></iron-icon>Content heading\n            <strong>&lt;H3&gt;</strong></paper-item\n          >\n          <paper-item value=\"h4\"\n            ><iron-icon icon=\"editor:text-fields\"></iron-icon>Subheading\n            <strong>&lt;H4&gt;</strong></paper-item\n          >\n          <paper-item value=\"h5\"\n            ><iron-icon icon=\"editor:text-fields\"></iron-icon>Deeper subheading\n            <strong>&lt;H5&gt;</strong></paper-item\n          >\n          <paper-item value=\"blockquote\"\n            ><iron-icon icon=\"editor:format-quote\"></iron-icon>Quote<strong\n              >&lt;blockquote&gt;</strong\n            ></paper-item\n          >\n          <paper-item value=\"code\"\n            ><iron-icon icon=\"icons:code\"></iron-icon>Code block<strong\n              >&lt;code&gt;</strong\n            ></paper-item\n          >\n        </hax-context-item-menu>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-bold\"\n          label=\"Bold\"\n          event-name=\"text-bold\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-italic\"\n          label=\"Italic\"\n          event-name=\"text-italic\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:insert-link\"\n          label=\"Link\"\n          event-name=\"text-link\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-list-bulleted\"\n          event-name=\"text-list-bulleted\"\n          label=\"Bulleted list\"\n          .hidden=\"${!this._showIndent}\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-list-numbered\"\n          label=\"Numbered list\"\n          event-name=\"text-list-numbered\"\n          .hidden=\"${!this._showIndent}\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-indent-decrease\"\n          label=\"Outdent\"\n          event-name=\"text-outdent\"\n          .hidden=\"${!this._showIndent}\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-indent-increase\"\n          label=\"Indent\"\n          event-name=\"text-indent\"\n          .hidden=\"${!this._showIndent}\"\n        ></hax-context-item-textop>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"editor:format-clear\"\n          label=\"Remove format\"\n          event-name=\"text-remove-format\"\n        ></hax-context-item-textop>\n        <hax-context-item\n          slot=\"primary\"\n          icon=\"device:graphic-eq\"\n          label=\"Advanced item\"\n          event-name=\"insert-inline-gizmo\"\n          .hidden=\"${this.isSafari}\"\n        ></hax-context-item>\n        <hax-context-item-textop\n          slot=\"primary\"\n          icon=\"device:graphic-eq\"\n          label=\"Advanced item\"\n          event-name=\"insert-inline-gizmo\"\n          .hidden=\"${!this.isSafari}\"\n        ></hax-context-item-textop>\n\n        <hax-context-item-textop\n          menu\n          slot=\"more\"\n          icon=\"mdextra:unlink\"\n          event-name=\"text-unlink\"\n          >Remove link</hax-context-item-textop\n        >\n        <hax-context-item-textop\n          menu\n          slot=\"more\"\n          icon=\"mdextra:subscript\"\n          event-name=\"text-subscript\"\n          >Subscript</hax-context-item-textop\n        >\n        <hax-context-item-textop\n          menu\n          slot=\"more\"\n          icon=\"mdextra:superscript\"\n          event-name=\"text-superscript\"\n          >Superscript</hax-context-item-textop\n        >\n        <hax-context-item-textop\n          menu\n          slot=\"more\"\n          icon=\"editor:format-underlined\"\n          event-name=\"text-underline\"\n          >Underline</hax-context-item-textop\n        >\n        <hax-context-item-textop\n          menu\n          slot=\"more\"\n          icon=\"editor:format-strikethrough\"\n          event-name=\"text-strikethrough\"\n          >Cross out</hax-context-item-textop\n        >\n      </hax-toolbar>\n    `;\n  }\n  static get tag() {\n    return \"hax-text-context\";\n  }\n  static get properties() {\n    return {\n      _showIndent: {\n        type: Boolean\n      },\n      /**\n       * Polyfill safe; this helps remove options from polyfilled platforms\n       * as far as text manipulation operations.\n       */\n      polyfillSafe: {\n        type: Boolean\n      },\n      /**\n       * Selected value to match format of the tag currently.\n       */\n      selectedValue: {\n        type: String\n      },\n      /**\n       * Selection tracking\n       */\n      selection: {\n        type: Boolean\n      },\n      /**\n       * Is this safari\n       */\n      isSafari: {\n        type: Boolean\n      }\n    };\n  }\n\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      // computed based on these changing\n      if (propName == \"selectedValue\" || propName == \"polyfillSafe\") {\n        this._showIndent = this._computeShowIndent(\n          this.selectedValue,\n          this.polyfillSafe\n        );\n      }\n      if (propName == \"selectedValue\") {\n        // fire an event that this is a core piece of the system\n        this.dispatchEvent(\n          new CustomEvent(\"selected-value-changed\", {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: this[propName]\n          })\n        );\n      }\n    });\n  }\n\n  _computeShowIndent(selectedValue, polyfillSafe) {\n    if (polyfillSafe && (selectedValue === \"ol\" || selectedValue === \"ul\")) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Respond to simple modifications.\n   */\n  _haxContextOperation(e) {\n    let detail = e.detail;\n    let selection = window.HaxStore.getSelection();\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      case \"close-menu\":\n        setTimeout(() => {\n          this.shadowRoot\n            .querySelector(\"#formatsize\")\n            .shadowRoot.querySelector(\"#menu\")\n            .hideMenu();\n        }, 200);\n        break;\n      case \"insert-inline-gizmo\":\n        if (\n          window.HaxStore._tmpSelection &&\n          window.HaxStore.instance.editMode\n        ) {\n          var localRange = false;\n          try {\n            if (\n              window.HaxStore._tmpRange.startContainer.parentNode.parentNode\n                .tagName === \"HAX-BODY\" ||\n              window.HaxStore._tmpRange.startContainer.parentNode.parentNode\n                .parentNode.tagName === \"HAX-BODY\"\n            ) {\n              window.HaxStore.write(\n                \"activePlaceHolder\",\n                window.HaxStore._tmpRange,\n                this\n              );\n              localRange = window.HaxStore._tmpRange;\n            }\n          } catch (err) {}\n        }\n        if (localRange || window.HaxStore.instance.activePlaceHolder != null) {\n          // store placeholder because if this all goes through we'll want\n          // to kill the originating text\n          let values = {\n            text: window.HaxStore.instance.activePlaceHolder.toString()\n          };\n          let type = \"inline\";\n          let haxElements = window.HaxStore.guessGizmo(type, values);\n          // see if we got anything\n          if (haxElements.length > 0) {\n            // hand off to hax-app-picker to deal with the rest of this\n            window.HaxStore.instance.haxAppPicker.presentOptions(\n              haxElements,\n              type,\n              \"Transform selected text to..\",\n              \"gizmo\"\n            );\n          }\n        }\n        break;\n      // wow these are way too easy\n      case \"text-bold\":\n        document.execCommand(\"bold\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case \"text-italic\":\n        document.execCommand(\"italic\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case \"text-underline\":\n        document.execCommand(\"underline\");\n        e.preventDefault();\n        e.stopPropagation();\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.shadowRoot\n          .querySelector(\"#toolbar\")\n          .shadowRoot.querySelector(\"#moremenu\")\n          .shadowRoot.querySelector(\"#menu\")\n          .hideMenu();\n        break;\n      case \"text-subscript\":\n        document.execCommand(\"subscript\");\n        e.preventDefault();\n        e.stopPropagation();\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.shadowRoot\n          .querySelector(\"#toolbar\")\n          .shadowRoot.querySelector(\"#moremenu\")\n          .shadowRoot.querySelector(\"#menu\")\n          .hideMenu();\n        break;\n      case \"text-superscript\":\n        document.execCommand(\"superscript\");\n        e.preventDefault();\n        e.stopPropagation();\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.shadowRoot\n          .querySelector(\"#toolbar\")\n          .shadowRoot.querySelector(\"#moremenu\")\n          .shadowRoot.querySelector(\"#menu\")\n          .hideMenu();\n        break;\n      case \"text-remove-format\":\n        document.execCommand(\"removeFormat\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case \"text-strikethrough\":\n        document.execCommand(\"strikeThrough\");\n        e.preventDefault();\n        e.stopPropagation();\n        // silly hack to account for trigging a selection from\n        // inside the menu that isn't from a paper-item\n        this.shadowRoot\n          .querySelector(\"#toolbar\")\n          .shadowRoot.querySelector(\"#moremenu\")\n          .shadowRoot.querySelector(\"#menu\")\n          .hideMenu();\n        break;\n      case \"text-link\":\n        var href = \"\";\n        if (typeof selection.focusNode.parentNode.href !== typeof undefined) {\n          href = selection.focusNode.parentNode.href;\n        }\n        // @todo put in a dialog instead of this\n        let url = prompt(\"Enter a URL:\", href);\n        if (url) {\n          document.execCommand(\"createLink\", false, url);\n          if (selection.focusNode.parentNode) {\n            selection.focusNode.parentNode.setAttribute(\n              \"contenteditable\",\n              true\n            );\n            selection.focusNode.parentNode.setAttribute(\"data-editable\", true);\n            // just to be safe\n            selection.focusNode.parentNode.removeEventListener(\"click\", e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n            });\n            selection.focusNode.parentNode.addEventListener(\"click\", e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n            });\n          }\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        break;\n      case \"text-unlink\":\n        document.execCommand(\"unlink\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      /**\n       * Our bad actors when it comes to polyfill'ed shadowDOM.\n       * Naughty, naughty shadyDOM. Fortunately this is only IE11/Edge\n       */\n      case \"text-indent\":\n        document.execCommand(\"indent\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case \"text-outdent\":\n        document.execCommand(\"outdent\");\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case \"text-list-numbered\":\n        try {\n          document.execCommand(\"insertOrderedList\");\n          e.preventDefault();\n          e.stopPropagation();\n        } catch (e) {}\n        break;\n      case \"text-list-bulleted\":\n        try {\n          document.execCommand(\"insertUnorderedList\");\n          e.preventDefault();\n          e.stopPropagation();\n        } catch (e) {}\n        break;\n    }\n  }\n\n  /**\n   * Test for safari, if it is don't place things in the menu\n   */\n  _isSafari() {\n    let ua = navigator.userAgent.toLowerCase();\n    // test to find safari to account for it's handling\n    // of what's been selected. This isn't great UX but\n    // there's literally nothing we can do for Safari\n    // because of https://github.com/LRNWebComponents/hax-body/issues/38\n    if (ua.indexOf(\"safari\") != -1) {\n      if (ua.indexOf(\"chrome\") > -1) {\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nwindow.customElements.define(HaxTextContext.tag, HaxTextContext);\nexport { HaxTextContext };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/simple-colors/lib/simple-colors-picker.js\";\n/**\n * `hax-ce-context`\n * `A context menu that provides common custom-element based authoring options. While\n * trying to call for haxProperties which can automatically generate the buttons\n * required for populating input.`\n * @microcopy - the mental model for this element\n * - context menu - this is a menu of custom-element based buttons and events for use in a larger solution.\n */\nclass HaxCeContext extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-toolbar.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host *[hidden] {\n          display: none;\n        }\n        :host {\n          display: block;\n          height: 36px;\n        }\n        hax-context-item {\n          margin: 0;\n          height: 36px;\n        }\n        :host(.hax-context-pin-top) hax-toolbar {\n          position: fixed;\n          top: 64px;\n          opacity: 0.9;\n        }\n        :host(.hax-context-pin-bottom) hax-toolbar {\n          position: fixed;\n          bottom: 0;\n          opacity: 0.9;\n        }\n        :host(.hax-context-pin-top) hax-toolbar:hover,\n        :host(.hax-context-pin-bottom) hax-toolbar:hover {\n          opacity: 1;\n        }\n      </style>\n      <hax-toolbar hax-properties=\"[[haxProperties]]\" size=\"{{ceSize}}\">\n        <slot slot=\"primary\"></slot>\n        <hax-context-item\n          slot=\"primary\"\n          icon=\"icons:settings\"\n          label=\"Settings\"\n          event-name=\"hax-manager-configure\"\n          hidden$=\"[[!__hasSettingsForm]]\"\n        ></hax-context-item>\n        <hax-context-item\n          slot=\"primary\"\n          icon=\"icons:view-quilt\"\n          label=\"[[__parentName]]\"\n          event-name=\"hax-manager-configure-container\"\n          hidden$=\"[[!__hasParentSettingsForm]]\"\n        ></hax-context-item>\n      </hax-toolbar>\n    `;\n  }\n  static get tag() {\n    return \"hax-ce-context\";\n  }\n  static get properties() {\n    return {\n      /**\n       * ce size.\n       */\n      ceSize: {\n        type: Number,\n        value: 100,\n        observer: \"_ceSizeChanged\"\n      },\n      /**\n       * Selected value to match ce direction currently.\n       */\n      haxProperties: {\n        type: Object,\n        value: {},\n        observer: \"_haxPropertiesChanged\"\n      }\n    };\n  }\n\n  /**\n   * Set haxProperties.\n   */\n  setHaxProperties(props) {\n    // be aggressive w/ reset\n    this.set(\"haxProperties\", {});\n    this.set(\"haxProperties\", props);\n  }\n\n  /**\n   * ce size changed.\n   */\n  _ceSizeChanged(newValue, oldValue) {\n    if (\n      typeof newValue !== typeof undefined &&\n      typeof oldValue !== typeof undefined\n    ) {\n      this.dispatchEvent(\n        new CustomEvent(\"hax-context-item-selected\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            eventName: \"hax-size-change\",\n            value: newValue\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * HAX properties changed, update buttons available.\n   */\n  _haxPropertiesChanged(newValue, oldValue) {\n    if (\n      typeof oldValue !== typeof undefined &&\n      typeof newValue.settings !== typeof undefined\n    ) {\n      // clear current slot for the tag\n      while (this.firstChild !== null) {\n        this.removeChild(this.firstChild);\n      }\n      let settings = newValue.settings.quick;\n      let configure = newValue.settings.configure;\n      let advanced = newValue.settings.advanced;\n      // support things that could technically have no configuration\n      // or advanced form but have quick settings\n      // This doesn't make a ton of sense but it is possible\n      if (\n        (configure.length || advanced.length) &&\n        newValue.element.tagName !== \"HR\"\n      ) {\n        this.__hasSettingsForm = true;\n      } else {\n        this.__hasSettingsForm = false;\n      }\n      this.__hasParentSettingsForm = false;\n      // test for parent being different from child\n      if (\n        window.HaxStore.instance.activeContainerNode !==\n          window.HaxStore.instance.activeNode &&\n        window.HaxStore.instance.activeContainerNode !== null\n      ) {\n        this.__hasParentSettingsForm = true;\n        switch (window.HaxStore.instance.activeContainerNode.tagName) {\n          case \"P\":\n          case \"UL\":\n          case \"OL\":\n          case \"DIV\":\n            this.__parentName = \"Text block settings\";\n            break;\n          case \"GRID-PLATE\":\n            this.__parentName = \"Layout settings\";\n            break;\n          default:\n            this.__parentName = window.HaxStore.instance.activeContainerNode.tagName\n              .replace(\"-\", \" \")\n              .toLowerCase();\n            +\" settings\";\n            break;\n        }\n      }\n      var item;\n      // @todo kick stuff into the local dom as options\n      for (var i = 0; i < settings.length; i++) {\n        let setting = settings[i];\n        // create a new context item for the quick\n        item = document.createElement(\"hax-context-item\");\n        item.eventName = \"hax-edit-property\";\n        item.label = setting.title;\n        item.options = setting.options;\n        item.icon = setting.icon;\n        item.inputMethod = setting.inputMethod;\n        item.required = setting.required;\n        item.options = setting.options;\n        item.validation = setting.validation;\n        item.validationType = setting.validationType;\n        item.description = setting.description;\n        // property or slot if it doesn't exist\n        if (typeof setting.property !== typeof undefined) {\n          item.propertyToBind = setting.property;\n        } else if (typeof setting.attribute !== typeof undefined) {\n          item.propertyToBind = setting.attribute;\n        } else {\n          item.slotToBind = setting.slot;\n        }\n        this.appendChild(item);\n      }\n    }\n  }\n}\nwindow.customElements.define(HaxCeContext.tag, HaxCeContext);\nexport { HaxCeContext };\n","/**\n * `hax-plate-context`\n * `A context menu that provides common grid plate based authoring options.`\n * @microcopy - the mental model for this element\n * - context menu - this is a menu of text based buttons and events for use in a larger solution.\n * - grid plate - the container / full HTML tag which can have operations applied to it.\n */\nclass HaxPlateContext extends HTMLElement {\n  constructor(delayRender = false) {\n    super();\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item-menu.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item.js\");\n    // set tag for later use\n    this.tag = HaxPlateContext.tag;\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n  static get tag() {\n    return \"hax-plate-context\";\n  }\n  get html() {\n    return `\n    <style>\n    :host {\n      display: block;\n      width: 32px;\n    }\n    hax-context-item {\n      display: block;\n      margin: 6px 0;\n      width: 28px;\n      height: 24px;\n    }\n    .area {\n      width: 32px;\n      float: left;\n      visibility: visible;\n      transition: 0.3s all ease;\n    }\n    </style>\n    <div class=\"area\">\n      <hax-context-item\n        mini\n        light\n        icon=\"hardware:keyboard-arrow-up\"\n        label=\"Move up\"\n        event-name=\"grid-plate-up\"\n        direction=\"left\"\n      ></hax-context-item>\n      <hax-context-item\n        mini\n        light\n        icon=\"hardware:keyboard-arrow-down\"\n        label=\"Move down\"\n        event-name=\"grid-plate-down\"\n        direction=\"left\"\n      ></hax-context-item>\n    </div>`;\n  }\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n}\nwindow.customElements.define(HaxPlateContext.tag, HaxPlateContext);\nexport { HaxPlateContext };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n/**\n * `hax-input-mixer`\n * A context menu that provides common custom-element based authoring options. While\n * trying to call for haxProperties which can automatically generate the buttons\n * required for populating input.\n * @microcopy - the mental model for this element\n * - context menu - this is a menu of custom-element based buttons and events for use in a larger solution.\n */\nclass HaxInputMixer extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@lrnwebcomponents/simple-colors/lib/simple-colors-picker.js\");\n    import(\"@polymer/paper-input/paper-textarea.js\");\n    import(\"@polymer/paper-input/paper-input.js\");\n    import(\"@polymer/paper-checkbox/paper-checkbox.js\");\n    import(\"@polymer/paper-slider/paper-slider.js\");\n    import(\"@polymer/paper-tooltip/paper-tooltip.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item-menu.js\");\n    import(\"@lrnwebcomponents/hax-body/lib/hax-context-item.js\");\n  }\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          margin: 0;\n          border: none;\n          padding: 0;\n          border: 1px solid var(--hax-color-border-outline);\n        }\n        .wrapper {\n          background-color: #ffffff;\n          color: #222222;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        hax-context-item {\n          margin: 0;\n        }\n        #elementoptions {\n          height: inherit;\n        }\n        #input {\n          color: var(--hax-color-text);\n        }\n        paper-checkbox {\n          --paper-checkbox-label-color: var(--hax-color-text);\n        }\n        paper-textarea,\n        paper-input {\n          height: 40px;\n          font-size: 14px;\n          margin-bottom: 6px;\n          --paper-input-container: {\n            padding: 0;\n            font-size: 14px;\n          }\n          --paper-input-container-label-floating: {\n            color: var(--hax-color-text);\n            font-size: 12px;\n          }\n          --paper-input-container-underline: {\n            margin: 0;\n          }\n          --paper-input-container-color: var(--hax-color-text);\n          --paper-input-container-focus-color: var(--hax-color-text);\n          --paper-input-container-invalid-color: var(--hax-color-text);\n          --paper-input-container-input-color: var(--hax-color-text);\n          --paper-input-container-shared-input-style: {\n            color: var(--hax-color-text);\n            background: transparent;\n            margin: 0;\n            padding: 0;\n            line-height: 14px;\n            font-size: 14px;\n            outline: none;\n            border: none;\n          }\n        }\n        .input-method {\n          color: var(--hax-color-text);\n          padding: 0 8px;\n          width: 80%;\n        }\n        #updatebutton {\n          outline: 1px solid black;\n        }\n        #updatebutton:hover {\n          border: none;\n        }\n      </style>\n      <div class=\"wrapper\">\n        <template is=\"dom-if\" if=\"[[__inputselect]]\">\n          <span class=\"input-mixer-label\">[[label]]</span>\n          <hax-context-item-menu\n            selected-value=\"{{__selectedValue}}\"\n            icon=\"[[icon]]\"\n            id=\"input\"\n          >\n            <slot></slot>\n          </hax-context-item-menu>\n        </template>\n        <span class=\"input-method\">\n          <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n            <paper-textarea\n              id=\"input\"\n              label=\"[[label]]\"\n              value=\"{{value}}\"\n              auto-validate=\"\"\n              pattern=\"[[validation]]\"\n              required=\"[[required]]\"\n            ></paper-textarea>\n          </template>\n          <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n            <paper-input\n              id=\"input\"\n              type=\"[[validationType]]\"\n              label=\"[[label]]\"\n              value=\"{{value}}\"\n              auto-validate=\"\"\n              pattern=\"[[validation]]\"\n              required=\"[[required]]\"\n            ></paper-input>\n          </template>\n          <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n            <paper-checkbox id=\"input\" checked=\"{{value}}\"\n              >[[label]]</paper-checkbox\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n            <paper-checkbox id=\"input\" checked=\"{{value}}\"\n              >[[label]]</paper-checkbox\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n            <span>[[label]]</span>\n            <simple-colors-picker\n              id=\"input\"\n              value=\"{{value}}\"\n            ></simple-colors-picker>\n          </template>\n        </span>\n        <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n          [[description]]\n        </paper-tooltip>\n        <hax-context-item\n          id=\"updatebutton\"\n          icon=\"subdirectory-arrow-right\"\n          label\\$=\"Update [[label]]\"\n          event-name=\"hax-update-tap\"\n        ></hax-context-item>\n      </div>\n    `;\n  }\n  static get tag() {\n    return \"hax-input-mixer\";\n  }\n  static get properties() {\n    return {\n      /**\n       * value, where the magic happens.\n       */\n      value: {\n        type: String,\n        value: null\n      },\n      /**\n       * Label for the input\n       */\n      label: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Optional regex Validation for input and textarea fields\n       */\n      validation: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Optional input type validation; use on input field\n       */\n      validationType: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * Required; used on input and textarea fields\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      },\n      /**\n       * Options for the input if it's a select of some form\n       */\n      options: {\n        type: Object,\n        value: {},\n        reflectToAttribute: true\n      },\n      /**\n       * Optional icon that represents the item mixing.\n       */\n      icon: {\n        type: String,\n        value: \"android\",\n        reflectToAttribute: true\n      },\n      /**\n       * longer description for the input\n       */\n      description: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * longer description for the input\n       */\n      inputMethod: {\n        type: String,\n        value: null,\n        reflectToAttribute: true,\n        observer: \"_inputMethodChanged\"\n      },\n      /**\n       * longer description for the input\n       */\n      propertyToBind: {\n        type: String,\n        reflectToAttribute: true\n      },\n      /**\n       * slot to bind input back to\n       */\n      slotToBind: {\n        type: String,\n        reflectToAttribute: true\n      }\n    };\n  }\n  /**\n   * Ensure our weird data binding for templates is set initially.\n   */\n  ready() {\n    super.ready();\n    // prime methods even though invisible most likely\n    this._resetInputMethods();\n    afterNextRender(this, function() {\n      this.addEventListener(\n        \"hax-context-item-selected\",\n        this._haxContextOperation.bind(this)\n      );\n    });\n  }\n  /**\n   * Input method changes, allow our templates to rebind correctly.\n   */\n  _inputMethodChanged(newValue, oldValue) {\n    if (newValue != null && typeof oldValue !== typeof undefined) {\n      let method = newValue;\n      let methods = this.validInputMethods();\n      // ensure this is a valid method of input\n      if (methods.includes(method)) {\n        // set everything false to force a correct rebind of template tags\n        this._resetInputMethods();\n        // this is weird looking, I know...\n        this[\"__input\" + method] = true;\n        // hide the menu if it was open previously\n        // need to paint into the slot so clean it out and repaint\n        while (this.firstChild !== null) {\n          this.removeChild(this.firstChild);\n        }\n        // select needs to inject settings into the slot\n        if (method === \"select\" && typeof this.options !== typeof undefined) {\n          // this hits the key => value relationship correctly\n          var item;\n          for (var val in this.options) {\n            item = document.createElement(\"paper-item\");\n            item.attributes.value = val;\n            item.innerHTML = this.options[val];\n            this.appendChild(item.cloneNode(true));\n          }\n        }\n        // try and force cursor to focus on this element\n        setTimeout(() => {\n          if (\n            typeof this.shadowRoot.querySelector(\"#input\").hideMenu ===\n            \"function\"\n          ) {\n            this.shadowRoot.querySelector(\"#input\").hideMenu();\n          }\n          this.shadowRoot.querySelector(\"#input\").focus();\n        }, 200);\n      }\n    }\n  }\n\n  /**\n   * Validate input method.\n   */\n  validInputMethods() {\n    var methods = [\n      \"flipboolean\",\n      \"boolean\",\n      \"select\",\n      \"textfield\",\n      \"textarea\",\n      \"datepicker\",\n      \"haxupload\",\n      \"colorpicker\",\n      \"iconpicker\",\n      \"alt\",\n      \"number\",\n      \"code-editor\",\n      \"array\"\n    ];\n    return methods;\n  }\n  /**\n   * Reset all our meta attributes.\n   */\n  _resetInputMethods() {\n    let methods = this.validInputMethods();\n    for (var i = 0; i < methods.length; i++) {\n      this[\"__input\" + methods[i]] = false;\n    }\n  }\n  /**\n   * Respond to simple modifications.\n   */\n  _haxContextOperation(e) {\n    let detail = e.detail;\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      case \"hax-update-tap\":\n        // minor dataType conversion for boolean\n        if (this.inputMethod == \"boolean\") {\n          this.value = this.value;\n        }\n        // opposite value for a flip-boolean\n        else if (this.inputMethod == \"flipboolean\") {\n          this.value = !this.value;\n        } else if (this.inputMethod == \"select\") {\n          var count = 0;\n          // convert value into key value\n          for (var val in this.options) {\n            if (count == this.__selectedValue) {\n              this.value = val;\n            }\n            count++;\n          }\n        }\n        let mixer = {\n          value: this.value,\n          propertyToBind: this.propertyToBind,\n          slotToBind: this.slotToBind\n        };\n        // retarget event with all the guts of this item\n        // this way we can do whatever we want in hax-body which is\n        // basically notice that we got asked to do some data binding\n        // and then actually do it and hide this item!!!!\n        this.dispatchEvent(\n          new CustomEvent(\"hax-input-mixer-update\", {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: { inputMixer: mixer }\n          })\n        );\n        break;\n    }\n  }\n}\nwindow.customElements.define(HaxInputMixer.tag, HaxInputMixer);\nexport { HaxInputMixer };\n","import \"@polymer/polymer/lib/elements/dom-module.js\";\n\nconst styleElement = document.createElement(\"dom-module\");\nstyleElement.innerHTML = `<template>\n  <style>\n  :host, :host * ::slotted(*) {\n    line-height: 1.8;\n  }\n  :host ul, :host * ::slotted(ul),\n  :host ol, :host * ::slotted(ol) {\n    padding-left: 20px;\n    margin-left: 20px;\n  }\n  :host ul, :host * ::slotted(ul) {\n    list-style-type: disc;\n  }\n  :host li, :host * ::slotted(li) {\n    margin-bottom: 6px;\n  }\n</style>\n</template>`;\nstyleElement.register(\"hax-shared-styles\");\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport { flush } from \"@polymer/polymer/lib/utils/flush.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport * as async from \"@polymer/polymer/lib/utils/async.js\";\nimport {\n  encapScript,\n  wipeSlot\n} from \"@lrnwebcomponents/hax-body/lib/haxutils.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"./lib/hax-text-context.js\";\nimport \"./lib/hax-ce-context.js\";\nimport \"./lib/hax-plate-context.js\";\nimport \"./lib/hax-input-mixer.js\";\nimport \"./lib/hax-shared-styles.js\";\n\n/**\n * `hax-body`\n * `Manager of the body area that can be modified`\n * @microcopy - the mental model for this element\n *  - body is effectively a body of content that can be manipulated in the browser. This is for other HAX elements ultimately to interface with and reside in. It is the controller of input and output for all of HAX as it exists in a document. body is not the <body> tag but we need a similar mental model container for all our other elements.\n *  - text-context - the context menu that shows up when an item is active so it can have text based operations performed to it.\n *  - plate/grid plate - a plate or grid plate is a container that we can operate on in HAX. it can also have layout / \"global\" type of body operations performed on it such as delete, duplicate and higher level format styling.\n */\nclass HaxBody extends PolymerElement {\n  constructor() {\n    super();\n    import(\"@polymer/iron-a11y-keys/iron-a11y-keys.js\");\n    import(\"@polymer/paper-item/paper-item.js\");\n    import(\"@lrnwebcomponents/grid-plate/grid-plate.js\");\n  }\n  static get tag() {\n    return \"hax-body\";\n  }\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles hax-shared-styles\">\n        :host {\n          display: block;\n          min-height: 32px;\n          min-width: 32px;\n          outline: none;\n        }\n        .hax-context-menu {\n          padding: 0;\n          margin-left: -5000px;\n          position: absolute;\n          visibility: hidden;\n          opacity: 0;\n          z-index: 1000;\n          float: left;\n          display: block;\n          pointer-events: none;\n          transition: 0.8s opacity ease-in-out, 0.8s visibility ease-in-out;\n        }\n        #haxinputmixer {\n          z-index: 10000000;\n        }\n        .hax-context-visible.hax-active-hover {\n          visibility: visible;\n          opacity: 1;\n          pointer-events: all;\n          margin-left: unset;\n        }\n        :host #bodycontainer ::slotted(h1) {\n          font-size: var(--hax-base-styles-h1-font-size, 2.5em);\n          line-height: var(--hax-base-styles-h1-line-height, 2.5em);\n        }\n        :host #bodycontainer ::slotted(h2) {\n          font-size: var(--hax-base-styles-h2-font-size, 2em);\n        }\n        :host #bodycontainer ::slotted(h3) {\n          font-size: var(--hax-base-styles-h3-font-size, 1.75em);\n        }\n        :host #bodycontainer ::slotted(h4) {\n          font-size: var(--hax-base-styles-h4-font-size, 1.5em);\n        }\n        :host #bodycontainer ::slotted(h5) {\n          font-size: var(--hax-base-styles-h5-font-size, 1.25em);\n        }\n        :host #bodycontainer ::slotted(h6) {\n          font-size: var(--hax-base-styles-h6-font-size, 1.25em);\n        }\n        :host #bodycontainer ::slotted(p) {\n          min-height: var(--hax-base-styles-p-min-height, 43px);\n          font-size: var(--hax-base-styles-p-font-size, 24px);\n          line-height: var(--hax-base-styles-p-line-height, 1.8);\n          letter-spacing: var(--hax-base-styles-p-letter-spacing, 0.5px);\n        }\n        :host #bodycontainer ::slotted(a) {\n          color: var(--hax-base-styles-a-color, #000);\n          font-size: var(--hax-base-styles-a-font-size, 24px);\n          font-weight: var(--hax-base-styles-a-font-weight, normal);\n        }\n        :host #bodycontainer ::slotted(a:visited) {\n          color: var(--hax-base-styles-a-color-visited, #2196f3);\n        }\n        :host #bodycontainer ::slotted(a:active),\n        :host #bodycontainer ::slotted(a:focus),\n        :host #bodycontainer ::slotted(a:hover) {\n          color: var(--hax-base-styles-a-color-active, #2196f3);\n          font-weight: var(--hax-base-styles-a-font-weight-active, normal);\n        }\n        :host #bodycontainer ::slotted(ol),\n        :host #bodycontainer ::slotted(ul),\n        :host #bodycontainer ::slotted(li) {\n          padding-bottom: var(--hax-base-styles-list-padding-bottom, 1.5em);\n          line-height: var(--hax-base-styles-list-line-height, 40px);\n          font-size: var(--hax-base-styles-list-font-size, 24px);\n          max-width: var(--hax-base-styles-list-max-width, 28em);\n        }\n        :host #bodycontainer ::slotted(ol > li:last-child),\n        :host #bodycontainer ::slotted(ul > li:last-child) {\n          padding-bottom: var(\n            --hax-base-styles-list-last-child-padding-bottom,\n            1em\n          );\n        }\n        :host #bodycontainer ::slotted(ul),\n        :host #bodycontainer ::slotted(ol) {\n          padding-left: var(--hax-base-styles-list-padding-left, 20px);\n          padding-left: var(--hax-base-styles-list-margin-left, 20px);\n        }\n\n        :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]) {\n          outline: none;\n          outline-offset: 2px;\n          transition: 0.2s width ease-in-out, 0.2s height ease-in-out,\n            0.2s margin ease-in-out;\n          caret-color: var(--hax-color-text);\n        }\n        :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]:hover) {\n          outline: 1px solid rgba(145, 151, 162, 0.25);\n          caret-color: #000000;\n        }\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*.hax-active[data-editable]:hover) {\n          cursor: text !important;\n          outline: 1px solid rgba(145, 151, 162, 0.25);\n        }\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*[data-editable] .hax-active:hover) {\n          cursor: text !important;\n          outline: 1px solid rgba(145, 151, 162, 0.25);\n        }\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(code.hax-active[data-editable]) {\n          display: block;\n        }\n        :host([edit-mode]) #bodycontainer ::slotted(hr[data-editable]) {\n          height: 2px;\n          background-color: #eeeeee;\n          padding-top: 4px;\n          padding-bottom: 4px;\n        }\n        /** Fix to support safari as it defaults to none */\n        :host([edit-mode]) #bodycontainer ::slotted(*[data-editable]) {\n          -webkit-user-select: text;\n          cursor: pointer;\n        }\n\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*[data-editable]::-moz-selection),\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*[data-editable] *::-moz-selection) {\n          background-color: var(--hax-body-highlight, --paper-yellow-300);\n          color: black;\n        }\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*[data-editable]::selection),\n        :host([edit-mode])\n          #bodycontainer\n          ::slotted(*[data-editable] *::selection) {\n          background-color: var(--hax-body-highlight, --paper-yellow-300);\n          color: black;\n        }\n        #bodycontainer {\n          -webkit-user-select: text;\n          user-select: text;\n        }\n        :host([edit-mode][hax-ray-mode])\n          #bodycontainer\n          ::slotted(*[data-editable]):before {\n          content: attr(data-hax-ray) \" \" attr(resource) \" \" attr(typeof) \" \"\n            attr(property) \" \" attr(content);\n          font-size: 10px;\n          font-style: italic;\n          left: unset;\n          right: unset;\n          top: unset;\n          background-color: #d3d3d3;\n          color: #000000;\n          bottom: unset;\n          width: auto;\n          padding: 8px;\n          margin: 0;\n          z-index: 1;\n          margin: -16px 0 0 0;\n          float: right;\n          line-height: 2;\n        }\n      </style>\n      <div id=\"bodycontainer\" class=\"ignore-activation\">\n        <slot id=\"body\"></slot>\n      </div>\n      <hax-text-context\n        id=\"textcontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-text-context>\n      <hax-ce-context\n        id=\"cecontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-ce-context>\n      <hax-plate-context\n        id=\"platecontextmenu\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-plate-context>\n      <hax-input-mixer\n        id=\"haxinputmixer\"\n        class=\"hax-context-menu ignore-activation\"\n      ></hax-input-mixer>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * State of if we are editing or not.\n       */\n      editMode: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: \"_editModeChanged\"\n      },\n      /**\n       * Access to the global properties object.\n       */\n      globalPreferences: {\n        type: Object,\n        value: {},\n        observer: \"_globalPreferencesUpdated\"\n      },\n      /**\n       * Bust out the HAX Ray mode\n       */\n      haxRayMode: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * A reference to the active node in the slot.\n       */\n      activeNode: {\n        type: Object,\n        value: null,\n        notify: true,\n        observer: \"_activeNodeChanged\"\n      },\n      /**\n       * A reference to the active node in the slot.\n       */\n      activeContainerNode: {\n        type: Object,\n        value: null,\n        notify: true,\n        observer: \"_activeContainerNodeChanged\"\n      }\n    };\n  }\n  /**\n   * Ready state to tee everything up.\n   */\n  ready() {\n    super.ready();\n    this.dispatchEvent(\n      new CustomEvent(\"hax-register-body\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n    this.polyfillSafe = window.HaxStore.instance.computePolyfillSafe();\n    // mutation observer that ensures state of hax applied correctly\n    afterNextRender(this, function() {\n      this._observer = new FlattenedNodesObserver(this, info => {\n        // MAKE SURE WE KNOW WHAT JUST GOT ADDED HERE\n        flush();\n        // if we've got new nodes, we have to react to that\n        if (info.addedNodes.length > 0) {\n          info.addedNodes.map(node => {\n            if (this._haxElementTest(node)) {\n              if (this._HTMLPrimativeTest(node)) {\n                node.contentEditable = this.editMode;\n              }\n              // this does the real targetting\n              node.setAttribute(\"data-editable\", this.editMode);\n              let haxRay = node.tagName.replace(\"-\", \" \").toLowerCase();\n              let i = window.HaxStore.instance.gizmoList.findIndex(\n                j => j.tag === node.tagName.toLowerCase()\n              );\n              if (i !== -1) {\n                haxRay = window.HaxStore.instance.gizmoList[i].title;\n              }\n              node.setAttribute(\"data-hax-ray\", haxRay);\n              this.dispatchEvent(\n                new CustomEvent(\"hax-body-tag-added\", {\n                  bubbles: true,\n                  cancelable: true,\n                  composed: true,\n                  detail: { node: node }\n                })\n              );\n            }\n          });\n        }\n        // if we dropped nodes via the UI (delete event basically)\n        if (info.removedNodes.length > 0) {\n          // handle removing items... not sure we need to do anything here\n          info.removedNodes.map(node => {\n            if (\n              this._haxElementTest(node) &&\n              !node.classList.contains(\"hax-active\")\n            ) {\n              this.dispatchEvent(\n                new CustomEvent(\"hax-body-tag-removed\", {\n                  bubbles: true,\n                  cancelable: true,\n                  composed: true,\n                  detail: { node: node }\n                })\n              );\n            }\n          });\n        }\n      });\n      this.addEventListener(\n        \"hax-context-item-selected\",\n        this._haxContextOperation.bind(this)\n      );\n      this.addEventListener(\n        \"hax-input-mixer-update\",\n        this._haxInputMixerOperation.bind(this)\n      );\n      this.addEventListener(\n        \"place-holder-replace\",\n        this.replacePlaceholder.bind(this)\n      );\n      // try to normalize paragraph insert on enter\n      try {\n        document.execCommand(\"enableObjectResizing\", false, false);\n        document.execCommand(\"defaultParagraphSeparator\", false, \"p\");\n      } catch (e) {\n        console.warn(e);\n      }\n      window.addEventListener(\"keydown\", this._onKeyDown.bind(this));\n      window.addEventListener(\"keypress\", this._onKeyPress.bind(this));\n      this.shadowRoot\n        .querySelector(\"slot\")\n        .addEventListener(\"mousemove\", this.hoverEvent.bind(this));\n      this.shadowRoot.querySelector(\"slot\").addEventListener(\"mouseup\", e => {\n        const tmp = window.HaxStore.getSelection();\n        window.HaxStore._tmpSelection = tmp;\n        try {\n          const range = window.HaxStore.getRange();\n          if (range.cloneRange) {\n            window.HaxStore._tmpRange = range.cloneRange();\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      });\n      document.body.addEventListener(\n        \"hax-store-property-updated\",\n        this._haxStorePropertyUpdated.bind(this)\n      );\n      window.addEventListener(\"scroll\", this._keepContextVisible.bind(this));\n      this.addEventListener(\"focusin\", this._focusIn.bind(this));\n      this.addEventListener(\"mousedown\", this._focusIn.bind(this));\n    });\n  }\n  /**\n   * Attached to the DOM; now we can fire event to the store that\n   * we exist and are the thing being edited.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      // in case we miss this on the initial setup. possible in auto opening environments.\n      this.editMode = window.HaxStore.instance.editMode;\n      // ensure this resets every append\n      this.__tabTrap = false;\n    });\n  }\n  disconnectedCallback() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._observer = null;\n    }\n    super.disconnectedCallback();\n  }\n  /**\n   * Keep the context menu visible if needed\n   */\n  _keepContextVisible(e) {\n    // see if the text context menu is visible\n    let el = false;\n    if (\n      this.shadowRoot\n        .querySelector(\"#textcontextmenu\")\n        .classList.contains(\"hax-context-visible\")\n    ) {\n      el = this.shadowRoot.querySelector(\"#textcontextmenu\");\n    } else if (\n      this.shadowRoot\n        .querySelector(\"#cecontextmenu\")\n        .classList.contains(\"hax-context-visible\")\n    ) {\n      el = this.shadowRoot.querySelector(\"#cecontextmenu\");\n    }\n    // if we see it, ensure we don't have the pin\n    if (el) {\n      if (this.elementInViewport(el)) {\n        el.classList.remove(\"hax-context-pin-bottom\", \"hax-context-pin-top\");\n      } else {\n        if (this.__OffBottom) {\n          el.classList.add(\"hax-context-pin-top\");\n        } else {\n          el.classList.add(\"hax-context-pin-bottom\");\n        }\n      }\n    }\n  }\n  _onKeyDown(e) {\n    if (this.editMode && this.getAttribute(\"contenteditable\")) {\n      setTimeout(() => {\n        const rng = window.HaxStore.getRange();\n        switch (e.key) {\n          case \"Tab\":\n            if (\n              window.HaxStore.instance.isTextElement(this.activeContainerNode)\n            ) {\n              if (e.detail.keyboardEvent) {\n                e.detail.keyboardEvent.preventDefault();\n                e.detail.keyboardEvent.stopPropagation();\n                e.detail.keyboardEvent.stopImmediatePropagation();\n              }\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n              if (e.shiftKey) {\n                this._tabBackKeyPressed();\n              } else {\n                this._tabKeyPressed();\n              }\n            }\n            break;\n          case \"Enter\":\n            this.setAttribute(\"contenteditable\", true);\n            setTimeout(() => {\n              if (\n                rng.commonAncestorContainer &&\n                typeof rng.commonAncestorContainer.focus === \"function\"\n              ) {\n                rng.commonAncestorContainer.focus();\n                this.__focusLogic(rng.commonAncestorContainer);\n              }\n            }, 900);\n            break;\n          case \"ArrowUp\":\n          case \"ArrowDown\":\n          case \"ArrowLeft\":\n          case \"ArrowRight\":\n            if (\n              rng.commonAncestorContainer &&\n              this.activeNode !== rng.commonAncestorContainer &&\n              typeof rng.commonAncestorContainer.focus === \"function\"\n            ) {\n              if (rng.commonAncestorContainer.tagName !== \"HAX-BODY\") {\n                if (\n                  window.HaxStore.instance.isTextElement(\n                    rng.commonAncestorContainer\n                  )\n                ) {\n                  this.setAttribute(\"contenteditable\", true);\n                } else {\n                  this.removeAttribute(\"contenteditable\");\n                }\n                setTimeout(() => {\n                  rng.commonAncestorContainer.focus();\n                  this.__focusLogic(rng.commonAncestorContainer);\n                }, 900);\n              }\n            }\n            // need to check on the parent too if this was a text node\n            else if (\n              rng.commonAncestorContainer &&\n              rng.commonAncestorContainer.parentNode &&\n              this.activeNode !== rng.commonAncestorContainer.parentNode &&\n              typeof rng.commonAncestorContainer.parentNode.focus === \"function\"\n            ) {\n              if (\n                rng.commonAncestorContainer.parentNode.tagName !== \"HAX-BODY\"\n              ) {\n                if (\n                  window.HaxStore.instance.isTextElement(\n                    rng.commonAncestorContainer.parentNode\n                  )\n                ) {\n                  this.setAttribute(\"contenteditable\", true);\n                } else {\n                  this.removeAttribute(\"contenteditable\");\n                }\n                setTimeout(() => {\n                  rng.commonAncestorContainer.parentNode.focus();\n                  this.__focusLogic(rng.commonAncestorContainer.parentNode);\n                }, 900);\n              }\n            }\n            break;\n        }\n      }, 100);\n      if (\n        this.shadowRoot\n          .querySelector(\"#platecontextmenu\")\n          .classList.contains(\"hax-active-hover\")\n      ) {\n        this.__dropActiveHover();\n      }\n    }\n  }\n  _onKeyPress(e) {\n    if (\n      this.editMode &&\n      this.shadowRoot\n        .querySelector(\"#platecontextmenu\")\n        .classList.contains(\"hax-active-hover\")\n    ) {\n      this.__dropActiveHover();\n    }\n  }\n  /**\n   * on mouse over then fire the hax ray value if we have one\n   */\n  hoverEvent(e) {\n    if (this.editMode) {\n      if (e.target && e.target.getAttribute(\"data-hax-ray\") != null) {\n        this.__activeHover = e.target;\n        this.dispatchEvent(\n          new CustomEvent(\"hax-active-hover-name\", {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: e.target.getAttribute(\"data-hax-ray\")\n          })\n        );\n      } else if (\n        e.target &&\n        e.target.parentNode &&\n        e.target.parentNode.getAttribute(\"data-hax-ray\") != null\n      ) {\n        this.__activeHover = e.target.parentNode;\n        this.dispatchEvent(\n          new CustomEvent(\"hax-active-hover-name\", {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: e.target.parentNode.getAttribute(\"data-hax-ray\")\n          })\n        );\n      }\n      if (\n        !this.shadowRoot\n          .querySelector(\"#platecontextmenu\")\n          .classList.contains(\"hax-active-hover\")\n      ) {\n        let local = e.target;\n        // see if the target is relevent when showing the edit menu operations\n        if (\n          e.target === this.shadowRoot.querySelector(\"#cecontextmenu\") ||\n          e.target === this.shadowRoot.querySelector(\"#textcontextmenu\") ||\n          e.target === this.shadowRoot.querySelector(\"#platecontextmenu\") ||\n          local === this.activeNode ||\n          local === this.activeContainerNode ||\n          e.target === this.activeNode ||\n          e.target === this.activeContainerNode ||\n          local.parentNode === this.activeContainerNode ||\n          local.parentNode.parentNode === this.activeContainerNode ||\n          local.parentNode.parentNode.parentNode === this.activeContainerNode\n        ) {\n          this.__addActiveHover();\n          this.__typeLock = false;\n        } else {\n          this.__dropActiveHover();\n        }\n      }\n    }\n  }\n  __addActiveHover() {\n    this.shadowRoot\n      .querySelector(\"#cecontextmenu\")\n      .classList.add(\"hax-active-hover\");\n    this.shadowRoot\n      .querySelector(\"#textcontextmenu\")\n      .classList.add(\"hax-active-hover\");\n    this.shadowRoot\n      .querySelector(\"#platecontextmenu\")\n      .classList.add(\"hax-active-hover\");\n  }\n  __dropActiveHover() {\n    this.shadowRoot\n      .querySelector(\"#cecontextmenu\")\n      .classList.remove(\"hax-active-hover\");\n    this.shadowRoot\n      .querySelector(\"#textcontextmenu\")\n      .classList.remove(\"hax-active-hover\");\n    this.shadowRoot\n      .querySelector(\"#platecontextmenu\")\n      .classList.remove(\"hax-active-hover\");\n  }\n  /**\n   * Check if part of the passed element is int he viewport\n   */\n  elementInViewport(el) {\n    let top =\n      el.offsetTop -\n      32 -\n      window.HaxStore.instance.haxPanel.shadowRoot.querySelector(\"#drawer\")\n        .offsetHeight;\n    let left = el.offsetLeft;\n    let width = el.offsetWidth;\n    let height = el.offsetHeight;\n    while (el.offsetParent) {\n      el = el.offsetParent;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n    this.__OffBottom = top < window.pageYOffset + window.innerHeight;\n    return (\n      top < window.pageYOffset + window.innerHeight &&\n      left < window.pageXOffset + window.innerWidth &&\n      top + height > window.pageYOffset &&\n      left + width > window.pageXOffset\n    );\n  }\n  /**\n   * Replace place holder after an event has called for it in the element itself\n   */\n  replacePlaceholder(e) {\n    // generate a paragraph of text here on click\n    if (e.detail === \"text\") {\n      // make sure text just escalates to a paragraph tag\n      let p = document.createElement(\"p\");\n      p.innerHTML = \"<br/>\";\n      this.haxReplaceNode(this.activeNode, p, this.activeNode.parentNode);\n      // allow swap out to happen\n      setTimeout(() => {\n        // set active to this p tag\n        this.activeNode = p;\n        window.HaxStore.write(\"activeNode\", p, this);\n        this.activeContainerNode.setAttribute(\"contenteditable\", true);\n        // focus on it\n        p.focus();\n        this.__focusLogic(p);\n      }, 210);\n    } else {\n      this.replaceElementWorkflow();\n    }\n  }\n  /**\n   * Whole workflow of replacing something in place contextually.\n   * This can fire for things like events needing this workflow to\n   * invoke whether it's a \"convert\" event or a \"replace placeholder\" event\n   */\n  replaceElementWorkflow() {\n    let element = window.HaxStore.nodeToHaxElement(this.activeNode, null);\n    let type = \"*\";\n    let skipPropMatch = false;\n    // special support for place holder which defines exactly\n    // what the user wants this replaced with\n    if (\n      element.tag === \"place-holder\" &&\n      typeof element.properties[\"type\"] !== typeof undefined\n    ) {\n      type = element.properties[\"type\"];\n      skipPropMatch = true;\n    }\n    var props = {};\n    // see if we have a gizmo as it's not a requirement to registration\n    // as well as having handlers since mapping is not required either\n    if (\n      typeof window.HaxStore.instance.elementList[element.tag] !==\n        typeof undefined &&\n      window.HaxStore.instance.elementList[element.tag].gizmo !== false &&\n      typeof window.HaxStore.instance.elementList[element.tag].gizmo.handles !==\n        typeof undefined &&\n      window.HaxStore.instance.elementList[element.tag].gizmo.handles.length > 0\n    ) {\n      // get the haxProperties for this item\n      let gizmo = window.HaxStore.instance.elementList[element.tag].gizmo;\n      // walk through each handler\n      for (var i = 0; i < gizmo.handles.length; i++) {\n        // walk the properties defined as they would be to the\n        // left side of the ledger and tell us which property to\n        // mesh with. This effectively rehydrates / inverts that\n        // relationship where we have an element and want to say\n        // \"oh ya, but what could have handled this\" so that we\n        // can use that translation to offer up convertion to a\n        // new element. This is insane.\n        for (var prop in gizmo.handles[i]) {\n          // type is a reserved handler but any other property\n          // which we actually have in our element let's go for it\n          if (\n            prop !== \"type\" &&\n            typeof element.properties[gizmo.handles[i][prop]] !==\n              typeof undefined\n          ) {\n            // The cake is a lie... oh wait... no it's not.\n            // This will completely bend your mind when it comes to\n            // what HTML is, how it should operate and what universe\n            // we can now contort as a result. This effectively allows\n            // reverse engineering any element on the page into any\n            // other compatible element based on the properties in\n            // each element claiming to be compatible.\n            props[prop] = element.properties[gizmo.handles[i][prop]];\n          }\n        }\n      }\n    }\n    let haxElements = window.HaxStore.guessGizmo(type, props, skipPropMatch);\n    // see if we got anything\n    if (haxElements.length > 0) {\n      // hand off to hax-app-picker to deal with the rest of this\n      let tag = this.activeNode.tagName.toLowerCase();\n      let humanName = tag.replace(\"-\", \" \");\n      if (\n        typeof window.HaxStore.instance.elementList[tag] !== typeof undefined &&\n        window.HaxStore.instance.elementList[tag].gizmo !== false\n      ) {\n        humanName = window.HaxStore.instance.elementList[tag].gizmo.title;\n      }\n      window.HaxStore.instance.haxAppPicker.presentOptions(\n        haxElements,\n        \"__convert\",\n        `Transform ${humanName} to..`,\n        \"gizmo\"\n      );\n    } else {\n      window.HaxStore.toast(\"Sorry, this can not be transformed!\", 5000);\n    }\n  }\n  /**\n   * Global prefs updated, let's visualize stuff from hax-ray\n   */\n  _globalPreferencesUpdated(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      this.haxRayMode = newValue.haxRayMode;\n    }\n  }\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this.set(e.detail.property, null);\n      }\n      this.set(e.detail.property, e.detail.value);\n    }\n  }\n  /**\n   * Clear area.\n   */\n  haxClearBody(confirm = true) {\n    let status = true;\n    // only confirm if asked so we can support wipes without it\n    if (confirm) {\n      status = prompt(\"Are you sure you want to delete all content?\");\n    }\n    // ensure they said yes\n    if (status) {\n      wipeSlot(this);\n    }\n  }\n  /**\n   * Insert new tag + content into the local DOM as a node.\n   */\n  haxInsert(tag, content, properties = {}, waitForLock = true) {\n    this.__activeHover = null;\n    // verify this tag is a valid one\n    // create a new element fragment w/ content in it\n    // if this is a custom-element it won't expand though\n    var frag = document.createElement(tag);\n    // set text forcibly\n    //frag.innerText = content;\n    // now set html forcibly which would overwrite the other one\n    frag.innerHTML = content;\n    // clone the fragment which will force an escalation to full node\n    var newNode = frag.cloneNode(true);\n    // support for properties if they exist\n    for (var property in properties) {\n      let attributeName = window.HaxStore.camelToDash(property);\n      if (properties.hasOwnProperty(property)) {\n        // special supporting for boolean because html is weird :p\n        if (properties[property] === true) {\n          newNode.setAttribute(attributeName, attributeName);\n        } else if (properties[property] === false) {\n          newNode.removeAttribute(attributeName);\n        } else if (\n          properties[property] != null &&\n          properties[property].constructor === Array\n        ) {\n          if (newNode.properties && newNode.properties[property].readOnly) {\n          } else {\n            newNode.set(attributeName, properties[property]);\n          }\n        } else if (\n          properties[property] != null &&\n          properties[property].constructor === Object\n        ) {\n          if (newNode.properties && newNode.properties[property].readOnly) {\n          } else {\n            newNode.set(attributeName, properties[property]);\n          }\n        } else {\n          newNode.setAttribute(attributeName, properties[property]);\n        }\n      }\n    }\n    // special support for a drag and drop into a place-holder tag\n    // as this is a more aggressive operation then the others\n    if (\n      window.HaxStore.instance.activePlaceHolder !== null &&\n      typeof window.HaxStore.instance.activePlaceHolder.style !==\n        typeof undefined\n    ) {\n      // replicate styles so that it doesn't jar the UI\n      newNode.style.width =\n        window.HaxStore.instance.activePlaceHolder.style.width;\n      newNode.style.float =\n        window.HaxStore.instance.activePlaceHolder.style.float;\n      newNode.style.margin =\n        window.HaxStore.instance.activePlaceHolder.style.margin;\n      newNode.style.display =\n        window.HaxStore.instance.activePlaceHolder.style.display;\n      this.haxReplaceNode(\n        window.HaxStore.instance.activePlaceHolder,\n        newNode,\n        window.HaxStore.instance.activePlaceHolder.parentNode\n      );\n      window.HaxStore.instance.activePlaceHolder = null;\n    }\n    // insert at active insert point if we have one\n    else if (this.activeContainerNode != null) {\n      // allow for inserting things into things but not grid plate\n      if (\n        newNode.tagName !== \"GRID-PLATE\" &&\n        this.activeContainerNode.tagName === \"GRID-PLATE\" &&\n        this.activeContainerNode !== this.activeNode\n      ) {\n        if (this.activeNode.getAttribute(\"slot\") != null) {\n          newNode.setAttribute(\"slot\", this.activeNode.getAttribute(\"slot\"));\n        }\n        this.activeContainerNode.insertBefore(newNode, this.activeNode);\n      } else {\n        this.insertBefore(newNode, this.activeContainerNode.nextElementSibling);\n      }\n    } else {\n      // send this into the root, which should filter it back down into the slot\n      this.appendChild(newNode);\n    }\n    this.shadowRoot.querySelector(\"#textcontextmenu\").highlightOps = false;\n    this.__updateLockFocus = newNode;\n    // wait so that the DOM can have the node to then attach to\n    if (waitForLock) {\n      setTimeout(() => {\n        this.breakUpdateLock();\n      }, 50);\n    }\n    return true;\n  }\n\n  breakUpdateLock() {\n    window.HaxStore.write(\"activeContainerNode\", this.__updateLockFocus, this);\n    window.HaxStore.write(\"activeNode\", this.__updateLockFocus, this);\n    // attempt to focus on the new node, may not always work\n    this.__updateLockFocus.focus();\n    // scroll to it\n    if (typeof this.__updateLockFocus.scrollIntoViewIfNeeded === \"function\") {\n      this.__updateLockFocus.scrollIntoViewIfNeeded(true);\n    } else {\n      this.__updateLockFocus.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\"\n      });\n    }\n  }\n  /**\n   * Return the current hax content area as text that could be\n   * inserted into something.\n   */\n  haxToContent() {\n    this.hideContextMenus();\n    var __active = this.activeNode;\n    // null this to drop hax based classes\n    this.set(\"activeNode\", null);\n    this.set(\"activeContainerNode\", null);\n    window.HaxStore.write(\"activeNode\", null, this);\n    window.HaxStore.write(\"activeContainerNode\", null, this);\n    let children = dom(\n      this.shadowRoot.querySelector(\"#body\")\n    ).getDistributedNodes();\n    if (this.globalPreferences.haxDeveloperMode) {\n      console.warn(children);\n    }\n    var content = \"\";\n    for (var i = 0, len = children.length; i < len; i++) {\n      // some mild front-end sanitization\n      if (this._haxElementTest(children[i])) {\n        children[i].removeAttribute(\"data-editable\");\n        children[i].removeAttribute(\"data-hax-ray\");\n        children[i].contentEditable = false;\n        content += window.HaxStore.nodeToContent(children[i]);\n        if (children[i].tagName.toLowerCase() === \"grid-plate\") {\n          this._applyContentEditable(this.editMode, children[i]);\n        }\n      }\n      // keep comments with a special case since they need wrapped\n      else if (children[i].nodeType === 8) {\n        content += \"<!-- \" + children[i].textContent + \" -->\";\n      }\n      // keep everything NOT an element at this point, this helps\n      // preserve whitespace because we're crazy about accuracy\n      else if (\n        children[i].nodeType !== 1 &&\n        typeof children[i].textContent !== typeof undefined &&\n        children[i].textContent !== \"undefined\"\n      ) {\n        content += children[i].textContent;\n      }\n    }\n    // remove the contenteditable attribute\n    content = content.replace(/\\scontenteditable=\\\"false\\\"/g, \"\");\n    // remove the data-editable attribute\n    content = content.replace(/\\sdata-editable=\\\"true\\\"/g, \"\");\n    content = content.replace(/\\sdata-editable=\\\"false\\\"/g, \"\");\n    content = content.replace(/\\sdata-editable=\\\"\"/g, \"\");\n    // remove other attributes that can linger in slots\n    content = content.replace(/\\sdata-editable/g, \"\");\n    content = content.replace(/\\scontenteditable/g, \"\");\n    content = content.replace(/\\sdraggable/g, \"\");\n    content = content.replace(/\\sdata-draggable/g, \"\");\n    // clean up stray hax-ray leftovers\n    content = content.replace(/\\sdata-hax-ray=\\\".*?\\\"/g, \"\");\n    // remove HAX specific classes / scoping classes\n    if (this.parentNode.tagName) {\n      let parentTag = this.parentNode.tagName.toLowerCase();\n      let string = \"style-scope \" + parentTag + \" x-scope\";\n      let re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // remove without the deeeper scope as well for primitives\n      string = \"style-scope \" + parentTag;\n      re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // remove the last common one unpacked\n      string = \"x-scope \" + parentTag + \"-0\";\n      re = new RegExp(string, \"g\");\n      content = content.replace(re, \"\");\n      // now all tags we have defined as valid\n      let tags = window.HaxStore.instance.validTagList;\n      tags.push(\"hax-preview\");\n      for (var i in tags) {\n        string = \"style-scope \" + tags[i];\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n        string = \"x-scope \" + tags[i] + \"-0 \";\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n        string = \"x-scope \" + tags[i] + \"-0\";\n        re = new RegExp(string, \"g\");\n        content = content.replace(re, \"\");\n      }\n    }\n    // remove empty class structures\n    content = content.replace(/\\sclass=\\\"\\\"/g, \"\");\n    content = content.replace(/\\sclass=\\\"\\s\\\"/g, \"\");\n    // re-apply contenteditable if needed\n    this._applyContentEditable(this.editMode);\n    // set active again\n    window.HaxStore.write(\"activeNode\", __active, this);\n    window.HaxStore.write(\"activeContainerNode\", __active, this);\n    // oh one last thing. escape all script/style tags\n    content = encapScript(content);\n    if (this.globalPreferences.haxDeveloperMode) {\n      console.warn(content);\n    }\n    return content;\n  }\n  /**\n   * Duplicate node into the local DOM below the current item if we can.\n   */\n  haxDuplicateNode(node, parent = this) {\n    // move the context menu before duplicating!!!!\n    this.hideContextMenus();\n    // convert the node to a hax element\n    let haxElement = window.HaxStore.nodeToHaxElement(node, null);\n    // support for deep API call to clean up special elements\n    if (typeof node.preProcessHaxInsertContent !== typeof undefined) {\n      haxElement = node.preProcessHaxInsertContent(haxElement);\n    }\n    // convert it back to a clone, seems odd I'm sure but this ensures that all props are copied\n    // correctly and that we get a brand new object\n    var nodeClone = window.HaxStore.haxElementToNode(\n      haxElement.tag,\n      haxElement.content,\n      haxElement.properties\n    );\n    if (\n      nodeClone.tagName.toLowerCase() === \"webview\" &&\n      window.HaxStore.instance._isSandboxed &&\n      typeof nodeClone.guestinstance !== typeof undefined\n    ) {\n      delete nodeClone.guestinstance;\n    }\n    // shouldn't be possible but might as well check\n    if (node !== null) {\n      parent.insertBefore(nodeClone, node.nextSibling);\n    } else {\n      parent.appendChild(nodeClone);\n    }\n    setTimeout(() => {\n      // test for a grid plate clone\n      if (parent === this) {\n        window.HaxStore.write(\"activeContainerNode\", nodeClone, this);\n      }\n      window.HaxStore.write(\"activeNode\", nodeClone, this);\n    }, 50);\n    return true;\n  }\n  /**\n   * Hide all context menus.\n   */\n  hideContextMenus() {\n    // primary context menus\n    this._hideContextMenu(this.shadowRoot.querySelector(\"#textcontextmenu\"));\n    this._hideContextMenu(this.shadowRoot.querySelector(\"#cecontextmenu\"));\n    // secondary menus and clean up areas\n    this._hideContextMenu(this.shadowRoot.querySelector(\"#platecontextmenu\"));\n    this._hideContextMenu(this.shadowRoot.querySelector(\"#haxinputmixer\"));\n    // force context menu state to closed\n    this.shadowRoot.querySelector(\"#textcontextmenu\").highlightOps = false;\n  }\n  /**\n   * Reposition context menus to match an element.\n   */\n  positionContextMenus(node, container) {\n    if (node) {\n      let tag = node.tagName.toLowerCase();\n      if (window.HaxStore.instance._isSandboxed && tag === \"webview\") {\n        tag = \"iframe\";\n      }\n      let props = window.HaxStore.instance.elementList[tag];\n      // try and work against anything NOT a P tag\n      if (\n        typeof props !== typeof undefined &&\n        !window.HaxStore.instance.isTextElement(node)\n      ) {\n        this.__activeContextType = this.shadowRoot.querySelector(\n          \"#cecontextmenu\"\n        );\n        props.element = node;\n        this.__activeContextType.setHaxProperties(props);\n      } else {\n        this.__activeContextType = this.shadowRoot.querySelector(\n          \"#textcontextmenu\"\n        );\n      }\n      this._positionContextMenu(this.__activeContextType, container, -39, -39);\n      this._positionContextMenu(\n        this.shadowRoot.querySelector(\"#platecontextmenu\"),\n        container,\n        -31,\n        0\n      );\n      // special case for node not matching container\n      if (container && !this._HTMLPrimativeTest(node) && node !== container) {\n        container.contentEditable = false;\n      } else if (container && this._HTMLPrimativeTest(container)) {\n        container.contentEditable = true;\n      }\n    }\n  }\n  /**\n   * Move grid plate around\n   */\n  haxMoveGridPlate(direction, node, container) {\n    // menu is actually in the element for render purposes\n    // support moving things multiple directions\n    switch (direction) {\n      case \"first\":\n        // ensure we can go up, first being a mode of up\n        if (container.previousElementSibling !== null) {\n          this.insertBefore(container, this.firstChild);\n        }\n        break;\n      case \"up\":\n        // ensure we can go up\n        if (container.previousElementSibling !== null) {\n          this.insertBefore(container, container.previousElementSibling);\n        }\n        break;\n      case \"down\":\n        if (container.nextElementSibling !== null) {\n          this.insertBefore(container.nextElementSibling, container);\n        }\n        break;\n      case \"last\":\n        if (container.nextElementSibling !== null) {\n          this.appendChild(container);\n        }\n        break;\n      // @todo support other directions for when inside of an element\n    }\n    setTimeout(() => {\n      this.positionContextMenus(node, container);\n      if (typeof container.scrollIntoViewIfNeeded === \"function\") {\n        container.scrollIntoViewIfNeeded(true);\n      } else {\n        container.scrollIntoView({ behavior: \"smooth\", inline: \"center\" });\n      }\n    }, 50);\n    return true;\n  }\n  /**\n   * Convert an element from one tag to another.\n   */\n  haxReplaceNode(node, replacement, parent = this) {\n    // ensure we're not in the document tree for the replaced node\n    this.hideContextMenus();\n    // Switch, try loop in case we screwed up elsewhere\n    try {\n      // test for slots to match\n      if (node.getAttribute(\"slot\") != null) {\n        replacement.setAttribute(\"slot\", node.getAttribute(\"slot\"));\n      }\n      if (node == null) {\n        node = this.__oldActiveNode;\n        parent = this.__oldActiveNode.parentNode;\n      }\n      parent.replaceChild(replacement, node);\n    } catch (e) {\n      console.warn(e);\n    }\n    return replacement;\n  }\n  /**\n   * Convert an element from one tag to another.\n   */\n  haxChangeTagName(node, tagName, newNode) {\n    // ensure we're not in the document tree for the replaced node\n    this.hideContextMenus();\n    // Create a replacement tag of the desired type\n    var replacement = document.createElement(tagName);\n    // Grab all of the original's attributes, and pass them to the replacement\n    for (var i = 0, l = node.attributes.length; i < l; ++i) {\n      var nodeName = node.attributes.item(i).nodeName;\n      var value = node.attributes.item(i).value;\n      replacement.setAttribute(nodeName, value);\n    }\n    // Persist contents\n    // account for empty list and ordered list items\n    replacement.innerHTML = node.innerHTML.trim();\n    if (tagName == \"ul\" || tagName == \"ol\") {\n      if (replacement.innerHTML == \"\") {\n        replacement.innerHTML = \"<li></li>\";\n      } else if (\n        !(\n          node.tagName.toLowerCase() == \"ul\" ||\n          node.tagName.toLowerCase() == \"ol\"\n        )\n      ) {\n        replacement.innerHTML =\n          \"<li>\" +\n          node.innerHTML\n            .trim()\n            .replace(/<br\\/>/g, \"</li>\\n<li>\")\n            .replace(/<br>/g, \"</li>\\n<li>\") +\n          \"</li>\";\n      }\n    } else if (\n      node.tagName.toLowerCase() == \"ul\" ||\n      node.tagName.toLowerCase() == \"ol\"\n    ) {\n      // if we're coming from ul or ol strip out the li tags\n      replacement.innerHTML = replacement.innerHTML\n        .replace(/<ul>/g, \"\")\n        .replace(/<\\/ul>/g, \"\")\n        .replace(/<li><\\/li>/g, \"\")\n        .replace(/<li>/g, \"\")\n        .replace(/<\\/li>/g, \"<br/>\");\n    }\n    // Switch!\n    try {\n      this.replaceChild(replacement, node);\n      // focus on the thing switched to\n      setTimeout(() => {\n        let children = dom(replacement).getEffectiveChildNodes();\n        // see if there's a child element and focus that instead if there is\n        if (children[0] && children.tagName) {\n          children[0].focus();\n        } else {\n          replacement.focus();\n        }\n      }, 50);\n    } catch (e) {\n      console.warn(e);\n      console.warn(replacement);\n      console.warn(node);\n    }\n    return replacement;\n  }\n  /**\n   * Delete the node passed in\n   */\n  haxDeleteNode(node, parent = this) {\n    // move the context menu before deleting!!!!\n    this.hideContextMenus();\n    // shift active to a viable replacement\n    if (\n      this.activeContainerNode != null &&\n      this.activeContainerNode.previousElementSibling !== null\n    ) {\n      this.activeContainerNode.previousElementSibling.focus();\n      // cursor at the END of the element assuming not empty\n      if (\n        this.activeContainerNode != null &&\n        window.HaxStore.instance.isTextElement(this.activeContainerNode) &&\n        this.activeContainerNode.textContent !== \"\"\n      ) {\n        try {\n          var range = document.createRange();\n          var sel = window.HaxStore.getSelection();\n          range.setStart(this.activeContainerNode, 1);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n          this.activeContainerNode.focus();\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    } else if (\n      this.activeContainerNode != null &&\n      this.activeContainerNode.nextElementSibling !== null\n    ) {\n      this.activeContainerNode.nextElementSibling.focus();\n    } else {\n      this.set(\"activeNode\", null);\n      this.set(\"activeContainerNode\", null);\n      window.HaxStore.write(\"activeNode\", null, this);\n      window.HaxStore.write(\"activeContainerNode\", null, this);\n    }\n    // @todo figure out why this is complaining\n    try {\n      return parent.removeChild(node);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  /**\n   * Bulk import HTML with option to clear what is currently\n   * in the slot of this tag. This also validates tags\n   * that are being inserted for security based on the\n   * internal whitelist.\n   */\n  importContent(html, clear = true) {\n    // kill the slot of the active body, all of it\n    if (clear) {\n      wipeSlot(this, \"*\");\n    }\n    // pause quickly to ensure wipe goes through successfully\n    setTimeout(() => {\n      html = encapScript(html);\n      let fragment = document.createElement(\"div\");\n      fragment.insertAdjacentHTML(\"beforeend\", html);\n      while (fragment.firstChild !== null) {\n        if (typeof fragment.firstChild.tagName !== typeof undefined) {\n          // ensure import doesn't import non-sandbox safe things!\n          if (\n            window.HaxStore.instance._isSandboxed &&\n            fragment.firstChild.tagName.toLowerCase() === \"iframe\"\n          ) {\n            // Create a replacement tag of the desired type\n            var replacement = document.createElement(\"webview\");\n            // Grab all of the original's attributes, and pass them to the replacement\n            for (\n              var j = 0, l = fragment.firstChild.attributes.length;\n              j < l;\n              ++j\n            ) {\n              var nodeName = fragment.firstChild.attributes.item(j).nodeName;\n              var value = fragment.firstChild.attributes.item(j).value;\n              if (nodeName === \"height\" || nodeName === \"width\") {\n                replacement.style[nodeName] == value;\n              }\n              replacement.setAttribute(nodeName, value);\n            }\n            this.appendChild(replacement);\n          } else {\n            this.appendChild(fragment.firstChild);\n          }\n        } else {\n          // @todo might want to support appending or keeping track of comments / non tags\n          // but this is not a must have\n          fragment.removeChild(fragment.firstChild);\n        }\n      }\n    }, 50);\n  }\n  /**\n   * Respond to hax operations.\n   */\n  _haxContextOperation(e) {\n    let detail = e.detail;\n    var haxElement;\n    // support a simple insert event to bubble up or everything else\n    switch (detail.eventName) {\n      // text based operations for primatives\n      case \"p\":\n      case \"ol\":\n      case \"ul\":\n      case \"h2\":\n      case \"h3\":\n      case \"h4\":\n      case \"h5\":\n      case \"h6\":\n      case \"blockquote\":\n      case \"code\":\n        // trigger the default selected value in context menu to match\n        this.shadowRoot.querySelector(\"#textcontextmenu\").selectedValue =\n          detail.eventName;\n        window.HaxStore.write(\n          \"activeContainerNode\",\n          this.haxChangeTagName(this.activeContainerNode, detail.eventName),\n          this\n        );\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      case \"text-align-left\":\n        this.activeNode.style.textAlign = null;\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        break;\n      // grid plate based operations\n      // allow for transforming this haxElement into another one\n      case \"grid-plate-convert\":\n        this.replaceElementWorkflow();\n        break;\n      // duplicate the active item or container\n      case \"grid-plate-duplicate\":\n        if (this.activeNode === this.activeContainerNode) {\n          this.haxDuplicateNode(this.activeNode);\n        } else {\n          this.haxDuplicateNode(this.activeNode, this.activeContainerNode);\n        }\n        break;\n      case \"grid-plate-delete\":\n        if (this.activeNode != null) {\n          let options = [\n            {\n              icon: \"thumb-up\",\n              color: \"green\",\n              title: \"Yes\"\n            },\n            {\n              icon: \"thumb-down\",\n              color: \"red\",\n              title: \"No\"\n            }\n          ];\n          let tag = this.activeNode.tagName.toLowerCase();\n          let humanName = tag.replace(\"-\", \" \");\n          if (\n            typeof window.HaxStore.instance.elementList[tag] !==\n              typeof undefined &&\n            window.HaxStore.instance.elementList[tag].gizmo !== false\n          ) {\n            humanName = window.HaxStore.instance.elementList[tag].gizmo.title;\n          }\n          window.HaxStore.instance.haxAppPicker.presentOptions(\n            options,\n            \"\",\n            `Remove this \\`${humanName}\\`?`,\n            \"delete\"\n          );\n        }\n        break;\n      case \"grid-plate-first\":\n        this.haxMoveGridPlate(\n          \"first\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"grid-plate-up\":\n        this.haxMoveGridPlate(\"up\", this.activeNode, this.activeContainerNode);\n        break;\n      case \"hax-manager-open\":\n        window.HaxStore.write(\"activeHaxElement\", {}, this);\n        window.HaxStore.instance.haxManager.resetManager(\n          parseInt(detail.value)\n        );\n        window.HaxStore.instance.haxManager.toggleDialog();\n        break;\n      case \"grid-plate-down\":\n        this.haxMoveGridPlate(\n          \"down\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"grid-plate-last\":\n        this.haxMoveGridPlate(\n          \"last\",\n          this.activeNode,\n          this.activeContainerNode\n        );\n        break;\n      case \"close-menu\":\n        this.set(\"activeNode\", null);\n        this.set(\"activeContainerNode\", null);\n        window.HaxStore.write(\"activeNode\", null, this);\n        window.HaxStore.write(\"activeContainerNode\", null, this);\n        break;\n      case \"hax-edit-property\":\n        let haxInputMixer = this.shadowRoot.querySelector(\"#haxinputmixer\");\n        haxInputMixer.label = detail.target.label;\n        haxInputMixer.options = detail.target.options;\n        haxInputMixer.icon = detail.target.icon;\n        haxInputMixer.description = detail.target.description;\n        haxInputMixer.required = detail.target.required;\n        haxInputMixer.validation = detail.target.validation;\n        haxInputMixer.validationType = detail.target.validationType;\n        haxInputMixer.inputMethod = detail.target.inputMethod;\n        haxInputMixer.value = \"\";\n        // see if response should bind to the slot or property\n        if (\n          typeof detail.target.propertyToBind !== typeof undefined &&\n          detail.target.propertyToBind != null &&\n          detail.target.propertyToBind != false\n        ) {\n          haxInputMixer.propertyToBind = detail.target.propertyToBind;\n          if (\n            typeof this.activeNode[detail.target.propertyToBind] !==\n            typeof undefined\n          ) {\n            haxInputMixer.value = this.activeNode[detail.target.propertyToBind];\n          }\n          // try to get an attribute bind\n          else {\n            haxInputMixer.value = this.activeNode.getAttribute(\n              detail.target.propertyToBind\n            );\n          }\n          // @todo need to be able to support slot binding\n        }\n        // make input mixer show up\n        this._positionContextMenu(\n          haxInputMixer,\n          this.activeContainerNode,\n          -1,\n          -38\n        );\n        let style =\n          this.shadowRoot.querySelector(\"#cecontextmenu\").currentStyle ||\n          window.getComputedStyle(\n            this.shadowRoot.querySelector(\"#cecontextmenu\")\n          );\n        // force input mixes to match width of the ce context menu currently\n        haxInputMixer.style.width = style.width.replace(\"px\", \"\") - 40 + \"px\";\n        break;\n      // directional / proportion operations\n      case \"hax-align-left\":\n        this.activeNode.style.float = null;\n        this.activeNode.style.margin = null;\n        this.activeNode.style.display = null;\n        setTimeout(() => {\n          this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        }, 200);\n        break;\n      case \"hax-align-center\":\n        this.activeNode.style.float = null;\n        this.activeNode.style.margin = \"0 auto\";\n        this.activeNode.style.display = \"block\";\n        setTimeout(() => {\n          this.positionContextMenus(this.activeNode, this.activeContainerNode);\n        }, 200);\n        break;\n      case \"hax-size-change\":\n        if (this.activeNode) {\n          this.activeNode.style.width = detail.value + \"%\";\n          setTimeout(() => {\n            this.positionContextMenus(\n              this.activeNode,\n              this.activeContainerNode\n            );\n          }, 200);\n        }\n        break;\n      // settings button selected from hax-ce-context bar\n      // which means we should skip to the settings page after\n      // we set the thing selected as the active element to work\n      // on in the manager\n      case \"hax-manager-configure\":\n        // make sure input mixer is closed\n        this._hideContextMenu(this.shadowRoot.querySelector(\"#haxinputmixer\"));\n        // reset the manager\n        window.HaxStore.instance.haxManager.resetManager();\n        // write activeElement updated so it'll go into the preview\n        haxElement = window.HaxStore.nodeToHaxElement(this.activeNode);\n        window.HaxStore.write(\"activeHaxElement\", haxElement, this);\n        // clean up the manager before opening\n        window.HaxStore.instance.haxManager.editExistingNode = true;\n        window.HaxStore.instance.haxManager.selectStep(\"configure\");\n        window.HaxStore.instance.haxManager.toggleDialog();\n        // accessibility enhancement to keyboard focus configure button\n        setTimeout(() => {\n          window.HaxStore.instance.haxManager.shadowRoot\n            .querySelector(\"#preview\")\n            .shadowRoot.querySelector(\"#configurebutton\")\n            .focus();\n        }, 100);\n        break;\n      // container / layout settings button has been activated\n      case \"hax-manager-configure-container\":\n        window.HaxStore.write(\n          \"activeNode\",\n          window.HaxStore.instance.activeContainerNode,\n          this\n        );\n        // make sure input mixer is closed\n        this._hideContextMenu(this.shadowRoot.querySelector(\"#haxinputmixer\"));\n        // reset the manager\n        window.HaxStore.instance.haxManager.resetManager();\n        // write activeElement updated so it'll go into the preview\n        haxElement = window.HaxStore.nodeToHaxElement(\n          window.HaxStore.instance.activeNode\n        );\n        window.HaxStore.write(\"activeHaxElement\", haxElement, this);\n        // clean up the manager before opening\n        window.HaxStore.instance.haxManager.editExistingNode = true;\n        window.HaxStore.instance.haxManager.selectStep(\"configure\");\n        window.HaxStore.instance.haxManager.toggleDialog();\n        // accessibility enhancement to keyboard focus configure button\n        setTimeout(() => {\n          window.HaxStore.instance.haxManager.shadowRoot\n            .querySelector(\"#preview\")\n            .shadowRoot.querySelector(\"#configurebutton\")\n            .focus();\n        }, 100);\n        break;\n    }\n  }\n  /**\n   * Respond to an input mixer call.\n   */\n  _haxInputMixerOperation(e) {\n    // this is a big deal how simple this part is in the end\n    let mixer = e.detail.inputMixer;\n    // if we have a property to bind, set that value from the\n    // widget that was dictated by the element itself\n    if (mixer.propertyToBind != null) {\n      this.activeNode[mixer.propertyToBind] = mixer.value;\n    }\n    // if we're told instead to do a slot bind, make a span tag\n    // with height same as parent and then mix in the innerHTML\n    else if (mixer.slotToBind != null) {\n      item = document.createElement(\"span\");\n      item.style.height = \"inherit\";\n      item.innerHTML = mixer.value;\n      //item.attribute.slot = mixer.slotToBind;\n      item.slot = mixer.slotToBind;\n      this.activeNode.appendChild(item);\n    }\n    // hide mixer\n    this._hideContextMenu(this.shadowRoot.querySelector(\"#haxinputmixer\"));\n  }\n  /**\n   * Item has gained focus, change active element to match\n   */\n  _focusIn(e) {\n    if (this.__focusLogic(e.target)) {\n      e.stopPropagation();\n    }\n  }\n  /**\n   * Focus a target and update the data model to reflect this.\n   * This helps ensure that keyboard and non click based focusing\n   * registers the same as click events\n   */\n  __focusLogic(target) {\n    let stopProp = false;\n    // only worry about these when we are in edit mode\n    if (this.editMode && !this.__tabTrap) {\n      let containerNode = target;\n      let activeNode = null;\n      // ensure this is valid\n      if (\n        this._haxElementTest(containerNode) &&\n        containerNode.parentNode != null\n      ) {\n        // keep looking til we are juuuust below the container\n        // @todo this is where we force a selection on highest level\n        // of the document\n        while (containerNode.parentNode.tagName != \"HAX-BODY\") {\n          // make sure active is set after closest legit element\n          if (\n            activeNode === null &&\n            containerNode.tagName !== \"LI\" &&\n            containerNode.tagName !== \"B\" &&\n            containerNode.tagName !== \"I\" &&\n            containerNode.tagName !== \"STRONG\" &&\n            containerNode.tagName !== \"EM\"\n          ) {\n            activeNode = containerNode;\n          }\n          containerNode = containerNode.parentNode;\n        }\n        // case with simple element\n        if (activeNode === null) {\n          activeNode = containerNode;\n        }\n        // we only allow disconnected node from container when\n        // the container is a grid plate\n        else if (!window.HaxStore.instance.isGridPlateElement(containerNode)) {\n          activeNode = containerNode;\n        }\n        // won't deal with lists inside of p tags\n        else if (\n          [\"UL\", \"OL\", \"LI\", \"P\", \"GRID-PLATE\"].includes(\n            containerNode.tagName\n          ) &&\n          [\"UL\", \"OL\", \"LI\"].includes(activeNode.tagName)\n        ) {\n          activeNode = containerNode;\n        }\n        // ensure this is a tag we care about / have support for and\n        // that it is a new value\n        if (\n          this.activeContainerNode !== containerNode &&\n          !containerNode.classList.contains(\"ignore-activation\")\n        ) {\n          this.hideContextMenus();\n          this.activeContainerNode = containerNode;\n          window.HaxStore.write(\"activeContainerNode\", containerNode, this);\n          stopProp = true;\n        } else if (containerNode.classList.contains(\"ignore-activation\")) {\n          stopProp = true;\n        }\n        // test for active node changing\n        if (\n          this.activeNode !== activeNode &&\n          !activeNode.classList.contains(\"ignore-activation\")\n        ) {\n          this.activeNode = activeNode;\n          window.HaxStore.write(\"activeNode\", activeNode, this);\n          this.positionContextMenus(activeNode, containerNode);\n          stopProp = true;\n        }\n      }\n    } else {\n      this.__tabTrap = false;\n    }\n\n    return stopProp;\n  }\n  /**\n   * Notice the change between states for editing.\n   */\n  _editModeChanged(newValue, oldValue) {\n    // fire above that we have changed states so things can react if needed\n    if (typeof oldValue !== typeof undefined) {\n      this._applyContentEditable(newValue);\n      this.setAttribute(\"tabindex\", \"-1\");\n      if (\n        newValue !== false &&\n        typeof this.activeNode !== typeof undefined &&\n        this.activeNode !== null\n      ) {\n        this.positionContextMenus(this.activeNode, this.activeContainerNode);\n      }\n    }\n    // hide menus when state changes\n    if (newValue === false) {\n      this.removeAttribute(\"contenteditable\");\n      this.hideContextMenus();\n    }\n  }\n  /**\n   * Test if this is a HAX element or not\n   */\n  _haxResolvePreviousElement(node) {\n    node = node.previousElementSibling;\n    while (\n      node != null &&\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.substring(0, 4) === \"HAX-\"\n    ) {\n      node = node.previousElementSibling;\n    }\n    return node;\n  }\n  /**\n   * Test if this is a HAX element or not\n   */\n  _haxElementTest(node) {\n    if (\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.substring(0, 4) !== \"HAX-\"\n    ) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Test if this is an HTML primative\n   */\n  _HTMLPrimativeTest(node) {\n    if (\n      node != null &&\n      typeof node.tagName !== typeof undefined &&\n      node.tagName.indexOf(\"-\") == -1\n    ) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Walk everything we find and either enable or disable editable state.\n   */\n  _applyContentEditable(\n    status,\n    target = this.shadowRoot.querySelector(\"#body\")\n  ) {\n    let children = dom(target).getDistributedNodes();\n    // fallback for content nodes if not polymer managed nodes above\n    if (children.length === 0) {\n      children = dom(target).getEffectiveChildNodes();\n    }\n    for (var i = 0, len = children.length; i < len; i++) {\n      // we have to tell the browser that primatives are editable\n      if (this._HTMLPrimativeTest(children[i])) {\n        if (status) {\n          children[i].setAttribute(\"contenteditable\", status);\n          children[i].setAttribute(\"data-editable\", status);\n          if (children[i].querySelectorAll(\"a\").length > 0) {\n            let links = children[i].querySelectorAll(\"a\");\n            for (var j = 0, len2 = links.length; j < len2; j++) {\n              links[j].setAttribute(\"contenteditable\", status);\n              links[j].setAttribute(\"data-editable\", status);\n              links[j].addEventListener(\"click\", e => {\n                e.preventDefault();\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n              });\n            }\n          }\n        } else {\n          children[i].removeAttribute(\"data-editable\", status);\n          children[i].removeAttribute(\"contenteditable\", status);\n          if (children[i].querySelectorAll(\"a\").length > 0) {\n            let links = children[i].querySelectorAll(\"a\");\n            for (var j = 0, len2 = links.length; j < len2; j++) {\n              links[j].removeAttribute(\"data-editable\", status);\n              links[j].removeAttribute(\"contenteditable\", status);\n              links[j].removeEventListener(\"click\", e => {\n                e.preventDefault();\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n              });\n            }\n          }\n        }\n      }\n      // this does the real targetting\n      if (this._haxElementTest(children[i])) {\n        if (status) {\n          children[i].setAttribute(\"data-editable\", status);\n          let haxRay = children[i].tagName.replace(\"-\", \" \").toLowerCase();\n          let l = window.HaxStore.instance.gizmoList.findIndex(\n            j => j.tag === children[i].tagName.toLowerCase()\n          );\n          if (l !== -1) {\n            haxRay = window.HaxStore.instance.gizmoList[l].title;\n          }\n          children[i].setAttribute(\"data-hax-ray\", haxRay);\n        } else {\n          children[i].removeAttribute(\"data-editable\");\n          children[i].removeAttribute(\"data-hax-ray\");\n        }\n      }\n    }\n  }\n  /**\n   * Container has changed\n   */\n  _activeContainerNodeChanged(newValue, oldValue) {\n    if (\n      this.editMode &&\n      typeof newValue !== typeof undefined &&\n      newValue != null &&\n      newValue.tagName != null\n    ) {\n      if (\n        window.HaxStore.instance.isTextElement(newValue) ||\n        window.HaxStore.instance.isGridPlateElement(newValue)\n      ) {\n        newValue.setAttribute(\"contenteditable\", true);\n        this.setAttribute(\"contenteditable\", true);\n      } else {\n        newValue.removeAttribute(\"contenteditable\");\n        this.removeAttribute(\"contenteditable\");\n      }\n      let tag = newValue.tagName.toLowerCase();\n      // special case for the grid plate since it brings in nodes\n      // nested in it and needs to be put into an editMode\n      if (tag === \"grid-plate\") {\n        newValue.editMode = this.editMode;\n        this._applyContentEditable(this.editMode, newValue);\n      }\n    }\n  }\n  /**\n   * React to a new node being set to active.\n   */\n  _activeNodeChanged(newValue, oldValue) {\n    // clean up the older one\n    if (typeof oldValue !== typeof undefined && oldValue != null) {\n      oldValue.classList.remove(\"hax-active\");\n    }\n    if (\n      this.editMode &&\n      typeof newValue !== typeof undefined &&\n      newValue !== null\n    ) {\n      let tag = newValue.tagName.toLowerCase();\n      // remove the menu, establish the new active, then reapply\n      // this is nessecary because the context menu gets appended into\n      // the document\n      // only hide if we change containers\n      newValue.classList.add(\"hax-active\");\n      if (\n        window.HaxStore.instance.isTextElement(newValue) ||\n        window.HaxStore.instance.isGridPlateElement(newValue)\n      ) {\n        newValue.setAttribute(\"contenteditable\", true);\n        this.setAttribute(\"contenteditable\", true);\n      } else {\n        newValue.removeAttribute(\"contenteditable\");\n        this.removeAttribute(\"contenteditable\");\n      }\n      this.shadowRoot.querySelector(\"#textcontextmenu\").selectedValue = tag;\n      // position the operations / in context element\n      setTimeout(() => {\n        this.positionContextMenus(\n          newValue,\n          window.HaxStore.instance.activeContainerNode\n        );\n      }, 100);\n      if (newValue.style.textAlign == \"left\") {\n        this.shadowRoot.querySelector(\"#textcontextmenu\").justifyIcon =\n          \"editor:format-align-left\";\n        this.shadowRoot.querySelector(\"#textcontextmenu\").justifyValue =\n          \"text-align-left\";\n      } else if (newValue.style.float == \"left\") {\n        this.shadowRoot.querySelector(\"#cecontextmenu\").justifyIcon =\n          \"editor:format-align-left\";\n        this.shadowRoot.querySelector(\"#cecontextmenu\").justifyValue =\n          \"hax-align-left\";\n      } else if (newValue.style.margin == \"0 auto\") {\n        this.shadowRoot.querySelector(\"#cecontextmenu\").justifyIcon =\n          \"editor:format-align-center\";\n        this.shadowRoot.querySelector(\"#cecontextmenu\").justifyValue =\n          \"hax-align-center\";\n      }\n    }\n    // just hide menus if we don't have an active item\n    else if (newValue === null) {\n      this.hideContextMenus();\n      this.__oldActiveNode = oldValue;\n      this.shadowRoot.querySelector(\"#textcontextmenu\").justifyIcon =\n        \"editor:format-align-left\";\n      this.shadowRoot.querySelector(\"#textcontextmenu\").justifyValue =\n        \"text-align-left\";\n    }\n  }\n  /**\n   * walk parents and find the correct position from top of document\n   * https://stackoverflow.com/questions/11805955/how-to-get-the-distance-from-the-top-for-an-element\n   */\n  _getPosition(element) {\n    let xPosition =\n      element.offsetLeft - element.scrollLeft + element.clientLeft;\n    let yPosition = element.offsetTop - element.scrollTop + element.clientTop;\n    return { x: xPosition, y: yPosition };\n  }\n  /**\n   * Handle display and position of the context menu\n   */\n  _positionContextMenu(menu, target, xoffset, yoffset) {\n    // make it account for the offset if it's floated over to one side\n    // or inside of something that's over that way\n    if (target != null) {\n      let pos = this._getPosition(target);\n      if (xoffset != null) {\n        menu.style[\"left\"] = pos.x + xoffset + \"px\";\n      } else {\n        menu.style[\"left\"] = pos.x + \"px\";\n      }\n      if (yoffset != null) {\n        menu.style[\"top\"] = pos.y + yoffset + \"px\";\n      } else {\n        menu.style[\"top\"] = pos.y + \"px\";\n      }\n    }\n    menu.classList.add(\"hax-context-visible\");\n    // text we want to operate this way\n    if (this.__activeHover) {\n      menu.classList.add(\"hax-active-hover\");\n      menu.style.marginLeft = \"\";\n      this.__typeLock = false;\n    }\n    setTimeout(() => {\n      async.microTask.run(this._keepContextVisible());\n    }, 100);\n  }\n  /**\n   * Simple hide / reset of whatever menu it's handed.\n   */\n  _hideContextMenu(menu) {\n    menu.classList.remove(\n      \"hax-context-visible\",\n      \"hax-context-pin-top\",\n      \"hax-context-pin-bottom\"\n    );\n    menu.style.left = \"-100px\";\n  }\n  /**\n   * Find the next thing to tab forward to.\n   */\n  _tabKeyPressed() {\n    let focus = false;\n    let node = this.activeContainerNode;\n    const activeNodeTagName = this.activeContainerNode.tagName;\n    // try selection / tab block since range can cause issues\n    try {\n      let range = window.HaxStore.getRange().cloneRange();\n      var tagTest = range.commonAncestorContainer.tagName;\n      if (typeof tagTest === typeof undefined) {\n        tagTest = range.commonAncestorContainer.parentNode.tagName;\n      }\n      if (\n        [\"UL\", \"OL\", \"LI\"].includes(activeNodeTagName) ||\n        [\"UL\", \"OL\", \"LI\"].includes(tagTest)\n      ) {\n        if (this.polyfillSafe) {\n          document.execCommand(\"indent\");\n          this.__tabTrap = true;\n        }\n      } else {\n        while (!focus) {\n          // do nothing\n          if (node.nextSibling == null) {\n            focus = true;\n          } else if (node.nextSibling.focus === \"function\") {\n            node.nextSibling.focus();\n            focus = true;\n          } else {\n            node = node.nextSibling;\n          }\n        }\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  /**\n   * Move back through things when tab back pressed\n   */\n  _tabBackKeyPressed() {\n    let node = this.activeContainerNode;\n    const activeNodeTagName = this.activeContainerNode.tagName;\n    // try selection / tab block since range can cause issues\n    try {\n      let range = window.HaxStore.getRange().cloneRange();\n      var tagTest = range.commonAncestorContainer.tagName;\n      if (typeof tagTest === typeof undefined) {\n        tagTest = range.commonAncestorContainer.parentNode.tagName;\n      }\n      if (\n        [\"UL\", \"OL\", \"LI\"].includes(activeNodeTagName) ||\n        [\"UL\", \"OL\", \"LI\"].includes(tagTest)\n      ) {\n        if (this.polyfillSafe) {\n          document.execCommand(\"outdent\");\n          this.__tabTrap = true;\n        }\n      } else {\n        if (node != null) {\n          // step back ignoring hax- prefixed elements\n          while (node != null && !this._haxElementTest(node)) {\n            node = node.previousSibling;\n          }\n        }\n        if (node != null) {\n          setTimeout(() => {\n            node.focus();\n          }, 50);\n        }\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n}\nwindow.customElements.define(HaxBody.tag, HaxBody);\nexport { HaxBody };\n"],"names":["HaxTextContext","addEventListener","_this","_haxContextOperation","bind","selectedValue","selection","isSafari","_isSafari","polyfillSafe","window","HaxStore","instance","computePolyfillSafe","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","LitElement","css","html","this","selectedValueChanged","_showIndent","changedProperties","forEach","oldValue","propName","_this2","_computeShowIndent","e","getSelection","eventName","setTimeout","_this3","shadowRoot","querySelector","hideMenu","_tmpSelection","editMode","localRange","_tmpRange","startContainer","parentNode","tagName","write","err","activePlaceHolder","values","text","toString","haxElements","guessGizmo","length","haxAppPicker","presentOptions","document","execCommand","preventDefault","stopPropagation","href","_typeof","focusNode","url","prompt","setAttribute","removeEventListener","stopImmediatePropagation","ua","navigator","userAgent","toLowerCase","indexOf","type","Boolean","String","customElements","define","tag","HaxCeContext","PolymerElement","props","set","newValue","value","settings","firstChild","removeChild","item","quick","configure","advanced","element","__hasSettingsForm","__hasParentSettingsForm","activeContainerNode","activeNode","__parentName","replace","i","setting","createElement","label","title","options","icon","inputMethod","required","validation","validationType","description","property","propertyToBind","attribute","slotToBind","slot","appendChild","ceSize","Number","observer","haxProperties","Object","HaxPlateContext","delayRender","template","attachShadow","mode","render","HTMLElement","innerHTML","ShadyCSS","prepareTemplate","content","cloneNode","HaxInputMixer","_resetInputMethods","afterNextRender","method","validInputMethods","includes","val","attributes","focus","methods","count","__selectedValue","mixer","inputMixer","reflectToAttribute","styleElement","register","HaxBody","_observer","FlattenedNodesObserver","info","flush","addedNodes","map","node","_haxElementTest","_HTMLPrimativeTest","contentEditable","haxRay","gizmoList","findIndex","j","removedNodes","classList","contains","_haxInputMixerOperation","replacePlaceholder","console","warn","_onKeyDown","_onKeyPress","hoverEvent","tmp","range","getRange","cloneRange","body","_haxStorePropertyUpdated","_keepContextVisible","_focusIn","__tabTrap","disconnect","el","elementInViewport","remove","__OffBottom","add","getAttribute","rng","key","isTextElement","keyboardEvent","shiftKey","_tabBackKeyPressed","_tabKeyPressed","commonAncestorContainer","__focusLogic","removeAttribute","__dropActiveHover","target","__activeHover","local","__addActiveHover","__typeLock","top","offsetTop","haxPanel","offsetHeight","left","offsetLeft","width","offsetWidth","height","offsetParent","pageYOffset","innerHeight","pageXOffset","innerWidth","p","haxReplaceNode","_this4","replaceElementWorkflow","nodeToHaxElement","skipPropMatch","properties","elementList","gizmo","handles","prop","humanName","toast","haxRayMode","status","wipeSlot","waitForLock","frag","newNode","attributeName","camelToDash","hasOwnProperty","constructor","Array","readOnly","style","margin","display","insertBefore","nextElementSibling","highlightOps","__updateLockFocus","_this5","breakUpdateLock","scrollIntoViewIfNeeded","scrollIntoView","behavior","inline","hideContextMenus","__active","children","dom","getDistributedNodes","globalPreferences","haxDeveloperMode","len","nodeToContent","_applyContentEditable","nodeType","textContent","parentTag","string","re","RegExp","tags","validTagList","push","encapScript","parent","haxElement","preProcessHaxInsertContent","nodeClone","haxElementToNode","_isSandboxed","guestinstance","nextSibling","_this6","_hideContextMenu","container","__activeContextType","setHaxProperties","_positionContextMenu","direction","previousElementSibling","_this7","positionContextMenus","replacement","__oldActiveNode","replaceChild","l","nodeName","trim","getEffectiveChildNodes","createRange","sel","setStart","collapse","removeAllRanges","addRange","fragment","insertAdjacentHTML","_this8","haxChangeTagName","textAlign","haxDuplicateNode","color","haxMoveGridPlate","haxManager","resetManager","parseInt","toggleDialog","haxInputMixer","currentStyle","getComputedStyle","_this9","editExistingNode","selectStep","stopProp","containerNode","isGridPlateElement","substring","querySelectorAll","links","len2","_this10","justifyIcon","justifyValue","x","scrollLeft","clientLeft","y","scrollTop","clientTop","menu","xoffset","yoffset","pos","_getPosition","marginLeft","async","run","_this11","activeNodeTagName","tagTest","previousSibling","notify"],"mappings":"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"}