{"version":3,"file":"chartist-render.umd.js","sources":["chartist-render.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport { pathFromUrl } from \"@polymer/polymer/lib/utils/resolve-url.js\";\n\n/**\n`chartist-render`\nA LRN element\n\n* @demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n*/\nlet ChartistRender = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n    <div id=\"chart\" chart$=\"[[__chartId]]\" class$=\"ct-chart [[scale]]\"></div>\n  `,\n\n  is: \"chartist-render\",\n\n  listeners: {\n    tap: \"makeChart\"\n  },\n\n  properties: {\n    /**\n     * The unique identifier of the chart.\n     */\n    id: {\n      type: String,\n      value: \"chart\"\n    },\n    /**\n     * The type of chart:bar, line, or pie\n     */\n    type: {\n      type: String,\n      value: \"bar\"\n    },\n    /**\n     * The scale of the chart. (See https://gionkunz.github.io/chartist-js/api-documentation.html)\n     */\n    scale: {\n      type: String,\n      observer: \"makeChart\"\n    },\n    /**\n     * The chart title used for accessibility.\n     */\n    chartTitle: {\n      type: String,\n      value: null,\n      observer: \"makeChart\"\n    },\n    /**\n     * The chart description used for accessibility.\n     */\n    chartDesc: {\n      type: String,\n      value: \"\",\n      observer: \"makeChart\"\n    },\n    /**\n     * The chart data.\n     */\n    data: {\n      type: Object,\n      value: null,\n      observer: \"makeChart\"\n    },\n    /**\n     * The options available at  https://gionkunz.github.io/chartist-js/api-documentation.html.\n     */\n    options: {\n      type: Object,\n      value: null,\n      observer: \"makeChart\"\n    },\n    /**\n     * The responsive options. (See https://gionkunz.github.io/chartist-js/api-documentation.html.)\n     */\n    responsiveOptions: {\n      type: Array,\n      value: [],\n      observer: \"makeChart\"\n    },\n    /**\n     * The show data in table form as well? Default is false.\n     */\n    showTable: {\n      type: Boolean,\n      value: false,\n      observer: \"makeChart\"\n    }\n  },\n  /**\n   * created life cycle\n   */\n  created: function() {\n    const name = \"chartist\";\n    const basePath = pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/chartist/dist/chartist.min.js`;\n    window.addEventListener(\n      `es-bridge-${name}-loaded`,\n      this._chartistLoaded.bind(this)\n    );\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(name, location);\n  },\n  _chartistLoaded: function() {\n    this.__chartistLoaded = true;\n    if (this.__chartId) {\n      this._chartReady();\n    }\n  },\n  attached: function() {\n    this.__chartId = this._getUniqueId(\"chartist-render-\");\n    if (this.__chartistLoaded) {\n      this._chartReady();\n    }\n  },\n  /**\n   * Makes chart and returns the chart object.\n   */\n  _checkReady: function() {\n    let root = this;\n    setInterval(root._chartReady, 500);\n  },\n\n  /**\n   * Makes chart and returns the chart object.\n   */\n  _chartReady: function() {\n    let container = this.$.chart;\n    if (container !== null) {\n      this.fire(\"chartist-render-ready\", this);\n      if (this.data !== null) this.makeChart();\n      clearInterval(this._checkReady);\n    }\n  },\n\n  /**\n   * Makes chart and returns the chart object.\n   */\n  makeChart: function() {\n    let root = this,\n      chart;\n    if (\n      this.__chartistLoaded &&\n      this.__chartId &&\n      root.data !== null &&\n      this.$.chart !== null\n    ) {\n      if (root.type == \"bar\") {\n        chart = Chartist.Bar(\n          this.$.chart,\n          root.data,\n          root.options,\n          root.responsiveOptions\n        );\n      } else if (root.type == \"line\") {\n        chart = Chartist.Line(\n          this.$.chart,\n          root.data,\n          root.options,\n          root.responsiveOptions\n        );\n      } else if (root.type == \"pie\") {\n        chart = Chartist.Pie(\n          this.$.chart,\n          root.data,\n          root.options,\n          root.responsiveOptions\n        );\n      }\n      root.fire(\"chartist-render-draw\", chart);\n      chart.on(\"created\", () => {\n        root.addA11yFeatures(chart.container.childNodes[0]);\n      });\n      return chart;\n    } else {\n      return null;\n    }\n  },\n\n  /**\n   * Add accessibility features.\n   */\n  addA11yFeatures: function(svg) {\n    let desc =\n      this.data.labels !== undefined && this.data.labels !== null\n        ? this.chartDesc + this.makeA11yTable(svg)\n        : this.chartDesc;\n    this._addA11yFeature(svg, \"desc\", desc);\n    this._addA11yFeature(svg, \"title\", this.chartTitle);\n    svg.setAttribute(\n      \"aria-labelledby\",\n      this.__chartId + \"-chart-title \" + this.__chartId + \"-chart-desc\"\n    );\n  },\n\n  /**\n   * Add accessibility features.\n   */\n  makeA11yTable: function(svg) {\n    let title =\n      this.chartTitle !== null ? this.chartTitle : \"A \" + this.type + \" chart.\";\n    let table = [\n      '<table summary=\"Each column is a series of data, and the first column is the data label.\">',\n      \"<caption>\" + title + \"</caption>\",\n      \"<tbody>\"\n    ];\n    for (var i = 0; i < this.data.labels.length; i++) {\n      table.push('<tr><th scope=\"row\">' + this.data.labels[i] + \"</th>\");\n      if (this.type == \"pie\") {\n        table.push(\"<td>\" + this.data.series[i] + \"</td>\");\n      } else {\n        for (var j = 0; j < this.data.series.length; j++) {\n          table.push(\"<td>\" + this.data.series[j][i] + \"</td>\");\n        }\n      }\n      table.push(\"</tr>\");\n    }\n    table.push(\"</tbody></table>\");\n    return table.join(\"\");\n  },\n\n  /**\n   * For inserting chart title and description.\n   */\n  _addA11yFeature: function(svg, tag, html) {\n    let el = document.createElement(tag);\n    let first = svg.childNodes[0];\n    el.innerHTML = html;\n    el.setAttribute(\"id\", this.__chartId + \"-chart-\" + tag);\n    svg.insertBefore(el, first);\n  },\n\n  /**\n   * Get unique ID from the chart\n   */\n  _getUniqueId(prefix) {\n    let id = prefix + Date.now();\n    return id;\n  }\n});\nexport { ChartistRender };\n"],"names":["ChartistRender","Polymer","_template","html","is","listeners","tap","properties","id","type","String","value","scale","observer","chartTitle","chartDesc","data","Object","options","responsiveOptions","Array","showTable","Boolean","created","basePath","pathFromUrl","decodeURIComponent","location","window","addEventListener","this","_chartistLoaded","bind","ESGlobalBridge","requestAvailability","instance","load","__chartistLoaded","__chartId","_chartReady","attached","_getUniqueId","_checkReady","setInterval","$","chart","fire","makeChart","clearInterval","root","Chartist","Bar","Line","Pie","on","addA11yFeatures","container","childNodes","svg","desc","undefined","labels","makeA11yTable","_addA11yFeature","setAttribute","table","i","length","push","series","j","join","tag","el","document","createElement","first","innerHTML","insertBefore","prefix","Date","now"],"mappings":"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"}