{"version":3,"file":"eco-json-schema-form.umd.js","sources":["lib/eco-json-schema-array.js","lib/eco-json-schema-fieldset.js","lib/eco-json-schema-markup.js","lib/eco-json-schema-tabs.js","lib/eco-json-schema-boolean.js","lib/eco-json-schema-enum.js","lib/eco-json-schema-file.js","lib/eco-json-schema-input.js","lib/eco-json-schema-object.js","lib/eco-json-schema-wizard.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\n/**\n`eco-json-schema-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-array\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaArray extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-array\";\n  }\n  constructor() {\n    super();\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/editor-icons.js\");\n    import(\"@polymer/paper-icon-button/paper-icon-button.js\");\n    import(\"@lrnwebcomponents/a11y-collapse/a11y-collapse.js\");\n    import(\"@lrnwebcomponents/a11y-collapse/lib/a11y-collapse-group.js\");\n  }\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-alignment\">\n        :host {\n          color: var(--eco-json-form-color);\n          background-color: var(--eco-json-form-bg);\n          font-family: var(--eco-json-form-font-family);\n        }\n        :host([hidden]),\n        [hidden] {\n          display: none;\n        }\n        :host fieldset {\n          border-radius: var(--eco-json-form-border-radius);\n          border-style: solid;\n          border-width: 1px;\n          border-color: var(--eco-json-form-faded-color);\n          transition: all 0.5s;\n        }\n        :host legend {\n          transition: all 0.5s;\n          color: var(--eco-json-form-faded-color);\n        }\n        :host fieldset:focus #legend,\n        :host fieldset:focus-within #legend {\n          color: var(--eco-json-form-active-color);\n        }\n        :host .array-item-button {\n          color: var(--eco-json-form-faded-color);\n          background-color: var(--eco-json-form-bg);\n          text-transform: none;\n          margin-bottom: 0;\n        }\n        :host .array-item-button:focus,\n        :host .array-item-button:hover {\n          color: var(--eco-json-form-active-color);\n        }\n        :host .add-array-item iron-icon {\n          padding: 8px;\n        }\n        :host .add-array-item {\n          color: var(--eco-json-form-add-color);\n          border-radius: 0 0 var(--eco-json-form-border-radius);\n          border: 1px solid var(--eco-json-form-bg);\n          margin: 0;\n          padding: 0 8px 0 16px;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        :host .add-array-item:focus,\n        :host .add-array-item:hover {\n          color: var(--eco-json-form-add-color);\n          background-color: var(--eco-json-form-faded-bg);\n          border: 1px solid var(--eco-json-form-faded-color);\n        }\n        :host .remove-array-item {\n          color: var(--eco-json-form-remove-color);\n          background-color: var(--eco-json-form-bg);\n          margin: 15px 0 0 0;\n          border-radius: 100%;\n        }\n        :host .remove-array-item:focus,\n        :host .remove-array-item:hover {\n          color: var(--eco-json-form-remove-color);\n          background-color: var(--eco-json-form-faded-bg);\n        }\n        :host a11y-collapse-group {\n          margin: 0;\n          border-radius: var(--eco-json-form-border-radius);\n          --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);\n        }\n        :host a11y-collapse {\n          border: 1px solid var(--eco-json-form-bg);\n          --a11y-collapse-padding-right: 8px;\n          --a11y-collapse-heading-color: var(--eco-json-form-faded-color);\n          --a11y-collapse-heading-background-color: var(--eco-json-form-bg);\n          --a11y-collapse-heading-font-weight: normal;\n          --a11y-collapse-heading-margin: 0;\n          --a11y-collapse-icon-padding: 8px;\n        }\n        :host a11y-collapse:focus,\n        :host a11y-collapse:hover,\n        :host a11y-collapse[expanded] {\n          border: 1px solid var(--eco-json-form-faded-color);\n          --a11y-collapse-heading-color: var(--eco-json-form-color);\n          --a11y-collapse-heading-background-color: var(\n            --eco-json-form-faded-bg\n          );\n          --a11y-collapse-heading-font-weight: normal;\n          --a11y-collapse-heading-margin: 0;\n        }\n        :host p[slot=\"heading\"] {\n          margin: 0;\n        }\n        :host div[slot=\"content\"] > div {\n          width: 100%;\n          display: flex;\n          align-items: flex-end;\n          justify-content: space-between;\n        }\n        :host .item-fields {\n          flex: 1 0 auto;\n        }\n      </style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden\\$=\"[[!schema.title]]\">\n          [[schema.title]]\n        </legend>\n        <a11y-collapse-group\n          id=\"form\"\n          icon=\"settings\"\n          class=\"vertical flex layout\"\n          global-options=\"[[globalOptions]]\"\n        >\n          <template\n            is=\"dom-repeat\"\n            items=\"[[_toArray(schema.value)]]\"\n            as=\"item\"\n            restamp\n          >\n            <a11y-collapse\n              accordion\n              id$=\"item-[[index]]\"\n              icon$=\"[[globalOptions.icon]]\"\n              tooltip$=\"[[globalOptions.tooltip]]\"\n            >\n              <p slot=\"heading\">\n                [[_getHeading(__headings.*,schema.label,index)]]\n              </p>\n              <div slot=\"content\">\n                <div>\n                  <div\n                    id$=\"value-[[index]]\"\n                    class=\"item-fields\"\n                    data-index$=\"[[index]]\"\n                  ></div>\n                  <paper-icon-button\n                    id=\"remove-[[index]]\"\n                    icon=\"icons:delete\"\n                    aria-label=\"Remove this item\"\n                    aria-describedby=\"item-[[index]]\"\n                    class=\"remove-array-item array-item-button\"\n                    controls=\"item-[[index]]\"\n                    on-tap=\"_onRemoveItem\"\n                    role=\"button\"\n                  >\n                  </paper-icon-button>\n                  <simple-tooltip for=\"remove-[[index]]\"\n                    >Remove this item</simple-tooltip\n                  >\n                </div>\n              </div>\n            </a11y-collapse>\n          </template>\n        </a11y-collapse-group>\n        <paper-button\n          class=\"add-array-item array-item-button\"\n          on-click=\"_onAddItem\"\n          role=\"button\"\n        >\n          Add an item\n          <iron-icon icon=\"add-circle\"></iron-icon>\n        </paper-button>\n      </fieldset>\n    `;\n  }\n  _toArray(obj) {\n    if (obj == null) {\n      return [];\n    }\n\n    return Object.keys(obj).map(function(key) {\n      return obj[key];\n    });\n  }\n\n  static get properties() {\n    return {\n      globalOptions: {\n        type: Object,\n        value: {\n          icon: \"settings\",\n          tooltip: \"configure item\"\n        },\n        notify: true\n      },\n      propertyName: {\n        type: String,\n        value: null\n      },\n      schema: {\n        type: Object,\n        value: {},\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      __headings: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n  }\n  ready() {\n    super.ready();\n    this.__headings = [];\n    this._schemaChanged();\n\n    //update the headings if the data changes\n    this.addEventListener(\"form-field-changed\", e => {\n      this._updateHeadings(e);\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\"form-field-changed\", e => {\n      this._updateHeadings(e);\n    });\n    super.disconnectedCallback();\n  }\n  /**\n   * updates the array fields if the schema (which includes values) changes\n   */\n  _schemaChanged() {\n    //make sure the content is there first\n    afterNextRender(this, () => {\n      let itemLabel = this.schema.items.itemLabel;\n      if (this.schema && Array.isArray(this.schema.value)) {\n        this.schema.value.forEach(val => {\n          this.push(\"__headings\", val[itemLabel]);\n        });\n      }\n      this.shadowRoot.querySelectorAll(\".item-fields\").forEach(item => {\n        let index = item.getAttribute(\"data-index\"),\n          propertyName = `${this.propertyPrefix}${this.propertyName}`,\n          prefix = `${propertyName}.${index}`,\n          //path = `${propertyName}.properties.${index}`,\n          val = this.schema.value[index];\n        //for each array item, request the fields frrom eco-json-schema-object\n        this.dispatchEvent(\n          new CustomEvent(\"build-fieldset\", {\n            bubbles: false,\n            cancelable: true,\n            composed: true,\n            detail: {\n              container: item,\n              path: propertyName,\n              prefix: prefix,\n              properties: this.schema.properties.map(prop => {\n                let newprop = JSON.parse(JSON.stringify(prop));\n                newprop.value = val[prop.name];\n                return newprop;\n              }),\n              type: EcoJsonSchemaArray.tag,\n              value: this.schema.value || []\n            }\n          })\n        );\n      });\n    });\n  }\n  /**\n   * handles adding an array item\n   * @param {event} e the add item button tap event\n   */\n  _onAddItem(e) {\n    let val = {};\n    //add default values to the new item\n    this.schema.properties.forEach(prop => {\n      val[prop.name] = prop.value;\n    });\n    this.push(\"schema.value\", val);\n    this.notifyPath(\"schema.value.*\");\n    this._schemaChanged();\n  }\n  /**\n   * handles removing an array item\n   * @param {event} e the remove item button tap event\n   */\n  _onRemoveItem(e) {\n    //remove the data for an item at a given index\n    let index = e.target.controls.replace(/item-/, \"\");\n    this.splice(\"schema.value\", index, 1);\n    this.notifyPath(\"schema.value.*\");\n    this._schemaChanged();\n  }\n  /**\n   * updates the list expandable headings for each item\n   * @param {event} e the event that triggers an update\n   */\n  _updateHeadings(e) {\n    let propname = e.detail.getAttribute(\"name\"),\n      val = e.detail.value,\n      pathArr = propname ? propname.split(\".\") : [],\n      index = pathArr.length > 2 ? pathArr[pathArr.length - 2] : null,\n      update =\n        e.detail.propertyName === this.schema.items.itemLabel\n          ? val\n          : this.__headings[index];\n    if (index) this.set(`__headings.${index}`, update);\n  }\n  /**\n   * labels the collapse heading based on a given property\n   * @param {object} headings item the array item\n   * @param {string} label prop the property that will populate the collapse heading\n   * @param {number} index the index of the item\n   * @returns {string} the expanable heading label\n   */\n  _getHeading(headings, label, index) {\n    //if there is no heading, number the item instead\n    return this.__headings &&\n      this.__headings[index] &&\n      typeof this.__headings[index] === \"string\" &&\n      this.__headings[index].trim(\"\") !== \"\"\n      ? this.__headings[index].trim(\"\")\n      : label && typeof label === \"string\" && label.trim(\"\") !== \"\"\n      ? `${label.trim(\"\")} ${index + 1}`\n      : `Item ${index + 1}`;\n  }\n}\nwindow.customElements.define(EcoJsonSchemaArray.tag, EcoJsonSchemaArray);\nexport { EcoJsonSchemaArray };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\n/**\n`eco-json-schema-fieldset` takes in a JSON schema of type fieldset and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-fieldset\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaFieldset extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-fieldset\";\n  }\n  constructor() {\n    super();\n  }\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-alignment\">\n        :host {\n          color: var(--eco-json-form-color);\n          background-color: var(--eco-json-form-bg);\n          font-family: var(--eco-json-form-font-family);\n          margin-bottom: 15px;\n        }\n        :host ([hidden]) {\n          display: none;\n        }\n        :host fieldset {\n          border-radius: var(--eco-json-form-border-radius);\n          border-style: solid;\n          border-width: 1px;\n          border-color: var(--eco-json-form-faded-color);\n          transition: all 0.5s;\n        }\n        :host legend {\n          transition: all 0.5s;\n          color: var(--eco-json-form-faded-color);\n        }\n        :host fieldset:focus #legend,\n        :host fieldset:focus-within #legend {\n          color: var(--eco-json-form-active-color);\n        }\n        :host eco-json-schema-object {\n          flex: 1 0 auto;\n        }\n      </style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden\\$=\"[[!schema.title]]\">\n          [[schema.title]]\n        </legend>\n        <div hidden$=\"[[!schema.description]]\">[[item.description]]</div>\n        <div class=\"item-fields\"></div>\n      </fieldset>\n    `;\n  }\n  static get properties() {\n    return {\n      propertyName: {\n        type: String,\n        value: null\n      },\n      schema: {\n        type: Object,\n        value: {}\n      }\n    };\n  }\n  ready() {\n    super.ready();\n    this._schemaChanged();\n  }\n  /**\n   * updates the array fields if the schema (which includes values) changes\n   */\n  _schemaChanged() {\n    //make sure the content is there first\n    afterNextRender(this, () => {\n      this.shadowRoot\n        .querySelectorAll(\".item-fields\")\n        .forEach((item, index) => {\n          let prefix = `${this.propertyName}`;\n          this.dispatchEvent(\n            new CustomEvent(\"build-fieldset\", {\n              bubbles: false,\n              cancelable: true,\n              composed: true,\n              detail: {\n                container: item,\n                path: prefix,\n                prefix: prefix,\n                properties: this.schema.properties,\n                type: EcoJsonSchemaFieldset.tag,\n                value: this.schema.properties[index].value || {}\n              }\n            })\n          );\n        });\n    });\n  }\n}\nwindow.customElements.define(EcoJsonSchemaFieldset.tag, EcoJsonSchemaFieldset);\nexport { EcoJsonSchemaFieldset };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport { encapScript, wipeSlot } from \"@lrnwebcomponents/utils/utils.js\";\nimport \"@polymer/marked-element/marked-element.js\";\n/**\n`eco-json-schema-tabs` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-tabs\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaMarkup extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-markup\";\n  }\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-alignment\">\n        :host {\n          color: var(--eco-json-form-color);\n          background-color: var(--eco-json-form-bg);\n          font-family: var(--eco-json-form-font-family);\n        }\n        :host ([hidden]) {\n          display: none;\n        }\n      </style>\n      <div class=\"markup\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      value: {\n        type: String,\n        notify: true,\n        value: \"\"\n      }\n    };\n  }\n  /**\n   * render the markup requested\n   */\n  _valueChanged(newValue) {\n    // clear self\n    wipeSlot(this);\n    // sanity check to ditch scripts\n    let html = encapScript(newValue);\n    let frag = document.createRange().createContextualFragment(html);\n    // self apend to flow into slot and show up\n    this.appendChild(frag);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaMarkup.tag, EcoJsonSchemaMarkup);\nexport { EcoJsonSchemaMarkup };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@lrnwebcomponents/a11y-tabs/a11y-tabs.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status\";\n/**\n`eco-json-schema-tabs` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-tabs\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaTabs extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-tabs\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host{\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n            margin-bottom: 15px;\n          }\n          :host ([hidden]) {\n            display: none;\n          }\n          :host a11y-tabs {\n            --a11y-tabs-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-focus-color: var(--eco-json-form-color);\n            --a11y-tabs-border-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-border-radius: var(--eco-json-form-border-radius);\n            --a11y-tabs-background: var(--eco-json-form-bg);\n            --a11y-tabs-faded-background: var(--eco-json-form-faded-bg);\n            --a11y-tabs-justify-tabs: flex-start;\n            --ally-tabs-wrap: unset;\n            --a11y-tabs-content-padding: 8px 16px 16px;\n            --a11y-tabs-button-padding: 8px;\n            --a11y-tabs-vertical-button-padding: unset;\n            --a11y-tabs-horizontal-border-radius: unset;\n            --a11y-tabs-vertical-border-radius: unset;\n            --a11y-tabs-horizontal-button-padding: 2px 5px;\n          }\n          :host a11y-tabs:focus,\n          :host a11y-tabs:focus-within {\n            --a11y-tabs-border-color: : var(--eco-json-form-focus-color);\n          }\n          :host .tab-title {\n            position: absolute;\n            left: -99999px;\n            height: 0;\n            overflow: hidden;\n          }\n        </style>\n      </custom-style>\n      <a11y-tabs id$=\"[[schema.property]]\">\n        <template\n          is=\"dom-repeat\"\n          items=\"[[schema.properties]]\"\n          as=\"item\"\n          restamp\n        >\n          <a11y-tab\n            id$=\"item-[[index]]\"\n            icon$=\"[[item.icon]]\"\n            label$=\"[[item.label]]\"\n          >\n            <div hidden$=\"[[!item.description]]\">[[item.description]]</div>\n            <div\n              id$=\"[[item.property]]\"\n              class=\"item-fields\"\n              data-index$=\"[[index]]\"\n            ></div>\n          </a11y-tab>\n        </template>\n      </a11y-tabs>\n    `;\n  }\n  static get properties() {\n    return {\n      propertyName: {\n        type: String,\n        value: null\n      },\n      schema: {\n        type: Object,\n        value: {}\n      }\n    };\n  }\n  ready() {\n    super.ready();\n    this._schemaChanged();\n  }\n  /**\n   * updates the array fields if the schema (which includes values) changes\n   */\n  _schemaChanged() {\n    //make sure the content is there first\n    afterNextRender(this, () => {\n      this.shadowRoot.querySelectorAll(\".item-fields\").forEach(item => {\n        let index = item.getAttribute(\"data-index\"),\n          propertyName = this.propertyName,\n          tab = this.schema.properties[index],\n          prop = tab.name,\n          prefix = `${propertyName}.${prop}`;\n        this.dispatchEvent(\n          new CustomEvent(\"build-fieldset\", {\n            bubbles: false,\n            cancelable: true,\n            composed: true,\n            detail: {\n              container: item,\n              path: prefix,\n              prefix: prefix,\n              properties: tab.schema.properties,\n              type: EcoJsonSchemaTabs.tag,\n              value: tab.value || {}\n            }\n          })\n        );\n      });\n    });\n  }\n}\nwindow.customElements.define(EcoJsonSchemaTabs.tag, EcoJsonSchemaTabs);\nexport { EcoJsonSchemaTabs };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nclass EcoJsonSchemaBoolean extends PolymerElement {\n  static get tag() {\n    return \"eco-json-schema-boolean\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-checkbox {\n          display: block;\n          font-size: 16px;\n          white-space: normal;\n          margin: var(--eco-json-field-margin, 0 0 15px);\n          --paper-checkbox-checkmark-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-unchecked-background-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-checked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-color,\n            var(--secondary-text-color, #888)\n          );\n        }\n        :host paper-checkbox:focus {\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n        }\n      </style>\n\n      <paper-checkbox\n        id=\"checkbox\"\n        class=\"flex\"\n        hidden$=\"[[hidden]]\"\n        checked=\"{{value}}\"\n        invalid=\"[[error]]\"\n        >[[_label]]</paper-checkbox\n      >\n    `;\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Boolean,\n        notify: true,\n        value: false\n      },\n      error: {\n        type: Boolean,\n        value: false\n      },\n      _label: {\n        type: String,\n        notify: true,\n        value: \"\"\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.shadowRoot.querySelector(\"#checkbox\");\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    if (schema.title) {\n      this._label = schema.title;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaBoolean.tag, EcoJsonSchemaBoolean);\nexport { EcoJsonSchemaBoolean };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport { IronValidatableBehavior } from \"@polymer/iron-validatable-behavior/iron-validatable-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\n\nclass EcoJsonSchemaEnum extends mixinBehaviors(\n  [IronValidatableBehavior],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        paper-dropdown-menu {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n          --paper-dropdown-menu-button: {\n            padding: 2px;\n          }\n        }\n      </style>\n\n      <paper-dropdown-menu\n        id=\"dropdown\"\n        class=\"layout horizontal vertical\"\n        value=\"{{value}}\"\n        required=\"\"\n      >\n        <paper-dropdown-menu class=\"dropdown-content\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"0\">\n            <template is=\"dom-repeat\" items=\"[[_items]]\">\n              <paper-item class=\"flex\" label=\"[[item]]\">[[item]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </paper-dropdown-menu>\n    `;\n  }\n  static get tag() {\n    return \"eco-json-schema-enum\";\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value: null\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      },\n      _items: {\n        type: Object,\n        value() {\n          return {};\n        }\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.shadowRoot.querySelector(\"#dropdown\");\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    this._items = schema.enum.filter(function(item) {\n      return item !== null;\n    });\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.shadowRoot.querySelector(\"#dropdown\").invalid = true;\n    } else {\n      this.shadowRoot.querySelector(\"#dropdown\").invalid = false;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaEnum.tag, EcoJsonSchemaEnum);\nexport { EcoJsonSchemaEnum };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { microTask } from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n`eco-json-schema-file` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-file\n* @demo demo/index.html\n*/\n\nclass EcoJsonSchemaFile extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-file\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        :host {\n          display: inline-block;\n        }\n\n        .enabled {\n          border: 1px dashed #555;\n          @apply --file-upload-upload-border-enabled;\n        }\n\n        .hover {\n          opacity: 0.7;\n          border: 1px dashed #111;\n          @apply --file-upload-upload-border-hover;\n        }\n\n        #UploadBorder {\n          vertical-align: middle;\n          color: #555;\n          padding: 20px;\n          max-height: 300px;\n          overflow-y: auto;\n          display: inline-block;\n          @apply --file-upload-upload-border;\n        }\n\n        #dropArea {\n          text-align: center;\n          @apply --file-upload-drop-area;\n        }\n\n        paper-button#button {\n          margin-bottom: 20px;\n          @apply --file-upload-button;\n        }\n\n        .file {\n          padding: 10px 0px;\n          @apply --file-upload-file;\n        }\n\n        .commands {\n          float: right;\n          @apply --file-upload-commands;\n        }\n\n        .commands iron-icon:not([icon=\"check-circle\"]) {\n          cursor: pointer;\n          opacity: 0.9;\n          @apply --file-upload-commands-faded;\n        }\n\n        .commands iron-icon:hover {\n          opacity: 1;\n          @apply --file-upload-commands-hovered;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        .error {\n          color: #f40303;\n          font-size: 11px;\n          margin-top: 2px;\n          @apply --file-upload-error;\n        }\n\n        .progress-bar {\n          margin-top: 2px;\n        }\n\n        paper-progress {\n          --paper-progress-active-color: #03a9f4;\n        }\n\n        paper-progress[error] {\n          --paper-progress-active-color: #f40303;\n        }\n      </style>\n\n      <div class=\"layout horizontal nowrap\">\n        <div>\n          <paper-button\n            id=\"button\"\n            on-click=\"_fileClick\"\n            alt=\"{{paperButtonAlt}}\"\n            raised=\"\"\n          >\n            <iron-icon icon=\"editor:attach-file\"></iron-icon\n            >{{paperButtonTitle}}</paper-button\n          >\n          <div id=\"UploadBorder\">\n            <div id=\"dropArea\" hidden\\$=\"{{!_shownDropText}}\">{{dropText}}</div>\n            <template is=\"dom-repeat\" items=\"{{files}}\">\n              <div class=\"file\">\n                <div class=\"name\">\n                  <span>{{item.name}}</span>\n                  <div class=\"commands\">\n                    <iron-icon\n                      icon=\"autorenew\"\n                      title=\"{{retryText}}\"\n                      on-click=\"_retryUpload\"\n                      hidden\\$=\"{{!item.error}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"cancel\"\n                      title=\"{{removeText}}\"\n                      on-click=\"_cancelUpload\"\n                      hidden\\$=\"{{item.complete}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"check-circle\"\n                      title=\"{{successText}}\"\n                      hidden\\$=\"{{!item.complete}}\"\n                    ></iron-icon>\n                  </div>\n                </div>\n                <div class=\"error\" hidden\\$=\"{{!item.error}}\">\n                  {{errorText}}\n                </div>\n              </div>\n            </template>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          on-change=\"_fileChange\"\n          hidden=\"\"\n          multiple=\"{{multi}}\"\n          accept=\"{{accept}}\"\n        />\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\",\n        notify: true\n      },\n      resources: {\n        value() {\n          return {};\n        },\n        notify: true\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        },\n        observer: \"_valueChanged\"\n      },\n      /**\n      error: {\n        type: String,\n        observer: '_errorChanged',\n        value: null\n      },\n      */\n\n      /**\n       * `target`\n       * @customElement target is the target url to upload the files to.\n       * Additionally by adding '<name>' in your url, it will be replaced by\n       * the file name.\n       */\n      target: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `accept`\n       * @customElement accept is the set of comma separated file extensions or mime types\n       * to filter as accepted.\n       */\n      accept: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `droppable`\n       * @customElement droppable indicates whether or not to allow file drop.\n       */\n      droppable: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `dropText`\n       * @customElement dropText is the  text to display in the file drop area.\n       */\n      dropText: {\n        type: String,\n        value: \"Drop Files Here\"\n      },\n\n      /**\n       * `multi`\n       * @customElement multi indicates whether or not to allow multiple files to be uploaded.\n       */\n      multi: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `files`\n       * @customElement files is the list of files to be uploaded\n       */\n      files: {\n        type: Array,\n        notify: true,\n        value() {\n          return [];\n        }\n      },\n\n      /**\n       * `raised`\n       * @customElement raised indicates whether or not the button should be raised\n       */\n      raised: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `noink`\n       * @customElement noink indicates that the button should not have an ink effect\n       */\n      noink: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `headers`\n       * @customElement headers is a key value map of header names and values\n       */\n      headers: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `retryText`\n       * @customElement retryText is the text for the tooltip to retry an upload\n       */\n      retryText: {\n        type: String,\n        value: \"Retry Upload\"\n      },\n\n      /**\n       * `removeText`\n       * @customElement removeText is the text for the tooltip to remove an upload\n       */\n      removeText: {\n        type: String,\n        value: \"Remove\"\n      },\n\n      /**\n       * `successText`\n       * @customElement successText is the text for the tooltip of a successful upload\n       */\n      successText: {\n        type: String,\n        value: \"Success\"\n      },\n\n      /**\n       * `errorText`\n       * @customElement errorText is the text to display for a failed upload\n       */\n      errorText: {\n        type: String,\n        value: \"Error uploading file...\"\n      },\n\n      /**\n       * `_shownDropText`\n       * @customElement _shownDropText indicates whether or not the drop text should be shown\n       */\n      _shownDropText: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `additional`\n       * @customElement additional object of key-pair values to send additional values along with file.\n       */\n      additional: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `fileDataName`\n       * @customElement fileDataName is the name for the file data in the `formData` object.\n       */\n      fileDataName: {\n        type: String,\n        value: \"file\"\n      },\n\n      /**\n       * `paperButtonAlt`\n       * @customElement paperButtonAlt allows changing the alt property on the paper button\n       */\n      paperButtonAlt: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `paperButtonTitle`\n       * @customElement paperButtonTitle allows changing the title property on the paper button\n       */\n      paperButtonTitle: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n  /**\n   * Clears the list of files\n   */\n  clear() {\n    this.set(\"files\", []);\n    this.shadowRoot.querySelector(\"#fileInput\").value = \"\";\n    this._showDropText();\n  }\n\n  ready() {\n    super.ready();\n\n    if (this.raised) {\n      this.toggleAttribute(\n        \"raised\",\n        true,\n        this.shadowRoot.querySelector(\"#button\")\n      );\n    }\n    if (this.noink) {\n      this.toggleAttribute(\n        \"noink\",\n        true,\n        this.shadowRoot.querySelector(\"#button\")\n      );\n    }\n    if (this.droppable) {\n      this._showDropText();\n      this.setupDrop();\n    }\n  }\n\n  /**\n   * A function to set up a drop area for drag-and-drop file uploads\n   */\n  setupDrop() {\n    var uploadBorder = this.shadowRoot.querySelector(\"#UploadBorder\");\n    this.toggleClass(\"enabled\", true, uploadBorder);\n\n    this.ondragover = function(e) {\n      e.stopPropagation();\n      this.toggleClass(\"hover\", true, uploadBorder);\n\n      // Workaround for allowgin drop from Chome's download footer on OSX\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=234931\n      var effect = e.dataTransfer && e.dataTransfer.dropEffect;\n      var effectAllowed = e.dataTransfer && e.dataTransfer.effectAllowed;\n      if (effect === \"none\" && effectAllowed !== \"none\") {\n        e.dataTransfer.dropEffect = effectAllowed === \"move\" ? \"move\" : \"copy\";\n      }\n      // end of workaround\n\n      return false;\n    };\n\n    this.ondragleave = function() {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      return false;\n    };\n\n    this.ondrop = function(event) {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      event.preventDefault();\n\n      // Check if multiple upload is allowed\n      if (!this.multi && this.files.length !== 0) {\n        return;\n      }\n\n      var length = event.dataTransfer.files.length;\n      for (var i = 0; i < length; i++) {\n        var file = event.dataTransfer.files[i];\n        //if (this.value.indexOf(window.btoa(unescape(encodeURIComponent(file.name)))) >= 0 ) {\n        //  continue;\n        //}\n        // Check if filetype is accepted\n        var mimeType =\n          file.type !== \"\" ? file.type.match(/^[^\\/]*\\//)[0] : null;\n        var fileType = file.name.match(/\\.[^\\.]*$/)[0];\n        if (\n          this.accept !== \"\" &&\n          !(\n            this.accept.indexOf(mimeType) > -1 ||\n            this.accept.indexOf(fileType) > -1\n          )\n        ) {\n          continue;\n        }\n\n        file.progress = 0;\n        file.error = false;\n        file.complete = false;\n        this.push(\"files\", file);\n        this.uploadFile(file);\n      }\n    };\n  }\n\n  /**\n   * Clicks the invisible file input\n   */\n  _fileClick() {\n    var elem = this.shadowRoot.querySelector(\"#fileInput\");\n    if (elem && document.createEvent) {\n      // sanity check\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initEvent(\"click\", true, false);\n      elem.dispatchEvent(evt);\n    }\n  }\n\n  /**\n   * Called whenever the list of selected files changes\n   *\n   * @param {object} e An event object\n   */\n  _fileChange(e) {\n    var length = e.target.files.length;\n    for (var i = 0; i < length; i++) {\n      var file = e.target.files[i];\n      file.progress = 0;\n      file.error = false;\n      file.complete = false;\n      this.push(\"files\", file);\n      if (!this.multi && this.files.length !== 0) {\n        this.set(\"files\", []);\n        this.set(\"value\", {});\n      }\n      this.uploadFile(file);\n    }\n  }\n\n  /**\n   * Cancels the file upload for a specific file\n   *\n   * @param {object} file An element of the files array\n   */\n  cancel(file) {\n    if (file) {\n      if (file.xhr) {\n        file.xhr.abort();\n      }\n      this.splice(\"files\", this.files.indexOf(file), 1);\n      this._showDropText();\n    }\n  }\n\n  /**\n   * Cancels the file upload\n   *\n   * @param {object} e An event object\n   */\n  _cancelUpload(e) {\n    this.cancel(e.model.__data__.item);\n  }\n\n  /**\n   * Retries to upload the file\n   *\n   * @param {object} e An event object\n   */\n  _retryUpload(e) {\n    e.model.set(\"item.error\", false);\n    e.model.set(\"item.progress\", 0);\n    // The async helps give visual feedback of a retry occurring, even though it's less efficient.\n    var self = this;\n    microTask.run(() => {\n      self.uploadFile(e.model.__data__.item);\n    });\n  }\n\n  /**\n   * Whether or not to display the drop text\n   */\n  _showDropText() {\n    this.set(\"_shownDropText\", !this.files.length && this.droppable);\n  }\n\n  /**\n   * Uploads a file\n   *\n   * @param {object} file An element of the files array\n   */\n  uploadFile(file) {\n    if (!file) {\n      return;\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"before-upload\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n    this._showDropText();\n    var prefix = \"files.\" + this.files.indexOf(file);\n    var self = this;\n\n    var reader = new FileReader();\n\n    reader.addEventListener(\n      \"load\",\n      function() {\n        var r = reader.result;\n        //self.push('value', {\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //self.value.push({\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //console.log('value.'+self.files.indexOf(file));\n        self.set(\n          \"value.\" +\n            self.attributes.name.value +\n            \".\" +\n            self.files.indexOf(file),\n          r\n        );\n        //self.notifyPath('value');\n      },\n      false\n    );\n\n    if (!self.value.hasOwnProperty(self.attributes.name.value)) {\n      this.set(\"value.\" + self.attributes.name.value, {});\n    }\n    reader.readAsDataURL(file);\n  }\n  _valueChanged() {\n    console.log(\"this.value: \" + JSON.stringify(this.value));\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    /*\n    var inputEl = this.shadowRoot.querySelector('#fileInput');\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    //inputEl.type = 'file';\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n    */\n\n    /*\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n    */\n  }\n  /*\n  _errorChanged() {\n    if (this.error) {\n      this.shadowRoot.querySelector('#fileInput').errorMessage = this.error;\n      this.shadowRoot.querySelector('#fileInput').invalid = true;\n    } else {\n      this.shadowRoot.querySelector('#fileInput').invalid = false;\n      this.shadowRoot.querySelector('#fileInput').errorMessage = null;\n    }\n  },\n  */\n  _isSchemaValue(type) {\n    return this._isSchemaFile(type);\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  stringify(s) {\n    return JSON.stringify(s);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaFile.tag, EcoJsonSchemaFile);\nexport { EcoJsonSchemaFile };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-styles/typography.js\";\n/**\n`eco-json-schema-input` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-input\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaInput extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-input\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host ([hidden]) {\n            display: none;\n          }\n        </style>\n      </custom-style>\n      <paper-input\n        id=\"input\"\n        class=\"flex\"\n        value=\"{{value}}\"\n        auto-validate\n      ></paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value() {\n          return \"\";\n        }\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.shadowRoot.querySelector(\"#input\");\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    if (this._isSchemaNumber(schema.type)) {\n      inputEl.type = \"number\";\n\n      if (schema.multipleOf) {\n        inputEl.step = schema.multipleOf;\n      }\n\n      if (!isNaN(schema.maximum)) {\n        if (schema.exclusiveMaximum) {\n          inputEl.max = schema.maximum - (schema.multipleOf || 1);\n        } else {\n          inputEl.max = schema.maximum;\n        }\n      }\n\n      if (!isNaN(schema.minimum)) {\n        if (schema.exclusiveMinimum) {\n          inputEl.min = schema.minimum + (schema.multipleOf || 1);\n        } else {\n          inputEl.min = schema.minimum;\n        }\n      }\n    }\n\n    if (this._isSchemaString(schema.type)) {\n      if (schema.format === \"date-time\") {\n        inputEl.type = \"datetime-local\";\n        inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n      } else if (schema.format === \"date\") {\n        inputEl.type = \"date\";\n      } else if (schema.format === \"email\") {\n        inputEl.type = \"email\";\n      } else if (schema.format === \"hostname\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv4\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv6\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"uri\") {\n        inputEl.type = \"url\";\n      } else {\n        inputEl.type = \"text\";\n      }\n\n      /*\n        if (schema.maxLength || schema.minLength) {\n          inputEl.charCounter = true;\n        }\n       */\n\n      if (schema.maxLength) {\n        inputEl.maxlength = schema.maxLength;\n      }\n\n      if (schema.minLength) {\n        inputEl.minlength = schema.minLength;\n      }\n\n      if (schema.pattern) {\n        inputEl.pattern = schema.pattern;\n      }\n    }\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.shadowRoot.querySelector(\"#input\").errorMessage = this.error;\n      this.shadowRoot.querySelector(\"#input\").invalid = true;\n    } else {\n      this.shadowRoot.querySelector(\"#input\").invalid = false;\n      this.shadowRoot.querySelector(\"#input\").errorMessage = null;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaInput.tag, EcoJsonSchemaInput);\nexport { EcoJsonSchemaInput };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-fieldset.js\";\nimport \"./eco-json-schema-markup.js\";\nimport \"./eco-json-schema-tabs.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n/**\n`eco-json-schema-object` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-object schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-object>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-object\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaObject extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-object\";\n  }\n\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host {\n            --eco-json-field-margin: 0 0 15px;\n            --eco-json-form-border-radius: 2px;\n            --eco-json-form-font-family: var(\n              --paper-font-caption_-_font-family,\n              unset\n            );\n            --eco-json-form-bg: var(--primary-background-color, #fff);\n            --eco-json-form-color: var(--primary-text-color, #222);\n            --eco-json-form-faded-color: #888;\n            --eco-json-form-active-color: var(--primary-color, #000);\n            --eco-json-form-faded-bg: #f0f0f0;\n            --eco-json-form-add-color: #008811;\n            --eco-json-form-add-focus: #007700;\n            --eco-json-form-remove-focus: #cc0000;\n            --eco-json-form-remove-color: #dd0000;\n            --simple-picker-float-label-color: var(--eco-json-form-faded-color);\n            --simple-picker-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --simple-picker-background-color: var(--eco-json-form-bg);\n            --simple-picker-border-color: var(--eco-json-form-faded-color);\n            --simple-picker-focus-border-color: var(\n              --eco-json-form-active-color\n            );\n            --simple-picker-focus-border-width: 2px;\n            --paper-input-container: {\n              padding-top: 0;\n            }\n          }\n          div.layout {\n            height: auto;\n          }\n          #form {\n            display: block;\n            font-family: var(--eco-json-form-font-family);\n            background-color: var(--eco-json-form-bg);\n            color: var(--eco-json-form-color);\n            --simple-tooltip-background: var(--eco-json-form-active-color);\n            --simple-tooltip-text-color: var(--eco-json-form-bg);\n            @apply --eco-json-schema-object-form;\n            @apply --layout-vertical;\n            @apply --layout-wrap;\n          }\n          #form ::slotted(paper-input) {\n            margin-bottom: 15px;\n          }\n          #form ::slotted(*.has-tooltip-desc) {\n            margin-bottom: 0;\n            padding-bottom: 0;\n            --paper-input-container: {\n              margin-bottom: 0;\n              padding-bottom: 0;\n            }\n          }\n          #form ::slotted(div.tooltip-desc) {\n            font-size: 12px;\n            margin: var(--eco-json-field-margin);\n            color: var(--eco-json-form-faded-color);\n          }\n          #form ::slotted(paper-input),\n          #form ::slotted(div.tooltip-desc) {\n            font-family: var(--eco-json-form-font-family);\n          }\n          #form ::slotted(div.desc-for-paper-textarea) {\n            margin-top: -18px;\n            margin-right: 35px;\n          }\n          #form ::slotted(code-editor) {\n            margin: 8px 0;\n            padding: 0;\n            --code-editor-float-label-color: var(--eco-json-form-faded-color);\n            --code-editor-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --code-pen-button-color: var(--eco-json-form-faded-color);\n            --code-editor-code-border: 1px solid\n              var(--eco-json-form-faded-color);\n            --code-editor-code-border-radius: 2px;\n            --code-editor-focus-code-border: 2px solid\n              var(--eco-json-form-active-color);\n          }\n        </style>\n      </custom-style>\n\n      <template is=\"dom-if\" if=\"{{!wizard}}\">\n        <div class=\"header\" hidden\\$=\"[[!label]]\">[[label]]</div>\n      </template>\n      <div class=\"layout vertical flex start-justified\">\n        <div\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          aria-live=\"polite\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      wizard: {\n        type: Boolean,\n        notify: true\n      },\n      /**\n       * the name of the code-editor theme\n       */\n      codeTheme: {\n        type: String,\n        value: \"vs-light-2\"\n      },\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  /**\n   * returns an array of properties for a given schema object\n   * @param {object} thisSchema the source schema\n   * @returns {array} an array\n   */\n  _buildSchemaProperties(thisSchema = this.schema) {\n    var ctx = this;\n    return Object.keys(thisSchema.properties || []).map(key => {\n      var schema = thisSchema.properties[key];\n      var property = {\n        name: key,\n        schema: schema,\n        label: schema.title || key,\n        description: schema.description,\n        component: schema.component || {}\n      };\n      if (!property.component.valueProperty) {\n        property.component.valueProperty = \"value\";\n      }\n      if (!property.component.slot) {\n        property.component.slot = \"\";\n      }\n      if (ctx._isSchemaEnum(schema)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-enum\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = \"\";\n        }\n        property.value = schema.value;\n      } else if (ctx._isSchemaBoolean(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-boolean\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = false;\n        }\n        property.value = schema.value;\n      } else if (ctx._isSchemaFile(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-file\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = {};\n        }\n        property.value = schema.value;\n      } else if (ctx._isSchemaValue(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-input\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = \"\";\n        }\n        property.value = schema.value;\n      } else if (ctx._isSchemaObject(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-object\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = {};\n        }\n        property.value = schema.value;\n      } else if (ctx._isSchemaArray(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-array\";\n        this._buildNestedSchemaProperties(property, schema);\n      } else if (ctx._isSchemaFieldset(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-fieldset\";\n        this._buildNestedSchemaProperties(property, schema);\n      } else if (ctx._isSchemaTabs(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-tabs\";\n        this._buildNestedSchemaProperties(property, schema);\n      } else if (ctx._isSchemaMarkup(schema.type)) {\n        property.component.name =\n          property.component.name || \"eco-json-schema-markup\";\n        if (typeof schema.value === typeof undefined) {\n          schema.value = \"\";\n        }\n        property.value = schema.value;\n      } else {\n        return console.error(\"Unknown property type %s\", schema.type);\n      }\n      return property;\n    });\n  }\n  /**\n   * adds array of nested sub-properties to a given property based on a given schema\n   * @param {object} property the property that will have nested subproperties\n   * @param {object} schema the schema that has nested subschemas\n   */\n  _buildNestedSchemaProperties(property, schema) {\n    if (typeof schema.value === typeof undefined)\n      schema.value = schema.type !== \"array\" ? {} : [];\n    property.value = schema.value;\n    for (let key in schema.items.properties) {\n      schema.items.properties[key].value = schema.value[key];\n    }\n    property.schema.properties = this._buildSchemaProperties(\n      schema.items,\n      property.property + \".\"\n    );\n  }\n  /**\n   * updates the value when a schema property (or subproperty) changes\n   * @param {event} event the\n   * @param {object} detail the event details\n   */\n  _schemaPropertyChanged(event, detail) {\n    if (detail) {\n      if (detail.path && /\\.length$/.test(detail.path)) {\n        return;\n      }\n      var ctx = this;\n      var property = event.target.schemaProperty;\n\n      var path = [\"value\"].concat(\n        `${event.target.propertyPrefix}${event.target.propertyName}`.split(\".\")\n      );\n      var prop = property.property || event.target.propertyName;\n      var val = detail && detail.value ? this._deepClone(detail.value) : null;\n      if (detail.path && /\\.splices$/.test(detail.path)) {\n        var parts = detail.path.split(\".\").slice(1, -1);\n        while (parts.length) {\n          path.push(parts.shift());\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n\n        if (detail.value.keySplices) {\n          if (property.keyMap) {\n            detail.value.keySplices.forEach(splice => {\n              splice.removed.forEach(k => {\n                delete property.keyMap[path.concat([k]).join(\".\")];\n              });\n            });\n          }\n        }\n\n        if (detail.value) {\n          detail.value.indexSplices.forEach(splice => {\n            var args = [path.join(\".\"), splice.index, splice.removed.length];\n            if (splice.addedCount) {\n              for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n                if (splice.addedKeys && splice.addedKeys[i]) {\n                  property.keyMap = property.keyMap || {};\n                  property.keyMap[\n                    path.concat([splice.addedKeys[i]]).join(\".\")\n                  ] = path.concat([i + splice.index]).join(\".\");\n                }\n                args.push(ctx._deepClone(splice.object[i + splice.index]));\n              }\n            }\n            ctx.splice.apply(ctx, args);\n          });\n        }\n      } else if (detail.path) {\n        var parts = detail.path.split(\".\").slice(1);\n        var v = this.value;\n        if (!v.hasOwnProperty(property.property)) {\n          this.set(\"value.\" + property.property, {});\n          this.notifyPath(\"value.\" + property.property);\n        }\n        while (parts.length) {\n          var k = parts.shift();\n          path.push(k);\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n        this.set(path.join(\".\"), this._deepClone(detail.value));\n        this.notifyPath(path.join(\".\"));\n      } else {\n        //most of our fields will just set the value this way\n        this.set(path.join(\".\"), this._deepClone(detail.value));\n        this.notifyPath(\"value\");\n      }\n      //fire an event to let array listeners handle changed fields\n      event.target.dispatchEvent(\n        new CustomEvent(\"form-field-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: event.target\n        })\n      );\n      this.dispatchEvent(\n        new CustomEvent(\"value-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    }\n  }\n  /**\n   * sets the value based on a the schema properties (or a subproperties and a path)\n   * @param {array} props the schema properties (default) or subproperties\n   * @param {string} path the string that indicates the path for subproperties\n   */\n  _setValue(props = this._schemaProperties, path = \"\") {\n    let setter = path.replace(/\\[(\\d+)\\]/g, \".$1\");\n    if (setter != \"\") setter = `.${setter}`;\n    if (props.length > 0) {\n      props.forEach(property => {\n        if (typeof property.value !== typeof undefined) {\n          this.set(\n            `value${setter}.${property.property}`,\n            this._deepClone(property.value),\n            JSON.stringify(property.value)\n          );\n        }\n      });\n      this.notifyPath(\"value.*\");\n    }\n  }\n  /**\n   * builds form fields and appends them to an element\n   * @param {array} props the schema properties (default) or subproperties\n   * @param {object} container optional container element the for the form fields (for subproperties)\n   * @param {string} prefix optional field name prefix (for subproperties)\n   */\n  _buildForm(props = this._schemaProperties, container = this, prefix = \"\") {\n    let autofocus = this.autofocus;\n    props.forEach(property => {\n      if (property.component.name === \"code-editor\") {\n        // special case, can't come up with a better way to do this but monoco is very special case\n        property.schema.component.properties.editorValue =\n          property.schema.value;\n        property.schema.component.properties.theme = this.codeTheme;\n      }\n      let propertyPrefix = prefix !== \"\" ? `${prefix}.` : ``,\n        propertyName = property.property || property.name;\n      var el = this.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        propertyPrefix: propertyPrefix,\n        propertyName: propertyName,\n        language: this.language,\n        resources: this.resources\n      });\n      if (property.component.name === \"paper-input\") {\n        el.style[\"background-color\"] = \"transparent\";\n        el.style[\"width\"] = \"100%\";\n      }\n      el.setAttribute(\"name\", `${propertyPrefix}${propertyName}`);\n      if (property.schema.hidden && property.schema.hidden !== undefined) {\n        el.setAttribute(\"hidden\", property.schema.hidden);\n      }\n\n      //allows the first form fields to be focused on autopmatically\n      if (autofocus) el.setAttribute(\"autofocus\", autofocus);\n      //turns of focus on subsequent form fields\n      autofocus = false;\n      el.className = \"flex start-justified\";\n      // set the element's default value to be what was passed into the schema\n      el[property.component.valueProperty] = property.value;\n      // support component attribute overrides\n      for (var attr in property.component.attributes) {\n        el.setAttribute(attr, property.component.attributes[attr]);\n      }\n      // support component property overrides\n      for (var prop in property.component.properties) {\n        el[prop] = property.component.properties[prop];\n      }\n      this.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      this.listen(el, \"build-fieldset\", \"_onBuildFieldset\");\n\n      if (typeof this.$ !== typeof undefined) {\n        container.appendChild(el);\n        if (property.description) {\n          var id = \"tip-\" + property.property,\n            tip = document.createElement(\"div\");\n          el.setAttribute(\"aria-describedby\", id);\n          el.setAttribute(\"class\", \"has-tooltip-desc\");\n          tip.setAttribute(\"id\", id);\n          tip.setAttribute(\n            \"class\",\n            \"tooltip-desc desc-for-\" + property.component.name\n          );\n          if (property.schema.hidden === true)\n            tip.setAttribute(\"hidden\", \"hidden\");\n          tip.setAttribute(\"role\", \"tooltip\");\n          tip.innerHTML = property.description;\n          container.appendChild(tip);\n        }\n      }\n      // support for slot injection too!\n      if (property.component.slot != \"\") {\n        let temp = document.createElement(\"div\");\n        temp.innerHTML = property.component.slot;\n        let cloneDiv = temp.cloneNode(true);\n        while (cloneDiv.firstChild !== null) {\n          el.appendChild(cloneDiv.firstChild);\n        }\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"form-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    });\n  }\n  /**\n   * handles fieldset requests from containers like fieldsets, tabs, or arrays\n   * @param {event} event the \"build-fieldset\" event\n   * @param {object} detail the details of the event, as in:```\n{\n  prefix: the prefix for the fields \n  properties: []     //an array of schema properties,\n  container: <div/>  //the container element,\n}\n  ```\n   */\n  _onBuildFieldset(event, detail) {\n    if (typeof this.get(`value.${detail.prefix}`) === typeof undefined)\n      this.set(`value.${detail.path}`, this._deepClone(detail.value));\n    this._clearForm(detail.container);\n    this._buildForm(detail.properties, detail.container, detail.prefix);\n  }\n  /**\n   * removes a field element\n   * @param {object} el the element to remove\n   * @param {*} parent the container where the field element exists\n   */\n  _removePropertyEl(el, parent = this) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    parent.removeChild(el);\n  }\n  /**\n   * clears a form or a fieldset container within a form\n   * @param {object} el the element to remove\n   * @param {*} parent the container where the field element exists\n   */\n  _clearForm(container = this) {\n    if (typeof this.$ !== typeof undefined) {\n      var formEl = container;\n      while (formEl.firstChild) {\n        this._removePropertyEl(formEl.firstChild, container);\n      }\n    }\n  }\n  /**\n   * updates the form when the schema changes\n   * @param {object} newValue the new value for the schema\n   * @param {object} oldValue the old value for the schema\n   */\n  _schemaChanged(newValue, oldValue) {\n    if (newValue && newValue !== oldValue) {\n      this._clearForm();\n      this._schemaProperties = this._buildSchemaProperties();\n      this._buildForm();\n      this._setValue();\n    }\n  }\n  /**\n   * handles errors\n   * @todo how do we want to handle errors for nested fields?\n   */\n  _errorChanged() {\n    /*\n    console.log(\n      \"_errorChanged\",\n      this,\n      this.querySelectorAll(\"[name]\"),\n      this.error\n    );*/\n    this.childNodes.forEach(el => {\n      var name = el.getAttribute(\"name\");\n      if (this.error && this.error[name]) {\n        el.error = this.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  /**\n   * clones an object and all its subproperties\n   * @param {object} o the object to clone\n   * @returns {object} the cloned object\n   */\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  _isSchemaFieldset(type) {\n    return type === \"fieldset\";\n  }\n  _isSchemaTabs(type) {\n    return type === \"tabs\";\n  }\n  _isSchemaMarkup(type) {\n    return type === \"markup\";\n  }\n  focus() {\n    //console.log(this);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaObject.tag, EcoJsonSchemaObject);\nexport { EcoJsonSchemaObject };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-pages/iron-pages.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"./eco-json-schema-object.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n\n/**\n`eco-json-schema-wizard` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-wizard schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-wizard>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-wizard\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaWizard extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-wizard\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host {\n          display: block;\n          @apply --layout-vertical;\n        }\n\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #fff;\n          }\n        }\n\n        .box,\n        #form {\n          display: -webkit-box;\n          display: -webkit-flex;\n          display: -moz-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-flex-align: center;\n          -ms-flex-align: center;\n          -webkit-align-items: center;\n          align-items: center;\n        }\n\n        .fullbleed {\n          z-index: 1;\n        }\n\n        app-toolbar.bottom {\n          --app-toolbar-color: var(--app-primary-color);\n          --app-toolbar-background: var(--dark-theme-text-color);\n        }\n\n        app-toolbar.bottom paper-icon-button {\n          --app-toolbar-color: var(--dark-theme-text-color);\n          --app-toolbar-background: var(--app-primary-color);\n        }\n      </style>\n      <div class=\"vertical flex layout fullbleed\">\n        <!--\n        paper-icon-button id=\"camButton\" icon=\"editor:insert-photo\" raised>add photo</paper-icon-button\n      -->\n        <app-toolbar>\n          <paper-icon-button\n            id=\"prevButton\"\n            icon=\"arrow-back\"\n            hidden\\$=\"{{!hasPrev}}\"\n            on-click=\"prev\"\n            raised=\"\"\n            >{{localize('prev')}}</paper-icon-button\n          ><span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n            >[[title]]</span\n          >\n          <paper-icon-button\n            id=\"nextButton\"\n            icon=\"arrow-forward\"\n            hidden\\$=\"{{!hasNext}}\"\n            on-click=\"next\"\n            raised=\"\"\n            >{{localize('next')}}</paper-icon-button\n          >\n          <paper-icon-button\n            id=\"submitButton\"\n            icon=\"cloud-upload\"\n            on-click=\"submit\"\n            raised=\"\"\n            >{{localize('submit')}}</paper-icon-button\n          >\n        </app-toolbar>\n        <iron-pages\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          role=\"main\"\n          selected=\"[[page]]\"\n          attr-for-selected=\"name\"\n        ></iron-pages>\n        <app-toolbar class=\"bottom\">\n          <div hidden\\$=\"{{!hasPrev}}\" on-click=\"prev\">\n            <paper-icon-button id=\"prevButton\" icon=\"arrow-back\" raised=\"\"\n              >{{localize('prev')}}</paper-icon-button\n            >\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('prev')}}</span\n            >\n          </div>\n          <span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n          ></span>\n          <div hidden\\$=\"{{!hasNext}}\" on-click=\"next\">\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('next')}}</span\n            >\n            <paper-icon-button id=\"nextButton\" icon=\"arrow-forward\" raised=\"\"\n              >{{localize('next')}}</paper-icon-button\n            >\n          </div>\n        </app-toolbar>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        type: String,\n        notify: true\n      },\n      resources: {\n        type: Object,\n        notify: true\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      page: {\n        type: String,\n        notify: true,\n        observer: \"_pageChanged\"\n      },\n      pages: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      isReview: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n      canSubmit: {\n        type: Boolean,\n        notify: true\n      },\n      hasNext: {\n        type: Boolean,\n        notify: true\n      },\n      hasPrev: {\n        type: Boolean,\n        notify: true\n      },\n      titles: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      title: {\n        type: String,\n        value: \"\",\n        notify: true\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  _buildSchemaProperties() {\n    var ctx = this;\n\n    this._schemaProperties = Object.keys(this.schema.properties || []).map(\n      function(key) {\n        var schema = ctx.schema.properties[key];\n        var property = {\n          property: key,\n          label: schema.title || key,\n          schema: schema,\n          component: schema.component || {}\n        };\n\n        if (!property.component.valueProperty) {\n          property.component.valueProperty = \"value\";\n        }\n\n        if (ctx._isSchemaEnum(schema)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-enum\";\n          property.value = \"\";\n        } else if (ctx._isSchemaBoolean(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-boolean\";\n          property.value = false;\n        } else if (ctx._isSchemaFile(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-file\";\n          property.value = \"\";\n        } else if (ctx._isSchemaValue(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-input\";\n          property.value = \"\";\n        } else if (ctx._isSchemaObject(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-object\";\n          property.component.wizard = true;\n          property.value = {};\n        } else if (ctx._isSchemaArray(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-array\";\n          property.value = [];\n        } else {\n          return console.error(\"Unknown property type %s\", schema.type);\n        }\n        ctx.push(\"pages\", key);\n        ctx.push(\"titles\", schema.title);\n\n        return property;\n      }\n    );\n  }\n  _schemaPropertyChanged(event, detail) {\n    if (detail.path && /\\.length$/.test(detail.path)) {\n      return;\n    }\n\n    var ctx = this;\n    var property = event.target.schemaProperty;\n    var path = [\"value\", property.property];\n\n    if (detail.path && /\\.splices$/.test(detail.path)) {\n      var parts = detail.path.split(\".\").slice(1, -1);\n      while (parts.length) {\n        path.push(parts.shift());\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n\n      if (detail.value.keySplices) {\n        if (property.keyMap) {\n          detail.value.keySplices.forEach(function(splice) {\n            splice.removed.forEach(function(k) {\n              delete property.keyMap[path.concat([k]).join(\".\")];\n            });\n          });\n        }\n      }\n\n      detail.value.indexSplices.forEach(function(splice) {\n        var args = [path.join(\".\"), splice.index, splice.removed.length];\n        if (splice.addedCount) {\n          for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n            if (splice.addedKeys && splice.addedKeys[i]) {\n              property.keyMap = property.keyMap || {};\n              property.keyMap[\n                path.concat([splice.addedKeys[i]]).join(\".\")\n              ] = path.concat([i + splice.index]).join(\".\");\n            }\n            args.push(ctx._deepClone(splice.object[i + splice.index]));\n          }\n        }\n        ctx.splice.apply(ctx, args);\n      });\n    } else if (detail.path) {\n      var parts = detail.path.split(\".\").slice(1);\n      var v = this.value;\n      if (!v.hasOwnProperty(property.property)) {\n        this.set(\"value.\" + property.property, {});\n      }\n      while (parts.length) {\n        var k = parts.shift();\n        path.push(k);\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n      this.set(path.join(\".\"), this._deepClone(detail.value));\n\n      console.log(\"value: \" + JSON.stringify(this.value));\n    }\n  }\n  _setValue() {\n    var ctx = this;\n    var value = {};\n    this._schemaProperties.forEach(function(property) {\n      value[property.property] = ctx._deepClone(property.value);\n    });\n    this.value = value;\n  }\n  _buildForm() {\n    var ctx = this;\n    this._schemaProperties.forEach(property => {\n      var el = ctx.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        language: this.language,\n        resources: this.resources\n      });\n\n      el.setAttribute(\"name\", property.property);\n      el.className = \"flex start-justified\";\n\n      property.value = el[property.component.valueProperty];\n      ctx.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      ctx.shadowRoot.querySelector(\"#form\").appendChild(el);\n    });\n  }\n  _removePropertyEl(el) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    this.shadowRoot.querySelector(\"#form\").removeChild(el);\n  }\n  _clearForm() {\n    var formEl = this.shadowRoot.querySelector(\"#form\");\n    while (formEl.firstChild) {\n      this._removePropertyEl(formEl.firstChild);\n    }\n  }\n  _schemaChanged() {\n    this._clearForm();\n    this._buildSchemaProperties();\n    this._buildForm();\n    this._setValue();\n    if (this.pages.length > 0) {\n      this.set(\"page\", this.pages[0]);\n    }\n    this.set(\"title\", this.titles[0]);\n  }\n  next() {\n    var current = this.pages.indexOf(this.page);\n    var next = current;\n    if (current !== -1) {\n      if (current < this.pages.length - 1) {\n        next = current + 1;\n      }\n      this.set(\"page\", this.pages[next]);\n      this.set(\"title\", this.titles[next]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  prev() {\n    var current = this.pages.indexOf(this.page);\n    var prev = current;\n    if (current !== -1) {\n      if (current > 0) {\n        prev = current - 1;\n      }\n      this.set(\"page\", this.pages[prev]);\n      this.set(\"title\", this.titles[prev]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  submit() {\n    this.dispatchEvent(\n      new CustomEvent(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n  }\n  _pageChanged() {\n    var current = this.pages.indexOf(this.page);\n    if (current === 0) {\n      this.set(\"hasPrev\", false);\n    } else {\n      this.set(\"hasPrev\", true);\n    }\n    if (current === this.pages.length - 1) {\n      this.set(\"hasNext\", false);\n    } else {\n      this.set(\"hasNext\", true);\n    }\n  }\n  _errorChanged() {\n    var ctx = this;\n    this.shadowRoot.querySelector(\"#form\").childNodes.forEach(function(el) {\n      var name = el.getAttribute(\"name\");\n      if (ctx.error && ctx.error[name]) {\n        el.error = ctx.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaWizard.tag, EcoJsonSchemaWizard);\nexport { EcoJsonSchemaWizard };\n"],"names":["EcoJsonSchemaArray","mixinBehaviors","AppLocalizeBehavior","PolymerElement","obj","Object","keys","map","key","__headings","_schemaChanged","addEventListener","e","_this2","_updateHeadings","removeEventListener","_this3","afterNextRender","this","itemLabel","_this4","schema","items","Array","isArray","value","forEach","val","push","shadowRoot","querySelectorAll","item","index","getAttribute","propertyName","propertyPrefix","prefix","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","container","path","properties","prop","newprop","JSON","parse","stringify","name","type","tag","notifyPath","target","controls","replace","splice","propname","pathArr","split","length","update","set","headings","label","trim","html","globalOptions","icon","tooltip","notify","String","observer","window","customElements","define","EcoJsonSchemaFieldset","_this","EcoJsonSchemaMarkup","newValue","wipeSlot","encapScript","frag","document","createRange","createContextualFragment","appendChild","EcoJsonSchemaTabs","tab","EcoJsonSchemaBoolean","inputEl","querySelector","component","title","_label","_isSchemaBoolean","_isSchemaNumber","_isSchemaString","indexOf","Boolean","error","EcoJsonSchemaEnum","IronValidatableBehavior","_items","filter","invalid","EcoJsonSchemaFile","_showDropText","raised","toggleAttribute","noink","droppable","setupDrop","uploadBorder","toggleClass","ondragover","stopPropagation","effect","dataTransfer","dropEffect","effectAllowed","ondragleave","ondrop","event","preventDefault","multi","files","i","file","mimeType","match","fileType","accept","progress","complete","uploadFile","elem","createEvent","evt","initEvent","xhr","abort","cancel","model","__data__","self","microTask","run","reader","FileReader","r","result","attributes","hasOwnProperty","readAsDataURL","console","log","_isSchemaFile","s","language","resources","dropText","headers","retryText","removeText","successText","errorText","_shownDropText","additional","fileDataName","paperButtonAlt","paperButtonTitle","EcoJsonSchemaInput","required","multipleOf","step","isNaN","maximum","exclusiveMaximum","max","minimum","exclusiveMinimum","min","format","alwaysFloatLabel","maxLength","maxlength","minLength","minlength","pattern","errorMessage","EcoJsonSchemaObject","_clearForm","thisSchema","ctx","property","description","valueProperty","slot","_isSchemaEnum","_typeof","_isSchemaValue","_isSchemaObject","_isSchemaArray","_buildNestedSchemaProperties","_isSchemaFieldset","_isSchemaTabs","_isSchemaMarkup","_buildSchemaProperties","test","schemaProperty","concat","_deepClone","parts","slice","shift","keyMap","join","keySplices","removed","k","indexSplices","args","addedCount","ii","addedKeys","object","apply","props","_schemaProperties","setter","autofocus","editorValue","theme","codeTheme","el","create","attr","style","setAttribute","hidden","undefined","className","listen","toLowerCase","$","id","tip","createElement","innerHTML","temp","cloneDiv","cloneNode","firstChild","get","_buildForm","parent","unlisten","removeChild","formEl","_removePropertyEl","oldValue","_setValue","childNodes","o","wizard","EcoJsonSchemaWizard","pages","titles","current","page","next","prev","isReview","canSubmit","hasNext","hasPrev"],"mappings":"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"}