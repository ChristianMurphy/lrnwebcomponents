{"version":3,"file":"eco-json-schema-form.umd.js","sources":["lib/eco-json-schema-array.js","lib/eco-json-schema-tabs.js","lib/eco-json-schema-boolean.js","lib/eco-json-schema-enum.js","lib/eco-json-schema-file.js","lib/eco-json-schema-input.js","lib/eco-json-schema-object.js","lib/eco-json-schema-wizard.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\n/**\n`eco-json-schema-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-array\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaArray extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-array\";\n  }\n  constructor() {\n    super();\n    import(\"@polymer/iron-icons/iron-icons.js\");\n    import(\"@polymer/iron-icons/editor-icons.js\");\n    import(\"@polymer/paper-icon-button/paper-icon-button.js\");\n    import(\"@lrnwebcomponents/a11y-collapse/a11y-collapse.js\");\n    import(\"@lrnwebcomponents/a11y-collapse/lib/a11y-collapse-group.js\");\n  }\n  static get template() {\n    return html`\n      <style include=\"iron-flex iron-flex-alignment\">\n        :host {\n          color: var(--eco-json-form-color);\n          background-color: var(--eco-json-form-bg);\n          font-family: var(--eco-json-form-font-family);\n        }\n        :host ([hidden]) {\n          display: none;\n        }\n        :host fieldset {\n          border-radius: var(--eco-json-form-border-radius);\n          border-style: solid;\n          border-width: 1px;\n          border-color: var(--eco-json-form-faded-color);\n          transition: all 0.5s;\n        }\n        :host legend {\n          transition: all 0.5s;\n          color: var(--eco-json-form-faded-color);\n        }\n        :host fieldset:focus #legend,\n        :host fieldset:focus-within #legend {\n          color: var(--eco-json-form-active-color);\n        }\n        :host .array-item-button {\n          color: var(--eco-json-form-faded-color);\n          background-color: var(--eco-json-form-bg);\n          text-transform: none;\n          margin-bottom: 0;\n        }\n        :host .array-item-button:focus,\n        :host .array-item-button:hover {\n          color: var(--eco-json-form-active-color);\n        }\n        :host .add-array-item iron-icon {\n          padding: 8px;\n        }\n        :host .add-array-item {\n          color: var(--eco-json-form-add-color);\n          border-radius: 0 0 var(--eco-json-form-border-radius);\n          border: 1px solid var(--eco-json-form-bg);\n          margin: 0;\n          padding: 0 8px 0 16px;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        :host .add-array-item:focus,\n        :host .add-array-item:hover {\n          color: var(--eco-json-form-add-color);\n          background-color: var(--eco-json-form-faded-bg);\n          border: 1px solid var(--eco-json-form-faded-color);\n        }\n        :host .remove-array-item {\n          color: var(--eco-json-form-remove-color);\n          background-color: var(--eco-json-form-bg);\n          margin: 15px 0 0 0;\n          border-radius: 100%;\n        }\n        :host .remove-array-item:focus,\n        :host .remove-array-item:hover {\n          color: var(--eco-json-form-remove-color);\n          background-color: var(--eco-json-form-faded-bg);\n        }\n        :host a11y-collapse-group {\n          margin: 0;\n          border-radius: var(--eco-json-form-border-radius);\n          --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);\n        }\n        :host a11y-collapse {\n          --a11y-collapse-padding-right: 8px;\n          border: 1px solid var(--eco-json-form-bg);\n          --a11y-collapse-heading: {\n            color: var(--eco-json-form-faded-color);\n            background-color: var(--eco-json-form-bg);\n            font-weight: normal;\n            margin: 0;\n          }\n          --a11y-collapse-icon: {\n            padding: 8px;\n          }\n        }\n        :host a11y-collapse:focus,\n        :host a11y-collapse:hover,\n        :host a11y-collapse[expanded] {\n          border: 1px solid var(--eco-json-form-faded-color);\n          --a11y-collapse-heading: {\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-faded-bg);\n            font-weight: normal;\n            margin: 0;\n          }\n        }\n        :host p[slot=\"heading\"] {\n          margin: 0;\n        }\n        :host div[slot=\"content\"] > div {\n          width: 100%;\n          display: flex;\n          align-items: flex-end;\n          justify-content: space-between;\n        }\n        :host eco-json-schema-object {\n          flex: 1 0 auto;\n        }\n      </style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden\\$=\"[[!label]]\">\n          [[label]]\n        </legend>\n        <a11y-collapse-group\n          id=\"form\"\n          icon=\"settings\"\n          class=\"vertical flex layout\"\n          global-options=\"[[globalOptions]]\"\n        >\n          <template\n            is=\"dom-repeat\"\n            items=\"[[__validatedSchema]]\"\n            as=\"item\"\n            restamp\n          >\n            <a11y-collapse accordion id$=\"item-[[index]]\">\n              <p slot=\"heading\">\n                {{_getHeading(item.value.*,item.label,index)}}\n              </p>\n              <div slot=\"content\">\n                <div>\n                  <eco-json-schema-object\n                    id=\"schemaobject\"\n                    controls$=\"item-[[index]]\"\n                    item=\"[[index]]\"\n                    autofocus$=\"[[autofocus]]\"\n                    on-value-changed=\"_valueChanged\"\n                    hide-line-numbers$=\"[[hideLineNumbers]]\"\n                    schema=\"[[item]]\"\n                    value=\"{{item.value}}\"\n                  >\n                  </eco-json-schema-object>\n                  <paper-icon-button\n                    id=\"remove-[[index]]\"\n                    icon=\"icons:delete\"\n                    aria-label=\"Remove this item\"\n                    aria-describedby=\"item-[[index]]\"\n                    class=\"remove-array-item array-item-button\"\n                    controls=\"item-[[index]]\"\n                    on-tap=\"_onRemoveItem\"\n                    role=\"button\"\n                  >\n                  </paper-icon-button>\n                  <paper-tooltip for=\"remove-[[index]]\"\n                    >Remove this item</paper-tooltip\n                  >\n                </div>\n              </div>\n            </a11y-collapse>\n          </template>\n        </a11y-collapse-group>\n        <paper-button\n          class=\"add-array-item array-item-button\"\n          on-click=\"_onAddItem\"\n          role=\"button\"\n        >\n          Add an item\n          <iron-icon icon=\"add-circle\"></iron-icon>\n        </paper-button>\n      </fieldset>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: Boolean,\n        value: false\n      },\n      globalOptions: {\n        type: Object,\n        value: {\n          icon: \"settings\",\n          tooltip: \"configure item\"\n        }\n      },\n      /**\n       * hide code-editor line numbers\n       */\n      hideLineNumbers: {\n        type: Boolean,\n        value: false\n      },\n      label: {\n        type: String\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      /**\n       * Fields to conver to JSON Schema.\n       */\n      __validatedSchema: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n  }\n  /**\n   * handles adding an array item\n   * @param {event} e the add item button tap event\n   */\n  _onAddItem(e) {\n    let schema = JSON.parse(JSON.stringify(this.schema.items));\n    schema.value = {};\n    this.push(\"__validatedSchema\", schema);\n  }\n  /**\n   * handles removing an array item\n   * @param {event} e the remove item button tap event\n   */\n  _onRemoveItem(e) {\n    this._valueChanged(e);\n    let id = e.target.controls.split(\"-\");\n    this.splice(\"__validatedSchema\", id[1], 1);\n  }\n  /**\n   * labels the collapse heading based on a given property\n   * @param {object} item the array item\n   * @param {string} prop the property that will populate the collapse heading\n   * @param {number} index the  index of the item\n   */\n  _getHeading(item, prop, index) {\n    return item &&\n      item.base &&\n      prop &&\n      item.base[prop] &&\n      typeof item.base[prop] === \"string\" &&\n      item.base[prop].trim(\"\") !== \"\"\n      ? item.base[prop].trim(\"\")\n      : `Item ${index + 1}`;\n  }\n  /**\n   * Handles data changes\n   * @param {event} e the change event\n   */\n  _valueChanged(e) {\n    let root = this,\n      val = this.__validatedSchema.map(item => {\n        return item.value;\n      });\n    this.notifyPath(\"value.*\");\n    this.set(\"value\", val);\n    this.dispatchEvent(\n      new CustomEvent(\"value-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n\n  /**\n   * fires when the fields array changes\n   * @param {object} oldValue the old value\n   * @param {object} newValue the new value\n   */\n  _schemaChanged(oldValue, newValue) {\n    let root = this;\n    //prevent a potential feedback loop\n    if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      this._setValues();\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"schema-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n  /**\n   * when either the fields or the value changes, updates the schema and form to match\n   */\n  _setValues() {\n    let schema = [];\n    for (let i = 0; i < this.schema.value.length; i++) {\n      let item = this.schema.value[i];\n      schema[i] = JSON.parse(JSON.stringify(this.schema.items));\n      for (let prop in item) {\n        if (schema[i].properties[prop])\n          schema[i].properties[prop].value = item[prop];\n      }\n    }\n    this.notifyPath(\"__validatedSchema.*\");\n    this.__validatedSchema = schema;\n  }\n}\nwindow.customElements.define(EcoJsonSchemaArray.tag, EcoJsonSchemaArray);\nexport { EcoJsonSchemaArray };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@lrnwebcomponents/a11y-tabs/a11y-tabs.js\";\n/**\n`eco-json-schema-tabs` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-tabs\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaTabs extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-tabs\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host{\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n          }\n          :host ([hidden]) {\n            display: none;\n          }\n          :host #form {\n            --a11y-tabs-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-focus-color: var(--eco-json-form-color);\n            --a11y-tabs-border-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-border-radius: var(--eco-json-form-border-radius);\n            --a11y-tabs-background: var(--eco-json-form-bg);\n            --a11y-tabs-faded-background: var(--eco-json-form-faded-bg);\n            --a11y-tabs-justify-tabs: flex-start;\n            --ally-tabs-wrap: unset;\n            --a11y-tabs-content-padding: 8px 16px 16px;\n            --a11y-tabs-button-padding: 8px;\n            --a11y-tabs-vertical-button-padding: unset;\n            --a11y-tabs-horizontal-border-radius: unset;\n            --a11y-tabs-vertical-border-radius: unset;\n            --a11y-tabs-horizontal-button-padding: 2px 5px;\n          }\n          :host #form:focus,\n          :host #form:focus-within {\n            --a11y-tabs-border-color: : var(--eco-json-form-focus-color);\n          }\n          :host .tab-title {\n            position: absolute;\n            left: -99999px;\n            height: 0;\n            overflow: hidden;\n          }\n        </style>\n      </custom-style>\n      <a11y-tabs id=\"form\">\n        <template\n          is=\"dom-repeat\"\n          items=\"[[__validatedSchema]]\"\n          as=\"item\"\n          restamp\n        >\n          <a11y-tab\n            id$=\"item-[[index]]\"\n            icon$=\"[[item.icon]]\"\n            label$=\"[[item.title]]\"\n          >\n            <eco-json-schema-object\n              id=\"schemaobject\"\n              controls$=\"item-[[index]]\"\n              item=\"[[index]]\"\n              autofocus$=\"[[autofocus]]\"\n              on-value-changed=\"_valueChanged\"\n              hide-line-numbers$=\"[[hideLineNumbers]]\"\n              schema=\"[[item]]\"\n              value=\"{{item.value}}\"\n            >\n            </eco-json-schema-object>\n          </a11y-tab>\n        </template>\n      </a11y-tabs>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * hide code-editor line numbers\n       */\n      hideLineNumbers: {\n        type: Boolean,\n        value: false\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Array,\n        notify: true,\n        value: {}\n      },\n      /**\n       * Fields to conver to JSON Schema.\n       */\n      __validatedSchema: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n  }\n  /**\n   * Handles data changes\n   * @param {event} e the change event\n   */\n  _valueChanged(e) {\n    let root = this,\n      val = this.__validatedSchema.map(item => {\n        return item.value;\n      });\n    this.notifyPath(\"value.*\");\n    this.set(\"value\", val);\n    this.dispatchEvent(\n      new CustomEvent(\"value-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n\n  /**\n   * fires when the fields array changes\n   * @param {object} oldValue the old value\n   * @param {object} newValue the new value\n   */\n  _schemaChanged(oldValue, newValue) {\n    let root = this;\n    //prevent a potential feedback loop\n    if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      this._setValues();\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"schema-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n  /**\n   * when either the fields or the value changes, updates the schema and form to match\n   */\n  _setValues() {\n    let schema = [];\n    for (let prop in this.schema.items.properties) {\n      let tab = {\n        title: this.schema.items.properties[prop].title,\n        icon: this.schema.items.properties[prop].icon,\n        properties: this.schema.items.properties[prop].items\n          ? this.schema.items.properties[prop].items.properties\n          : {},\n        value:\n          this.value && this.value[prop]\n            ? JSON.parse(JSON.stringify(this.value[prop]))\n            : {}\n      };\n      for (let subprop in tab.properties) {\n        if (tab.properties.value) delete tab.properties.value;\n        if (this.value && this.value[prop])\n          tab.properties[subprop].value = this.value[prop][subprop];\n      }\n      schema.push(tab);\n    }\n    this.notifyPath(\"__validatedSchema.*\");\n    this.__validatedSchema = [];\n    this.__validatedSchema = schema;\n  }\n}\nwindow.customElements.define(EcoJsonSchemaTabs.tag, EcoJsonSchemaTabs);\nexport { EcoJsonSchemaTabs };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nclass EcoJsonSchemaBoolean extends PolymerElement {\n  static get tag() {\n    return \"eco-json-schema-boolean\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-checkbox {\n          display: block;\n          font-size: 16px;\n          white-space: normal;\n          margin: var(--eco-json-field-margin, 0 0 15px);\n          --paper-checkbox-checkmark-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-unchecked-background-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-checked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-color,\n            var(--secondary-text-color, #888)\n          );\n        }\n        :host paper-checkbox:focus {\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n        }\n      </style>\n\n      <paper-checkbox\n        id=\"checkbox\"\n        class=\"flex\"\n        hidden$=\"[[hidden]]\"\n        checked=\"{{value}}\"\n        invalid=\"[[error]]\"\n        >[[_label]]</paper-checkbox\n      >\n    `;\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Boolean,\n        notify: true,\n        value: false\n      },\n      error: {\n        type: Boolean,\n        value: false\n      },\n      _label: {\n        type: String,\n        notify: true,\n        value: \"\"\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.checkbox;\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    if (schema.title) {\n      this._label = schema.title;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaBoolean.tag, EcoJsonSchemaBoolean);\nexport { EcoJsonSchemaBoolean };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport { IronValidatableBehavior } from \"@polymer/iron-validatable-behavior/iron-validatable-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\n\nclass EcoJsonSchemaEnum extends mixinBehaviors(\n  [IronValidatableBehavior],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        paper-dropdown-menu {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n          --paper-dropdown-menu-button: {\n            padding: 2px;\n          }\n        }\n      </style>\n\n      <paper-dropdown-menu\n        id=\"dropdown\"\n        class=\"layout horizontal vertical\"\n        value=\"{{value}}\"\n        required=\"\"\n      >\n        <paper-dropdown-menu class=\"dropdown-content\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"0\">\n            <template is=\"dom-repeat\" items=\"[[_items]]\">\n              <paper-item class=\"flex\" label=\"[[item]]\">[[item]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </paper-dropdown-menu>\n    `;\n  }\n  static get tag() {\n    return \"eco-json-schema-enum\";\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value: null\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      },\n      _items: {\n        type: Object,\n        value() {\n          return {};\n        }\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.dropdown;\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    this._items = schema.enum.filter(function(item) {\n      return item !== null;\n    });\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.$.dropdown.invalid = true;\n    } else {\n      this.$.dropdown.invalid = false;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaEnum.tag, EcoJsonSchemaEnum);\nexport { EcoJsonSchemaEnum };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { microTask } from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n`eco-json-schema-file` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-file\n* @demo demo/index.html\n*/\n\nclass EcoJsonSchemaFile extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-file\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        :host {\n          display: inline-block;\n        }\n\n        .enabled {\n          border: 1px dashed #555;\n          @apply --file-upload-upload-border-enabled;\n        }\n\n        .hover {\n          opacity: 0.7;\n          border: 1px dashed #111;\n          @apply --file-upload-upload-border-hover;\n        }\n\n        #UploadBorder {\n          vertical-align: middle;\n          color: #555;\n          padding: 20px;\n          max-height: 300px;\n          overflow-y: auto;\n          display: inline-block;\n          @apply --file-upload-upload-border;\n        }\n\n        #dropArea {\n          text-align: center;\n          @apply --file-upload-drop-area;\n        }\n\n        paper-button#button {\n          margin-bottom: 20px;\n          @apply --file-upload-button;\n        }\n\n        .file {\n          padding: 10px 0px;\n          @apply --file-upload-file;\n        }\n\n        .commands {\n          float: right;\n          @apply --file-upload-commands;\n        }\n\n        .commands iron-icon:not([icon=\"check-circle\"]) {\n          cursor: pointer;\n          opacity: 0.9;\n          @apply --file-upload-commands-faded;\n        }\n\n        .commands iron-icon:hover {\n          opacity: 1;\n          @apply --file-upload-commands-hovered;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        .error {\n          color: #f40303;\n          font-size: 11px;\n          margin-top: 2px;\n          @apply --file-upload-error;\n        }\n\n        .progress-bar {\n          margin-top: 2px;\n        }\n\n        paper-progress {\n          --paper-progress-active-color: #03a9f4;\n        }\n\n        paper-progress[error] {\n          --paper-progress-active-color: #f40303;\n        }\n      </style>\n\n      <div class=\"layout horizontal nowrap\">\n        <div>\n          <paper-button\n            id=\"button\"\n            on-click=\"_fileClick\"\n            alt=\"{{paperButtonAlt}}\"\n            raised=\"\"\n          >\n            <iron-icon icon=\"editor:attach-file\"></iron-icon\n            >{{paperButtonTitle}}</paper-button\n          >\n          <div id=\"UploadBorder\">\n            <div id=\"dropArea\" hidden\\$=\"{{!_shownDropText}}\">{{dropText}}</div>\n            <template is=\"dom-repeat\" items=\"{{files}}\">\n              <div class=\"file\">\n                <div class=\"name\">\n                  <span>{{item.name}}</span>\n                  <div class=\"commands\">\n                    <iron-icon\n                      icon=\"autorenew\"\n                      title=\"{{retryText}}\"\n                      on-click=\"_retryUpload\"\n                      hidden\\$=\"{{!item.error}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"cancel\"\n                      title=\"{{removeText}}\"\n                      on-click=\"_cancelUpload\"\n                      hidden\\$=\"{{item.complete}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"check-circle\"\n                      title=\"{{successText}}\"\n                      hidden\\$=\"{{!item.complete}}\"\n                    ></iron-icon>\n                  </div>\n                </div>\n                <div class=\"error\" hidden\\$=\"{{!item.error}}\">\n                  {{errorText}}\n                </div>\n              </div>\n            </template>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          on-change=\"_fileChange\"\n          hidden=\"\"\n          multiple=\"{{multi}}\"\n          accept=\"{{accept}}\"\n        />\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\",\n        notify: true\n      },\n      resources: {\n        value() {\n          return {};\n        },\n        notify: true\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        },\n        observer: \"_valueChanged\"\n      },\n      /**\n      error: {\n        type: String,\n        observer: '_errorChanged',\n        value: null\n      },\n      */\n\n      /**\n       * `target` is the target url to upload the files to.\n       * Additionally by adding '<name>' in your url, it will be replaced by\n       * the file name.\n       */\n      target: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `accept` is the set of comma separated file extensions or mime types\n       * to filter as accepted.\n       */\n      accept: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `droppable` indicates whether or not to allow file drop.\n       */\n      droppable: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `dropText` is the  text to display in the file drop area.\n       */\n      dropText: {\n        type: String,\n        value: \"Drop Files Here\"\n      },\n\n      /**\n       * `multi` indicates whether or not to allow multiple files to be uploaded.\n       */\n      multi: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `files` is the list of files to be uploaded\n       */\n      files: {\n        type: Array,\n        notify: true,\n        value() {\n          return [];\n        }\n      },\n\n      /**\n       * `raised` indicates whether or not the button should be raised\n       */\n      raised: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `noink` indicates that the button should not have an ink effect\n       */\n      noink: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `headers` is a key value map of header names and values\n       */\n      headers: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `retryText` is the text for the tooltip to retry an upload\n       */\n      retryText: {\n        type: String,\n        value: \"Retry Upload\"\n      },\n\n      /**\n       * `removeText` is the text for the tooltip to remove an upload\n       */\n      removeText: {\n        type: String,\n        value: \"Remove\"\n      },\n\n      /**\n       * `successText` is the text for the tooltip of a successful upload\n       */\n      successText: {\n        type: String,\n        value: \"Success\"\n      },\n\n      /**\n       * `errorText` is the text to display for a failed upload\n       */\n      errorText: {\n        type: String,\n        value: \"Error uploading file...\"\n      },\n\n      /**\n       * `_shownDropText` indicates whether or not the drop text should be shown\n       */\n      _shownDropText: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `additional` object of key-pair values to send additional values along with file.\n       */\n      additional: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `fileDataName` is the name for the file data in the `formData` object.\n       */\n      fileDataName: {\n        type: String,\n        value: \"file\"\n      },\n\n      /**\n       * `paperButtonAlt` allows changing the alt property on the paper button\n       */\n      paperButtonAlt: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `paperButtonTitle` allows changing the title property on the paper button\n       */\n      paperButtonTitle: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n  /**\n   * Clears the list of files\n   */\n  clear() {\n    this.set(\"files\", []);\n    this.$.fileInput.value = \"\";\n    this._showDropText();\n  }\n\n  ready() {\n    super.ready();\n\n    if (this.raised) {\n      this.toggleAttribute(\"raised\", true, this.$.button);\n    }\n    if (this.noink) {\n      this.toggleAttribute(\"noink\", true, this.$.button);\n    }\n    if (this.droppable) {\n      this._showDropText();\n      this.setupDrop();\n    }\n  }\n\n  /**\n   * A function to set up a drop area for drag-and-drop file uploads\n   */\n  setupDrop() {\n    var uploadBorder = this.$.UploadBorder;\n    this.toggleClass(\"enabled\", true, uploadBorder);\n\n    this.ondragover = function(e) {\n      e.stopPropagation();\n      this.toggleClass(\"hover\", true, uploadBorder);\n\n      // Workaround for allowgin drop from Chome's download footer on OSX\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=234931\n      var effect = e.dataTransfer && e.dataTransfer.dropEffect;\n      var effectAllowed = e.dataTransfer && e.dataTransfer.effectAllowed;\n      if (effect === \"none\" && effectAllowed !== \"none\") {\n        e.dataTransfer.dropEffect = effectAllowed === \"move\" ? \"move\" : \"copy\";\n      }\n      // end of workaround\n\n      return false;\n    };\n\n    this.ondragleave = function() {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      return false;\n    };\n\n    this.ondrop = function(event) {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      event.preventDefault();\n\n      // Check if multiple upload is allowed\n      if (!this.multi && this.files.length !== 0) {\n        return;\n      }\n\n      var length = event.dataTransfer.files.length;\n      for (var i = 0; i < length; i++) {\n        var file = event.dataTransfer.files[i];\n        //if (this.value.indexOf(window.btoa(unescape(encodeURIComponent(file.name)))) >= 0 ) {\n        //  continue;\n        //}\n        // Check if filetype is accepted\n        var mimeType =\n          file.type !== \"\" ? file.type.match(/^[^\\/]*\\//)[0] : null;\n        var fileType = file.name.match(/\\.[^\\.]*$/)[0];\n        if (\n          this.accept !== \"\" &&\n          !(\n            this.accept.indexOf(mimeType) > -1 ||\n            this.accept.indexOf(fileType) > -1\n          )\n        ) {\n          continue;\n        }\n\n        file.progress = 0;\n        file.error = false;\n        file.complete = false;\n        this.push(\"files\", file);\n        this.uploadFile(file);\n      }\n    };\n  }\n\n  /**\n   * Clicks the invisible file input\n   */\n  _fileClick() {\n    var elem = this.$.fileInput;\n    if (elem && document.createEvent) {\n      // sanity check\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initEvent(\"click\", true, false);\n      elem.dispatchEvent(evt);\n    }\n  }\n\n  /**\n   * Called whenever the list of selected files changes\n   *\n   * @param {object} e An event object\n   */\n  _fileChange(e) {\n    var length = e.target.files.length;\n    for (var i = 0; i < length; i++) {\n      var file = e.target.files[i];\n      file.progress = 0;\n      file.error = false;\n      file.complete = false;\n      this.push(\"files\", file);\n      if (!this.multi && this.files.length !== 0) {\n        this.set(\"files\", []);\n        this.set(\"value\", {});\n      }\n      this.uploadFile(file);\n    }\n  }\n\n  /**\n   * Cancels the file upload for a specific file\n   *\n   * @param {object} file An element of the files array\n   */\n  cancel(file) {\n    if (file) {\n      if (file.xhr) {\n        file.xhr.abort();\n      }\n      this.splice(\"files\", this.files.indexOf(file), 1);\n      this._showDropText();\n    }\n  }\n\n  /**\n   * Cancels the file upload\n   *\n   * @param {object} e An event object\n   */\n  _cancelUpload(e) {\n    this.cancel(e.model.__data__.item);\n  }\n\n  /**\n   * Retries to upload the file\n   *\n   * @param {object} e An event object\n   */\n  _retryUpload(e) {\n    e.model.set(\"item.error\", false);\n    e.model.set(\"item.progress\", 0);\n    // The async helps give visual feedback of a retry occurring, even though it's less efficient.\n    var self = this;\n    microTask.run(() => {\n      self.uploadFile(e.model.__data__.item);\n    });\n  }\n\n  /**\n   * Whether or not to display the drop text\n   */\n  _showDropText() {\n    this.set(\"_shownDropText\", !this.files.length && this.droppable);\n  }\n\n  /**\n   * Uploads a file\n   *\n   * @param {object} file An element of the files array\n   */\n  uploadFile(file) {\n    if (!file) {\n      return;\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"before-upload\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n    this._showDropText();\n    var prefix = \"files.\" + this.files.indexOf(file);\n    var self = this;\n\n    var reader = new FileReader();\n\n    reader.addEventListener(\n      \"load\",\n      function() {\n        var r = reader.result;\n        //self.push('value', {\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //self.value.push({\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //console.log('value.'+self.files.indexOf(file));\n        self.set(\n          \"value.\" +\n            self.attributes.name.value +\n            \".\" +\n            self.files.indexOf(file),\n          r\n        );\n        //self.notifyPath('value');\n      },\n      false\n    );\n\n    if (!self.value.hasOwnProperty(self.attributes.name.value)) {\n      this.set(\"value.\" + self.attributes.name.value, {});\n    }\n    reader.readAsDataURL(file);\n  }\n  _valueChanged() {\n    console.log(\"this.value: \" + JSON.stringify(this.value));\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    /*\n    var inputEl = this.$.fileInput;\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    //inputEl.type = 'file';\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n    */\n\n    /*\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n    */\n  }\n  /*\n  _errorChanged() {\n    if (this.error) {\n      this.$.fileInput.errorMessage = this.error;\n      this.$.fileInput.invalid = true;\n    } else {\n      this.$.fileInput.invalid = false;\n      this.$.fileInput.errorMessage = null;\n    }\n  },\n  */\n  _isSchemaValue(type) {\n    return this._isSchemaFile(type);\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  stringify(s) {\n    return JSON.stringify(s);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaFile.tag, EcoJsonSchemaFile);\nexport { EcoJsonSchemaFile };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-styles/typography.js\";\n/**\n`eco-json-schema-input` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-input\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaInput extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-input\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host ([hidden]) {\n            display: none;\n          }\n        </style>\n      </custom-style>\n      <paper-input\n        id=\"input\"\n        class=\"flex\"\n        value=\"{{value}}\"\n        auto-validate\n      ></paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value() {\n          return \"\";\n        }\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.input;\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    if (this._isSchemaNumber(schema.type)) {\n      inputEl.type = \"number\";\n\n      if (schema.multipleOf) {\n        inputEl.step = schema.multipleOf;\n      }\n\n      if (!isNaN(schema.maximum)) {\n        if (schema.exclusiveMaximum) {\n          inputEl.max = schema.maximum - (schema.multipleOf || 1);\n        } else {\n          inputEl.max = schema.maximum;\n        }\n      }\n\n      if (!isNaN(schema.minimum)) {\n        if (schema.exclusiveMinimum) {\n          inputEl.min = schema.minimum + (schema.multipleOf || 1);\n        } else {\n          inputEl.min = schema.minimum;\n        }\n      }\n    }\n\n    if (this._isSchemaString(schema.type)) {\n      if (schema.format === \"date-time\") {\n        inputEl.type = \"datetime-local\";\n        inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n      } else if (schema.format === \"date\") {\n        inputEl.type = \"date\";\n      } else if (schema.format === \"email\") {\n        inputEl.type = \"email\";\n      } else if (schema.format === \"hostname\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv4\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv6\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"uri\") {\n        inputEl.type = \"url\";\n      } else {\n        inputEl.type = \"text\";\n      }\n\n      /*\n        if (schema.maxLength || schema.minLength) {\n          inputEl.charCounter = true;\n        }\n       */\n\n      if (schema.maxLength) {\n        inputEl.maxlength = schema.maxLength;\n      }\n\n      if (schema.minLength) {\n        inputEl.minlength = schema.minLength;\n      }\n\n      if (schema.pattern) {\n        inputEl.pattern = schema.pattern;\n      }\n    }\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.$.input.errorMessage = this.error;\n      this.$.input.invalid = true;\n    } else {\n      this.$.input.invalid = false;\n      this.$.input.errorMessage = null;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaInput.tag, EcoJsonSchemaInput);\nexport { EcoJsonSchemaInput };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-tabs.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n/**\n`eco-json-schema-object` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-object schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-object>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-object\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaObject extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-object\";\n  }\n\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host {\n            --eco-json-field-margin: 0 0 15px;\n            --eco-json-form-border-radius: 2px;\n            --eco-json-form-font-family: var(\n              --paper-font-caption_-_font-family,\n              unset\n            );\n            --eco-json-form-bg: var(--primary-background-color, #fff);\n            --eco-json-form-color: var(--primary-text-color, #222);\n            --eco-json-form-faded-color: #888;\n            --eco-json-form-active-color: var(--primary-color, #000);\n            --eco-json-form-faded-bg: #f0f0f0;\n            --eco-json-form-add-color: #008811;\n            --eco-json-form-add-focus: #007700;\n            --eco-json-form-remove-focus: #cc0000;\n            --eco-json-form-remove-color: #dd0000;\n            --paper-input-container: {\n              padding-top: 0;\n            }\n          }\n          div.layout {\n            height: auto;\n          }\n          #form {\n            display: block;\n            font-family: var(--eco-json-form-font-family);\n            background-color: var(--eco-json-form-bg);\n            color: var(--eco-json-form-color);\n            --paper-tooltip-background: var(--eco-json-form-active-color);\n            --paper-tooltip-text-color: var(--eco-json-form-bg);\n            @apply --eco-json-schema-object-form;\n            @apply --layout-vertical;\n            @apply --layout-wrap;\n          }\n          #form ::slotted(paper-input) {\n            margin-bottom: 15px;\n          }\n          #form ::slotted(*.has-tooltip-desc) {\n            margin-bottom: 0;\n            padding-bottom: 0;\n            --paper-input-container: {\n              margin-bottom: 0;\n              padding-bottom: 0;\n            }\n          }\n          #form ::slotted(div.tooltip-desc) {\n            font-size: 12px;\n            margin: var(--eco-json-field-margin);\n            color: var(--eco-json-form-faded-color);\n          }\n          #form ::slotted(paper-input),\n          #form ::slotted(div.tooltip-desc) {\n            font-family: var(--eco-json-form-font-family);\n          }\n          #form ::slotted(div.desc-for-paper-textarea) {\n            margin-top: -18px;\n            margin-right: 35px;\n          }\n          #form ::slotted(simple-icon-picker),\n          #form ::slotted(simple-colors-picker),\n          #form ::slotted(simple-picker) {\n            --simple-picker-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --simple-picker-float-label-faded-color: var(\n              --eco-json-form-faded-color\n            );\n            --simple-picker-background-color: var(--eco-json-form-bg);\n            --simple-picker-border-color: var(--eco-json-form-faded-color);\n            --simple-picker-sample-focus: {\n              transition: all 0.5s;\n              border: 2px solid var(--eco-json-form-active-color);\n            }\n          }\n          #form ::slotted(code-editor) {\n            margin: 8px 0;\n            padding: 0;\n            --code-editor-float-label-color: var(--eco-json-form-faded-color);\n            --code-editor-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --code-pen-button-color: var(--eco-json-form-faded-color);\n            --code-editor-code: {\n              border: 1px solid var(--eco-json-form-faded-color);\n              border-radius: 2px;\n            }\n            --code-editor-focus-code: {\n              border: 2px solid var(--eco-json-form-active-color);\n            }\n          }\n        </style>\n      </custom-style>\n\n      <template is=\"dom-if\" if=\"{{!wizard}}\">\n        <div class=\"header\" hidden\\$=\"[[!label]]\">[[label]]</div>\n      </template>\n      <div class=\"layout vertical flex start-justified\">\n        <div\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          aria-live=\"polite\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      wizard: {\n        type: Boolean,\n        notify: true\n      },\n      /**\n       * the name of the code-editor theme\n       */\n      codeTheme: {\n        type: String,\n        value: \"vs-light-2\"\n      },\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  _buildSchemaProperties() {\n    var ctx = this;\n    this._schemaProperties = Object.keys(this.schema.properties || []).map(\n      key => {\n        var schema = ctx.schema.properties[key];\n        var property = {\n          property: key,\n          label: schema.title || key,\n          schema: schema,\n          label: schema.title || key,\n          description: schema.description,\n          component: schema.component || {}\n        };\n\n        if (!property.component.valueProperty) {\n          property.component.valueProperty = \"value\";\n        }\n        if (!property.component.slot) {\n          property.component.slot = \"\";\n        }\n        if (ctx._isSchemaEnum(schema)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-enum\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = \"\";\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaBoolean(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-boolean\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = false;\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaFile(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-file\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = {};\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaValue(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-input\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = \"\";\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaObject(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-object\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = {};\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaArray(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-array\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = [];\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaTabs(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-tabs\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = {};\n          }\n          property.value = schema.value;\n        } else {\n          return console.error(\"Unknown property type %s\", schema.type);\n        }\n        return property;\n      }\n    );\n  }\n  _schemaPropertyChanged(event, detail) {\n    if (detail) {\n      if (detail.path && /\\.length$/.test(detail.path)) {\n        return;\n      }\n      var ctx = this;\n      var property = event.target.schemaProperty;\n      var path = [\"value\", property.property];\n\n      if (detail.path && /\\.splices$/.test(detail.path)) {\n        var parts = detail.path.split(\".\").slice(1, -1);\n        while (parts.length) {\n          path.push(parts.shift());\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n\n        if (detail.value.keySplices) {\n          if (property.keyMap) {\n            detail.value.keySplices.forEach(splice => {\n              splice.removed.forEach(k => {\n                delete property.keyMap[path.concat([k]).join(\".\")];\n              });\n            });\n          }\n        }\n\n        if (detail.value) {\n          detail.value.indexSplices.forEach(splice => {\n            var args = [path.join(\".\"), splice.index, splice.removed.length];\n            if (splice.addedCount) {\n              for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n                if (splice.addedKeys && splice.addedKeys[i]) {\n                  property.keyMap = property.keyMap || {};\n                  property.keyMap[\n                    path.concat([splice.addedKeys[i]]).join(\".\")\n                  ] = path.concat([i + splice.index]).join(\".\");\n                }\n                args.push(ctx._deepClone(splice.object[i + splice.index]));\n              }\n            }\n            ctx.splice.apply(ctx, args);\n          });\n        }\n      } else if (detail.path) {\n        var parts = detail.path.split(\".\").slice(1);\n        var v = this.value;\n        if (!v.hasOwnProperty(property.property)) {\n          this.set(\"value.\" + property.property, {});\n          this.notifyPath(\"value.\" + property.property);\n        }\n        while (parts.length) {\n          var k = parts.shift();\n          path.push(k);\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n        this.set(path.join(\".\"), this._deepClone(detail.value));\n        this.notifyPath(path.join(\".\"));\n      } else {\n        property.value = detail.value;\n        this.set(path, this._deepClone(detail.value));\n        this.notifyPath(path);\n      }\n    }\n  }\n  _setValue() {\n    var value = {};\n    this._schemaProperties.forEach(property => {\n      if (typeof property.value !== typeof undefined) {\n        value[property.property] = this._deepClone(property.value);\n      }\n    });\n    this.set(\"value\", value);\n    this.notifyPath(\"value.*\");\n  }\n  _buildForm() {\n    let autofocus = this.autofocus;\n    this._schemaProperties.forEach(property => {\n      if (property.component.name === \"code-editor\") {\n        // special case, can't come up with a better way to do this but monoco is very special case\n        property.schema.component.properties.editorValue =\n          property.schema.value;\n        property.schema.component.properties.theme = this.codeTheme;\n      }\n\n      var el = this.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        language: this.language,\n        resources: this.resources\n      });\n      if (property.component.name === \"paper-input\") {\n        el.style[\"background-color\"] = \"transparent\";\n        el.style[\"width\"] = \"100%\";\n      }\n      el.setAttribute(\"name\", property.property);\n      if (property.schema.hidden && property.schema.hidden !== undefined) {\n        el.setAttribute(\"hidden\", property.schema.hidden);\n      }\n\n      //allows the first form fields to be focused on autopmatically\n      if (autofocus) el.setAttribute(\"autofocus\", autofocus);\n      //turns of focus on subsequent form fields\n      autofocus = false;\n      el.className = \"flex start-justified\";\n      // set the element's default value to be what was passed into the schema\n      el[property.component.valueProperty] = property.value;\n      // support component attribute overrides\n      for (var attr in property.component.attributes) {\n        el.setAttribute(attr, property.component.attributes[attr]);\n      }\n      // support component property overrides\n      for (var prop in property.component.properties) {\n        el[prop] = property.component.properties[prop];\n      }\n      this.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      if (typeof this.$ !== typeof undefined) {\n        dom(this).appendChild(el);\n        if (property.description) {\n          var id = \"tip-\" + property.property,\n            tip = document.createElement(\"div\");\n          el.setAttribute(\"aria-describedby\", id);\n          el.setAttribute(\"class\", \"has-tooltip-desc\");\n          tip.setAttribute(\"id\", id);\n          tip.setAttribute(\n            \"class\",\n            \"tooltip-desc desc-for-\" + property.component.name\n          );\n          if (property.schema.hidden === true)\n            tip.setAttribute(\"hidden\", \"hidden\");\n          tip.setAttribute(\"role\", \"tooltip\");\n          tip.innerHTML = property.description;\n          dom(this).appendChild(tip);\n        }\n      }\n      // support for slot injection too!\n      if (property.component.slot != \"\") {\n        let temp = document.createElement(\"div\");\n        temp.innerHTML = property.component.slot;\n        let cloneDiv = temp.cloneNode(true);\n        while (dom(cloneDiv).firstChild !== null) {\n          dom(el).appendChild(dom(cloneDiv).firstChild);\n        }\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"form-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    });\n  }\n  _removePropertyEl(el) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    dom(this).removeChild(el);\n  }\n  _clearForm() {\n    if (typeof this.$ !== typeof undefined) {\n      var formEl = dom(this);\n      while (formEl.firstChild) {\n        this._removePropertyEl(formEl.firstChild);\n      }\n    }\n  }\n  _schemaChanged(newValue, oldValue) {\n    if (newValue) {\n      this._clearForm();\n      this._buildSchemaProperties();\n      this._buildForm();\n      this._setValue();\n    }\n  }\n  _errorChanged() {\n    dom(this).childNodes.forEach(el => {\n      var name = el.getAttribute(\"name\");\n      if (this.error && this.error[name]) {\n        el.error = this.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  _isSchemaTabs(type) {\n    return type === \"tabs\";\n  }\n  focus() {\n    //console.log(this);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaObject.tag, EcoJsonSchemaObject);\nexport { EcoJsonSchemaObject };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-pages/iron-pages.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-ripple/paper-ripple.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"./eco-json-schema-object.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n\n/**\n`eco-json-schema-wizard` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-wizard schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-wizard>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-wizard\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaWizard extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-wizard\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host {\n          display: block;\n          @apply --layout-vertical;\n        }\n\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #fff;\n          }\n        }\n\n        .box,\n        #form {\n          display: -webkit-box;\n          display: -webkit-flex;\n          display: -moz-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-flex-align: center;\n          -ms-flex-align: center;\n          -webkit-align-items: center;\n          align-items: center;\n        }\n\n        .fullbleed {\n          z-index: 1;\n        }\n\n        app-toolbar.bottom {\n          --app-toolbar-color: var(--app-primary-color);\n          --app-toolbar-background: var(--dark-theme-text-color);\n        }\n\n        app-toolbar.bottom paper-icon-button {\n          --app-toolbar-color: var(--dark-theme-text-color);\n          --app-toolbar-background: var(--app-primary-color);\n        }\n      </style>\n      <div class=\"vertical flex layout fullbleed\">\n        <!--\n        paper-icon-button id=\"camButton\" icon=\"editor:insert-photo\" raised>add photo</paper-icon-button\n      -->\n        <app-toolbar>\n          <paper-icon-button\n            id=\"prevButton\"\n            icon=\"arrow-back\"\n            hidden\\$=\"{{!hasPrev}}\"\n            on-click=\"prev\"\n            raised=\"\"\n            >{{localize('prev')}}</paper-icon-button\n          ><span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n            >[[title]]</span\n          >\n          <paper-icon-button\n            id=\"nextButton\"\n            icon=\"arrow-forward\"\n            hidden\\$=\"{{!hasNext}}\"\n            on-click=\"next\"\n            raised=\"\"\n            >{{localize('next')}}</paper-icon-button\n          >\n          <paper-icon-button\n            id=\"submitButton\"\n            icon=\"cloud-upload\"\n            on-click=\"submit\"\n            raised=\"\"\n            >{{localize('submit')}}</paper-icon-button\n          >\n        </app-toolbar>\n        <iron-pages\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          role=\"main\"\n          selected=\"[[page]]\"\n          attr-for-selected=\"name\"\n        ></iron-pages>\n        <app-toolbar class=\"bottom\">\n          <div hidden\\$=\"{{!hasPrev}}\" on-click=\"prev\">\n            <paper-icon-button id=\"prevButton\" icon=\"arrow-back\" raised=\"\"\n              >{{localize('prev')}}</paper-icon-button\n            >\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('prev')}}</span\n            >\n          </div>\n          <span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n          ></span>\n          <div hidden\\$=\"{{!hasNext}}\" on-click=\"next\">\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('next')}}</span\n            >\n            <paper-icon-button id=\"nextButton\" icon=\"arrow-forward\" raised=\"\"\n              >{{localize('next')}}</paper-icon-button\n            >\n          </div>\n        </app-toolbar>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        type: String,\n        notify: true\n      },\n      resources: {\n        type: Object,\n        notify: true\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      page: {\n        type: String,\n        notify: true,\n        observer: \"_pageChanged\"\n      },\n      pages: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      isReview: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n      canSubmit: {\n        type: Boolean,\n        notify: true\n      },\n      hasNext: {\n        type: Boolean,\n        notify: true\n      },\n      hasPrev: {\n        type: Boolean,\n        notify: true\n      },\n      titles: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      title: {\n        type: String,\n        value: \"\",\n        notify: true\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  _buildSchemaProperties() {\n    var ctx = this;\n\n    this._schemaProperties = Object.keys(this.schema.properties || []).map(\n      function(key) {\n        var schema = ctx.schema.properties[key];\n        var property = {\n          property: key,\n          label: schema.title || key,\n          schema: schema,\n          component: schema.component || {}\n        };\n\n        if (!property.component.valueProperty) {\n          property.component.valueProperty = \"value\";\n        }\n\n        if (ctx._isSchemaEnum(schema)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-enum\";\n          property.value = \"\";\n        } else if (ctx._isSchemaBoolean(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-boolean\";\n          property.value = false;\n        } else if (ctx._isSchemaFile(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-file\";\n          property.value = \"\";\n        } else if (ctx._isSchemaValue(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-input\";\n          property.value = \"\";\n        } else if (ctx._isSchemaObject(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-object\";\n          property.component.wizard = true;\n          property.value = {};\n        } else if (ctx._isSchemaArray(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-array\";\n          property.value = [];\n        } else {\n          return console.error(\"Unknown property type %s\", schema.type);\n        }\n        ctx.push(\"pages\", key);\n        ctx.push(\"titles\", schema.title);\n\n        return property;\n      }\n    );\n  }\n  _schemaPropertyChanged(event, detail) {\n    if (detail.path && /\\.length$/.test(detail.path)) {\n      return;\n    }\n\n    var ctx = this;\n    var property = event.target.schemaProperty;\n    var path = [\"value\", property.property];\n\n    if (detail.path && /\\.splices$/.test(detail.path)) {\n      var parts = detail.path.split(\".\").slice(1, -1);\n      while (parts.length) {\n        path.push(parts.shift());\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n\n      if (detail.value.keySplices) {\n        if (property.keyMap) {\n          detail.value.keySplices.forEach(function(splice) {\n            splice.removed.forEach(function(k) {\n              delete property.keyMap[path.concat([k]).join(\".\")];\n            });\n          });\n        }\n      }\n\n      detail.value.indexSplices.forEach(function(splice) {\n        var args = [path.join(\".\"), splice.index, splice.removed.length];\n        if (splice.addedCount) {\n          for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n            if (splice.addedKeys && splice.addedKeys[i]) {\n              property.keyMap = property.keyMap || {};\n              property.keyMap[\n                path.concat([splice.addedKeys[i]]).join(\".\")\n              ] = path.concat([i + splice.index]).join(\".\");\n            }\n            args.push(ctx._deepClone(splice.object[i + splice.index]));\n          }\n        }\n        ctx.splice.apply(ctx, args);\n      });\n    } else if (detail.path) {\n      var parts = detail.path.split(\".\").slice(1);\n      var v = this.value;\n      if (!v.hasOwnProperty(property.property)) {\n        this.set(\"value.\" + property.property, {});\n      }\n      while (parts.length) {\n        var k = parts.shift();\n        path.push(k);\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n      this.set(path.join(\".\"), this._deepClone(detail.value));\n\n      console.log(\"value: \" + JSON.stringify(this.value));\n    }\n  }\n  _setValue() {\n    var ctx = this;\n    var value = {};\n    this._schemaProperties.forEach(function(property) {\n      value[property.property] = ctx._deepClone(property.value);\n    });\n    this.value = value;\n  }\n  _buildForm() {\n    var ctx = this;\n    this._schemaProperties.forEach(property => {\n      var el = ctx.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        language: this.language,\n        resources: this.resources\n      });\n\n      el.setAttribute(\"name\", property.property);\n      el.className = \"flex start-justified\";\n\n      property.value = el[property.component.valueProperty];\n      ctx.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      dom(ctx.$.form).appendChild(el);\n    });\n  }\n  _removePropertyEl(el) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    dom(this.$.form).removeChild(el);\n  }\n  _clearForm() {\n    var formEl = dom(this.$.form);\n    while (formEl.firstChild) {\n      this._removePropertyEl(formEl.firstChild);\n    }\n  }\n  _schemaChanged() {\n    this._clearForm();\n    this._buildSchemaProperties();\n    this._buildForm();\n    this._setValue();\n    if (this.pages.length > 0) {\n      this.set(\"page\", this.pages[0]);\n    }\n    this.set(\"title\", this.titles[0]);\n  }\n  next() {\n    var current = this.pages.indexOf(this.page);\n    var next = current;\n    if (current !== -1) {\n      if (current < this.pages.length - 1) {\n        next = current + 1;\n      }\n      this.set(\"page\", this.pages[next]);\n      this.set(\"title\", this.titles[next]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  prev() {\n    var current = this.pages.indexOf(this.page);\n    var prev = current;\n    if (current !== -1) {\n      if (current > 0) {\n        prev = current - 1;\n      }\n      this.set(\"page\", this.pages[prev]);\n      this.set(\"title\", this.titles[prev]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  submit() {\n    this.dispatchEvent(\n      new CustomEvent(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n  }\n  _pageChanged() {\n    var current = this.pages.indexOf(this.page);\n    if (current === 0) {\n      this.set(\"hasPrev\", false);\n    } else {\n      this.set(\"hasPrev\", true);\n    }\n    if (current === this.pages.length - 1) {\n      this.set(\"hasNext\", false);\n    } else {\n      this.set(\"hasNext\", true);\n    }\n  }\n  _errorChanged() {\n    var ctx = this;\n    dom(this.$.form).childNodes.forEach(function(el) {\n      var name = el.getAttribute(\"name\");\n      if (ctx.error && ctx.error[name]) {\n        el.error = ctx.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaWizard.tag, EcoJsonSchemaWizard);\nexport { EcoJsonSchemaWizard };\n"],"names":["EcoJsonSchemaArray","mixinBehaviors","AppLocalizeBehavior","PolymerElement","e","schema","JSON","parse","stringify","this","items","value","push","_valueChanged","id","target","controls","split","splice","item","prop","index","base","trim","val","__validatedSchema","map","notifyPath","set","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","oldValue","newValue","_setValues","i","length","properties","html","autofocus","type","Boolean","globalOptions","Object","icon","tooltip","hideLineNumbers","label","String","notify","observer","Array","window","customElements","define","tag","EcoJsonSchemaTabs","tab","title","subprop","EcoJsonSchemaBoolean","inputEl","$","checkbox","component","keys","forEach","_label","_isSchemaBoolean","_isSchemaNumber","_isSchemaString","isArray","indexOf","error","EcoJsonSchemaEnum","IronValidatableBehavior","dropdown","_items","filter","invalid","EcoJsonSchemaFile","fileInput","_showDropText","raised","toggleAttribute","button","noink","droppable","setupDrop","uploadBorder","UploadBorder","toggleClass","ondragover","stopPropagation","effect","dataTransfer","dropEffect","effectAllowed","ondragleave","ondrop","event","preventDefault","multi","files","file","mimeType","match","fileType","name","accept","progress","complete","uploadFile","elem","document","createEvent","evt","initEvent","xhr","abort","cancel","model","__data__","self","microTask","run","reader","FileReader","addEventListener","r","result","attributes","hasOwnProperty","readAsDataURL","console","log","_isSchemaFile","s","language","resources","dropText","headers","retryText","removeText","successText","errorText","_shownDropText","additional","fileDataName","paperButtonAlt","paperButtonTitle","EcoJsonSchemaInput","input","required","multipleOf","step","isNaN","maximum","exclusiveMaximum","max","minimum","exclusiveMinimum","min","format","alwaysFloatLabel","maxLength","maxlength","minLength","minlength","pattern","errorMessage","EcoJsonSchemaObject","_clearForm","ctx","_schemaProperties","key","property","description","valueProperty","slot","_isSchemaEnum","_typeof","_isSchemaValue","_isSchemaObject","_isSchemaArray","_isSchemaTabs","path","test","schemaProperty","parts","slice","shift","keyMap","join","keySplices","removed","k","concat","indexSplices","args","addedCount","ii","addedKeys","_deepClone","object","apply","_this","editorValue","theme","_this2","codeTheme","el","create","attr","style","setAttribute","hidden","undefined","className","listen","replace","toLowerCase","dom","appendChild","tip","createElement","innerHTML","temp","cloneDiv","cloneNode","firstChild","unlisten","removeChild","formEl","_removePropertyEl","_buildSchemaProperties","_buildForm","_setValue","childNodes","getAttribute","_this3","o","wizard","EcoJsonSchemaWizard","form","pages","titles","current","page","next","prev","isReview","canSubmit","hasNext","hasPrev"],"mappings":"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"}