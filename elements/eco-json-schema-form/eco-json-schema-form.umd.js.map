{"version":3,"file":"eco-json-schema-form.umd.js","sources":["lib/eco-json-schema-array.js","lib/eco-json-schema-boolean.js","lib/eco-json-schema-enum.js","lib/eco-json-schema-file.js","lib/eco-json-schema-input.js","lib/eco-json-schema-object.js","lib/eco-json-schema-wizard.js"],"sourcesContent":["import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@lrnwebcomponents/a11y-collapse/a11y-collapse.js\";\nimport \"@lrnwebcomponents/a11y-collapse/lib/a11y-collapse-group.js\";\nimport \"./eco-json-schema-object.js\";\n/**\n`eco-json-schema-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-array\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaArray extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-array\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host ([hidden]) {\n            display: none;\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n          }\n          :host #legend {\n            transition: all 0.5s;\n            color: var(--eco-json-form-faded-color);\n          }\n          :host(:focus) #legend,\n          :host(:focus-within) #legend {\n            color: var(--eco-json-form-active-color);\n          }\n          :host #fieldset {\n            border-radius: var(--eco-json-form-border-radius);\n            border: 1px solid var(--eco-json-form-faded-color);\n            transition: all 0.5s;\n          }\n          :host .array-item-button {\n            color: var(--eco-json-form-faded-color);\n            background-color: var(--eco-json-form-bg);\n            text-transform: none;\n            margin-bottom: 0;\n          }\n          :host .array-item-button:focus,\n          :host .array-item-button:hover {\n            color: var(--eco-json-form-active-color);\n          }\n          :host .add-array-item iron-icon {\n            padding: 8px;\n          }\n          :host .add-array-item {\n            color: var(--eco-json-form-add-color);\n            border-radius: 0 0 var(--eco-json-form-border-radius);\n            border: 1px solid var(--eco-json-form-bg);\n            margin: 0;\n            padding: 0 8px 0 16px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n          }\n          :host .add-array-item:focus,\n          :host .add-array-item:hover {\n            color: var(--eco-json-form-add-color);\n            background-color: var(--eco-json-form-faded-bg);\n            border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host .remove-array-item {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-bg);\n            margin: 15px 0 0 0;\n            border-radius: 100%;\n          }\n          :host .remove-array-item:focus,\n          :host .remove-array-item:hover {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-faded-bg);\n          }\n          :host a11y-collapse-group {\n            margin: 0;\n            border-radius: var(--eco-json-form-border-radius);\n            --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host a11y-collapse {\n            --a11y-collapse-padding-right: 8px;\n            border: 1px solid var(--eco-json-form-bg);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-faded-color);\n              background-color: var(--eco-json-form-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n            --a11y-collapse-icon: {\n              padding: 8px;\n            }\n          }\n          :host a11y-collapse:focus,\n          :host a11y-collapse:hover,\n          :host a11y-collapse[expanded] {\n            border: 1px solid var(--eco-json-form-faded-color);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-color);\n              background-color: var(--eco-json-form-faded-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n          }\n          :host p[slot=\"heading\"] {\n            margin: 0;\n          }\n          :host div[slot=\"content\"] > div {\n            width: 100%;\n            display: flex;\n            align-items: flex-end;\n            justify-content: space-between;\n          }\n          :host eco-json-schema-object {\n            flex: 1 0 auto;\n          }\n        </style>\n      </custom-style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden\\$=\"[[!label]]\">\n          [[label]]\n        </legend>\n        <a11y-collapse-group\n          id=\"form\"\n          icon=\"settings\"\n          class=\"vertical flex layout\"\n          global-options=\"[[globalOptions]]\"\n        >\n          <template\n            is=\"dom-repeat\"\n            items=\"[[__validatedSchema]]\"\n            as=\"item\"\n            restamp\n          >\n            <a11y-collapse accordion id$=\"item-[[index]]\">\n              <p slot=\"heading\">\n                {{_getHeading(item.value.*,item.label,index)}}\n              </p>\n              <div slot=\"content\">\n                <div>\n                  <eco-json-schema-object\n                    id=\"schemaobject\"\n                    controls$=\"item-[[index]]\"\n                    item=\"[[index]]\"\n                    autofocus$=\"[[autofocus]]\"\n                    on-value-changed=\"_valueChanged\"\n                    hide-line-numbers$=\"[[hideLineNumbers]]\"\n                    schema=\"[[item]]\"\n                    value=\"{{item.value}}\"\n                  >\n                  </eco-json-schema-object>\n                  <paper-icon-button\n                    id=\"remove-[[index]]\"\n                    icon=\"icons:delete\"\n                    aria-label=\"Remove this item\"\n                    aria-describedby=\"item-[[index]]\"\n                    class=\"remove-array-item array-item-button\"\n                    controls=\"item-[[index]]\"\n                    on-tap=\"_onRemoveItem\"\n                    role=\"button\"\n                  >\n                  </paper-icon-button>\n                  <paper-tooltip for=\"remove-[[index]]\"\n                    >Remove this item</paper-tooltip\n                  >\n                </div>\n              </div>\n            </a11y-collapse>\n          </template>\n        </a11y-collapse-group>\n        <paper-button\n          class=\"add-array-item array-item-button\"\n          on-click=\"_onAddItem\"\n          role=\"button\"\n        >\n          Add an item\n          <iron-icon icon=\"add-circle\"></iron-icon>\n        </paper-button>\n      </fieldset>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: \"Boolean\",\n        value: false\n      },\n      globalOptions: {\n        type: Object,\n        value: {\n          icon: \"settings\",\n          tooltip: \"configure item\"\n        }\n      },\n      /**\n       * hide code-editor line numbers\n       */\n      hideLineNumbers: {\n        type: Boolean,\n        value: false\n      },\n      label: {\n        type: String\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      /**\n       * Fields to conver to JSON Schema.\n       */\n      __validatedSchema: {\n        type: Array,\n        value: [],\n        notify: true\n      }\n    };\n  }\n  /**\n   * handles adding an array item\n   * @param {event} e the add item button tap event\n   */\n  _onAddItem(e) {\n    let schema = JSON.parse(JSON.stringify(this.schema.items));\n    schema.value = {};\n    this.push(\"__validatedSchema\", schema);\n  }\n  /**\n   * handles removing an array item\n   * @param {event} e the remove item button tap event\n   */\n  _onRemoveItem(e) {\n    this._valueChanged(e);\n    let id = e.target.controls.split(\"-\");\n    this.splice(\"__validatedSchema\", id[1], 1);\n  }\n  /**\n   * labels the collapse heading based on a given property\n   * @param {object} item the array item\n   * @param {string} prop the property that will populate the collapse heading\n   * @param {number} index the  index of the item\n   */\n  _getHeading(item, prop, index) {\n    return item &&\n      item.base &&\n      prop &&\n      item.base[prop] &&\n      typeof item.base[prop] === \"string\" &&\n      item.base[prop].trim(\"\") !== \"\"\n      ? item.base[prop].trim(\"\")\n      : `Item ${index + 1}`;\n  }\n  /**\n   * Handles data changes\n   * @param {event} e the change event\n   */\n  _valueChanged(e) {\n    let root = this,\n      val = this.__validatedSchema.map(item => {\n        return item.value;\n      });\n    this.notifyPath(\"value.*\");\n    this.set(\"value\", val);\n    this.dispatchEvent(\n      new CustomEvent(\"value-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n\n  /**\n   * fires when the fields array changes\n   * @param {object} oldValue the old value\n   * @param {object} newValue the new value\n   */\n  _schemaChanged(oldValue, newValue) {\n    let root = this;\n    //prevent a potential feedback loop\n    if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      this._setValues();\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"schema-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: root\n      })\n    );\n  }\n  /**\n   * when either the fields or the value changes, updates the schema and form to match\n   */\n  _setValues() {\n    let schema = [];\n    for (let i = 0; i < this.schema.value.length; i++) {\n      let item = this.schema.value[i];\n      schema[i] = JSON.parse(JSON.stringify(this.schema.items));\n      for (let prop in item) {\n        if (schema[i].properties[prop])\n          schema[i].properties[prop].value = item[prop];\n      }\n    }\n    this.notifyPath(\"__validatedSchema.*\");\n    this.__validatedSchema = schema;\n  }\n}\nwindow.customElements.define(EcoJsonSchemaArray.tag, EcoJsonSchemaArray);\nexport { EcoJsonSchemaArray };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nclass EcoJsonSchemaBoolean extends PolymerElement {\n  static get tag() {\n    return \"eco-json-schema-boolean\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-checkbox {\n          display: block;\n          font-size: 16px;\n          white-space: normal;\n          margin: var(--eco-json-field-margin, 0 0 15px);\n          --paper-checkbox-checkmark-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-unchecked-background-color: var(\n            --eco-json-form-bg,\n            var(--primary-background-color, #fff)\n          );\n          --paper-checkbox-checked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-color,\n            var(--secondary-text-color, #888)\n          );\n        }\n        :host paper-checkbox:focus {\n          --paper-checkbox-unchecked-color: var(\n            --eco-json-form-active-color,\n            var(--primary-color, #000)\n          );\n          --paper-checkbox-label-color: var(\n            --eco-json-form-active-color,\n            var(--primary-text-text-color, #222)\n          );\n        }\n      </style>\n\n      <paper-checkbox\n        id=\"checkbox\"\n        class=\"flex\"\n        hidden$=\"[[hidden]]\"\n        checked=\"{{value}}\"\n        invalid=\"[[error]]\"\n        >[[_label]]</paper-checkbox\n      >\n    `;\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Boolean,\n        notify: true,\n        value: false\n      },\n      error: {\n        type: Boolean,\n        value: false\n      },\n      _label: {\n        type: String,\n        notify: true,\n        value: \"\"\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.checkbox;\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    if (schema.title) {\n      this._label = schema.title;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaBoolean.tag, EcoJsonSchemaBoolean);\nexport { EcoJsonSchemaBoolean };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport { IronValidatableBehavior } from \"@polymer/iron-validatable-behavior/iron-validatable-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\n\nclass EcoJsonSchemaEnum extends mixinBehaviors(\n  [IronValidatableBehavior],\n  PolymerElement\n) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        paper-dropdown-menu {\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n          --paper-dropdown-menu-button: {\n            padding: 2px;\n          }\n        }\n      </style>\n\n      <paper-dropdown-menu\n        id=\"dropdown\"\n        class=\"layout horizontal vertical\"\n        value=\"{{value}}\"\n        required=\"\"\n      >\n        <paper-dropdown-menu class=\"dropdown-content\">\n          <paper-listbox slot=\"dropdown-content\" selected=\"0\">\n            <template is=\"dom-repeat\" items=\"[[_items]]\">\n              <paper-item class=\"flex\" label=\"[[item]]\">[[item]]</paper-item>\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </paper-dropdown-menu>\n    `;\n  }\n  static get tag() {\n    return \"eco-json-schema-enum\";\n  }\n  static get properties() {\n    return {\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value: null\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      },\n      _items: {\n        type: Object,\n        value() {\n          return {};\n        }\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.dropdown;\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    this._items = schema.enum.filter(function(item) {\n      return item !== null;\n    });\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.$.dropdown.invalid = true;\n    } else {\n      this.$.dropdown.invalid = false;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaEnum.tag, EcoJsonSchemaEnum);\nexport { EcoJsonSchemaEnum };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { microTask } from \"@polymer/polymer/lib/utils/async.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n`eco-json-schema-file` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-file\n* @demo demo/index.html\n*/\n\nclass EcoJsonSchemaFile extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-file\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host ([hidden]) {\n          display: none;\n        }\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #212121;\n          }\n        }\n\n        :host {\n          display: inline-block;\n        }\n\n        .enabled {\n          border: 1px dashed #555;\n          @apply --file-upload-upload-border-enabled;\n        }\n\n        .hover {\n          opacity: 0.7;\n          border: 1px dashed #111;\n          @apply --file-upload-upload-border-hover;\n        }\n\n        #UploadBorder {\n          vertical-align: middle;\n          color: #555;\n          padding: 20px;\n          max-height: 300px;\n          overflow-y: auto;\n          display: inline-block;\n          @apply --file-upload-upload-border;\n        }\n\n        #dropArea {\n          text-align: center;\n          @apply --file-upload-drop-area;\n        }\n\n        paper-button#button {\n          margin-bottom: 20px;\n          @apply --file-upload-button;\n        }\n\n        .file {\n          padding: 10px 0px;\n          @apply --file-upload-file;\n        }\n\n        .commands {\n          float: right;\n          @apply --file-upload-commands;\n        }\n\n        .commands iron-icon:not([icon=\"check-circle\"]) {\n          cursor: pointer;\n          opacity: 0.9;\n          @apply --file-upload-commands-faded;\n        }\n\n        .commands iron-icon:hover {\n          opacity: 1;\n          @apply --file-upload-commands-hovered;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        .error {\n          color: #f40303;\n          font-size: 11px;\n          margin-top: 2px;\n          @apply --file-upload-error;\n        }\n\n        .progress-bar {\n          margin-top: 2px;\n        }\n\n        paper-progress {\n          --paper-progress-active-color: #03a9f4;\n        }\n\n        paper-progress[error] {\n          --paper-progress-active-color: #f40303;\n        }\n      </style>\n\n      <div class=\"layout horizontal nowrap\">\n        <div>\n          <paper-button\n            id=\"button\"\n            on-click=\"_fileClick\"\n            alt=\"{{paperButtonAlt}}\"\n            raised=\"\"\n          >\n            <iron-icon icon=\"editor:attach-file\"></iron-icon\n            >{{paperButtonTitle}}</paper-button\n          >\n          <div id=\"UploadBorder\">\n            <div id=\"dropArea\" hidden\\$=\"{{!_shownDropText}}\">{{dropText}}</div>\n            <template is=\"dom-repeat\" items=\"{{files}}\">\n              <div class=\"file\">\n                <div class=\"name\">\n                  <span>{{item.name}}</span>\n                  <div class=\"commands\">\n                    <iron-icon\n                      icon=\"autorenew\"\n                      title=\"{{retryText}}\"\n                      on-click=\"_retryUpload\"\n                      hidden\\$=\"{{!item.error}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"cancel\"\n                      title=\"{{removeText}}\"\n                      on-click=\"_cancelUpload\"\n                      hidden\\$=\"{{item.complete}}\"\n                    ></iron-icon>\n                    <iron-icon\n                      icon=\"check-circle\"\n                      title=\"{{successText}}\"\n                      hidden\\$=\"{{!item.complete}}\"\n                    ></iron-icon>\n                  </div>\n                </div>\n                <div class=\"error\" hidden\\$=\"{{!item.error}}\">\n                  {{errorText}}\n                </div>\n              </div>\n            </template>\n          </div>\n        </div>\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          on-change=\"_fileChange\"\n          hidden=\"\"\n          multiple=\"{{multi}}\"\n          accept=\"{{accept}}\"\n        />\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\",\n        notify: true\n      },\n      resources: {\n        value() {\n          return {};\n        },\n        notify: true\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        },\n        observer: \"_valueChanged\"\n      },\n      /**\n      error: {\n        type: String,\n        observer: '_errorChanged',\n        value: null\n      },\n      */\n\n      /**\n       * `target` is the target url to upload the files to.\n       * Additionally by adding '<name>' in your url, it will be replaced by\n       * the file name.\n       */\n      target: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `accept` is the set of comma separated file extensions or mime types\n       * to filter as accepted.\n       */\n      accept: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `droppable` indicates whether or not to allow file drop.\n       */\n      droppable: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `dropText` is the  text to display in the file drop area.\n       */\n      dropText: {\n        type: String,\n        value: \"Drop Files Here\"\n      },\n\n      /**\n       * `multi` indicates whether or not to allow multiple files to be uploaded.\n       */\n      multi: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `files` is the list of files to be uploaded\n       */\n      files: {\n        type: Array,\n        notify: true,\n        value() {\n          return [];\n        }\n      },\n\n      /**\n       * `raised` indicates whether or not the button should be raised\n       */\n      raised: {\n        type: Boolean,\n        value: true\n      },\n\n      /**\n       * `noink` indicates that the button should not have an ink effect\n       */\n      noink: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `headers` is a key value map of header names and values\n       */\n      headers: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `retryText` is the text for the tooltip to retry an upload\n       */\n      retryText: {\n        type: String,\n        value: \"Retry Upload\"\n      },\n\n      /**\n       * `removeText` is the text for the tooltip to remove an upload\n       */\n      removeText: {\n        type: String,\n        value: \"Remove\"\n      },\n\n      /**\n       * `successText` is the text for the tooltip of a successful upload\n       */\n      successText: {\n        type: String,\n        value: \"Success\"\n      },\n\n      /**\n       * `errorText` is the text to display for a failed upload\n       */\n      errorText: {\n        type: String,\n        value: \"Error uploading file...\"\n      },\n\n      /**\n       * `_shownDropText` indicates whether or not the drop text should be shown\n       */\n      _shownDropText: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * `additional` object of key-pair values to send additional values along with file.\n       */\n      additional: {\n        type: Object,\n        value: {}\n      },\n\n      /**\n       * `fileDataName` is the name for the file data in the `formData` object.\n       */\n      fileDataName: {\n        type: String,\n        value: \"file\"\n      },\n\n      /**\n       * `paperButtonAlt` allows changing the alt property on the paper button\n       */\n      paperButtonAlt: {\n        type: String,\n        value: \"\"\n      },\n\n      /**\n       * `paperButtonTitle` allows changing the title property on the paper button\n       */\n      paperButtonTitle: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n  /**\n   * Clears the list of files\n   */\n  clear() {\n    this.set(\"files\", []);\n    this.$.fileInput.value = \"\";\n    this._showDropText();\n  }\n\n  ready() {\n    super.ready();\n\n    if (this.raised) {\n      this.toggleAttribute(\"raised\", true, this.$.button);\n    }\n    if (this.noink) {\n      this.toggleAttribute(\"noink\", true, this.$.button);\n    }\n    if (this.droppable) {\n      this._showDropText();\n      this.setupDrop();\n    }\n  }\n\n  /**\n   * A function to set up a drop area for drag-and-drop file uploads\n   */\n  setupDrop() {\n    var uploadBorder = this.$.UploadBorder;\n    this.toggleClass(\"enabled\", true, uploadBorder);\n\n    this.ondragover = function(e) {\n      e.stopPropagation();\n      this.toggleClass(\"hover\", true, uploadBorder);\n\n      // Workaround for allowgin drop from Chome's download footer on OSX\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=234931\n      var effect = e.dataTransfer && e.dataTransfer.dropEffect;\n      var effectAllowed = e.dataTransfer && e.dataTransfer.effectAllowed;\n      if (effect === \"none\" && effectAllowed !== \"none\") {\n        e.dataTransfer.dropEffect = effectAllowed === \"move\" ? \"move\" : \"copy\";\n      }\n      // end of workaround\n\n      return false;\n    };\n\n    this.ondragleave = function() {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      return false;\n    };\n\n    this.ondrop = function(event) {\n      this.toggleClass(\"hover\", false, uploadBorder);\n      event.preventDefault();\n\n      // Check if multiple upload is allowed\n      if (!this.multi && this.files.length !== 0) {\n        return;\n      }\n\n      var length = event.dataTransfer.files.length;\n      for (var i = 0; i < length; i++) {\n        var file = event.dataTransfer.files[i];\n        //if (this.value.indexOf(window.btoa(unescape(encodeURIComponent(file.name)))) >= 0 ) {\n        //  continue;\n        //}\n        // Check if filetype is accepted\n        var mimeType =\n          file.type !== \"\" ? file.type.match(/^[^\\/]*\\//)[0] : null;\n        var fileType = file.name.match(/\\.[^\\.]*$/)[0];\n        if (\n          this.accept !== \"\" &&\n          !(\n            this.accept.indexOf(mimeType) > -1 ||\n            this.accept.indexOf(fileType) > -1\n          )\n        ) {\n          continue;\n        }\n\n        file.progress = 0;\n        file.error = false;\n        file.complete = false;\n        this.push(\"files\", file);\n        this.uploadFile(file);\n      }\n    };\n  }\n\n  /**\n   * Clicks the invisible file input\n   */\n  _fileClick() {\n    var elem = this.$.fileInput;\n    if (elem && document.createEvent) {\n      // sanity check\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initEvent(\"click\", true, false);\n      elem.dispatchEvent(evt);\n    }\n  }\n\n  /**\n   * Called whenever the list of selected files changes\n   *\n   * @param {object} e An event object\n   */\n  _fileChange(e) {\n    var length = e.target.files.length;\n    for (var i = 0; i < length; i++) {\n      var file = e.target.files[i];\n      file.progress = 0;\n      file.error = false;\n      file.complete = false;\n      this.push(\"files\", file);\n      if (!this.multi && this.files.length !== 0) {\n        this.set(\"files\", []);\n        this.set(\"value\", {});\n      }\n      this.uploadFile(file);\n    }\n  }\n\n  /**\n   * Cancels the file upload for a specific file\n   *\n   * @param {object} file An element of the files array\n   */\n  cancel(file) {\n    if (file) {\n      if (file.xhr) {\n        file.xhr.abort();\n      }\n      this.splice(\"files\", this.files.indexOf(file), 1);\n      this._showDropText();\n    }\n  }\n\n  /**\n   * Cancels the file upload\n   *\n   * @param {object} e An event object\n   */\n  _cancelUpload(e) {\n    this.cancel(e.model.__data__.item);\n  }\n\n  /**\n   * Retries to upload the file\n   *\n   * @param {object} e An event object\n   */\n  _retryUpload(e) {\n    e.model.set(\"item.error\", false);\n    e.model.set(\"item.progress\", 0);\n    // The async helps give visual feedback of a retry occurring, even though it's less efficient.\n    var self = this;\n    microTask.run(() => {\n      self.uploadFile(e.model.__data__.item);\n    });\n  }\n\n  /**\n   * Whether or not to display the drop text\n   */\n  _showDropText() {\n    this.set(\"_shownDropText\", !this.files.length && this.droppable);\n  }\n\n  /**\n   * Uploads a file\n   *\n   * @param {object} file An element of the files array\n   */\n  uploadFile(file) {\n    if (!file) {\n      return;\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"before-upload\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n    this._showDropText();\n    var prefix = \"files.\" + this.files.indexOf(file);\n    var self = this;\n\n    var reader = new FileReader();\n\n    reader.addEventListener(\n      \"load\",\n      function() {\n        var r = reader.result;\n        //self.push('value', {\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //self.value.push({\"name\": unescape(encodeURIComponent( file.name )),\"content\":r});\n        //console.log('value.'+self.files.indexOf(file));\n        self.set(\n          \"value.\" +\n            self.attributes.name.value +\n            \".\" +\n            self.files.indexOf(file),\n          r\n        );\n        //self.notifyPath('value');\n      },\n      false\n    );\n\n    if (!self.value.hasOwnProperty(self.attributes.name.value)) {\n      this.set(\"value.\" + self.attributes.name.value, {});\n    }\n    reader.readAsDataURL(file);\n  }\n  _valueChanged() {\n    console.log(\"this.value: \" + JSON.stringify(this.value));\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    /*\n    var inputEl = this.$.fileInput;\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    //inputEl.type = 'file';\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n    */\n\n    /*\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n    */\n  }\n  /*\n  _errorChanged() {\n    if (this.error) {\n      this.$.fileInput.errorMessage = this.error;\n      this.$.fileInput.invalid = true;\n    } else {\n      this.$.fileInput.invalid = false;\n      this.$.fileInput.errorMessage = null;\n    }\n  },\n  */\n  _isSchemaValue(type) {\n    return this._isSchemaFile(type);\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  stringify(s) {\n    return JSON.stringify(s);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaFile.tag, EcoJsonSchemaFile);\nexport { EcoJsonSchemaFile };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@polymer/paper-styles/typography.js\";\n/**\n`eco-json-schema-input` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.\n\n@group eco Elements\n@element eco-json-schema-input\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaInput extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-input\";\n  }\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host ([hidden]) {\n            display: none;\n          }\n        </style>\n      </custom-style>\n      <paper-input\n        id=\"input\"\n        class=\"flex\"\n        value=\"{{value}}\"\n        auto-validate\n      ></paper-input>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        observer: \"_schemaChanged\"\n      },\n      value: {\n        type: String,\n        notify: true,\n        value() {\n          return \"\";\n        }\n      },\n      error: {\n        type: String,\n        observer: \"_errorChanged\",\n        value: null\n      }\n    };\n  }\n  _schemaChanged() {\n    var schema = this.schema;\n    var inputEl = this.$.input;\n    if (schema.required) {\n      inputEl.required = true;\n    }\n    if (this._isSchemaNumber(schema.type)) {\n      inputEl.type = \"number\";\n\n      if (schema.multipleOf) {\n        inputEl.step = schema.multipleOf;\n      }\n\n      if (!isNaN(schema.maximum)) {\n        if (schema.exclusiveMaximum) {\n          inputEl.max = schema.maximum - (schema.multipleOf || 1);\n        } else {\n          inputEl.max = schema.maximum;\n        }\n      }\n\n      if (!isNaN(schema.minimum)) {\n        if (schema.exclusiveMinimum) {\n          inputEl.min = schema.minimum + (schema.multipleOf || 1);\n        } else {\n          inputEl.min = schema.minimum;\n        }\n      }\n    }\n\n    if (this._isSchemaString(schema.type)) {\n      if (schema.format === \"date-time\") {\n        inputEl.type = \"datetime-local\";\n        inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n      } else if (schema.format === \"date\") {\n        inputEl.type = \"date\";\n      } else if (schema.format === \"email\") {\n        inputEl.type = \"email\";\n      } else if (schema.format === \"hostname\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv4\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"ipv6\") {\n        inputEl.type = \"text\";\n      } else if (schema.format === \"uri\") {\n        inputEl.type = \"url\";\n      } else {\n        inputEl.type = \"text\";\n      }\n\n      /*\n        if (schema.maxLength || schema.minLength) {\n          inputEl.charCounter = true;\n        }\n       */\n\n      if (schema.maxLength) {\n        inputEl.maxlength = schema.maxLength;\n      }\n\n      if (schema.minLength) {\n        inputEl.minlength = schema.minLength;\n      }\n\n      if (schema.pattern) {\n        inputEl.pattern = schema.pattern;\n      }\n    }\n\n    if (schema.component && schema.component.properties) {\n      Object.keys(schema.component.properties).forEach(function(prop) {\n        inputEl[prop] = schema.component.properties[prop];\n      });\n    }\n\n    inputEl.alwaysFloatLabel = true; // label doesn't float when value not set\n\n    if (schema.title) {\n      inputEl.label = schema.title;\n    }\n  }\n  _errorChanged() {\n    if (this.error) {\n      this.$.input.errorMessage = this.error;\n      this.$.input.invalid = true;\n    } else {\n      this.$.input.invalid = false;\n      this.$.input.errorMessage = null;\n    }\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type)\n    );\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaInput.tag, EcoJsonSchemaInput);\nexport { EcoJsonSchemaInput };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport { FlattenedNodesObserver } from \"@polymer/polymer/lib/utils/flattened-nodes-observer.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n/**\n`eco-json-schema-object` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-object schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-object>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-object\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaObject extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-object\";\n  }\n\n  static get template() {\n    return html`\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host {\n            --eco-json-field-margin: 0 0 15px;\n            --eco-json-form-border-radius: 2px;\n            --eco-json-form-font-family: var(\n              --paper-font-caption_-_font-family,\n              unset\n            );\n            --eco-json-form-bg: var(--primary-background-color, #fff);\n            --eco-json-form-color: var(--primary-text-color, #222);\n            --eco-json-form-faded-color: #888;\n            --eco-json-form-active-color: var(--primary-color, #000);\n            --eco-json-form-faded-bg: #f0f0f0;\n            --eco-json-form-add-color: #008811;\n            --eco-json-form-add-focus: #007700;\n            --eco-json-form-remove-focus: #cc0000;\n            --eco-json-form-remove-color: #dd0000;\n            --paper-input-container: {\n              padding-top: 0;\n            }\n          }\n          div.layout {\n            height: auto;\n          }\n          #form {\n            display: block;\n            font-family: var(--eco-json-form-font-family);\n            background-color: var(--eco-json-form-bg);\n            color: var(--eco-json-form-color);\n            --paper-tooltip-background: var(--eco-json-form-active-color);\n            --paper-tooltip-text-color: var(--eco-json-form-bg);\n            @apply --eco-json-schema-object-form;\n            @apply --layout-vertical;\n            @apply --layout-wrap;\n          }\n          #form ::slotted(paper-input) {\n            margin-bottom: 15px;\n          }\n          #form ::slotted(*.has-tooltip-desc) {\n            margin-bottom: 0;\n            padding-bottom: 0;\n            --paper-input-container: {\n              margin-bottom: 0;\n              padding-bottom: 0;\n            }\n          }\n          #form ::slotted(div.tooltip-desc) {\n            font-size: 12px;\n            margin: var(--eco-json-field-margin);\n            color: var(--eco-json-form-faded-color);\n          }\n          #form ::slotted(paper-input),\n          #form ::slotted(div.tooltip-desc) {\n            font-family: var(--eco-json-form-font-family);\n          }\n          #form ::slotted(div.desc-for-paper-textarea) {\n            margin-top: -18px;\n            margin-right: 35px;\n          }\n          #form ::slotted(simple-icon-picker),\n          #form ::slotted(simple-colors-picker),\n          #form ::slotted(simple-picker) {\n            --simple-picker-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --simple-picker-float-label-faded-color: var(\n              --eco-json-form-faded-color\n            );\n            --simple-picker-background-color: var(--eco-json-form-bg);\n            --simple-picker-border-color: var(--eco-json-form-faded-color);\n            --simple-picker-sample-focus: {\n              transition: all 0.5s;\n              border: 2px solid var(--eco-json-form-active-color);\n            }\n          }\n          #form ::slotted(code-editor) {\n            margin: 8px 0;\n            padding: 0;\n            --code-editor-float-label-color: var(--eco-json-form-faded-color);\n            --code-editor-float-label-active-color: var(\n              --eco-json-form-active-color\n            );\n            --code-pen-button-color: var(--eco-json-form-faded-color);\n            --code-editor-code: {\n              border: 1px solid var(--eco-json-form-faded-color);\n              border-radius: 2px;\n            }\n            --code-editor-focus-code: {\n              border: 2px solid var(--eco-json-form-active-color);\n            }\n          }\n        </style>\n      </custom-style>\n\n      <template is=\"dom-if\" if=\"{{!wizard}}\">\n        <div class=\"header\" hidden\\$=\"[[!label]]\">[[label]]</div>\n      </template>\n      <div class=\"layout vertical flex start-justified\">\n        <div\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          aria-live=\"polite\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      language: {\n        value: \"en\"\n      },\n      resources: {\n        value() {\n          return {};\n        }\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      wizard: {\n        type: Boolean,\n        notify: true\n      },\n      /**\n       * the name of the code-editor theme\n       */\n      codeTheme: {\n        type: String,\n        value: \"vs-light-2\"\n      },\n      /**\n       * automatically set focus on the first field if that field has autofocus\n       */\n      autofocus: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  _buildSchemaProperties() {\n    var ctx = this;\n    this._schemaProperties = Object.keys(this.schema.properties || []).map(\n      key => {\n        var schema = ctx.schema.properties[key];\n        var property = {\n          property: key,\n          label: schema.title || key,\n          schema: schema,\n          label: schema.title || key,\n          description: schema.description,\n          component: schema.component || {}\n        };\n\n        if (!property.component.valueProperty) {\n          property.component.valueProperty = \"value\";\n        }\n        if (!property.component.slot) {\n          property.component.slot = \"\";\n        }\n        if (ctx._isSchemaEnum(schema)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-enum\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = \"\";\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaBoolean(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-boolean\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = false;\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaFile(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-file\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = {};\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaValue(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-input\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = \"\";\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaObject(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-object\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = {};\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaArray(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-array\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = [];\n          }\n          property.value = schema.value;\n        } else if (ctx._isSchemaTabs(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-tabs\";\n          if (typeof schema.value === typeof undefined) {\n            schema.value = [];\n          }\n          property.value = schema.value;\n        } else {\n          return console.error(\"Unknown property type %s\", schema.type);\n        }\n        return property;\n      }\n    );\n  }\n  _schemaPropertyChanged(event, detail) {\n    if (detail) {\n      if (detail.path && /\\.length$/.test(detail.path)) {\n        return;\n      }\n      var ctx = this;\n      var property = event.target.schemaProperty;\n      var path = [\"value\", property.property];\n\n      if (detail.path && /\\.splices$/.test(detail.path)) {\n        var parts = detail.path.split(\".\").slice(1, -1);\n        while (parts.length) {\n          path.push(parts.shift());\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n\n        if (detail.value.keySplices) {\n          if (property.keyMap) {\n            detail.value.keySplices.forEach(splice => {\n              splice.removed.forEach(k => {\n                delete property.keyMap[path.concat([k]).join(\".\")];\n              });\n            });\n          }\n        }\n\n        if (detail.value) {\n          detail.value.indexSplices.forEach(splice => {\n            var args = [path.join(\".\"), splice.index, splice.removed.length];\n            if (splice.addedCount) {\n              for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n                if (splice.addedKeys && splice.addedKeys[i]) {\n                  property.keyMap = property.keyMap || {};\n                  property.keyMap[\n                    path.concat([splice.addedKeys[i]]).join(\".\")\n                  ] = path.concat([i + splice.index]).join(\".\");\n                }\n                args.push(ctx._deepClone(splice.object[i + splice.index]));\n              }\n            }\n            ctx.splice.apply(ctx, args);\n          });\n        }\n      } else if (detail.path) {\n        var parts = detail.path.split(\".\").slice(1);\n        var v = this.value;\n        if (!v.hasOwnProperty(property.property)) {\n          this.set(\"value.\" + property.property, {});\n          this.notifyPath(\"value.\" + property.property);\n        }\n        while (parts.length) {\n          var k = parts.shift();\n          path.push(k);\n          if (property.keyMap && property.keyMap[path.join(\".\")]) {\n            path = property.keyMap[path.join(\".\")].split(\".\");\n          }\n        }\n        this.set(path.join(\".\"), this._deepClone(detail.value));\n        this.notifyPath(path.join(\".\"));\n      } else {\n        property.value = detail.value;\n        this.set(path, this._deepClone(detail.value));\n        this.notifyPath(path);\n      }\n    }\n  }\n  _setValue() {\n    var value = {};\n    this._schemaProperties.forEach(property => {\n      if (typeof property.value !== typeof undefined) {\n        value[property.property] = this._deepClone(property.value);\n      }\n    });\n    this.set(\"value\", value);\n    this.notifyPath(\"value.*\");\n  }\n  _buildForm() {\n    let autofocus = this.autofocus;\n    this._schemaProperties.forEach(property => {\n      if (property.component.name === \"code-editor\") {\n        // special case, can't come up with a better way to do this but monoco is very special case\n        property.schema.component.properties.editorValue =\n          property.schema.value;\n        property.schema.component.properties.theme = this.codeTheme;\n      }\n\n      var el = this.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        language: this.language,\n        resources: this.resources\n      });\n      if (property.component.name === \"paper-input\") {\n        el.style[\"background-color\"] = \"transparent\";\n        el.style[\"width\"] = \"100%\";\n      }\n      el.setAttribute(\"name\", property.property);\n      if (property.schema.hidden && property.schema.hidden !== undefined) {\n        el.setAttribute(\"hidden\", property.schema.hidden);\n      }\n\n      //allows the first form fields to be focused on autopmatically\n      if (autofocus) el.setAttribute(\"autofocus\", autofocus);\n      //turns of focus on subsequent form fields\n      autofocus = false;\n      el.className = \"flex start-justified\";\n      // set the element's default value to be what was passed into the schema\n      el[property.component.valueProperty] = property.value;\n      // support component attribute overrides\n      for (var attr in property.component.attributes) {\n        el.setAttribute(attr, property.component.attributes[attr]);\n      }\n      // support component property overrides\n      for (var prop in property.component.properties) {\n        el[prop] = property.component.properties[prop];\n      }\n      this.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      if (typeof this.$ !== typeof undefined) {\n        dom(this).appendChild(el);\n        if (property.description) {\n          var id = \"tip-\" + property.property,\n            tip = document.createElement(\"div\");\n          el.setAttribute(\"aria-describedby\", id);\n          el.setAttribute(\"class\", \"has-tooltip-desc\");\n          tip.setAttribute(\"id\", id);\n          tip.setAttribute(\n            \"class\",\n            \"tooltip-desc desc-for-\" + property.component.name\n          );\n          if (property.schema.hidden === true)\n            tip.setAttribute(\"hidden\", \"hidden\");\n          tip.setAttribute(\"role\", \"tooltip\");\n          tip.innerHTML = property.description;\n          dom(this).appendChild(tip);\n        }\n      }\n      // support for slot injection too!\n      if (property.component.slot != \"\") {\n        let temp = document.createElement(\"div\");\n        temp.innerHTML = property.component.slot;\n        let cloneDiv = temp.cloneNode(true);\n        while (dom(cloneDiv).firstChild !== null) {\n          dom(el).appendChild(dom(cloneDiv).firstChild);\n        }\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"form-changed\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: this\n        })\n      );\n    });\n  }\n  _removePropertyEl(el) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    dom(this).removeChild(el);\n  }\n  _clearForm() {\n    if (typeof this.$ !== typeof undefined) {\n      var formEl = dom(this);\n      while (formEl.firstChild) {\n        this._removePropertyEl(formEl.firstChild);\n      }\n    }\n  }\n  _schemaChanged(newValue, oldValue) {\n    if (newValue) {\n      this._clearForm();\n      this._buildSchemaProperties();\n      this._buildForm();\n      this._setValue();\n    }\n  }\n  _errorChanged() {\n    dom(this).childNodes.forEach(el => {\n      var name = el.getAttribute(\"name\");\n      if (this.error && this.error[name]) {\n        el.error = this.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n  _isSchemaTabs(type) {\n    return type === \"tabs\";\n  }\n  focus() {\n    //console.log(this);\n  }\n}\nwindow.customElements.define(EcoJsonSchemaObject.tag, EcoJsonSchemaObject);\nexport { EcoJsonSchemaObject };\n","import { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout-classes.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-pages/iron-pages.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-ripple/paper-ripple.js\";\nimport { AppLocalizeBehavior } from \"@polymer/app-localize-behavior/app-localize-behavior.js\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class.js\";\nimport \"./eco-json-schema-object.js\";\nimport \"./eco-json-schema-array.js\";\nimport \"./eco-json-schema-boolean.js\";\nimport \"./eco-json-schema-enum.js\";\nimport \"./eco-json-schema-file.js\";\nimport \"./eco-json-schema-input.js\";\n\n/**\n`eco-json-schema-wizard` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-wizard schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-wizard>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```\n\n@group eco Elements\n@element eco-json-schema-wizard\n* @demo demo/index.html\n*/\nclass EcoJsonSchemaWizard extends mixinBehaviors(\n  [AppLocalizeBehavior],\n  PolymerElement\n) {\n  static get tag() {\n    return \"eco-json-schema-wizard\";\n  }\n  static get template() {\n    return html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n        :host {\n          display: block;\n          @apply --layout-vertical;\n        }\n\n        paper-input {\n          padding: 2px;\n          --paper-input-container-label: {\n            white-space: normal;\n            position: static;\n            font-size: 22px;\n            color: #fff;\n          }\n        }\n\n        .box,\n        #form {\n          display: -webkit-box;\n          display: -webkit-flex;\n          display: -moz-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-flex-align: center;\n          -ms-flex-align: center;\n          -webkit-align-items: center;\n          align-items: center;\n        }\n\n        .fullbleed {\n          z-index: 1;\n        }\n\n        app-toolbar.bottom {\n          --app-toolbar-color: var(--app-primary-color);\n          --app-toolbar-background: var(--dark-theme-text-color);\n        }\n\n        app-toolbar.bottom paper-icon-button {\n          --app-toolbar-color: var(--dark-theme-text-color);\n          --app-toolbar-background: var(--app-primary-color);\n        }\n      </style>\n      <div class=\"vertical flex layout fullbleed\">\n        <!--\n        paper-icon-button id=\"camButton\" icon=\"editor:insert-photo\" raised>add photo</paper-icon-button\n      -->\n        <app-toolbar>\n          <paper-icon-button\n            id=\"prevButton\"\n            icon=\"arrow-back\"\n            hidden\\$=\"{{!hasPrev}}\"\n            on-click=\"prev\"\n            raised=\"\"\n            >{{localize('prev')}}</paper-icon-button\n          ><span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n            >[[title]]</span\n          >\n          <paper-icon-button\n            id=\"nextButton\"\n            icon=\"arrow-forward\"\n            hidden\\$=\"{{!hasNext}}\"\n            on-click=\"next\"\n            raised=\"\"\n            >{{localize('next')}}</paper-icon-button\n          >\n          <paper-icon-button\n            id=\"submitButton\"\n            icon=\"cloud-upload\"\n            on-click=\"submit\"\n            raised=\"\"\n            >{{localize('submit')}}</paper-icon-button\n          >\n        </app-toolbar>\n        <iron-pages\n          id=\"form\"\n          class=\"layout horizontal flex start-justified\"\n          role=\"main\"\n          selected=\"[[page]]\"\n          attr-for-selected=\"name\"\n        ></iron-pages>\n        <app-toolbar class=\"bottom\">\n          <div hidden\\$=\"{{!hasPrev}}\" on-click=\"prev\">\n            <paper-icon-button id=\"prevButton\" icon=\"arrow-back\" raised=\"\"\n              >{{localize('prev')}}</paper-icon-button\n            >\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('prev')}}</span\n            >\n          </div>\n          <span\n            class=\"title layout horizontal flex\"\n            style=\"white-space: normal\"\n          ></span>\n          <div hidden\\$=\"{{!hasNext}}\" on-click=\"next\">\n            <span class=\"title layout\" style=\"white-space: normal\"\n              >{{localize('next')}}</span\n            >\n            <paper-icon-button id=\"nextButton\" icon=\"arrow-forward\" raised=\"\"\n              >{{localize('next')}}</paper-icon-button\n            >\n          </div>\n        </app-toolbar>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      language: {\n        type: String,\n        notify: true\n      },\n      resources: {\n        type: Object,\n        notify: true\n      },\n      schema: {\n        type: Object,\n        notify: true,\n        observer: \"_schemaChanged\"\n      },\n      label: {\n        type: String\n      },\n      value: {\n        type: Object,\n        notify: true,\n        value() {\n          return {};\n        }\n      },\n      page: {\n        type: String,\n        notify: true,\n        observer: \"_pageChanged\"\n      },\n      pages: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      error: {\n        type: Object,\n        observer: \"_errorChanged\"\n      },\n      isReview: {\n        type: Boolean,\n        value: false,\n        notify: true\n      },\n      canSubmit: {\n        type: Boolean,\n        notify: true\n      },\n      hasNext: {\n        type: Boolean,\n        notify: true\n      },\n      hasPrev: {\n        type: Boolean,\n        notify: true\n      },\n      titles: {\n        type: Array,\n        notify: true,\n        value: []\n      },\n      title: {\n        type: String,\n        value: \"\",\n        notify: true\n      }\n    };\n  }\n  disconnectedCallback() {\n    this._clearForm();\n    super.disconnectedCallback();\n  }\n  _buildSchemaProperties() {\n    var ctx = this;\n\n    this._schemaProperties = Object.keys(this.schema.properties || []).map(\n      function(key) {\n        var schema = ctx.schema.properties[key];\n        var property = {\n          property: key,\n          label: schema.title || key,\n          schema: schema,\n          component: schema.component || {}\n        };\n\n        if (!property.component.valueProperty) {\n          property.component.valueProperty = \"value\";\n        }\n\n        if (ctx._isSchemaEnum(schema)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-enum\";\n          property.value = \"\";\n        } else if (ctx._isSchemaBoolean(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-boolean\";\n          property.value = false;\n        } else if (ctx._isSchemaFile(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-file\";\n          property.value = \"\";\n        } else if (ctx._isSchemaValue(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-input\";\n          property.value = \"\";\n        } else if (ctx._isSchemaObject(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-object\";\n          property.component.wizard = true;\n          property.value = {};\n        } else if (ctx._isSchemaArray(schema.type)) {\n          property.component.name =\n            property.component.name || \"eco-json-schema-array\";\n          property.value = [];\n        } else {\n          return console.error(\"Unknown property type %s\", schema.type);\n        }\n        ctx.push(\"pages\", key);\n        ctx.push(\"titles\", schema.title);\n\n        return property;\n      }\n    );\n  }\n  _schemaPropertyChanged(event, detail) {\n    if (detail.path && /\\.length$/.test(detail.path)) {\n      return;\n    }\n\n    var ctx = this;\n    var property = event.target.schemaProperty;\n    var path = [\"value\", property.property];\n\n    if (detail.path && /\\.splices$/.test(detail.path)) {\n      var parts = detail.path.split(\".\").slice(1, -1);\n      while (parts.length) {\n        path.push(parts.shift());\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n\n      if (detail.value.keySplices) {\n        if (property.keyMap) {\n          detail.value.keySplices.forEach(function(splice) {\n            splice.removed.forEach(function(k) {\n              delete property.keyMap[path.concat([k]).join(\".\")];\n            });\n          });\n        }\n      }\n\n      detail.value.indexSplices.forEach(function(splice) {\n        var args = [path.join(\".\"), splice.index, splice.removed.length];\n        if (splice.addedCount) {\n          for (var i = 0, ii = splice.addedCount; i < ii; i++) {\n            if (splice.addedKeys && splice.addedKeys[i]) {\n              property.keyMap = property.keyMap || {};\n              property.keyMap[\n                path.concat([splice.addedKeys[i]]).join(\".\")\n              ] = path.concat([i + splice.index]).join(\".\");\n            }\n            args.push(ctx._deepClone(splice.object[i + splice.index]));\n          }\n        }\n        ctx.splice.apply(ctx, args);\n      });\n    } else if (detail.path) {\n      var parts = detail.path.split(\".\").slice(1);\n      var v = this.value;\n      if (!v.hasOwnProperty(property.property)) {\n        this.set(\"value.\" + property.property, {});\n      }\n      while (parts.length) {\n        var k = parts.shift();\n        path.push(k);\n        if (property.keyMap && property.keyMap[path.join(\".\")]) {\n          path = property.keyMap[path.join(\".\")].split(\".\");\n        }\n      }\n      this.set(path.join(\".\"), this._deepClone(detail.value));\n\n      console.log(\"value: \" + JSON.stringify(this.value));\n    }\n  }\n  _setValue() {\n    var ctx = this;\n    var value = {};\n    this._schemaProperties.forEach(function(property) {\n      value[property.property] = ctx._deepClone(property.value);\n    });\n    this.value = value;\n  }\n  _buildForm() {\n    var ctx = this;\n    this._schemaProperties.forEach(property => {\n      var el = ctx.create(property.component.name, {\n        label: property.label,\n        schema: property.schema,\n        schemaProperty: property,\n        language: this.language,\n        resources: this.resources\n      });\n\n      el.setAttribute(\"name\", property.property);\n      el.className = \"flex start-justified\";\n\n      property.value = el[property.component.valueProperty];\n      ctx.listen(\n        el,\n        property.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n      dom(ctx.$.form).appendChild(el);\n    });\n  }\n  _removePropertyEl(el) {\n    if (typeof el.schemaProperty !== typeof undefined) {\n      this.unlisten(\n        el,\n        el.schemaProperty.component.valueProperty\n          .replace(/([A-Z])/g, \"-$1\")\n          .toLowerCase() + \"-changed\",\n        \"_schemaPropertyChanged\"\n      );\n    }\n    el.schemaProperty = null;\n    dom(this.$.form).removeChild(el);\n  }\n  _clearForm() {\n    var formEl = dom(this.$.form);\n    while (formEl.firstChild) {\n      this._removePropertyEl(formEl.firstChild);\n    }\n  }\n  _schemaChanged() {\n    this._clearForm();\n    this._buildSchemaProperties();\n    this._buildForm();\n    this._setValue();\n    if (this.pages.length > 0) {\n      this.set(\"page\", this.pages[0]);\n    }\n    this.set(\"title\", this.titles[0]);\n  }\n  next() {\n    var current = this.pages.indexOf(this.page);\n    var next = current;\n    if (current !== -1) {\n      if (current < this.pages.length - 1) {\n        next = current + 1;\n      }\n      this.set(\"page\", this.pages[next]);\n      this.set(\"title\", this.titles[next]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  prev() {\n    var current = this.pages.indexOf(this.page);\n    var prev = current;\n    if (current !== -1) {\n      if (current > 0) {\n        prev = current - 1;\n      }\n      this.set(\"page\", this.pages[prev]);\n      this.set(\"title\", this.titles[prev]);\n    } else {\n      console.log(\"Invalid current page in wizard\");\n    }\n  }\n  submit() {\n    this.dispatchEvent(\n      new CustomEvent(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: true\n      })\n    );\n  }\n  _pageChanged() {\n    var current = this.pages.indexOf(this.page);\n    if (current === 0) {\n      this.set(\"hasPrev\", false);\n    } else {\n      this.set(\"hasPrev\", true);\n    }\n    if (current === this.pages.length - 1) {\n      this.set(\"hasNext\", false);\n    } else {\n      this.set(\"hasNext\", true);\n    }\n  }\n  _errorChanged() {\n    var ctx = this;\n    dom(this.$.form).childNodes.forEach(function(el) {\n      var name = el.getAttribute(\"name\");\n      if (ctx.error && ctx.error[name]) {\n        el.error = ctx.error[name];\n      } else {\n        el.error = null;\n      }\n    });\n  }\n  _deepClone(o) {\n    return JSON.parse(JSON.stringify(o));\n  }\n  _isSchemaValue(type) {\n    return (\n      this._isSchemaBoolean(type) ||\n      this._isSchemaNumber(type) ||\n      this._isSchemaString(type) ||\n      this._isSchemaFile(type)\n    );\n  }\n  _isSchemaFile(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"file\") !== -1;\n    } else {\n      return type === \"file\";\n    }\n  }\n  _isSchemaBoolean(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"boolean\") !== -1;\n    } else {\n      return type === \"boolean\";\n    }\n  }\n  _isSchemaEnum(schema) {\n    return !!schema.enum;\n  }\n  _isSchemaNumber(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"number\") !== -1 || type.indexOf(\"integer\") !== -1;\n    } else {\n      return type === \"number\" || type === \"integer\";\n    }\n  }\n  _isSchemaString(type) {\n    if (Array.isArray(type)) {\n      return type.indexOf(\"string\") !== -1;\n    } else {\n      return type === \"string\";\n    }\n  }\n  _isSchemaObject(type) {\n    return type === \"object\";\n  }\n  _isSchemaArray(type) {\n    return type === \"array\";\n  }\n}\nwindow.customElements.define(EcoJsonSchemaWizard.tag, EcoJsonSchemaWizard);\nexport { EcoJsonSchemaWizard };\n"],"names":["EcoJsonSchemaArray","mixinBehaviors","AppLocalizeBehavior","PolymerElement","e","schema","JSON","parse","stringify","this","items","value","push","_valueChanged","id","target","controls","split","splice","item","prop","index","base","trim","val","__validatedSchema","map","notifyPath","set","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","oldValue","newValue","_setValues","i","length","properties","html","autofocus","type","globalOptions","Object","icon","tooltip","hideLineNumbers","Boolean","label","String","notify","observer","Array","window","customElements","define","tag","EcoJsonSchemaBoolean","inputEl","$","checkbox","component","keys","forEach","title","_label","_isSchemaBoolean","_isSchemaNumber","_isSchemaString","isArray","indexOf","error","EcoJsonSchemaEnum","IronValidatableBehavior","dropdown","_items","filter","invalid","EcoJsonSchemaFile","fileInput","_showDropText","raised","toggleAttribute","button","noink","droppable","setupDrop","uploadBorder","UploadBorder","toggleClass","ondragover","stopPropagation","effect","dataTransfer","dropEffect","effectAllowed","ondragleave","ondrop","event","preventDefault","multi","files","file","mimeType","match","fileType","name","accept","progress","complete","uploadFile","elem","document","createEvent","evt","initEvent","xhr","abort","cancel","model","__data__","self","microTask","run","reader","FileReader","addEventListener","r","result","attributes","hasOwnProperty","readAsDataURL","console","log","_isSchemaFile","s","language","resources","dropText","headers","retryText","removeText","successText","errorText","_shownDropText","additional","fileDataName","paperButtonAlt","paperButtonTitle","EcoJsonSchemaInput","input","required","multipleOf","step","isNaN","maximum","exclusiveMaximum","max","minimum","exclusiveMinimum","min","format","alwaysFloatLabel","maxLength","maxlength","minLength","minlength","pattern","errorMessage","EcoJsonSchemaObject","_clearForm","ctx","_schemaProperties","key","property","description","valueProperty","slot","_isSchemaEnum","_typeof","_isSchemaValue","_isSchemaObject","_isSchemaArray","_isSchemaTabs","path","test","schemaProperty","parts","slice","shift","keyMap","join","keySplices","removed","k","concat","indexSplices","args","addedCount","ii","addedKeys","_deepClone","object","apply","_this","editorValue","theme","_this2","codeTheme","el","create","attr","style","setAttribute","hidden","undefined","className","listen","replace","toLowerCase","dom","appendChild","tip","createElement","innerHTML","temp","cloneDiv","cloneNode","firstChild","unlisten","removeChild","formEl","_removePropertyEl","_buildSchemaProperties","_buildForm","_setValue","childNodes","getAttribute","_this3","o","wizard","EcoJsonSchemaWizard","form","pages","titles","current","page","next","prev","isReview","canSubmit","hasNext","hasPrev"],"mappings":"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"}