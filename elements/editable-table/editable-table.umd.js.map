{"version":3,"file":"editable-table.umd.js","sources":["lib/editable-table-behaviors.js","lib/editable-table-editor-rowcol.js","lib/editable-table-iconset.js","lib/editable-table-editor-toggle.js","lib/editable-table-editor-cell.js","lib/editable-table-styles.js","lib/editable-table-sort.js","lib/editable-table-filter.js","lib/editable-table-display.js","editable-table.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n/**\n * `editable-table-behaviors`\n * `A set of common behaviors for editable-table web components.`\n *\n * @polymer\n * @mixinFunction\n */\n\n/**\n * behaviors needed to display the table in either mode\n */\nexport const displayBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    static get properties() {\n      let props = {\n        /**\n         * Add borders to table and table cells.\n         */\n        bordered: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * a table caption\n         */\n        caption: {\n          type: String,\n          value: null,\n          notify: true\n        },\n        /**\n         * Display the first row as a column header.\n         */\n        columnHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Condense height of table cells.\n         */\n        condensed: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * raw data\n         */\n        data: {\n          type: Array,\n          value: [],\n          notify: true,\n          observer: \"_dataChanged\"\n        },\n        /**\n         * Enable filtering by cell value.\n         */\n        filter: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Display the last row as a column footer.\n         */\n        footer: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Display the first column as a row header.\n         */\n        rowHeader: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * When table is wider than screens,\n         * users will select a column to display\n         * instead of scrolling across the table.\n         */\n        responsive: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Enable sorting by column header.\n         */\n        sort: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        },\n        /**\n         * Add alternating row striping.\n         */\n        striped: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          notify: true\n        }\n      };\n      if (super.properties) {\n        props = Object.assign(props, super.properties);\n      }\n      return props;\n    }\n    /**\n     * Fires when data changed\n     * @event change\n     * @param {event} the event\n     */\n    _dataChanged(e) {\n      this.dispatchEvent(\n        new CustomEvent(\"change\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: e\n        })\n      );\n    }\n    /**\n     * Return table data and configuration\n     * @returns {object} an object with all the table data and configurations\n     */\n    getTableProperties() {\n      let data = {\n        bordered: !this.hideBordered ? this.bordered : null,\n        caption: this.caption,\n        columnHeader: this.columnHeader,\n        condensed: !this.hideCondensed ? this.condensed : null,\n        data: this.data,\n        filter: !this.hideFilter ? this.filter : null,\n        footer: this.footer,\n        rowHeader: this.rowHeader,\n        responsive: !this.hideResponsive ? this.responsive : null,\n        sort: !this.hideSort ? this.sort : null,\n        striped: !this.hideStriped ? this.striped : null,\n        summary: this.summary\n      };\n      return data;\n    }\n  };\n};\n\n/**\n * behaviors needed for table cells, row headers, and columns\n */\nexport const cellBehaviors = function(SuperClass) {\n  return class extends SuperClass {\n    /**\n     * Get the row or column label\n     * @param {number} index of the row or column\n     * @param  {boolean} whenther it's a row\n     * @returns {string} a row number or a column letter\n     */\n    _getLabel(index, row) {\n      if (row) {\n        return index + 1;\n      } else {\n        let numerals = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\"),\n          results = this._getLetter(index)\n            .split(\"-\")\n            .reverse(),\n          label = \"\";\n        for (let i = 0; i < results.length; i++) {\n          if (results[i] !== \"\") label += numerals[results[i]];\n        }\n        return label;\n      }\n    }\n\n    /**\n     * Converts index to a letter.\n     * @param {number} index of the row or column\n     * @returns {string} a column letter\n     */\n    _getLetter(index) {\n      let place = Math.floor(index / 26),\n        multiplier = 26 * place,\n        remainder = index - multiplier,\n        letters = \"\";\n      letters += remainder + \"-\";\n      if (place > 0 && place < 26) {\n        letters += place - 1 + \"-\";\n      } else if (place >= 26) {\n        letters += this._getLetter(place - 1);\n      }\n      return letters;\n    }\n  };\n};\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n\n/**\n * `editable-table-editor-rowcol`\n * `A header label and menu for inserting and deleting a row or a column of the editable-table interface (editable-table.html).`\n *\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin cellBehaviors\n */\nclass EditableTableEditorRowcol extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n        :host #label {\n          margin: 0;\n          padding: 0;\n        }\n        :host paper-menu-button {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n        }\n        :host paper-button {\n          margin: 0;\n          display: block;\n          text-transform: none;\n          text-align: left;\n          background-color: transparent;\n          padding-top: var(--editable-table-row-vertical-padding);\n          padding-bottom: var(--editable-table-row-vertical-padding);\n          font-family: var(--editable-table-secondary-font-family);\n        }\n        :host([condensed]) paper-button {\n          padding-top: var(--editable-table-row-vertical-padding-condensed);\n          padding-bottom: var(--editable-table-row-vertical-padding-condensed);\n        }\n      </style>\n      <paper-menu-button id=\"menu\">\n        <paper-button slot=\"dropdown-trigger\">\n          <span id=\"label\">[[label]]</span>\n          <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n        </paper-button>\n        <paper-listbox slot=\"dropdown-content\" label$=\"[[label]]\">\n          <paper-button on-click=\"_onInsertBefore\"\n            >Insert [[_getType(row)]] Before</paper-button\n          >\n          <paper-button on-click=\"_onInsertAfter\"\n            >Insert [[_getType(row)]] After</paper-button\n          >\n          <paper-button on-click=\"_onDelete\"\n            >Delete [[_getType(row)]]</paper-button\n          >\n        </paper-listbox>\n      </paper-menu-button>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-editor-rowcol\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the row or column\n       */\n      index: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Label of the row or column\n       */\n      label: {\n        type: String,\n        computed: \"_getLabel(index,type)\"\n      },\n      /**\n       * Whether the menu button controls a row\n       */\n      row: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n  /**\n   * Fires Delete Row/Column is clicked\n   * @param {boolean} row whether it's row\n   * @returns {string} \"Row of \"Column\"\"\n   */\n  _getType(row) {\n    return row ? \"Row\" : \"Column\";\n  }\n  /**\n   * Fires when  selection is made from menu button\n   * @event delete-rowcol\n   * @param {number} index the index to perform the action\n   * @param {boolean} whether the action is to insert\n   */\n  rowColAction(index = this.index, insert = true) {\n    this.dispatchEvent(\n      new CustomEvent(\"rowcol-action\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          insert: insert,\n          row: this.row,\n          index: index\n        }\n      })\n    );\n  }\n  /**\n   * Handles when Delete Row/Column is clicked\n   * @param {event} e the button event\n   */\n  _onDelete(e) {\n    this.rowColAction(this.index, false);\n  }\n  /**\n   * Handles when Insert Row/Column is clicked\n   * @param {event} e the button event\n   */\n  _onInsertBefore(e) {\n    this.rowColAction(this.row ? this.index - 1 : this.index);\n  }\n  /**\n   * Handles when Insert Row/Column After is clicked\n   * @param {event} e the button event\n   */\n  _onInsertAfter(e) {\n    this.rowColAction(this.row ? this.index : this.index + 1);\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorRowcol.tag,\n  EditableTableEditorRowcol\n);\nexport { EditableTableEditorRowcol };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `editable-table-iconset`\n * `An icon set of sort and filter icons specifically for editable-table.`\n *\n * Example:\n *   <script>import \"@lrnwebcomponents/hax-iconset/editable-table-iconset.js\";</script>\n *   <iron-icon icon=\"editable-table:filter\"></iron-icon>\n *\n * @polymer\n * @pseudoElement editable-table-iconset\n * @demo demo/display.html\n */\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\n\nimport { html } from \"@polymer/polymer/lib/utils/html-tag.js\";\n\nconst template = html`\n  <iron-iconset-svg size=\"24\" name=\"editable-table\">\n    <!-- column headers -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"column-headers\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"3\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- row-headers -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-headers\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"3\" width=\"6\" height=\"18\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- row-striped -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-striped\">\n          <rect style=\"opacity: 0.4\" x=\"3\" y=\"3\" width=\"18\" height=\"6\" />\n          <rect style=\"opacity: 0.4\" x=\"3\" y=\"15\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- footer -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"footer\">\n          <rect style=\"opacity: 0.7\" x=\"3\" y=\"15\" width=\"18\" height=\"6\" />\n          <path\n            d=\"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- filter -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"filter\">\n          <path d=\"M5,7l7,7,7-7Z\"></path>\n          <rect x=\"11\" y=\"13\" width=\"2\" height=\"4\"></rect>\n        </g>\n      </defs>\n    </svg>\n    <!-- row-condensed -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"row-condensed\">\n          <path\n            d=\"M20,2H4A2,2,0,0,0,2,4V20a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V4A2,2,0,0,0,20,2ZM8,20H4V17.5H8Zm0-4.5H4V13H8ZM8,11H4V8.74H8ZM8,6.5H4V4H8ZM14,20H10V17.5h4Zm0-4.5H10V13h4ZM14,11H10V8.74h4Zm0-4.5H10V4h4ZM20,20H16V17.5h4Zm0-4.5H16V13h4ZM20,11H16V8.5h4Zm0-4.5H16V4h4Z\"\n          />\n        </g>\n      </defs>\n    </svg>\n    <!-- filter off -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"filter-off\">\n          <polygon\n            points=\"19.26 6.95 10.7 6.95 14.98 11.23 19.26 6.95\"\n          ></polygon>\n          <polygon\n            points=\"5 4.92 7.03 6.95 5.26 6.95 11.26 12.95 11.26 16.95 13.26 16.95 13.26 13.18 17.57 17.49 18.49 16.57 5.92 4 5 4.92\"\n          ></polygon>\n        </g>\n      </defs>\n    </svg>\n    <!-- sortable -->\n    <svg viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs>\n        <g id=\"sortable\">\n          <path d=\"M7,13l5,5l5-5H7z M17,11l-5-5l-5,5H17z\"></path>\n        </g>\n      </defs>\n    </svg>\n  </iron-iconset-svg>\n`;\n\ndocument.head.appendChild(template.content);\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/image-icons.js\";\nimport \"@polymer/iron-icons/device-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-toggle`\n * `A toggle button for an property in the editable-table interface (editable-table.html).`\n *\n * @microcopy - language worth noting:\n * ```\n <editable-table-editor-toggle\n  hidden                           //Hide and disable this toggle? Default is false.\n  label=\"Condensed\"                //The label for the toggle button\n  prop=\"condensed\"                 //The property controlled by this toggle\n  tooltip=\"Condense cell height.\"  //A tooltip for this toggle.\n  value=\"true\">                    //The value of this toggle.\n</editable-table-editor-toggle>```\n *  \n * @demo demo/editor.html\n * \n * @polymer\n * @customElement\n */\nclass EditableTableEditorToggle extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host([hidden]) {\n          display: none;\n        }\n        :host paper-button {\n          padding: 2px;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-secondary-font-family);\n          background-color: var(--editable-table-button-bg-color);\n          color: var(--editable-table-button-color);\n        }\n        :host([toggled]) paper-button {\n          background-color: var(--editable-table-button-toggled-bg-color);\n          color: var(--editable-table-button-toggled-color);\n        }\n        :host(:not([disabled])) paper-button:focus,\n        :host(:not([disabled])) paper-button:hover {\n          background-color: var(--editable-table-button-hover-bg-color);\n          color: var(--editable-table-button-hover-color);\n          cursor: pointer;\n        }\n        :host([toggled]:not([disabled])) paper-button:focus,\n        :host([toggled]:not([disabled])) paper-button:hover {\n          background-color: var(--editable-table-button-toggled-hover-bg-color);\n          color: var(--editable-table-button-toggled-hover-color);\n          cursor: pointer;\n        }\n        :host([disabled]) paper-button {\n          background-color: var(--editable-table-button-disabled-bg-color);\n          color: var(--editable-table-button-disabled-color);\n          cursor: not-allowed;\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host #filter-off {\n          opacity: 0.25;\n        }\n      </style>\n      <label for=\"button\" class=\"sr-only\" aria-hidden>[[label]]</label>\n      <paper-button\n        id=\"button\"\n        aria-checked=\"true\"\n        aria-describedby=\"[[tooltip]]\"\n        disabled$=\"[[disabled]]\"\n        on-click=\"_onClick\"\n        role=\"switch\"\n      >\n        <span hidden$=\"[[toggled]]\" class=\"sr-only\">on</span>\n        <span hidden$=\"[[!toggled]]\" class=\"sr-only\">off</span>\n        <iron-icon icon$=\"[[icon]]\" aria-hidden=\"true\"></iron-icon>\n      </paper-button>\n      <paper-tooltip id=\"tooltip\" for=\"button\" aria-hidden=\"true\"\n        >[[label]]</paper-tooltip\n      >\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-toggle\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Whether toggle is disabled\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Table id for accessibility\n       */\n      controls: {\n        type: String,\n        value: \"table\",\n        readOnly: true,\n        reflectToAttribute: true\n      },\n      /**\n       * Button id that matches the table property to toggle\n       */\n      id: {\n        type: String,\n        value: null\n      },\n      /**\n       * Button icon\n       */\n      icon: {\n        type: String,\n        value: null\n      },\n      /**\n       * Button label\n       */\n      label: {\n        type: String,\n        value: null\n      },\n      /**\n       * Whether the button is toggled\n       */\n      toggled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Fires when button is clicked\n   * @event change\n   */\n  _onClick() {\n    this.toggled = !this.toggled;\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorToggle.tag,\n  EditableTableEditorToggle\n);\nexport { EditableTableEditorToggle };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport { cellBehaviors } from \"./editable-table-behaviors.js\";\n\n/**\n * `editable-table-editor-cell`\n * `An editable cell in the editable-table-editor (editable-table-editor.html) interface.`\n *\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin cellBehaviors\n */\nclass EditableTableEditorCell extends cellBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host {\n          padding: 0;\n          margin: 0;\n          width: calc(\n            100% - var(--editable-table-row-horizontal-padding) -\n              var(--editable-table-row-horizontal-padding)\n          );\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n        }\n        :host iron-autogrow-textarea {\n          width: 100%;\n          padding: 0;\n          border: none;\n          font-weight: unset;\n          resize: none;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n          flex-grow: 1;\n          --iron-autogrow-textarea: {\n            padding: 0;\n            font-weight: unset;\n            border: none;\n            resize: none;\n            flex-direction: column;\n            -webkit-flex-direction: column;\n            -webkit-appearance: none;\n            -mozilla-appearance: none;\n          }\n        }\n        :host iron-autogrow-textarea > * {\n          padding: 0;\n          font-weight: unset;\n          border: none;\n          resize: none;\n          flex-direction: column;\n          -webkit-flex-direction: column;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n        }\n      </style>\n      <iron-autogrow-textarea\n        autofocus\n        id=\"cell\"\n        label$=\"[[label]]\"\n        on-bind-value-changed=\"_onValueChanged\"\n        value$=\"{{value}}\"\n      >\n      </iron-autogrow-textarea>\n      <div id=\"icons\"><slot></slot></div>\n      <iron-a11y-keys\n        id=\"down\"\n        keys=\"down\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellBelow\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"up\"\n        keys=\"up\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellAbove\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"left\"\n        keys=\"left\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellLeft\"\n      >\n      </iron-a11y-keys>\n      <iron-a11y-keys\n        id=\"right\"\n        keys=\"right\"\n        target$=\"[[cell]]\"\n        on-keys-pressed=\"_onCellRight\"\n      >\n      </iron-a11y-keys>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-editor-cell\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Cell row\n       */\n      row: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Cell column\n       */\n      column: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Cell label\n       */\n      label: {\n        type: String,\n        computed: \"_getCellLabel(column,row)\"\n      },\n      /**\n       * Cell contents\n       */\n      value: {\n        type: String,\n        value: false,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Sets iron-a11y-keys target to this\n   */\n  ready() {\n    super.ready();\n    this.cell = this.$.cell;\n  }\n\n  /**\n   * Focuses the on text area\n   */\n  focus() {\n    this.cell.textarea.focus();\n  }\n\n  /**\n   * Gets the cell label, as in \"Cell B2\"\n   * @param {number} column the column index\n   * @param {number} row the row index\n   * @returns {string} a label (eg., \"Cell B2\")\n   */\n  _getCellLabel(column, row) {\n    return \"Cell \" + this._getLabel(column, false) + this._getLabel(row, true);\n  }\n\n  /**\n   * Fires when cell value changes to notify table\n   * @event cell-value-changed\n   * @param {event} e the change event\n   */\n  _onValueChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-value-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          row: this.row,\n          column: this.column,\n          value: e.detail.value\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the caret (cursor) position of the specified text field.\n   * FROM: https://stackoverflow.com/questions/2897155/get-cursor-position-in-characters-within-a-text-input-field\n   * @returns {number} the caret position (value range is 0-oField.value.length).\n   */\n  getCaretPosition() {\n    var caret = 0;\n    // IE Support\n    if (document.selection) {\n      // Set focus on the element\n      this.$.cell.focus();\n      // To get cursor position, get empty selection range\n      var sel = document.selection.createRange();\n      // Move selection start to 0 position\n      sel.moveStart(\"character\", -this.$.cell.value.length);\n      // The caret position is selection length\n      caret = sel.text.length;\n    } else if (\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart ||\n      this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart == \"0\"\n    ) {\n      caret = this.$.cell.shadowRoot.querySelector(\"textarea\").selectionStart;\n    }\n    return caret;\n  }\n\n  /**\n   * make sure caret is in the correct position\n   * @param {number} start the start position of the caret\n   * @param {number} end the start position of the caret\n   */\n  setCaretPosition(start, end) {\n    let textarea = this.$.cell.shadowRoot.querySelector(\"textarea\");\n    textarea.focus();\n    if (textarea.createTextRange) {\n      let range = textarea.createTextRange();\n      range.collapse(true);\n      range.moveEnd(\"character\", end);\n      range.moveStart(\"character\", start);\n      range.select();\n    } else if (textarea.setSelectionRange) {\n      textarea.setSelectionRange(start, end);\n      textarea.selectionStart = start;\n      textarea.selectionEnd = end;\n    }\n  }\n\n  /**\n   * set focus to textarea and selects text as needed\n   * @param {number} start the start position of the caret\n   * @param {number} end the start position of the caret\n   */\n  setFocus(start, end) {\n    this.$.cell.shadowRoot.querySelector(\"textarea\").focus();\n    if (start !== undefined && end !== undefined) {\n      this.setCaretPosition(start, end);\n    } else if (start !== undefined) {\n      this.setCaretPosition(start, start);\n    } else {\n      this.setCaretPosition(0, 0);\n    }\n  }\n\n  /**\n   * fired when using keyboard to navigate left\n   * @event cell-move\n   */\n  _onCellLeft() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"left\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate right\n   * @event cell-move\n   */\n  _onCellRight() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"right\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate up\n   * @event cell-move\n   */\n  _onCellAbove() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"up\" }\n      })\n    );\n  }\n\n  /**\n   * fired when using keyboard to navigate down\n   * @event cell-move\n   */\n  _onCellBelow() {\n    this.dispatchEvent(\n      new CustomEvent(\"cell-move\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: { cell: this.parentNode, direction: \"down\" }\n      })\n    );\n  }\n}\nwindow.customElements.define(\n  EditableTableEditorCell.tag,\n  EditableTableEditorCell\n);\nexport { EditableTableEditorCell };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n *\n * `editable-table-styles`\n * `a shared set of styles for editable-table`\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nconst styleElement = document.createElement(\"dom-module\");\n\nconst css = html`\n  <style is=\"custom-style\">\n    :host {\n      display: block;\n      width: 100%;\n      max-width: 100%;\n      margin: 15px 0;\n      --editable-table-font-size: unset;\n      --editable-table-secondary-font-size: 12px;\n      --editable-table-caption-font-size: var(--editable-table-font-size);\n      --editable-table-font-family: inherit;\n      --editable-table-secondary-font-family: \"Roboto\", \"Noto\", sans-serif;\n      font-family: var(--editable-table-font-family);\n\n      --editable-table-light-weight: 200;\n      --editable-table-medium-weight: 300;\n      --editable-table-heavy-weight: 600;\n      --editable-table-color: #222;\n      --editable-table-bg-color: #fff;\n      --editable-table-caption-bg-color: #fff;\n      --editable-table-heading-color: #000;\n      --editable-table-heading-bg-color: #ddd;\n      --editable-table-stripe-bg-color: #eee;\n\n      --editable-table-row-horizontal-padding: 4px;\n      --editable-table-row-vertical-padding: 5px;\n      --editable-table-row-vertical-padding-condensed: 2px;\n      --editable-table-row-padding: var(--editable-table-row-vertical-padding)\n        var(--editable-table-row-horizontal-padding);\n      --editable-table-row-padding-condensed: var(\n          --editable-table-row-vertical-padding-condensed\n        )\n        var(--editable-table-row-horizontal-padding);\n\n      --editable-table-border-width: 1px;\n      --editable-table-border-style: solid;\n      --editable-table-border-color: #999;\n      --editable-table-border: var(--editable-table-border-width)\n        var(--editable-table-border-style) var(--editable-table-border-color);\n\n      --editable-table-caption-color: var(--editable-table-color);\n      --editable-table-button-color: var(--editable-table-border-color);\n      --editable-table-button-bg-color: var(--editable-table-bg-color);\n      --editable-table-button-toggled-color: var(--editable-table-color);\n      --editable-table-button-toggled-bg-color: var(--editable-table-bg-color);\n      --editable-table-button-hover-color: var(--editable-table-button-color);\n      --editable-table-button-toggled-hover-color: var(\n        --editable-table-heading-color\n      );\n      --editable-table-button-hover-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --editable-table-button-toggled-hover-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --editable-table-button-disabled-color: var(\n        --editable-table-border-color\n      );\n      --editable-table-button-disabled-bg-color: var(\n        --editable-table-heading-bg-color\n      );\n      --secondary-text-color: var(--editable-table-border-color);\n      --simple-picker-option-size: 24px;\n      --simple-picker-option: {\n        font-family: var(--editable-table-secondary-font-family);\n        color: var(--editable-table-color);\n        background-color: var(--editable-table-bg-color);\n        font-size: var(--editable-table-secondary-font-size);\n      }\n      --editable-table-style-stripe: {\n        background-color: var(--editable-table-stripe-bg-color);\n      }\n      --editable-table-style-column-header: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n        background-color: var(--editable-table-heading-bg-color);\n      }\n      --editable-table-style-row-header: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n      }\n      --editable-table-style-footer: {\n        font-weight: var(--editable-table-heavy-weight);\n        color: var(--editable-table-heading-color);\n        border-top: 3px solid var(--editable-table-color);\n      }\n      --paper-font-caption: {\n        font-family: var(--editable-table-secondary-font-family);\n      }\n    }\n    :host([hidden]) {\n      display: none;\n    }\n    :host .sr-only {\n      position: absolute;\n      left: -9999px;\n      font-size: 0;\n      height: 0;\n      width: 0;\n      overflow: hidden;\n    }\n    :host #table {\n      width: calc(\n        100% - var(--editable-table-border-width) -\n          var(--editable-table-border-width)\n      );\n      display: table;\n      border-collapse: collapse;\n      border: var(--editable-table-border);\n    }\n    :host #table,\n    :host .th-or-td {\n      font-weight: var(--editable-table-light-weight);\n      color: var(--editable-table-color);\n      background-color: var(--editable-table-bg-color);\n    }\n    :host caption {\n      font-size: var(--editable-table-caption-font-size);\n      font-weight: var(--editable-table-heavy-weight);\n      color: var(--editable-table-caption-color);\n      background-color: var(--editable-table-caption-bg-color);\n      width: 100%;\n    }\n    :host tr {\n      display: table-row;\n    }\n    :host .th-or-td {\n      display: table-cell;\n    }\n    :host .cell {\n      padding: var(--editable-table-row-padding);\n    }\n    :host([condensed]) .th,\n    :host([condensed]) .cell {\n      padding: var(--editable-table-row-padding-condensed);\n    }\n    :host caption,\n    :host #table .th-or-td {\n      text-align: left;\n    }\n    :host #table .th-or-td[numeric] {\n      text-align: var(--editable-table-numeric-text-align, unset);\n    }\n    :host #table .td[negative] .cell {\n      color: var(--editable-table-negative-color, --editable-table-color);\n    }\n    :host editable-table-sort {\n      width: 100%;\n    }\n    @media screen {\n      :host {\n        overflow-x: auto;\n        width: 100%;\n        max-width: 100%;\n      }\n    }\n  </style>\n`;\nstyleElement.appendChild(css);\n\nstyleElement.register(\"editable-table-styles\");\n\nwindow.EditableTableStyleManager = {};\nwindow.EditableTableStyleManager.instance = null;\n/**\n * Checks to see if there is an instance available, and if not appends one\n */\nwindow.EditableTableStyleManager.requestAvailability = function() {\n  if (window.EditableTableStyleManager.instance == null) {\n    window.EditableTableStyleManager.instance = document.createElement(\"style\");\n    window.EditableTableStyleManager.instance.setAttribute(\n      \"is\",\n      \"custom-style\"\n    );\n    window.EditableTableStyleManager.instance.setAttribute(\n      \"include\",\n      \"editable-table-styles\"\n    );\n    document.head.append(window.EditableTableStyleManager.instance);\n  }\n  return window.EditableTableStyleManager.instance;\n};\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-sort`\n * `A column header that functions as a three-state sort button (no sort, sort ascending, sort descending) for the table-editor-display mode (table-editor-display.html).`\n *\n * @demo demo/display.html\n *\n * @polymer\n * @customElement\n */\nclass EditableTableSort extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host(:not([sort-mode=\"asc\"])) .asc,\n        :host(:not([sort-mode=\"desc\"])) .desc,\n        :host(:not([sort-mode=\"none\"])) .none,\n        :host #asc,\n        :host #desc,\n        :host([sorting]:not([sort-mode=\"none\"])) #none {\n          display: none;\n        }\n        :host([sorting][sort-mode=\"asc\"]) #asc,\n        :host([sorting][sort-mode=\"desc\"]) #desc {\n          display: flex;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\" on-click=\"_onSortClicked\">\n        [[text]] <span class=\"sr-only asc\">(ascending)</span>\n        <span class=\"sr-only desc\">(descending)</span>\n        <span class=\"sr-only\"> Toggle sort mode.</span>\n        <iron-icon id=\"asc\" icon=\"arrow-drop-up\"></iron-icon>\n        <iron-icon id=\"desc\" icon=\"arrow-drop-down\"></iron-icon>\n        <iron-icon id=\"none\" icon=\"editable-table:sortable\"></iron-icon>\n      </paper-button>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-sort\";\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Sort ascending, descending or none\n       */\n      columnIndex: {\n        type: Number,\n        value: null,\n        reflectToAttribute: true\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\",\n        reflectToAttribute: true\n      },\n      /**\n       * Index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1,\n        reflectToAttribute: true\n      },\n      /**\n       * Whether the column is being sorted\n       */\n      sorting: {\n        type: Boolean,\n        computed: \"_isSorting(columnIndex,sortColumn)\",\n        reflectToAttribute: true\n      },\n      /**\n       * Column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Fires when sort button is clicked\n   * @event change-sort-mode\n   */\n  _onSortClicked() {\n    this.dispatchEvent(\n      new CustomEvent(\"change-sort-mode\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n\n  /**\n   * Changes the sort mode\n   * @param {string} mode the sort mode: `asc` for ascending or `desc` for descending;\n   */\n  setSortMode(mode) {\n    this.sortMode = mode;\n    this.__checked = mode === \"asc\" ? true : mode === \"desc\" ? mode : false;\n  }\n\n  /**\n   * Determines if column number is the same as the current sort column\n   * @param {number} columnIndex the index of the column\n   * @param {number} sortColumn the index of the column being sorted\n   * @returns {boolean} whether this column is being sorted\n   */\n  _isSorting(columnIndex, sortColumn) {\n    return columnIndex === sortColumn;\n  }\n}\nwindow.customElements.define(EditableTableSort.tag, EditableTableSort);\nexport { EditableTableSort };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./editable-table-iconset.js\";\n\n/**\n * `editable-table-editor-filter`\n * `Displays a cell in the editable-table-display mode (editable-table-display.html) as a filter button.`\n *\n * @demo demo/display.html\n *\n * @polymer\n * @customElement\n */\nclass EditableTableFilter extends PolymerElement {\n  static get template() {\n    return html`\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: 0;\n          margin: 0;\n          width: 100%;\n          min-width: unset;\n          display: inline-flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host iron-icon {\n          min-width: 24px;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host #filter-off {\n          opacity: 0.25;\n        }\n        :host(:not([filtered])) .filtered,\n        :host(:not([filtered]):not(:focus):not(:hover)) #filter,\n        :host(:not([filtered]):focus) #filter-off,\n        :host(:not([filtered]):hover) #filter-off,\n        :host([filtered]:not(:focus):not(:hover)) #filter-off,\n        :host([filtered]:focus) #filter,\n        :host([filtered]:hover) #filter {\n          display: none;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\" on-click=\"_onFilterClicked\">\n        <span>[[text]]</span>\n        <span class=\"sr-only\" hidden\\$=\"[[!filtered]]\"> (filtered)</span>\n        <span class=\"sr-only\"> Toggle filter.</span>\n        <iron-icon id=\"filter\" icon=\"editable-table:filter\"></iron-icon>\n        <iron-icon id=\"filter-off\" icon=\"editable-table:filter-off\"></iron-icon>\n      </paper-button>\n      <paper-tooltip for=\"button\">Toggle filter for \"[[text]]\"</paper-tooltip>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table-filter\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the column\n       */\n      columnIndex: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Whether the column is filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Column header text\n       */\n      text: {\n        type: String,\n        value: \"\"\n      }\n    };\n  }\n\n  /**\n   * Listens for button click\n   */\n  _getPressed(filtered) {\n    return filtered ? \"true\" : \"false\";\n  }\n\n  /**\n   * Fires when filter button is clicked\n   * @event toggle-filter\n   */\n  _onFilterClicked() {\n    this.dispatchEvent(\n      new CustomEvent(\"toggle-filter\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n  }\n}\nwindow.customElements.define(EditableTableFilter.tag, EditableTableFilter);\nexport { EditableTableFilter };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/polymer/lib/elements/dom-repeat.js\";\nimport \"@polymer/polymer/lib/elements/dom-if.js\";\nimport \"@lrnwebcomponents/simple-picker/simple-picker.js\";\nimport { ResponsiveUtilityBehaviors } from \"@lrnwebcomponents/responsive-utility/lib/responsive-utility-behaviors.js\";\nimport { displayBehaviors } from \"./editable-table-behaviors.js\";\nimport \"./editable-table-sort.js\";\nimport \"./editable-table-filter.js\";\nimport \"./editable-table-styles.js\";\n\n/**\n * `editable-table-display`\n * ` An editor interface for editable-table`\n * @demo demo/editor.html\n *\n * @polymer\n * @customElement\n * @appliesMixin displayBehaviors\n * @appliesMixin ResponsiveUtilityBehaviors\n */\nclass EditableTableDisplay extends displayBehaviors(\n  ResponsiveUtilityBehaviors(PolymerElement)\n) {\n  static get template() {\n    return html`\n      <style include=\"editable-table-styles\">\n        :host {\n          width: 100%;\n          max-width: 100%;\n        }\n        :host([bordered]) .th,\n        :host([bordered]) .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .tbody-tr:nth-child(2n) .th,\n        :host([striped]) .tbody-tr:nth-child(2n) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .thead-tr .th {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .tbody-tr .th {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .tfoot-tr .th,\n        :host([footer]) .tfoot-tr .td {\n          @apply --editable-table-style-footer;\n        }\n        :host #column {\n          width: calc(var(--simple-picker-option-size) + 6px);\n          overflow: visible;\n          display: none;\n          margin: 0 0 1px 10px;\n          --simple-picker-border-color: var(--editable-table-border-color);\n          --simple-picker-sample-option: {\n            position: absolute;\n            left: -9999px;\n            overflow: hidden;\n            width: 0;\n            height: 0;\n          }\n          --simple-picker-sample: {\n            width: var(--simple-picker-option-size);\n            overflow: visible;\n            border-width: 1px;\n          }\n          --simple-picker-collapse: {\n            right: calc(100% - var(--simple-picker-option-size) - 4px);\n          }\n          --simple-picker-sample-focus: {\n            border-width: 1px;\n          }\n        }\n        @media screen {\n          :host {\n            overflow-x: scroll;\n          }\n          :host([responsive][responsive-size=\"xs\"]) caption > div {\n            display: flex;\n            align-items: flex-end;\n            justify-content: space-between;\n          }\n          :host([responsive][responsive-size=\"xs\"]) #column {\n            display: inline-flex;\n          }\n          :host([responsive][responsive-size=\"xs\"]) .th[xs-hidden],\n          :host([responsive][responsive-size=\"xs\"]) .td[xs-hidden] {\n            display: none;\n          }\n        }\n      </style>\n      <table id=\"table\" class=\"table\">\n        <caption>\n          <div>\n            [[caption]]\n            <slot></slot>\n            <simple-picker\n              id=\"column\"\n              aria-labelledby$=\"[[tables.0.label]]\"\n              value$=\"{{selected}}\"\n              on-change=\"_selectedChanged\"\n              options=\"[[__theadData]]\"\n            >\n            </simple-picker>\n          </div>\n        </caption>\n        <thead hidden=\"[[!columnHeader]]\">\n          <tr class=\"tr thead-tr\">\n            <template\n              is=\"dom-repeat\"\n              items=\"[[thead.0]]\"\n              as=\"th\"\n              index-as=\"index\"\n              restamp\n            >\n              <th\n                class=\"th th-or-td\"\n                cell-index$=\"[[index]]\"\n                numeric$=\"[[_isNumericColumn(index)]]\"\n                scope=\"col\"\n                xs-hidden$=\"[[_isColHidden(index,1)]]\"\n              >\n                <template is=\"dom-if\" if=\"[[sort]]\" restamp=\"\">\n                  <editable-table-sort\n                    sort-column$=\"[[sortColumn]]\"\n                    column-index=\"[[index]]\"\n                    text$=\"[[th]]\"\n                  ></editable-table-sort>\n                </template>\n                <template is=\"dom-if\" if=\"[[!sort]]\" restamp=\"\"\n                  >[[th]]</template\n                >\n              </th>\n            </template>\n          </tr>\n        </thead>\n        <tbody id=\"tbody\" class=\"tbody\">\n          <template\n            is=\"dom-repeat\"\n            items=\"[[tbody]]\"\n            as=\"tr\"\n            filter=\"{{filterRows(filterColumn,filterText)}}\"\n            restamp=\"\"\n          >\n            <tr class=\"tr tbody-tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[tr]]\"\n                as=\"cell\"\n                index-as=\"index\"\n                restamp=\"\"\n              >\n                <template\n                  is=\"dom-if\"\n                  if=\"[[_isRowHeader(rowHeader,index)]]\"\n                  restamp=\"\"\n                >\n                  <th\n                    class=\"th th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                    scope=\"row\"\n                  >\n                    [[cell]]\n                  </th>\n                </template>\n                <template\n                  is=\"dom-if\"\n                  if=\"[[!_isRowHeader(rowHeader,index)]]\"\n                  restamp=\"\"\n                >\n                  <td\n                    class=\"td cell th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    negative$=\"[[_isNegative(cell)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                  >\n                    <template is=\"dom-if\" if=\"[[filter]]\" restamp=\"\">\n                      <editable-table-filter\n                        column-index=\"[[index]]\"\n                        text$=\"[[cell]]\"\n                        filtered$=\"[[_isFiltered(index,filterColumn,filtered)]]\"\n                      ></editable-table-filter>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[!filter]]\" restamp=\"\"\n                      ><span class=\"cell\">[[cell]]</span></template\n                    >\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </template>\n        </tbody>\n        <template is=\"dom-if\" if=\"[[footer]]\">\n          <tfoot class=\"tfoot\">\n            <tr class=\"tr tfoot-tr\">\n              <template\n                is=\"dom-repeat\"\n                items=\"[[__tfoot.0]]\"\n                as=\"cell\"\n                index-as=\"index\"\n              >\n                <template is=\"dom-if\" if=\"[[_isRowHeader(rowHeader,index)]]\">\n                  <th\n                    class=\"th th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                    scope=\"row\"\n                  >\n                    [[cell]]\n                  </th>\n                </template>\n                <template is=\"dom-if\" if=\"[[!_isRowHeader(rowHeader,index)]]\">\n                  <td\n                    class=\"td cell th-or-td\"\n                    cell-index$=\"[[index]]\"\n                    numeric$=\"[[_isNumericColumn(index)]]\"\n                    negative$=\"[[_isNegative(cell)]]\"\n                    xs-hidden$=\"[[_isColHidden(index,1)]]\"\n                  >\n                    [[cell]]\n                  </td>\n                </template>\n              </template>\n            </tr>\n          </tfoot>\n        </template>\n      </table>\n    `;\n  }\n  static get tag() {\n    return \"editable-table-display\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Index of the current filter column\n       */\n      filterColumn: {\n        type: Number,\n        value: null\n      },\n      /**\n       * Whether table is filtered\n       */\n      filtered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Text for Filtering\n       */\n      filterText: {\n        type: String,\n        value: null\n      },\n      /**\n       * Selected column to display when in responsive mode\n       */\n      selected: {\n        type: Number,\n        value: 1\n      },\n      /**\n       * Sort mode: ascending, descending or none\n       */\n      sortMode: {\n        type: String,\n        value: \"none\"\n      },\n      /**\n       * Index of the current sort column\n       */\n      sortColumn: {\n        type: Number,\n        value: -1\n      },\n      /**\n       * Columns in <thead>\n       */\n      thead: {\n        type: Array,\n        computed: \"_getThead(data,columnHeader)\"\n      },\n      /**\n       * Rows in <tbody>\n       */\n      tbody: {\n        type: Array,\n        computed: \"_getTbody(data,columnHeader,footer)\"\n      }\n    };\n  }\n\n  /**\n   * Gets the rows in `<tbody>`\n   * @param {array} data the table data as an array\n   * @param {boolean} columnHeader does the table have a column header\n   * @param {boolean} footer does the table have a footer\n   * @returns {array} the `<tbody>` data\n   */\n  _getTbody(data, columnHeader, footer) {\n    if (data !== undefined && data !== null && data.length > 0) {\n      let ch = columnHeader ? 1 : 0,\n        tbody;\n      if (footer) {\n        tbody = data.slice(ch, data.length - 1);\n        this.__tfoot = data.slice(data.length - 1);\n      } else {\n        tbody = data.slice(ch, data.length);\n        this.__tfoot = [];\n      }\n      return tbody;\n    }\n    return [];\n  }\n\n  /**\n   * Gets the columns in `<thead>`\n   * @param {array} data the table data as an array\n   * @param {boolean} columnHeader does the table have a column header\n   * @returns {array} the `<thead>`data\n   */\n  _getThead(data, columnHeader) {\n    this.set(\"__theadData\", []);\n    if (data !== undefined && data !== null && data.length > 0) {\n      for (let i = 1; i < data[0].length; i++) {\n        this.push(\"__theadData\", [{ alt: data[0][i], value: i }]);\n      }\n      if (columnHeader) return data.slice(0, 1);\n    }\n    return [];\n  }\n  /**\n   * Determines whether or not a cell is hidden in responsive mode\n   * @param {number} index the current column number\n   * @param {number} selected the selected column number\n   * @returns {boolean} whether the column is hidden (i.e. not the selected column)\n   */\n  _isColHidden(index, selected) {\n    return parseInt(index) !== 0 && parseInt(index) !== parseInt(selected);\n  }\n\n  /**\n   * Sets a column's cells to filtered when in filtered mode so that filter can toggle\n   * @param {number} index the current column number\n   * @param {number} selected the filtered column number\n   * @param {boolean} filtered is the table in filtered mode\n   * @returns {boolean} whether the column is filtered\n   */\n  _isFiltered(column, filterColumn, filtered) {\n    return filterColumn !== null && filterColumn === column && filtered;\n  }\n\n  /**\n   * Sets a cell's negative number style\n   * @param {string} cell the cell contents\n   * @returns {boolean} whether cell contents are numeric and negative\n   */\n  _isNegative(cell) {\n    return this._isNumeric(cell) && cell.trim().indexOf(\"-\") === 0;\n  }\n\n  /**\n   * Sets a cell's numeric style\n   * @param {string} cell the cell contents\n   * @returns {boolean} whether cell contents are numeric\n   */\n  _isNumeric(cell) {\n    return cell !== null && !isNaN(cell.trim().replace(/\\$/g, \"\"));\n  }\n\n  /**\n   * Determines if an entire body column dontains numeric data\n   * @param {number} index the column index\n   * @returns {boolean} if columns contents are numeric\n   */\n  _isNumericColumn(index) {\n    let numeric = true;\n    for (let i = 0; i < this.tbody.length; i++) {\n      if (!this._isNumeric(this.tbody[i][index])) numeric = false;\n    }\n    return numeric;\n  }\n\n  /**\n   * Calculates whether the cell is a `<th>` or `<td>`\n   * @param {boolean} rowHeader if the cell is a rowheader\n   * @param {number} index the current column number\n   * @returns {boolean} whether the cell is a `<th>` or `<td>`\n   */\n  _isRowHeader(rowHeader, index) {\n    return index === 0 && rowHeader;\n  }\n\n  /**\n   * Handles table change\n   */\n  _tableChanged() {\n    this._updateCols();\n  }\n\n  /**\n   * Handles column  selector change\n   */\n  _selectedChanged() {\n    this._updateCols();\n  }\n\n  /**\n   * Handles sort button click\n   * @param {event} e the event\n   */\n  _changeSortMode(e) {\n    if (this.sortColumn === e.detail.columnIndex && this.sortMode === \"asc\") {\n      this.sortMode = \"desc\";\n    } else if (\n      this.sortColumn === e.detail.columnIndex &&\n      this.sortMode === \"desc\"\n    ) {\n      this.sortMode = \"none\";\n    } else {\n      this.sortMode = \"asc\";\n      this.sortColumn = e.detail.columnIndex;\n    }\n    e.detail.setSortMode(this.sortMode);\n    this.sortData(this.sortMode, e.detail.columnIndex);\n  }\n\n  /**\n   * update the responsive columns menu\n   */\n  _updateCols() {\n    let selected = this.$.column.value,\n      cols = this.$.table.querySelectorAll(\"th,td\");\n    if (cols.length > 0) {\n      for (let i = 0; i < cols.length; i++) {\n        let col = cols[i];\n        if (this._isColHidden(col.cellIndex, selected)) {\n          col.setAttribute(\"xs-hidden\", true);\n        } else {\n          col.removeAttribute(\"xs-hidden\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle filter based on collumn and text of cell that is clicked\n   * @param {number} filterColumn the number of the column to be filtered\n   * @param {string} filterText the text that will be filtered\n   * @returns\n   */\n  filterRows(filterColumn, filterText) {\n    if (filterText !== undefined && filterText !== null) {\n      return function(tr) {\n        return (\n          tr[filterColumn].toLowerCase().trim() ===\n          filterText.toLowerCase().trim()\n        );\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * initialize the responsive columns menu\n   */\n  sortData(type, column) {\n    if (type !== \"none\" && type !== false) {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        temp[i].unshift(temp[i][column]);\n      }\n      if (type === \"asc\") {\n        temp.sort();\n      } else {\n        temp.reverse();\n      }\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"tbody.\" + i, []);\n        this.set(\"tbody.\" + i, temp[i].slice(1));\n      }\n    } else {\n      let temp = this.tbody.slice();\n      for (let i = 0; i < temp.length; i++) {\n        this.set(\"data.\" + (i + 1), []);\n        this.set(\"data.\" + (i + 1), temp[i].slice());\n      }\n    }\n  }\n\n  /**\n   * Handle filter button click\n   */\n  toggleFilter(e) {\n    if (\n      e === undefined ||\n      (this.filterColumn == e.detail.columnIndex && this.filtered)\n    ) {\n      this.filtered = false;\n      this.filterText = null;\n      this.filterColumn = null;\n    } else {\n      this.filterText = e.detail.text;\n      this.filterColumn = e.detail.columnIndex;\n      this.filtered = true;\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    afterNextRender(this, function() {\n      this.addEventListener(\n        \"change-sort-mode\",\n        this._changeSortMode.bind(this)\n      );\n      this.addEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n    });\n  }\n  disconnectedCallback() {\n    this.removeEventListener(\n      \"change-sort-mode\",\n      this._changeSortMode.bind(this)\n    );\n    this.removeEventListener(\"toggle-filter\", this.toggleFilter.bind(this));\n    super.disconnectedCallback();\n  }\n}\nwindow.customElements.define(EditableTableDisplay.tag, EditableTableDisplay);\nexport { EditableTableDisplay };\n","/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport { displayBehaviors } from \"./lib/editable-table-behaviors.js\";\nimport \"./lib/editable-table-editor-rowcol.js\";\nimport \"./lib/editable-table-editor-toggle.js\";\nimport \"./lib/editable-table-editor-cell.js\";\nimport \"./lib/editable-table-styles.js\";\nimport \"./lib/editable-table-display.js\";\n\n/**\n * `editable-table`\n * `An editor interface for tables that toggles between view mode.`\n *\n### Styling\n\n`<editable-table>` provides the following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--editable-table-font-size` | Main size for the  table. | unset;\n`--editable-table-secondary-font-size` | Smaller font size for the table for minor UI elements. | 12px;\n`--editable-table-caption-font-size` | Font size for the table caption. | var(--editable-table-font-size);\n`--editable-table-font-family` | Main font-family for the table. | inherit;\n`--editable-table-secondary-font-family` | Secondary font-familt for the table's minor UI elements | \"Roboto\", \"Noto\", sans-serif;\n`--editable-table-light-weight` | The lightest table font-weight, for minor UI elements. | 200;\n`--editable-table-medium-weight` | The default table font-weight. | 300;\n`--editable-table-heavy-weight` | The heaviest table font-weight, for emphasis and table  caption. | 600;\n`--editable-table-color` | The table text color. | #222;\n`--editable-table-bg-color` | The table background color. | #fff;\n`--editable-table-caption-color` | The caption text color. | var(--editable-table-color);\n`--editable-table-caption-bg-color` | The caption background color. | #fff;\n`--editable-table-heading-color` | The row/column heading text color. | #000;\n`--editable-table-heading-bg-color` | The row/column heading background color. | #ddd;\n`--editable-table-stripe-bg-color` | The background color for alternating row striping. | #eee;\n`--editable-table-border-width` | The border width for table. | 1px;\n`--editable-table-border-style` | The border style for table. | solid;\n`--editable-table-border-color` | The border color for table. | #999;\n`--editable-table-border` | The table border. | var(--editable-table-border-width) var(--editable-table-border-style) var(--editable-table-border-color);\n`--editable-table-button-color` | The default text color of the toggle buttons. | var(--editable-table-border-color);\n`--editable-table-button-bg-color` | The default background color of the toggle buttons. | var(--editable-table-bg-color);\n`--editable-table-button-toggled-color` | The text color of the toggle buttons when toggled. | var(--editable-table-color);\n`--editable-table-button-toggled-bg-color` | The background color of the toggle buttons when toggled. | var(--editable-table-bg-color);\n`--editable-table-button-hover-color` | The text color of the toggle buttons when hovered or focused. | var(--editable-table-button-color);\n`--editable-table-button-hover-bg-color` | The background color of the toggle buttons when hovered or focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-toggled-hover-color` | The text color of the toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-color);\n`--editable-table-button-toggled-hover-bg-color` | The background color of the toggle buttons when toggled and hovered/focused. | var(--editable-table-heading-bg-color);\n`--editable-table-button-disabled-color` | The text color of the toggle buttons when disabled. | var(--editable-table-border-color);\n`--editable-table-button-disabled-bg-color` | The background color of the toggle buttons when disabled. | var(--editable-table-heading-bg-color);\n`--editable-table-row-horizontal-padding` | Horizontal appding for cells. | 4px;\n`--editable-table-row-vertical-padding` | Default vertical padding for cells (determines row hight and whitespace). | 5px;\n`--editable-table-row-vertical-padding-condensed` | Smaller vertical padding for cells (determines condensed row hight and whitespace). | 2px;\n`--editable-table-row-padding` | Overall default padding for cells. | var(--editable-table-row-vertical-padding) var(--editable-table-row-horizontal-padding);\n`--editable-table-row-padding-condensed` | Overall condensed padding for cells. | var(--editable-table-row-vertical-padding-condensed)var(--editable-table-row-horizontal-padding);\n`--editable-table-style-stripe` | Styles applied to striped rows. | { background-color: var(--editable-table-stripe-bg-color); }\n`--editable-table-style-column-header` | Styles applied to column headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); background-color: var(--editable-table-heading-bg-color); }\n`--editable-table-style-row-header` | Styles applied to row headers. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); }\n`--editable-table-style-footer` | Styles applied to table footer. | { font-weight: var(--editable-table-heavy-weight); color: var(--editable-table-heading-color); border-top: 3px solid var(--editable-table-color); }\n *\n * @demo demo/index.html\n * @demo demo/display.html Display Mode\n * \n * @customElement\n * @polymer\n * @appliesMixin displayBehaviors\n * @appliesMixin EditBehaviors\n */\nclass EditableTable extends displayBehaviors(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"editable-table-styles\">\n        :host {\n          display: block;\n          width: 100%;\n        }\n        :host caption {\n          width: 100%;\n          margin-bottom: 0;\n        }\n        :host label,\n        :host .label {\n          font-size: var(--editable-table-secondary-font-size);\n          font-family: var(--editable-table-secondary-font-family);\n        }\n        :host .filter-icon,\n        :host .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) tbody .tr:first-child .sortable-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host #table {\n          min-width: calc(100% - 2.3px);\n          width: unset;\n        }\n        :host caption,\n        :host .th-or-td {\n          border: 1px solid #ddd;\n        }\n        :host .th,\n        :host th {\n          padding: 0;\n          vertical-align: center;\n          color: black;\n          background-color: #f0f0f0;\n          outline: var(--editable-table-border);\n        }\n        :host .th:first-child {\n          width: 96px;\n        }\n        :host .td {\n          vertical-align: top;\n        }\n        :host([bordered]) .td {\n          border: var(--editable-table-border);\n        }\n        :host([responsive]) thead .th:nth-of-type(3),\n        :host([responsive]) .td:nth-of-type(2) {\n          border-right-width: calc(var(--editable-table-border-width) + 5px);\n          border-right-style: double;\n        }\n        :host([bordered]) thead .th:not(:first-child) {\n          border-bottom: var(--editable-table-border);\n        }\n        :host([striped][column-header])\n          tbody\n          .tr:nth-child(2n + 1):not(:first-of-type)\n          .td,\n        :host([striped]:not([column-header])) tbody .tr:nth-child(2n) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) tbody .tr:first-child .td {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) tbody .tr .td:first-of-type {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) tbody .tr:last-of-type .td {\n          @apply --editable-table-style-footer;\n        }\n        :host caption,\n        :host .field-group {\n          width: 100%;\n          padding: 0;\n          margin: 0;\n          transition: all 2s;\n          color: var(--editable-table-caption-color);\n        }\n        :host .field-group {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        :host caption > *,\n        :host .field-group > * {\n          margin: 0 2.5px;\n        }\n        :host .field-group .field-group {\n          color: var(--editable-table-caption-color);\n          width: unset;\n        }\n        @media screen {\n        }\n      </style>\n      <editable-table-display\n        bordered$=\"[[bordered]]\"\n        caption$=\"[[caption]]\"\n        column-header$=\"[[columnHeader]]\"\n        data=\"[[data]]\"\n        condensed$=\"[[condensed]]\"\n        filter$=\"[[filter]]\"\n        footer$=\"[[footer]]\"\n        hidden$=\"[[editMode]]\"\n        responsive$=\"[[responsive]]\"\n        row-header$=\"[[rowHeader]]\"\n        sort$=\"[[sort]]\"\n        striped$=\"[[striped]]\"\n      >\n      </editable-table-display>\n      <div id=\"table-outer\" hidden$=\"[[!editMode]]\">\n        <p class=\"sr-only\">Table Editor</p>\n        <table\n          id=\"table\"\n          bordered$=\"[[bordered]]\"\n          condensed$=\"[[condensed]]\"\n          striped$=\"[[striped]]\"\n        >\n          <caption>\n            <p class=\"sr-only\">Edit Mode for</p>\n            <paper-input\n              id=\"caption\"\n              label=\"Caption\"\n              placeholder=\"A title for the table.\"\n              on-change=\"_captionChanged\"\n              value$=\"{{caption}}\"\n            >\n            </paper-input>\n          </caption>\n          <thead>\n            <tr class=\"tr\">\n              <th class=\"th th-or-td\" scope=\"col\">\n                <span class=\"sr-only\">Row Operations</span>\n              </th>\n              <template\n                id=\"headers\"\n                is=\"dom-repeat\"\n                items=\"[[data]]\"\n                as=\"row\"\n                index-as=\"tr\"\n                mutable-data\n                restamp\n              >\n                <template is=\"dom-if\" if=\"[[_isFirstRow(tr)]]\" restamp>\n                  <template\n                    id=\"headercols\"\n                    is=\"dom-repeat\"\n                    items=\"[[row]]\"\n                    as=\"cell\"\n                    index-as=\"th\"\n                    mutable-data\n                    restamp\n                  >\n                    <th class=\"th th-or-td col-[[th]]\" scope=\"col\">\n                      <editable-table-editor-rowcol\n                        index$=\"[[th]]\"\n                        condensed$=\"[[condensed]]\"\n                        on-rowcol-action=\"_handleRowColumnMenu\"\n                      >\n                      </editable-table-editor-rowcol>\n                    </th>\n                  </template>\n                </template>\n              </template>\n            </tr>\n          </thead>\n          <tbody id=\"tbody\">\n            <template\n              id=\"rows\"\n              is=\"dom-repeat\"\n              items=\"[[data]]\"\n              as=\"row\"\n              index-as=\"tr\"\n              mutable-data\n              restamp\n            >\n              <tr class=\"tr tbody-tr\">\n                <th class=\"th th-or-td\" scope=\"row\">\n                  <editable-table-editor-rowcol\n                    index$=\"[[tr]]\"\n                    condensed$=\"[[condensed]]\"\n                    on-rowcol-action=\"_handleRowColumnMenu\"\n                    row\n                  >\n                  </editable-table-editor-rowcol>\n                </th>\n                <template\n                  id=\"columns\"\n                  index-as=\"td\"\n                  is=\"dom-repeat\"\n                  items=\"[[row]]\"\n                  as=\"cell\"\n                  mutable-data\n                  restamp\n                >\n                  <td class=\"td th-or-td\" on-click=\"_onCellClick\">\n                    <editable-table-editor-cell\n                      class=\"cell\"\n                      column=\"[[index]]\"\n                      row=\"[[tr]]\"\n                      on-cell-move=\"_onCellMove\"\n                      value$=\"[[cell]]\"\n                    >\n                      <iron-icon\n                        class=\"sortable-icon\"\n                        icon=\"editable-table:sortable\"\n                        aria-hidden=\"true\"\n                      ></iron-icon>\n                      <iron-icon\n                        class=\"filter-icon\"\n                        icon=\"editable-table:filter-off\"\n                      ></iron-icon>\n                    </editable-table-editor-cell>\n                  </td>\n                </template>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n        <div class=\"field-group\">\n          <div class=\"field-group\">\n            <div class=\"label\">Headers and footers</div>\n            <editable-table-editor-toggle\n              id=\"columnHeader\"\n              icon=\"editable-table:column-headers\"\n              label=\"First row has column headers.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[columnHeader]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"rowHeader\"\n              icon=\"editable-table:row-headers\"\n              on-change=\"_onTableSettingChange\"\n              label=\"First column has row headers.\"\n              toggled$=\"[[rowHeader]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"footer\"\n              icon=\"editable-table:footer\"\n              label=\"Last row is a footer.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[footer]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n          <div class=\"field-group\" hidden$=\"[[hideDisplay]]\">\n            <div class=\"label\">Display</div>\n            <editable-table-editor-toggle\n              id=\"bordered\"\n              hidden$=\"[[hideBordered]]\"\n              icon=\"image:grid-on\"\n              label=\"Borders.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[bordered]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"striped\"\n              hidden$=\"[[hideStriped]]\"\n              icon=\"editable-table:row-striped\"\n              label=\"Alternating rows.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[striped]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"condensed\"\n              hidden$=\"[[hideCondensed]]\"\n              icon=\"editable-table:row-condensed\"\n              label=\"Condensed rows.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[condensed]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"responsive\"\n              hidden$=\"[[hideResponsive]]\"\n              icon=\"device:devices\"\n              label=\"Adjust width to screen size.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[responsive]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n          <div class=\"field-group\" hidden$=\"[[hideSortFilter]]\">\n            <div class=\"label\">Sorting and Filtering</div>\n            <editable-table-editor-toggle\n              id=\"sort\"\n              hidden$=\"[[hideSort]]\"\n              label=\"Column sorting.\"\n              icon=\"editable-table:sortable\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[sort]]\"\n            >\n            </editable-table-editor-toggle>\n            <editable-table-editor-toggle\n              id=\"filter\"\n              hidden$=\"[[hideFilter]]\"\n              icon=\"editable-table:filter\"\n              label=\"Column filtering.\"\n              on-change=\"_onTableSettingChange\"\n              toggled$=\"[[filter]]\"\n            >\n            </editable-table-editor-toggle>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get tag() {\n    return \"editable-table\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Is the table in edit-mode? Default is false (display mode).\n       */\n      editMode: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the borders table styles menu option\n       */\n      hideBordered: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the condensed table styles menu option\n       */\n      hideCondensed: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the table display menu group\n       */\n      hideDisplay: {\n        type: Boolean,\n        computed:\n          \"_tableDisplayHidden(hideBordered,hideCondensed,hideStriped,hideResponsive)\"\n      },\n      /**\n       * Hide the filtering option.\n       */\n      hideFilter: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the table sorting & filtering menu group\n       */\n      hideSortFilter: {\n        type: Boolean,\n        computed: \"_tableSortHidden(hideSort,hideFilter)\"\n      },\n      /**\n       * Hide the sorting option.\n       */\n      hideSort: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the responsive table styles menu option\n       */\n      hideResponsive: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Hide the striped table styles menu option\n       */\n      hideStriped: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  /**\n   * Delete a column at the given index\n   * @param {number} index the index of the column\n   */\n  deleteColumn(index) {\n    if (confirm(\"Delete entire column?\")) {\n      for (let i = 0; i < this.data.length; i++) {\n        this.splice(\"data.\" + i, index, 1);\n      }\n    }\n  }\n\n  /**\n   * Delete a row at the given index\n   * @param {number} index the index of the row\n   */\n  deleteRow(index) {\n    if (confirm(\"Delete entire row?\")) {\n      this.splice(\"data\", index, 1);\n    }\n  }\n\n  /**\n   * Insert a column at the given index\n   * @param {number} index the index of the column\n   */\n  insertColumn(index) {\n    let temp = this.data.slice();\n    for (let i = 0; i < temp.length; i++) {\n      temp[i].splice(index, 0, \"\");\n    }\n    this.set(\"data\", temp);\n  }\n\n  /**\n   * Insert a row at the given index\n   * @param {number} index the index of the row\n   */\n  insertRow(index) {\n    let temp = this.data.slice(),\n      temp2 = new Array();\n    for (let i = 0; i < temp[0].length; i++) {\n      temp2.push(\"\");\n    }\n    temp.splice(index + 1, 0, temp2);\n    this.set(\"data\", temp);\n  }\n\n  /**\n   * Toggles between edit-mode and display mode.\n   * @event toggle-edit-mode\n   * @param {boolean} edit Toggle edit mode on? Default is toggle from current mode.\n   */\n  toggleEditMode(edit) {\n    edit = edit !== undefined ? edit : !this.editMode;\n    this.dispatchEvent(\n      new CustomEvent(\"toggle-edit-mode\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: this\n      })\n    );\n    if (edit) {\n      this.shadowRoot.querySelector(\"editable-table-display\").toggleFilter();\n      this.shadowRoot.querySelector(\"editable-table-display\").sortData(false);\n    }\n    this.editMode = edit;\n  }\n  /**\n   * Handles when the caption paper-input changed\n   */\n  _captionChanged() {\n    this.caption = this.$.caption.value;\n  }\n\n  /**\n   * Gets the row data for a given row index\n   * @param {number} index the index of the row\n   * @param {array} data the table data\n   * @returns {array} row data\n   */\n  _getCurrentRow(index, data) {\n    let row = null;\n    if (\n      data !== undefined &&\n      data !== null &&\n      data[index] !== undefined &&\n      data[index] !== null\n    ) {\n      row = data[index];\n    }\n    return row;\n  }\n\n  /**\n   * Handles row/column menu actions\n   * @param {event} e the event\n   */\n  _handleRowColumnMenu(e) {\n    if (e.detail.insert && e.detail.row) {\n      this.insertRow(e.index);\n    } else if (e.detail.insert && !e.detail.row) {\n      this.insertColumn(e.detail.index);\n    } else if (!e.detail.insert && e.detail.row) {\n      this.deleteRow(e.detail.index);\n    } else {\n      this.deleteColumn(e.detail.index);\n    }\n  }\n\n  /**\n   * Tests for first row of data. Workaround to restamp column headers.\n   * @param {number} index the index of the row\n   */\n  _isFirstRow(index) {\n    return index === 0;\n  }\n\n  /**\n   * Sets focus on the cell's textarea if the cell is clicked\n   * @param {event} e the event\n   */\n  _onCellClick(e) {\n    if (e.model && e.model.root && e.model.root.nodeList[0]) {\n      e.model.root.nodeList[0].focus();\n    }\n  }\n\n  /**\n   * Moves the focus/cursor to the correct cell when navigation keys are pressed\n   * @param {event} e the event\n   */\n  _onCellMove(e) {\n    let dir = e.detail.direction,\n      cell = e.detail.cell;\n    let row = cell.parentNode,\n      body = this.$.tbody;\n    let x = Array.prototype.indexOf.call(row.children, cell);\n    let y = Array.prototype.indexOf.call(body.children, row);\n\n    if (dir === \"down\") {\n      if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[x].children[0].setFocus();\n      } else {\n        this.insertRow(y);\n      }\n    } else if (dir === \"up\") {\n      if (y > 0) {\n        body.children[y - 1].children[x].children[0].setFocus();\n      }\n    } else if (dir === \"right\") {\n      if (x + 1 < row.children.length - 1) {\n        row.children[x + 1].children[0].setFocus();\n      } else if (y + 1 < body.children.length - 1) {\n        body.children[y + 1].children[1].children[0].setFocus();\n      }\n    } else if (dir === \"left\") {\n      if (x > 1) {\n        row.children[x - 1].children[0].setFocus();\n      } else if (y > 0) {\n        body.children[y - 2].children[\n          body.children[y - 2].children.length - 2\n        ].children[0].setFocus();\n      }\n    }\n  }\n\n  /**\n   * Updates data when cell value changes\n   * @param {event} e the event\n   */\n  _onCellValueChange(e) {\n    this.set(\"data.\" + e.detail.row + \".\" + e.detail.column, e.detail.value);\n  }\n\n  /**\n   * Updates table properties when setting changes\n   * @param {event} e the event\n   */\n  _onTableSettingChange(e) {\n    this[e.detail.id] = e.detail.toggled;\n  }\n\n  /**\n   * Makes sure there is always on cell to work from\n   */\n  _setMinimumData(data) {\n    if (data.length < 1 || data[0].length < 1) {\n      this.set(\"data\", [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]]);\n    }\n  }\n\n  /**\n   * Determines if all of the table style choices hidden?\n   * @param {boolean} hideBordered is the border toggle hidden\n   * @param {boolean} hideCondensed is the condensed toggle hidden\n   * @param {boolean} hideStriped is the striped toggle hidden\n   * @param {boolean} hideResponsive is the responsive toggle hidden\n   * @returns {boolean} whether all of the  display options are hidden\n   */\n  _tableDisplayHidden(\n    hideBordered,\n    hideCondensed,\n    hideStriped,\n    hideResponsive\n  ) {\n    return hideBordered && hideCondensed && hideStriped && hideResponsive;\n  }\n\n  /**\n   * Determines if all of the sorting and filtering choices hidden?\n   * @param {boolean} hideSort is the sort toggle hidden\n   * @param {boolean} hideFilter is the filter toggle hidden\n   * @returns {boolean} whether all of the sorting & filtering options are hidden\n   */\n  _tableSortHidden(hideSort, hideFilter) {\n    return hideSort && hideFilter;\n  }\n}\nwindow.customElements.define(EditableTable.tag, EditableTable);\nexport { EditableTable };\n"],"names":["displayBehaviors","SuperClass","e","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","bordered","this","hideBordered","caption","columnHeader","condensed","hideCondensed","data","filter","hideFilter","footer","rowHeader","responsive","hideResponsive","sort","hideSort","striped","hideStriped","summary","props","type","Boolean","value","reflectToAttribute","notify","String","Array","observer","Object","assign","cellBehaviors","index","row","numerals","split","results","_getLetter","reverse","label","i","length","place","Math","floor","letters","EditableTableEditorRowcol","PolymerElement","insert","rowColAction","html","Number","computed","window","customElements","define","tag","template","document","head","appendChild","content","EditableTableEditorToggle","toggled","disabled","controls","readOnly","id","icon","EditableTableEditorCell","cell","$","textarea","focus","column","_getLabel","caret","selection","sel","createRange","moveStart","text","shadowRoot","querySelector","selectionStart","start","end","createTextRange","range","collapse","moveEnd","select","setSelectionRange","selectionEnd","undefined","setCaretPosition","parentNode","direction","styleElement","createElement","css","register","EditableTableStyleManager","instance","requestAvailability","setAttribute","append","EditableTableSort","mode","sortMode","__checked","columnIndex","sortColumn","sorting","EditableTableFilter","filtered","EditableTableDisplay","ResponsiveUtilityBehaviors","tbody","ch","slice","__tfoot","set","push","alt","selected","parseInt","filterColumn","_isNumeric","trim","indexOf","isNaN","replace","numeric","_updateCols","setSortMode","sortData","cols","table","querySelectorAll","col","_isColHidden","cellIndex","removeAttribute","filterText","tr","toLowerCase","temp","unshift","afterNextRender","addEventListener","_changeSortMode","bind","toggleFilter","removeEventListener","thead","EditableTable","confirm","splice","temp2","edit","editMode","insertRow","insertColumn","deleteRow","deleteColumn","model","root","nodeList","dir","body","x","prototype","call","children","y","setFocus","hideDisplay","hideSortFilter"],"mappings":"8qHAeO,IAAMA,EAAmB,SAASC,kGAClBA,2CAkHNC,QACNC,cACH,IAAIC,YAAY,SAAU,CACxBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQN,wDASD,CACTO,SAAWC,KAAKC,aAA+B,KAAhBD,KAAKD,SACpCG,QAASF,KAAKE,QACdC,aAAcH,KAAKG,aACnBC,UAAYJ,KAAKK,cAAiC,KAAjBL,KAAKI,UACtCE,KAAMN,KAAKM,KACXC,OAASP,KAAKQ,WAA2B,KAAdR,KAAKO,OAChCE,OAAQT,KAAKS,OACbC,UAAWV,KAAKU,UAChBC,WAAaX,KAAKY,eAAmC,KAAlBZ,KAAKW,WACxCE,KAAOb,KAAKc,SAAuB,KAAZd,KAAKa,KAC5BE,QAAUf,KAAKgB,YAA6B,KAAfhB,KAAKe,QAClCE,QAASjB,KAAKiB,kDA3IZC,EAAQ,CAIVnB,SAAU,CACRoB,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVrB,QAAS,CACPiB,KAAMK,OACNH,MAAO,KACPE,QAAQ,GAKVpB,aAAc,CACZgB,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVnB,UAAW,CACTe,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVjB,KAAM,CACJa,KAAMM,MACNJ,MAAO,GACPE,QAAQ,EACRG,SAAU,gBAKZnB,OAAQ,CACNY,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVd,OAAQ,CACNU,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVb,UAAW,CACTS,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAOVZ,WAAY,CACVQ,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVV,KAAM,CACJM,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVR,QAAS,CACPI,KAAMC,QACNC,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,uCAIVL,EAAQS,OAAOC,OAAOV,8BAEjBA,YA4CAW,EAAgB,SAAStC,kGACfA,wCAOTuC,EAAOC,MACXA,SACKD,EAAQ,UAEXE,EAAW,6BAA6BC,MAAM,IAChDC,EAAUlC,KAAKmC,WAAWL,GACvBG,MAAM,KACNG,UACHC,EAAQ,GACDC,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,IACf,KAAfJ,EAAQI,KAAWD,GAASL,EAASE,EAAQI,YAE5CD,qCASAP,OACLU,EAAQC,KAAKC,MAAMZ,EAAQ,IAG7Ba,EAAU,UACZA,GAFcb,EADC,GAAKU,EAGG,IACnBA,EAAQ,GAAKA,EAAQ,GACvBG,GAAWH,EAAQ,EAAI,IACdA,GAAS,KAClBG,GAAW3C,KAAKmC,WAAWK,EAAQ,IAE9BG,woDCzLPC,0FAAkCf,EAAcgB,uDAmF3Cd,UACAA,EAAM,MAAQ,oDAQVD,yDAAQ9B,KAAK8B,MAAOgB,kEAC1BrD,cACH,IAAIC,YAAY,gBAAiB,CAC/BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CACNgD,OAAQA,EACRf,IAAK/B,KAAK+B,IACVD,MAAOA,wCASLtC,QACHuD,aAAa/C,KAAK8B,OAAO,2CAMhBtC,QACTuD,aAAa/C,KAAK+B,IAAM/B,KAAK8B,MAAQ,EAAI9B,KAAK8B,8CAMtCtC,QACRuD,aAAa/C,KAAK+B,IAAM/B,KAAK8B,MAAQ9B,KAAK8B,MAAQ,6CA3HhDkB,8CAiDA,wEAGA,CAILlB,MAAO,CACLX,KAAM8B,OACN5B,MAAO,MAKTgB,MAAO,CACLlB,KAAMK,OACN0B,SAAU,yBAKZnB,IAAK,CACHZ,KAAMC,QACNC,OAAO,2rHAsDf8B,OAAOC,eAAeC,OACpBT,EAA0BU,IAC1BV,GCpIF,IAAMW,EAAWP,qkFA0FjBQ,SAASC,KAAKC,YAAYH,EAASI,aChF7BC,0FAAkCf,6DAuI/BgB,SAAW7D,KAAK6D,aAChBpE,cACH,IAAIC,YAAY,SAAU,CACxBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQE,kDA3ILgD,8CA2EA,wEAGA,CAILc,SAAU,CACR3C,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAKtByC,SAAU,CACR5C,KAAMK,OACNH,MAAO,QACP2C,UAAU,EACV1C,oBAAoB,GAKtB2C,GAAI,CACF9C,KAAMK,OACNH,MAAO,MAKT6C,KAAM,CACJ/C,KAAMK,OACNH,MAAO,MAKTgB,MAAO,CACLlB,KAAMK,OACNH,MAAO,MAKTwC,QAAS,CACP1C,KAAMC,QACNC,OAAO,EACPC,oBAAoB,i0EAqB5B6B,OAAOC,eAAeC,OACpBO,EAA0BN,IAC1BM,OC/JIO,0FAAgCtC,EAAcgB,qGAkI3CuB,KAAOpE,KAAKqE,EAAED,0CAOdA,KAAKE,SAASC,8CASPC,EAAQzC,SACb,QAAU/B,KAAKyE,UAAUD,GAAQ,GAASxE,KAAKyE,UAAU1C,GAAK,2CAQvDvC,QACTC,cACH,IAAIC,YAAY,qBAAsB,CACpCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CACNiC,IAAK/B,KAAK+B,IACVyC,OAAQxE,KAAKwE,OACbnD,MAAO7B,EAAEM,OAAOuB,yDAYlBqD,EAAQ,KAERlB,SAASmB,UAAW,MAEjBN,EAAED,KAAKG,YAERK,EAAMpB,SAASmB,UAAUE,cAE7BD,EAAIE,UAAU,aAAc9E,KAAKqE,EAAED,KAAK/C,MAAMkB,QAE9CmC,EAAQE,EAAIG,KAAKxC,YAEjBvC,KAAKqE,EAAED,KAAKY,WAAWC,cAAc,YAAYC,gBACkB,KAAnElF,KAAKqE,EAAED,KAAKY,WAAWC,cAAc,YAAYC,kBAEjDR,EAAQ1E,KAAKqE,EAAED,KAAKY,WAAWC,cAAc,YAAYC,uBAEpDR,2CAQQS,EAAOC,OAClBd,EAAWtE,KAAKqE,EAAED,KAAKY,WAAWC,cAAc,eACpDX,EAASC,QACLD,EAASe,gBAAiB,KACxBC,EAAQhB,EAASe,kBACrBC,EAAMC,UAAS,GACfD,EAAME,QAAQ,YAAaJ,GAC3BE,EAAMR,UAAU,YAAaK,GAC7BG,EAAMG,cACGnB,EAASoB,oBAClBpB,EAASoB,kBAAkBP,EAAOC,GAClCd,EAASY,eAAiBC,EAC1Bb,EAASqB,aAAeP,oCASnBD,EAAOC,QACTf,EAAED,KAAKY,WAAWC,cAAc,YAAYV,aACnCqB,IAAVT,QAA+BS,IAARR,OACpBS,iBAAiBV,EAAOC,QACVQ,IAAVT,OACJU,iBAAiBV,EAAOA,QAExBU,iBAAiB,EAAG,8CAStBpG,cACH,IAAIC,YAAY,YAAa,CAC3BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CAAEsE,KAAMpE,KAAK8F,WAAYC,UAAW,uDAU3CtG,cACH,IAAIC,YAAY,YAAa,CAC3BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CAAEsE,KAAMpE,KAAK8F,WAAYC,UAAW,wDAU3CtG,cACH,IAAIC,YAAY,YAAa,CAC3BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CAAEsE,KAAMpE,KAAK8F,WAAYC,UAAW,qDAU3CtG,cACH,IAAIC,YAAY,YAAa,CAC3BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQ,CAAEsE,KAAMpE,KAAK8F,WAAYC,UAAW,qDA9RzC/C,8CAuFA,sEAGA,CAILjB,IAAK,CACHZ,KAAM8B,OACN5B,MAAO,MAKTmD,OAAQ,CACNrD,KAAM8B,OACN5B,MAAO,MAKTgB,MAAO,CACLlB,KAAMK,OACN0B,SAAU,6BAKZ7B,MAAO,CACLF,KAAMK,OACNH,OAAO,EACPC,oBAAoB,klLA6K5B6B,OAAOC,eAAeC,OACpBc,EAAwBb,IACxBa,GC9SF,IAAM6B,EAAexC,SAASyC,cAAc,cAEtCC,EAAMlD,8nDA8JZgD,EAAatC,YAAYwC,GAEzBF,EAAaG,SAAS,yBAEtBhD,OAAOiD,0BAA4B,GACnCjD,OAAOiD,0BAA0BC,SAAW,KAI5ClD,OAAOiD,0BAA0BE,oBAAsB,kBACJ,MAA7CnD,OAAOiD,0BAA0BC,WACnClD,OAAOiD,0BAA0BC,SAAW7C,SAASyC,cAAc,SACnE9C,OAAOiD,0BAA0BC,SAASE,aACxC,KACA,gBAEFpD,OAAOiD,0BAA0BC,SAASE,aACxC,UACA,yBAEF/C,SAASC,KAAK+C,OAAOrD,OAAOiD,0BAA0BC,WAEjDlD,OAAOiD,0BAA0BC,cChLpCI,0FAA0B5D,mEAwGvBpD,cACH,IAAIC,YAAY,mBAAoB,CAClCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQE,4CASF0G,QACLC,SAAWD,OACXE,UAAqB,QAATF,GAAiC,SAATA,GAAkBA,qCASlDG,EAAaC,UACfD,IAAgBC,4CAhIhB9D,8CAkDA,+DAIA,CAIL6D,YAAa,CACX1F,KAAM8B,OACN5B,MAAO,KACPC,oBAAoB,GAKtBqF,SAAU,CACRxF,KAAMK,OACNH,MAAO,OACPC,oBAAoB,GAKtBwF,WAAY,CACV3F,KAAM8B,OACN5B,OAAQ,EACRC,oBAAoB,GAKtByF,QAAS,CACP5F,KAAMC,QACN8B,SAAU,qCACV5B,oBAAoB,GAKtByD,KAAM,CACJ5D,KAAMK,OACNH,MAAO,s8GAuCf8B,OAAOC,eAAeC,OAAOoD,EAAkBnD,IAAKmD,OCpI9CO,0FAA4BnE,yDAuFpBoE,UACHA,EAAW,OAAS,wDAQtBxH,cACH,IAAIC,YAAY,gBAAiB,CAC/BC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQE,kDAnGLgD,8CAqDA,iEAGA,CAIL6D,YAAa,CACX1F,KAAM8B,OACN5B,MAAO,MAKT4F,SAAU,CACR9F,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAKtByD,KAAM,CACJ5D,KAAMK,OACNH,MAAO,0mOA2Bf8B,OAAOC,eAAeC,OAAO2D,EAAoB1D,IAAK0D,OCpGhDE,0FAA6B5H,EACjC6H,6BAA2BtE,yDA2RjBvC,EAAMH,EAAcM,MACxBH,MAAAA,GAAuCA,EAAKiC,OAAS,EAAG,KAExD6E,EADEC,EAAKlH,EAAe,EAAI,SAExBM,GACF2G,EAAQ9G,EAAKgH,MAAMD,EAAI/G,EAAKiC,OAAS,QAChCgF,QAAUjH,EAAKgH,MAAMhH,EAAKiC,OAAS,KAExC6E,EAAQ9G,EAAKgH,MAAMD,EAAI/G,EAAKiC,aACvBgF,QAAU,IAEVH,QAEF,qCASC9G,EAAMH,WACTqH,IAAI,cAAe,IACpBlH,MAAAA,GAAuCA,EAAKiC,OAAS,EAAG,KACrD,IAAID,EAAI,EAAGA,EAAIhC,EAAK,GAAGiC,OAAQD,SAC7BmF,KAAK,cAAe,CAAC,CAAEC,IAAKpH,EAAK,GAAGgC,GAAIjB,MAAOiB,QAElDnC,EAAc,OAAOG,EAAKgH,MAAM,EAAG,SAElC,wCAQIxF,EAAO6F,UACS,IAApBC,SAAS9F,IAAgB8F,SAAS9F,KAAW8F,SAASD,uCAUnDnD,EAAQqD,EAAcZ,UACR,OAAjBY,GAAyBA,IAAiBrD,GAAUyC,sCAQjD7C,UACHpE,KAAK8H,WAAW1D,IAAsC,IAA7BA,EAAK2D,OAAOC,QAAQ,wCAQ3C5D,UACO,OAATA,IAAkB6D,MAAM7D,EAAK2D,OAAOG,QAAQ,MAAO,8CAQ3CpG,WACXqG,GAAU,EACL7F,EAAI,EAAGA,EAAItC,KAAKoH,MAAM7E,OAAQD,IAChCtC,KAAK8H,WAAW9H,KAAKoH,MAAM9E,GAAGR,MAASqG,GAAU,UAEjDA,uCASIzH,EAAWoB,UACL,IAAVA,GAAepB,+CAOjB0H,8DAOAA,sDAOS5I,GACVQ,KAAK8G,aAAetH,EAAEM,OAAO+G,aAAiC,QAAlB7G,KAAK2G,cAC9CA,SAAW,OAEhB3G,KAAK8G,aAAetH,EAAEM,OAAO+G,aACX,SAAlB7G,KAAK2G,cAEAA,SAAW,aAEXA,SAAW,WACXG,WAAatH,EAAEM,OAAO+G,aAE7BrH,EAAEM,OAAOuI,YAAYrI,KAAK2G,eACrB2B,SAAStI,KAAK2G,SAAUnH,EAAEM,OAAO+G,uDAOlCc,EAAW3H,KAAKqE,EAAEG,OAAOnD,MAC3BkH,EAAOvI,KAAKqE,EAAEmE,MAAMC,iBAAiB,YACnCF,EAAKhG,OAAS,MACX,IAAID,EAAI,EAAGA,EAAIiG,EAAKhG,OAAQD,IAAK,KAChCoG,EAAMH,EAAKjG,GACXtC,KAAK2I,aAAaD,EAAIE,UAAWjB,GACnCe,EAAInC,aAAa,aAAa,GAE9BmC,EAAIG,gBAAgB,iDAYjBhB,EAAciB,UACnBA,MAAAA,EACK,SAASC,UAEZA,EAAGlB,GAAcmB,cAAcjB,SAC/Be,EAAWE,cAAcjB,QAItB,sCAOF5G,EAAMqD,MACA,SAATrD,IAA4B,IAATA,EAAgB,SACjC8H,EAAOjJ,KAAKoH,MAAME,QACbhF,EAAI,EAAGA,EAAI2G,EAAK1G,OAAQD,IAC/B2G,EAAK3G,GAAG4G,QAAQD,EAAK3G,GAAGkC,IAEb,QAATrD,EACF8H,EAAKpI,OAELoI,EAAK7G,cAEF,IAAIE,EAAI,EAAGA,EAAI2G,EAAK1G,OAAQD,SAC1BkF,IAAI,SAAWlF,EAAG,SAClBkF,IAAI,SAAWlF,EAAG2G,EAAK3G,GAAGgF,MAAM,iBAGnC2B,EAAOjJ,KAAKoH,MAAME,QACbhF,EAAI,EAAGA,EAAI2G,EAAK1G,OAAQD,SAC1BkF,IAAI,SAAWlF,EAAI,GAAI,SACvBkF,IAAI,SAAWlF,EAAI,GAAI2G,EAAK3G,GAAGgF,8CAQ7B9H,QAEHoG,IAANpG,GACCQ,KAAK6H,cAAgBrI,EAAEM,OAAO+G,aAAe7G,KAAKiH,eAE9CA,UAAW,OACX6B,WAAa,UACbjB,aAAe,YAEfiB,WAAatJ,EAAEM,OAAOiF,UACtB8C,aAAerI,EAAEM,OAAO+G,iBACxBI,UAAW,qGAKlBkC,kBAAgBnJ,KAAM,gBACfoJ,iBACH,mBACApJ,KAAKqJ,gBAAgBC,KAAKtJ,YAEvBoJ,iBAAiB,gBAAiBpJ,KAAKuJ,aAAaD,KAAKtJ,6DAI3DwJ,oBACH,mBACAxJ,KAAKqJ,gBAAgBC,KAAKtJ,YAEvBwJ,oBAAoB,gBAAiBxJ,KAAKuJ,aAAaD,KAAKtJ,0GAxf1DgD,8CAkNA,kEAGA,CAIL6E,aAAc,CACZ1G,KAAM8B,OACN5B,MAAO,MAKT4F,SAAU,CACR9F,KAAMC,QACNC,OAAO,GAKTyH,WAAY,CACV3H,KAAMK,OACNH,MAAO,MAKTsG,SAAU,CACRxG,KAAM8B,OACN5B,MAAO,GAKTsF,SAAU,CACRxF,KAAMK,OACNH,MAAO,QAKTyF,WAAY,CACV3F,KAAM8B,OACN5B,OAAQ,GAKVoI,MAAO,CACLtI,KAAMM,MACNyB,SAAU,gCAKZkE,MAAO,CACLjG,KAAMM,MACNyB,SAAU,8tVAgPlBC,OAAOC,eAAeC,OAAO6D,EAAqB5D,IAAK4D,OC/cjDwC,0FAAsBpK,EAAiBuD,2DA8Y9Bf,MACP6H,QAAQ,6BACL,IAAIrH,EAAI,EAAGA,EAAItC,KAAKM,KAAKiC,OAAQD,SAC/BsH,OAAO,QAAUtH,EAAGR,EAAO,qCAS5BA,GACJ6H,QAAQ,4BACLC,OAAO,OAAQ9H,EAAO,wCAQlBA,WACPmH,EAAOjJ,KAAKM,KAAKgH,QACZhF,EAAI,EAAGA,EAAI2G,EAAK1G,OAAQD,IAC/B2G,EAAK3G,GAAGsH,OAAO9H,EAAO,EAAG,SAEtB0F,IAAI,OAAQyB,qCAOTnH,WACJmH,EAAOjJ,KAAKM,KAAKgH,QACnBuC,EAAQ,IAAIpI,MACLa,EAAI,EAAGA,EAAI2G,EAAK,GAAG1G,OAAQD,IAClCuH,EAAMpC,KAAK,IAEbwB,EAAKW,OAAO9H,EAAQ,EAAG,EAAG+H,QACrBrC,IAAI,OAAQyB,0CAQJa,GACbA,OAAgBlE,IAATkE,EAAqBA,GAAQ9J,KAAK+J,cACpCtK,cACH,IAAIC,YAAY,mBAAoB,CAClCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQE,QAGR8J,SACG9E,WAAWC,cAAc,0BAA0BsE,oBACnDvE,WAAWC,cAAc,0BAA0BqD,UAAS,SAE9DyB,SAAWD,iDAMX5J,QAAUF,KAAKqE,EAAEnE,QAAQmB,6CASjBS,EAAOxB,OAChByB,EAAM,YAERzB,MAAAA,QAEgBsF,IAAhBtF,EAAKwB,IACW,OAAhBxB,EAAKwB,KAELC,EAAMzB,EAAKwB,IAENC,+CAOYvC,GACfA,EAAEM,OAAOgD,QAAUtD,EAAEM,OAAOiC,SACzBiI,UAAUxK,EAAEsC,OACRtC,EAAEM,OAAOgD,SAAWtD,EAAEM,OAAOiC,SACjCkI,aAAazK,EAAEM,OAAOgC,QACjBtC,EAAEM,OAAOgD,QAAUtD,EAAEM,OAAOiC,SACjCmI,UAAU1K,EAAEM,OAAOgC,YAEnBqI,aAAa3K,EAAEM,OAAOgC,2CAQnBA,UACO,IAAVA,uCAOItC,GACPA,EAAE4K,OAAS5K,EAAE4K,MAAMC,MAAQ7K,EAAE4K,MAAMC,KAAKC,SAAS,IACnD9K,EAAE4K,MAAMC,KAAKC,SAAS,GAAG/F,4CAQjB/E,OACN+K,EAAM/K,EAAEM,OAAOiG,UACjB3B,EAAO5E,EAAEM,OAAOsE,KACdrC,EAAMqC,EAAK0B,WACb0E,EAAOxK,KAAKqE,EAAE+C,MACZqD,EAAIhJ,MAAMiJ,UAAU1C,QAAQ2C,KAAK5I,EAAI6I,SAAUxG,GAC/CyG,EAAIpJ,MAAMiJ,UAAU1C,QAAQ2C,KAAKH,EAAKI,SAAU7I,GAExC,SAARwI,EACEM,EAAI,EAAIL,EAAKI,SAASrI,OAAS,EACjCiI,EAAKI,SAASC,EAAI,GAAGD,SAASH,GAAGG,SAAS,GAAGE,gBAExCd,UAAUa,GAEA,OAARN,EACLM,EAAI,GACNL,EAAKI,SAASC,EAAI,GAAGD,SAASH,GAAGG,SAAS,GAAGE,WAE9B,UAARP,EACLE,EAAI,EAAI1I,EAAI6I,SAASrI,OAAS,EAChCR,EAAI6I,SAASH,EAAI,GAAGG,SAAS,GAAGE,WACvBD,EAAI,EAAIL,EAAKI,SAASrI,OAAS,GACxCiI,EAAKI,SAASC,EAAI,GAAGD,SAAS,GAAGA,SAAS,GAAGE,WAE9B,SAARP,IACLE,EAAI,EACN1I,EAAI6I,SAASH,EAAI,GAAGG,SAAS,GAAGE,WACvBD,EAAI,GACbL,EAAKI,SAASC,EAAI,GAAGD,SACnBJ,EAAKI,SAASC,EAAI,GAAGD,SAASrI,OAAS,GACvCqI,SAAS,GAAGE,uDASDtL,QACZgI,IAAI,QAAUhI,EAAEM,OAAOiC,IAAM,IAAMvC,EAAEM,OAAO0E,OAAQhF,EAAEM,OAAOuB,qDAO9C7B,QACfA,EAAEM,OAAOmE,IAAMzE,EAAEM,OAAO+D,gDAMfvD,IACVA,EAAKiC,OAAS,GAAKjC,EAAK,GAAGiC,OAAS,SACjCiF,IAAI,OAAQ,CAAC,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,GAAI,kDAazDvH,EACAI,EACAW,EACAJ,UAEOX,GAAgBI,GAAiBW,GAAeJ,2CASxCE,EAAUN,UAClBM,GAAYN,4CAjmBZwC,8CAiUA,0DAGA,CAIL+G,SAAU,CACR5I,KAAMC,QACNC,OAAO,GAKTpB,aAAc,CACZkB,KAAMC,QACNC,OAAO,GAKThB,cAAe,CACbc,KAAMC,QACNC,OAAO,GAKT0J,YAAa,CACX5J,KAAMC,QACN8B,SACE,8EAKJ1C,WAAY,CACVW,KAAMC,QACNC,OAAO,GAKT2J,eAAgB,CACd7J,KAAMC,QACN8B,SAAU,yCAKZpC,SAAU,CACRK,KAAMC,QACNC,OAAO,GAKTT,eAAgB,CACdO,KAAMC,QACNC,OAAO,GAKTL,YAAa,CACXG,KAAMC,QACNC,OAAO,aAiOf8B,OAAOC,eAAeC,OAAOqG,EAAcpG,IAAKoG"}