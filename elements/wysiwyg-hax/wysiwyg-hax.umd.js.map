{"version":3,"file":"wysiwyg-hax.umd.js","sources":["wysiwyg-hax.umd.js"],"sourcesContent":["import { LitElement, html, css } from \"lit-element/lit-element.js\";\nimport \"@lrnwebcomponents/cms-hax/cms-hax.js\";\n/**\n * `wysiwyg-hax`\n * @customElement wysiwyg-hax\n * `Integration of wysiwyg edit form for a page with HAX.`\n */\nclass WysiwygHax extends LitElement {\n  /**\n   * LitElement constructable styles enhancement\n   */\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <textarea\n        class=\"${this.fieldClass}\"\n        id=\"${this.fieldId}\"\n        name=\"${this.fieldName}\"\n        hidden=\"\"\n      >\n      ${this.bodyValue}\n      </textarea\n      >\n      <cms-hax\n        hide-message=\"\"\n        redirect-location=\"${this.redirectLocation}\"\n        update-page-data=\"${this.updatePageData}\"\n        end-point=\"${this.endPoint}\"\n        app-store-connection=\"${this.appStoreConnection}\"\n        ?open-default=\"${this.openDefault}\"\n        ?sync-body=\"${this.syncBody}\"\n        ?hide-export-button=\"${this.hideExportButton}\"\n        ?hide-panel-ops=\"${this.hidePanelOps}\"\n        ?hide-preferences-button=\"${this.hidePreferencesButton}\"\n        align=\"${this.align}\"\n      >\n      </cms-hax>\n    `;\n  }\n\n  static get tag() {\n    return \"wysiwyg-hax\";\n  }\n  constructor() {\n    super();\n    this.openDefault = false;\n    this.hideExportButton = false;\n    this.align = \"right\";\n    this.fieldId = \"textarea-input-field\";\n    this.fieldName = \"data[content]\";\n    this.__imported = false;\n    this.redirectLocation = \"\";\n    this.updatePageData = \"\";\n  }\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      if (propName == \"activeHaxBody\") {\n        this._activeHaxBodyUpdated(this[propName]);\n      }\n    });\n  }\n  static get properties() {\n    return {\n      /**\n       * Default the panel to open\n       */\n      openDefault: {\n        type: Boolean,\n        attribute: \"open-default\"\n      },\n      redirectLocation: {\n        type: String,\n        attribute: \"redirect-location\"\n      },\n      hideExportButton: {\n        type: Boolean,\n        attribute: \"hide-export-button\"\n      },\n      /**\n       * Hide the panel operations (save and cancel),\n       */\n      hidePanelOps: {\n        type: Boolean,\n        attribute: \"hide-panel-ops\"\n      },\n      /**\n       * Hide preferences button\n       */\n      hidePreferencesButton: {\n        type: Boolean,\n        attribute: \"hide-preferences-button\"\n      },\n      /**\n       * Direction to align the hax edit panel\n       */\n      align: {\n        type: String\n      },\n      /**\n       * Data binding of a hidden text area with the value from the hax-body tag\n       */\n      bodyValue: {\n        type: String,\n        attribute: \"body-value\"\n      },\n      /**\n       * Connection object for talking to an app store.\n       */\n      appStoreConnection: {\n        type: String,\n        attribute: \"app-store-connection\"\n      },\n      /**\n       * class on the field\n       */\n      fieldClass: {\n        type: String,\n        attribute: \"field-class\"\n      },\n      /**\n       * fieldId, id value on the input field.\n       */\n      fieldId: {\n        type: String,\n        attribute: \"field-id\"\n      },\n      /**\n       * fieldName, internal to the form in whatever system it's in.\n       */\n      fieldName: {\n        type: String,\n        attribute: \"field-name\"\n      },\n      syncBody: {\n        type: Boolean,\n        attribute: \"sync-body\",\n        reflect: true\n      },\n      /**\n       * State of the panel\n       */\n      editMode: {\n        type: Boolean,\n        reflect: true,\n        attribute: \"edit-mode\"\n      },\n      /**\n       * Location to save content to.\n       */\n      endPoint: {\n        type: String,\n        attribute: \"end-point\"\n      },\n      /**\n       * Page data, body of text as a string.\n       */\n      updatePageData: {\n        type: String,\n        attribute: \"update-page-data\"\n      },\n      /**\n       * Reference to activeBody.\n       */\n      activeHaxBody: {\n        type: Object\n      },\n      __imported: {\n        type: Boolean\n      }\n    };\n  }\n  createRenderRoot() {\n    return this;\n  }\n  /**\n   * Ensure we've imported our content on initial setup\n   */\n  _activeHaxBodyUpdated(newValue) {\n    // ensure we import our content once we get an initial registration of active body\n    if (newValue != null && !this.__imported) {\n      this.__imported = true;\n      // see what's inside of this, in a template tag\n      let children = this.querySelector(\"template\");\n      // convert this template content into the real thing\n      // this helps with correctly preserving everything on the way down\n      if (children != null) {\n        newValue.importContent(children.innerHTML);\n        // need to dot his because of juggling unfortunately\n        this.editMode = false;\n        window.HaxStore.write(\"editMode\", this.editMode, this);\n        setTimeout(() => {\n          this.editMode = true;\n          window.HaxStore.write(\"editMode\", this.editMode, this);\n        }, 200);\n      }\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    document.body.addEventListener(\n      \"hax-save\",\n      this._bodyContentUpdated.bind(this)\n    );\n    document.body.addEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n  }\n  disconnectedCallback() {\n    document.body.removeEventListener(\n      \"hax-save\",\n      this._bodyContentUpdated.bind(this)\n    );\n    document.body.removeEventListener(\n      \"hax-store-property-updated\",\n      this._haxStorePropertyUpdated.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n  /**\n   * Store updated, sync.\n   */\n  _haxStorePropertyUpdated(e) {\n    if (\n      e.detail &&\n      typeof e.detail.value !== typeof undefined &&\n      e.detail.property\n    ) {\n      if (typeof e.detail.value === \"object\") {\n        this[e.detail.property] = { ...e.detail.value };\n      } else {\n        this[e.detail.property] = e.detail.value;\n      }\n    }\n  }\n\n  /**\n   * Set the bubbled up event to the body value that just got changed\n   */\n  _bodyContentUpdated(e) {\n    this.bodyValue = window.HaxStore.instance.activeHaxBody.haxToContent();\n  }\n}\nwindow.customElements.define(WysiwygHax.tag, WysiwygHax);\nexport { WysiwygHax };\n"],"names":["WysiwygHax","openDefault","hideExportButton","align","fieldId","fieldName","__imported","redirectLocation","updatePageData","LitElement","html","this","fieldClass","bodyValue","endPoint","appStoreConnection","syncBody","hidePanelOps","hidePreferencesButton","css","changedProperties","forEach","oldValue","propName","_this2","_activeHaxBodyUpdated","newValue","children","querySelector","importContent","innerHTML","editMode","window","HaxStore","write","setTimeout","_this3","document","body","addEventListener","_bodyContentUpdated","bind","_haxStorePropertyUpdated","removeEventListener","e","detail","_typeof","value","property","instance","activeHaxBody","haxToContent","type","Boolean","attribute","String","reflect","Object","customElements","define","tag"],"mappings":"woFAOMA,yKA8CGC,aAAc,IACdC,kBAAmB,IACnBC,MAAQ,UACRC,QAAU,yBACVC,UAAY,kBACZC,YAAa,IACbC,iBAAmB,KACnBC,eAAiB,iPArDDC,yDAcdC,WAEMC,KAAKC,WACRD,KAAKP,QACHO,KAAKN,UAGbM,KAAKE,UAKgBF,KAAKJ,iBACNI,KAAKH,eACZG,KAAKG,SACMH,KAAKI,mBACZJ,KAAKV,YACRU,KAAKK,SACIL,KAAKT,iBACTS,KAAKM,aACIN,KAAKO,sBACxBP,KAAKR,8CA9BX,CACLgB,8CAoCK,qDAaDC,cACNA,EAAkBC,QAAQ,SAACC,EAAUC,GACnB,iBAAZA,GACFC,EAAKC,sBAAsBD,EAAKD,wDAmH7BZ,mDAKae,iBAEJ,MAAZA,IAAqBf,KAAKL,WAAY,MACnCA,YAAa,MAEdqB,EAAWhB,KAAKiB,cAAc,YAGlB,MAAZD,IACFD,EAASG,cAAcF,EAASG,gBAE3BC,UAAW,EAChBC,OAAOC,SAASC,MAAM,WAAYvB,KAAKoB,SAAUpB,MACjDwB,WAAW,WACTC,EAAKL,UAAW,EAChBC,OAAOC,SAASC,MAAM,WAAYE,EAAKL,SAAUK,IAChD,yGAMPC,SAASC,KAAKC,iBACZ,WACA5B,KAAK6B,oBAAoBC,KAAK9B,OAEhC0B,SAASC,KAAKC,iBACZ,6BACA5B,KAAK+B,yBAAyBD,KAAK9B,sDAIrC0B,SAASC,KAAKK,oBACZ,WACAhC,KAAK6B,oBAAoBC,KAAK9B,OAEhC0B,SAASC,KAAKK,oBACZ,6BACAhC,KAAK+B,yBAAyBD,KAAK9B,iHAOdiC,GAErBA,EAAEC,sBACFC,EAAOF,EAAEC,OAAOE,QAChBH,EAAEC,OAAOG,WAEqB,WAA1BF,EAAOF,EAAEC,OAAOE,YACbH,EAAEC,OAAOG,yWAAiBJ,EAAEC,OAAOE,YAEnCH,EAAEC,OAAOG,UAAYJ,EAAEC,OAAOE,mDAQrBH,QACb/B,UAAYmB,OAAOC,SAASgB,SAASC,cAAcC,0DAlLjD,CAILlD,YAAa,CACXmD,KAAMC,QACNC,UAAW,gBAEb/C,iBAAkB,CAChB6C,KAAMG,OACND,UAAW,qBAEbpD,iBAAkB,CAChBkD,KAAMC,QACNC,UAAW,sBAKbrC,aAAc,CACZmC,KAAMC,QACNC,UAAW,kBAKbpC,sBAAuB,CACrBkC,KAAMC,QACNC,UAAW,2BAKbnD,MAAO,CACLiD,KAAMG,QAKR1C,UAAW,CACTuC,KAAMG,OACND,UAAW,cAKbvC,mBAAoB,CAClBqC,KAAMG,OACND,UAAW,wBAKb1C,WAAY,CACVwC,KAAMG,OACND,UAAW,eAKblD,QAAS,CACPgD,KAAMG,OACND,UAAW,YAKbjD,UAAW,CACT+C,KAAMG,OACND,UAAW,cAEbtC,SAAU,CACRoC,KAAMC,QACNC,UAAW,YACXE,SAAS,GAKXzB,SAAU,CACRqB,KAAMC,QACNG,SAAS,EACTF,UAAW,aAKbxC,SAAU,CACRsC,KAAMG,OACND,UAAW,aAKb9C,eAAgB,CACd4C,KAAMG,OACND,UAAW,oBAKbJ,cAAe,CACbE,KAAMK,QAERnD,WAAY,CACV8C,KAAMC,mBA4EdrB,OAAO0B,eAAeC,OAAO3D,EAAW4D,IAAK5D"}