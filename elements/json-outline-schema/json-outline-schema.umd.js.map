{"version":3,"file":"json-outline-schema.umd.js","sources":["lib/json-outline-schema-item.js","json-outline-schema.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\n/**\n * `json-outline-schema-item`\n * `A single item inside of json outline schema's items array`\n *\n * @microcopy - language worth noting:\n *  - outline-schema - a schema for expressing the relationship between structured content items\n *  - item - one item within an outline with reference to a resource to load the contents of the item\n */\nclass JSONOutlineSchemaItem {\n  /**\n   * Establish defaults for a new item\n   */\n  constructor() {\n    this.id = \"item-\" + this.generateUUID();\n    this.title = \"New item\";\n    this.location = \"\";\n    this.description = \"\";\n    this.parent = \"\";\n    this.metadata = {};\n    this.order = 0;\n    this.indent = 0;\n  }\n  /**\n   * Load data from the location specified\n   */\n  readLocation(basePath = \"\") {\n    // @todo read location and return contents of it\n    //    if (file_exists(basePath + this.location)) {\n    //      return file_get_contents(basePath + this.location);\n    //    }\n    return FALSE;\n  }\n  /**\n   * Load data from the location specified\n   */\n  writeLocation(body, basePath = \"\") {\n    //    if (file_exists(basePath + this.location)) {\n    //      return file_put_contents(basePath + this.location, body);\n    //    }\n    return FALSE;\n  }\n  /**\n   * Generate a UUID\n   */\n  generateUUID() {\n    return \"ss-s-s-s-sss\".replace(/s/g, this._uuidPart);\n  }\n  _uuidPart() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n}\nexport { JSONOutlineSchemaItem };\n","/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { JSONOutlineSchemaItem } from \"./lib/json-outline-schema-item.js\";\n// register globally so we can make sure there is only one\nwindow.JSONOutlineSchema = window.JSONOutlineSchema || {};\n// request if this exists. This helps invoke the element existing in the dom\n// as well as that there is only one of them. That way we can ensure everything\n// is rendered through the same json-outline-schema element, making it a singleton.\nwindow.JSONOutlineSchema.requestAvailability = () => {\n  // if there is no single instance, generate one and append it to end of the document\n  if (!window.JSONOutlineSchema.instance) {\n    window.JSONOutlineSchema.instance = document.createElement(\n      \"json-outline-schema\"\n    );\n    document.body.appendChild(window.JSONOutlineSchema.instance);\n  }\n  return window.JSONOutlineSchema.instance;\n};\n/**\n * `json-outline-schema`\n * `JS based state management helper for the json outline schema spec`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @demo demo/index.html\n */\n\nclass JsonOutlineSchema extends HTMLElement {\n  \n  // render function\n  get html() {\n    return `\n<style>:host {\n  display: block;\n  font-family: monospace;\n  white-space: pre;\n  margin: 1em 0px;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"json-outline-schema\";\n  }\n  /**\n   * life cycle\n   */\n  constructor(delayRender = false) {\n    super();\n    // set tag for later use\n    this.tag = JsonOutlineSchema.tag;\n    // optional queue for future use\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (!delayRender) {\n      this.render();\n    }\n    this.__ready = false;\n    this.file = null;\n    this.id = this.generateUUID();\n    this.title = \"New site\";\n    this.author = \"\";\n    this.description = \"\";\n    this.license = \"by-sa\";\n    this.metadata = {};\n    this.items = [];\n    this.__debug = false;\n    window.JSONOutlineSchema.instance = this;\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n    window.addEventListener(\n      \"json-outline-schema-debug-toggle\",\n      this._toggleDebug.bind(this)\n    );\n    const evt = new CustomEvent(\"json-outline-schema-ready\", {\n      bubbles: true,\n      cancelable: false,\n      detail: true\n    });\n    this.dispatchEvent(evt);\n    this.__ready = true;\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = this.shadowRoot.querySelectorAll(to);\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = null;\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"json-outline-schema-debug-toggle\",\n      this._toggleDebug.bind(this)\n    );\n    const evt = new CustomEvent(\"json-outline-schema-unready\", {\n      bubbles: true,\n      cancelable: false,\n      detail: true\n    });\n    this.dispatchEvent(evt);\n  }\n  /**\n   * Get a clone of this JSONOutlineSchema object\n   * @return Object\n   */\n  clone() {\n    const schema = {\n      id: this.id,\n      title: this.title,\n      author: this.author,\n      description: this.description,\n      license: this.license,\n      metadata: this.metadata,\n      items: this.items\n    };\n    const obj = JSON.parse(JSON.stringify(schema));\n    return obj;\n  }\n  /**\n   * Get a new item matching schema standards\n   * @return new JSONOutlineSchemaItem Object\n   */\n  newItem() {\n    return new JSONOutlineSchemaItem();\n  }\n  /**\n   * Add an item to the outline\n   * @var item an array of values, keyed to match JSON Outline Schema\n   * @return count of items in the array\n   */\n  addItem(item) {\n    let safeItem = this.validateItem(item);\n    count = array_push(this.items, safeItem);\n    return count;\n  }\n  /**\n   * Validate that an item matches JSONOutlineSchemaItem format\n   * @var item JSONOutlineSchemaItem\n   * @return JSONOutlineSchemaItem matching the specification\n   */\n  validateItem(item) {\n    // create a generic schema item\n    let tmp = new JSONOutlineSchemaItem();\n    for (var key in tmp) {\n      // only set what the element from spec allows into a new object\n      if (typeof item[key] !== typeof undefined) {\n        tmp[key] = item[key];\n      }\n    }\n    return tmp;\n  }\n  /**\n   * Remove an item from the outline if it exists\n   * @var id an id that's in the array of items\n   * @return JSONOutlineSchemaItem or false if not found\n   */\n  removeItem(id) {\n    for (var key in this.items) {\n      if (this.items[key].id == id) {\n        let tmp = this.items[key];\n        delete this.items[key];\n        return tmp;\n      }\n    }\n    return false;\n  }\n  /**\n   * Remove an item from the outline if it exists\n   * @var id an id that's in the array of items\n   * @return JSONOutlineSchemaItem or false if not found\n   */\n  updateItem(item, save = false) {\n    // verify this is a legit item\n    let safeItem = this.validateItem(item);\n    for (var key in this.items) {\n      // match the current item's ID to our safeItem passed in\n      if (this.items[key].id == safeItem.id) {\n        // overwrite the item\n        this.items[key] = safeItem;\n        // if we save, then we let that return the whole file\n        if (save) {\n          return this.save();\n        }\n        // this was successful\n        return true;\n      }\n    }\n    // we didn't find a match on the ID to bother saving an update\n    return false;\n  }\n  /**\n   * Load a schema from a file\n   */\n  load(location) {\n    if (location) {\n      this.file = location;\n      let fileData = json_decode(file_get_contents(location));\n      for (var key in fileData) {\n        if (typeof this[key] !== typeof undefined && key !== \"items\") {\n          this[key] = fileData[key];\n        }\n      }\n      // check for items and escalate to full JSONOutlineSchemaItem object\n      // also ensures data matches only what is supported\n      if (isset(fileData.items)) {\n        for (var key in fileData.items) {\n          let newItem = new JSONOutlineSchemaItem();\n          newItem.id = item.id;\n          newItem.indent = item.indent;\n          newItem.location = item.location;\n          newItem.order = item.order;\n          newItem.parent = item.parent;\n          newItem.title = item.title;\n          newItem.description = item.description;\n          // metadata can be anything so whatever\n          newItem.metadata = item.metadata;\n          this.items[key] = newItem;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Save data back to the file system location\n   */\n  save() {\n    let schema = {\n      id: this.id,\n      title: this.title,\n      author: this.author,\n      description: this.description,\n      license: this.license,\n      metadata: this.metadata,\n      items: this.items\n    };\n    // @todo write contents\n    //return @file_put_contents(this.file, JSON.stringify(schema, null, 2));\n    return JSON.stringify(schema, null, 2);\n  }\n  /**\n   * Generate a UUID\n   */\n  generateUUID() {\n    return \"ss-s-s-s-sss\".replace(/s/g, this._uuidPart);\n  }\n  _uuidPart() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  /**\n   * Allow toggling of debug mode which visualizes the outline and writes it to console.\n   */\n  _toggleDebug(e) {\n    this.__debug = !this.__debug;\n    this._triggerDebugPaint(this.__debug);\n  }\n  /**\n   * Paint the slot in order to debug the object inside\n   */\n  _triggerDebugPaint(debug) {\n    if (debug) {\n      let obj = {\n        file: this.file,\n        id: this.id,\n        title: this.title,\n        author: this.author,\n        description: this.description,\n        license: this.license,\n        metadata: this.metadata,\n        items: this.items\n      };\n      let span = document.createElement(\"span\");\n      span.innerHTML = JSON.stringify(obj, null, 2);\n      this.shadowRoot.appendChild(span.cloneNode(true));\n    } else {\n      this.render();\n    }\n  }\n  static get observedAttributes() {\n    return [\"file\", \"id\", \"title\", \"author\", \"description\", \"license\"];\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    if (this.__debug) {\n      this.render();\n      this._triggerDebugPaint(this.__debug);\n    }\n  }\n  get file() {\n    return this.getAttribute(\"file\");\n  }\n  set file(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"file\", newValue);\n    }\n  }\n  get id() {\n    return this.getAttribute(\"id\");\n  }\n  set id(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"id\", newValue);\n    }\n  }\n  get title() {\n    return this.getAttribute(\"title\");\n  }\n  set title(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"title\", newValue);\n    }\n  }\n  get author() {\n    return this.getAttribute(\"author\");\n  }\n  set author(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"author\", newValue);\n    }\n  }\n  get description() {\n    return this.getAttribute(\"description\");\n  }\n  set description(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"description\", newValue);\n    }\n  }\n  get license() {\n    return this.getAttribute(\"license\");\n  }\n  set license(newValue) {\n    if (this.__ready) {\n      this.setAttribute(\"license\", newValue);\n    }\n  }\n  /**\n   * Set individual key values pairs on metdata so we can notice it change\n   */\n  updateMetadata(key, value) {\n    this.metadata[key] = value;\n    if (this.__debug) {\n      this.render();\n      this._triggerDebugPaint(this.__debug);\n    }\n  }\n\n  /**\n   * Return some items populated correctly\n   */\n  getItemValues(item, parent = false) {\n    var valid;\n    if (item) {\n      valid = this.validateItem(item);\n    } else {\n      valid = new JSONOutlineSchemaItem();\n    }\n    // treat this item as the parent\n    if (parent) {\n      valid.parent = parent.id;\n    }\n    return valid;\n  }\n  /**\n   * Return valid JSON Schema relative to what asked for\n   */\n  getItemSchema(requested = \"item\") {\n    var schema = {\n      $schema: \"http://json-schema.org/schema#\",\n      title: this.title,\n      type: \"object\",\n      properties: {}\n    };\n    var obj;\n    if (requested == \"item\") {\n      obj = new JSONOutlineSchemaItem();\n    } else {\n      // current object definition but without the outline\n      obj = {\n        file: this.file,\n        id: this.id,\n        title: this.title,\n        author: this.author,\n        description: this.description,\n        license: this.license,\n        metadata: this.metadata\n      };\n      // support this as fallback\n      if (requested == \"outline\") {\n        obj.items = this.items;\n      }\n    }\n    for (var key in obj) {\n      let props = {\n        title: key,\n        type: \"string\",\n        value: obj[key]\n      };\n      switch (key) {\n        case \"file\":\n        case \"id\":\n        case \"title\":\n        case \"author\":\n        case \"description\":\n        case \"license\":\n        case \"location\":\n        // @todo break parent out into selector\n        case \"parent\":\n          props.component = {\n            name: \"paper-input\",\n            valueProperty: \"value\",\n            properties: {\n              required: true\n            }\n          };\n          break;\n        case \"indent\":\n        case \"order\":\n          props.component = {\n            name: \"paper-input\",\n            valueProperty: \"value\",\n            properties: {\n              required: true\n            },\n            attributes: {\n              type: \"number\"\n            }\n          };\n        case \"metadata\":\n        case \"items\":\n          props.type = \"array\";\n          props.items = {\n            type: \"object\",\n            properties: {\n              key: {\n                title: \"key\",\n                type: \"string\",\n                component: {\n                  name: \"paper-input\",\n                  valueProperty: \"value\",\n                  properties: {\n                    required: true\n                  }\n                }\n              },\n              value: {\n                title: \"value\",\n                type: \"string\",\n                component: {\n                  name: \"paper-input\",\n                  valueProperty: \"value\",\n                  properties: {\n                    required: true\n                  }\n                }\n              }\n            }\n          };\n          break;\n        default:\n          console.log(key);\n          break;\n      }\n      schema.properties[key] = props;\n    }\n    return schema;\n  }\n}\nwindow.customElements.define(JsonOutlineSchema.tag, JsonOutlineSchema);\nexport { JsonOutlineSchema };\n"],"names":["JSONOutlineSchemaItem","id","this","generateUUID","title","location","description","parent","metadata","order","indent","FALSE","body","replace","_uuidPart","Math","floor","random","toString","substring","window","JSONOutlineSchema","requestAvailability","instance","document","createElement","appendChild","JsonOutlineSchema","delayRender","tag","_queue","template","attachShadow","mode","render","__ready","file","_this","author","license","items","__debug","HTMLElement","ShadyCSS","styleElement","length","_processQueue","addEventListener","_toggleDebug","bind","evt","CustomEvent","bubbles","cancelable","detail","dispatchEvent","name","to","recipients","shadowRoot","querySelectorAll","value","getAttribute","fname","action","push","forEach","_this2","type","data","innerHTML","html","prepareTemplate","content","cloneNode","removeEventListener","schema","JSON","parse","stringify","item","safeItem","validateItem","count","array_push","tmp","key","_typeof","save","fileData","json_decode","file_get_contents","isset","newItem","e","_triggerDebugPaint","debug","obj","span","attr","oldValue","newValue","valid","requested","$schema","properties","props","component","valueProperty","required","attributes","console","log","setAttribute","customElements","define"],"mappings":"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"}