{"version":3,"file":"hal-9000.umd.js","sources":["hal-9000.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { ESGlobalBridge } from \"@lrnwebcomponents/es-global-bridge/es-global-bridge.js\";\nimport { pathFromUrl } from \"@polymer/polymer/lib/utils/resolve-url.js\";\n\n/**\n * `hal-9000`\n * `Robot assistant tag, hopefully not evil`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass Hal9000 extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n[hidden] {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    let props = {\n  /**\n   * Commands to listen for and take action on\n   */\n  \"commands\": {\n    \"name\": \"commands\",\n    \"type\": Object,\n    \"value\": {},\n    \"observer\": \"_commandsChanged\"\n  },\n  /**\n   * The name that HAL 9000 should respond to.\n   */\n  \"respondsTo\": {\n    \"name\": \"respondsTo\",\n    \"type\": String,\n    \"value\": \"(hal)\",\n    \"observer\": \"_respondsToChanged\"\n  },\n  /**\n   * Debug mode for annyang\n   */\n  \"debug\": {\n    \"name\": \"debug\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"observer\": \"_debugChanged\"\n  },\n  /**\n   * Start automatically\n   */\n  \"auto\": {\n    \"name\": \"auto\",\n    \"type\": Boolean,\n    \"reflectToAttribute\": true,\n    \"observer\": \"_autoChanged\"\n  },\n  /**\n   * Status of listening\n   */\n  \"enabled\": {\n    \"name\": \"enabled\",\n    \"type\": Boolean,\n    \"reflectToAttribute\": true,\n    \"observer\": \"_enabledChanged\"\n  },\n  /**\n   * Pitch of speech\n   */\n  \"pitch\": {\n    \"name\": \"pitch\",\n    \"type\": Number,\n    \"reflectToAttribute\": true,\n    \"value\": 0.9\n  },\n  /**\n   * Rate of speech\n   */\n  \"rate\": {\n    \"name\": \"rate\",\n    \"type\": Number,\n    \"reflectToAttribute\": true,\n    \"value\": 0.9\n  },\n  /**\n   * Language of the speaker\n   */\n  \"language\": {\n    \"name\": \"language\",\n    \"type\": String,\n    \"reflectToAttribute\": true,\n    \"value\": \"en-US\"\n  }\n}\n;\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"hal-9000\";\n  }\n  /**\n   * Establish the element\n   */\n  constructor() {\n    super();\n    const basePath = pathFromUrl(decodeURIComponent(import.meta.url));\n    const location = `${basePath}lib/annyang/annyang.min.js`;\n    window.addEventListener(\n      \"es-bridge-annyang-loaded\",\n      this._annyangLoaded.bind(this)\n    );\n    window.ESGlobalBridge.requestAvailability();\n    window.ESGlobalBridge.instance.load(\"annyang\", location);\n    // check for speech synthesis API\n    if (typeof window.speechSynthesis !== \"undefined\") {\n      this.synth = window.speechSynthesis;\n      this.voices = this.synth.getVoices();\n      for (var i = 0; i < this.voices.length; i++) {\n        if (this.voices[i].default) {\n          this.defaultVoice = this.voices[i].name;\n        }\n      }\n    }\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    // ensure singleton is set\n    window.Hal9000 = window.Hal9000 || {};\n    window.Hal9000.instance = this;\n  }\n  /**\n   * Callback for clicking on whatever was just said\n   */\n  clickObject(phrase) {\n    this.__text = phrase;\n    this.commands[phrase].object.click();\n    this.commands[phrase].object.focus();\n  }\n  /**\n   * Notice new voice commands added\n   */\n  _commandsChanged(newValue) {\n    this.addCommands(newValue);\n  }\n  /**\n   * Just rout add commands call to the right place\n   */\n  addCommands(commands) {\n    if (this.annyang) {\n      this.annyang.addCommands(commands);\n    }\n  }\n  /**\n   * And the word was good.\n   */\n  speak(text) {\n    this.__text = text;\n    if (this.synth) {\n      this.utter = new SpeechSynthesisUtterance(this.__text);\n      this.utter.pitch = this.pitch;\n      this.utter.rate = this.rate;\n      this.utter.lang = this.language;\n      this.utter.voice = this.defaultVoice;\n      // THOU SPEAKITH\n      this.synth.speak(this.utter);\n    } else {\n      console.warn(\"I have no voice...\");\n    }\n  }\n  /**\n   * Annyang library has been loaded globally so we can use it\n   */\n  _annyangLoaded() {\n    this.annyang = window.annyang;\n    // Add our commands to annyang\n    if (this.annyang) {\n      this.annyang.addCommands(this.commands);\n      this.annyang.debug(this.debug);\n      // Start listening. You can call this here, or attach this call to an event, button, etc.\n      if (this.auto) {\n        this.annyang.start({\n          autoRestart: true,\n          continuous: true\n        });\n      } else if (this.enabled) {\n        this.annyang.start();\n      }\n      // alert alert we are ready\n      const evt = new CustomEvent(\"hal-9000-online\", {\n        bubbles: true,\n        cancelable: false,\n        detail: true\n      });\n      this.dispatchEvent(evt);\n    }\n  }\n  /**\n   * Change the key name that is responded to\n   */\n  _respondsToChanged(newValue, oldValue) {\n    // remove all as our voice changed\n    if (this.annyang) {\n      this.annyang.removeCommands();\n    }\n    var commands = {};\n    for (var i in this.commands) {\n      if (i.replace(oldValue, newValue) !== i) {\n        commands[i.replace(oldValue, newValue)] = this.commands[i];\n      } else {\n        commands[i] = this.commands[i];\n      }\n    }\n    this.set(\"commands\", commands);\n  }\n  /**\n   * Notice auto state changed so we start listening\n   */\n  _autoChanged(newValue) {\n    this.enabled = newValue;\n  }\n  /**\n   * React to enabled state changing\n   */\n  _enabledChanged(newValue) {\n    if (this.annyang) {\n      if (newValue) {\n        if (this.auto) {\n          this.annyang.start({\n            autoRestart: true,\n            continuous: true\n          });\n        } else {\n          this.annyang.start();\n        }\n      } else {\n        this.annyang.abort();\n      }\n    }\n  }\n  /**\n   * debug mode changed\n   */\n  _debugChanged(newValue, oldValue) {\n    if (this.annyang) {\n      this.annyang.debug(newValue);\n    }\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  disconnectedCallback() {\n    window.removeEventListener(\n      \"es-bridge-annyang-loaded\",\n      this._annyangLoaded.bind(this)\n    );\n    super.disconnectedCallback();\n  }\n}\n// ensure we can generate a singleton\nwindow.customElements.define(Hal9000.tag, Hal9000);\nexport { Hal9000 };\nwindow.Hal9000 = window.Hal9000 || {};\n\nwindow.Hal9000.requestAvailability = () => {\n  if (!window.Hal9000.instance) {\n    window.Hal9000.instance = new Hal9000();\n  }\n};\n"],"names":["Hal9000","basePath","pathFromUrl","decodeURIComponent","location","window","addEventListener","_this","_annyangLoaded","bind","ESGlobalBridge","requestAvailability","instance","load","speechSynthesis","synth","voices","getVoices","i","length","default","defaultVoice","name","PolymerElement","html","props","Object","String","Boolean","Number","assign","this","phrase","__text","commands","object","click","focus","newValue","addCommands","annyang","text","utter","SpeechSynthesisUtterance","pitch","rate","lang","language","voice","speak","console","warn","debug","auto","start","autoRestart","continuous","enabled","evt","CustomEvent","bubbles","cancelable","detail","dispatchEvent","oldValue","removeCommands","replace","set","abort","removeEventListener","customElements","define","tag"],"mappings":"2qDAmBMA,8NAkHIC,EAAWC,cAAYC,oMACvBC,YAAcH,mCACpBI,OAAOC,iBACL,2BACAC,EAAKC,eAAeC,YAEtBJ,OAAOK,eAAeC,sBACtBN,OAAOK,eAAeE,SAASC,KAAK,UAAWT,QAET,IAA3BC,OAAOS,gBAAiC,GAC5CC,MAAQV,OAAOS,kBACfE,OAAST,EAAKQ,MAAME,gBACpB,IAAIC,EAAI,EAAGA,EAAIX,EAAKS,OAAOG,OAAQD,IAClCX,EAAKS,OAAOE,GAAGE,YACZC,aAAed,EAAKS,OAAOE,GAAGI,2PAhIvBC,kEAIXC,mDAiBHC,EAAQ,UAIF,MACF,gBACAC,aACC,YACG,+BAKA,MACJ,kBACAC,aACC,iBACG,4BAKL,MACC,aACAC,eACC,WACG,sBAKN,MACE,YACAA,4BACc,WACV,wBAKH,MACD,eACAA,4BACc,WACV,yBAKL,MACC,aACAC,2BACc,QACb,SAKH,MACE,YACAA,2BACc,QACb,aAKC,MACF,gBACAF,2BACc,QACb,6CAKPF,EAAQC,OAAOI,OAAOL,8BAEjBA,oCAQA,oHAgCPpB,OAAOL,QAAUK,OAAOL,SAAW,GACnCK,OAAOL,QAAQY,SAAWmB,yCAKhBC,QACLC,OAASD,OACTE,SAASF,GAAQG,OAAOC,aACxBF,SAASF,GAAQG,OAAOE,iDAKdC,QACVC,YAAYD,uCAKPJ,GACNH,KAAKS,cACFA,QAAQD,YAAYL,iCAMvBO,QACCR,OAASQ,EACVV,KAAKhB,YACF2B,MAAQ,IAAIC,yBAAyBZ,KAAKE,aAC1CS,MAAME,MAAQb,KAAKa,WACnBF,MAAMG,KAAOd,KAAKc,UAClBH,MAAMI,KAAOf,KAAKgB,cAClBL,MAAMM,MAAQjB,KAAKV,kBAEnBN,MAAMkC,MAAMlB,KAAKW,QAEtBQ,QAAQC,KAAK,uEAOVX,QAAUnC,OAAOmC,QAElBT,KAAKS,QAAS,MACXA,QAAQD,YAAYR,KAAKG,eACzBM,QAAQY,MAAMrB,KAAKqB,OAEpBrB,KAAKsB,UACFb,QAAQc,MAAM,CACjBC,aAAa,EACbC,YAAY,IAELzB,KAAK0B,cACTjB,QAAQc,YAGTI,EAAM,IAAIC,YAAY,kBAAmB,CAC7CC,SAAS,EACTC,YAAY,EACZC,QAAQ,SAELC,cAAcL,+CAMJpB,EAAU0B,GAEvBjC,KAAKS,cACFA,QAAQyB,qBAEX/B,EAAW,OACV,IAAIhB,KAAKa,KAAKG,SACbhB,EAAEgD,QAAQF,EAAU1B,KAAcpB,EACpCgB,EAAShB,EAAEgD,QAAQF,EAAU1B,IAAaP,KAAKG,SAAShB,GAExDgB,EAAShB,GAAKa,KAAKG,SAAShB,QAG3BiD,IAAI,WAAYjC,wCAKVI,QACNmB,QAAUnB,0CAKDA,GACVP,KAAKS,UACHF,EACEP,KAAKsB,UACFb,QAAQc,MAAM,CACjBC,aAAa,EACbC,YAAY,SAGThB,QAAQc,aAGVd,QAAQ4B,+CAOL9B,EAAU0B,GAClBjC,KAAKS,cACFA,QAAQY,MAAMd,kDAOrBjC,OAAOgE,oBACL,2BACAtC,KAAKvB,eAAeC,KAAKsB,yEAM/B1B,OAAOiE,eAAeC,OAAOvE,EAAQwE,IAAKxE,GAE1CK,OAAOL,QAAUK,OAAOL,SAAW,GAEnCK,OAAOL,QAAQW,oBAAsB,WAC9BN,OAAOL,QAAQY,WAClBP,OAAOL,QAAQY,SAAW,IAAIZ"}